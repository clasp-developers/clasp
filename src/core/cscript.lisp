(k:sources :iclasp
           #~"dummy.cc"
           #~"mpPackage.cc"
           #~"nativeVector.cc"
           #~"evaluator.cc"
           #~"function.cc"
           #~"creator.cc"
           #~"sharpEqualWrapper.cc"
           #~"weakHashTable.cc"
           #~"weakPointer.cc"
           #~"compiler.cc"
           #~"instance.cc"
           #~"funcallableInstance.cc"
           #~"float_to_string.cc"
           #~"primitives.cc"
           #~"random.cc"
           #~"record.cc"
           #~"stackmap.cc"
           #~"debugger.cc"
           #~"debugger2.cc"
           #~"backtrace.cc"
           #~"bytecode.cc"
           #~"bytecode_compiler.cc"
           #~"loadltv.cc"
           #~"debug_unixes.cc"
           #~"debug_macosx.cc"
           #~"smallMap.cc"
           #~"smallMultimap.cc"
           #~"hashTable.cc"
           #~"hashTableEq.cc"
           #~"hashTableEql.cc"
           #~"hashTableEqual.cc"
           #~"hashTableEqualp.cc"
           #~"hashTableCustom.cc"
           #~"numbers.cc"
           #~"numerics.cc"
           #~"num_arith.cc"
           #~"numberToString.cc"
           #~"num_co.cc"
           #~"fp_env.cc"
           #~"load.cc"
           #~"bignum.cc"
           #~"write_object.cc"
           #~"write_array.cc"
           #~"print.cc"
           #~"sourceFileInfo.cc"
           #~"symbolToEnumConverter.cc"
           #~"core_globals.cc"
           #~"externalObject.cc"
           #~"myReadLine.cc"
           #~"unixfsys.cc"
           #~"unixsys.cc"
           #~"lispList.cc"
           #~"candoOpenMp.cc"
           #~"foundation.cc"
           #~"lambdaListHandler.cc"
           #~"lispStream.cc"
           #~"bits.cc"
           #~"write_symbol.cc"
           #~"corePackage.cc"
           #~"lisp.cc"
           #~"bundle.cc"
           #~"write_ugly.cc"
           #~"wrappedPointer.cc"
           #~"readtable.cc"
           #~"float_to_digits.cc"
           #~"pathname.cc"
           #~"commandLineOptions.cc"
           #~"exceptions.cc"
           #~"unwind.cc"
           #~"commonLispUserPackage.cc"
           #~"metaClass.cc"
           #~"multipleValues.cc"
           #~"predicates.cc"
           #~"write_list.cc"
           #~"package.cc"
           #~"commonLispPackage.cc"
           #~"allClSymbols.cc"
           #~"keywordPackage.cc"
           #~"extensionPackage.cc"
           #~"array.cc"
           #~"string.cc"
           #~"array_bit.cc"
           #~"grayPackage.cc"
           #~"closPackage.cc"
           #~"cleavirPrimopsPackage.cc"
           #~"seqPackage.cc"
           #~"eclector_readtable.cc"
           #~"compPackage.cc"
           #~"bootStrapCoreSymbolMap.cc"
           #~"cons.cc"
           #~"symbol.cc"
           #~"object.cc"
           #~"arguments.cc"
           #~"pointer.cc"
           #~"iterator.cc"
           #~"sysprop.cc"
           #~"bformat.cc"
           #~"backquote.cc"
           #~"documentation.cc"
           #~"lispReader.cc"
           #~"singleDispatchGenericFunction.cc"
           #~"singleDispatchMethod.cc"
           #~"derivableCxxObject.cc"
           #~"null.cc"
           #~"character.cc"
           #~"designators.cc"
           #~"sequence.cc"
           #~"loadTimeValues.cc"
           #~"lightProfiler.cc"
           #~"fileSystem.cc"
           #~"posixTime.cc"
           #~"hwinfo.cc"
           #~"clasp_ffi_package.cc"
           #~"fli.cc")

(k:sources :trampoline
           #~"trampoline/trampoline.cc")
