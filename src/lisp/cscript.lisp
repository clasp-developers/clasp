(defun add-nclasp-sources (target)
  (k:sources target
             #@"runtime-packages.lisp"
             #@"runtime-functions.lisp"
             #@"runtime-variables.lisp"
             #@"type-map.lisp"
             #~"kernel/contrib-packages.lisp"
             ;; Enough CLOS to call generic functions
             #~"kernel/clos/method-combination-environment.lisp"
             #~"kernel/clos/standard-method-combinations.lisp"
             #~"kernel/clos/hierarchy.lisp"
             #~"kernel/clos/method-function.lisp"
             #~"kernel/clos/eql-specializer.lisp"
             #~"kernel/clos/applicable-methods.lisp"
             #~"kernel/clos/effective-method.lisp"
             #~"kernel/clos/outcome.lisp"
             #~"kernel/clos/slot-value.lisp"
             #~"kernel/clos/effective-accessor.lisp"
             #~"kernel/clos/interpreted-discriminator.lisp"
             #~"kernel/clos/miss.lisp"
             #~"kernel/clos/check-initargs.lisp"
             #~"kernel/clos/static-gfs/package.lisp"
             #~"kernel/clos/static-gfs/flag.lisp"
             #~"kernel/clos/make.lisp"
             #~"kernel/clos/print.lisp"
             #~"kernel/clos/misc.lisp"
             #@"cxx-classes.lisp"
             #~"kernel/clos/base-satiation.lisp"
             ;; Library
             #~"kernel/lsp/debug.lisp"
             #~"kernel/clos/conditions.lisp"
             #~"kernel/lsp/assert.lisp"
             #~"kernel/clos/package.lisp"
             #~"kernel/lsp/ext-package.lisp"
             #~"kernel/lsp/arraylib.lisp"
             #~"kernel/lsp/numlib.lisp"
             #~"kernel/lsp/predlib.lisp"
             #~"kernel/lsp/cdr-5.lisp"
             #~"kernel/lsp/module.lisp"
             #~"kernel/clos/streams.lisp"
             #~"kernel/lsp/pprint.lisp"
             #~"kernel/lsp/listlib.lisp"
             #~"kernel/lsp/mislib.lisp"
             #~"kernel/lsp/seqmacros.lisp"
             #~"kernel/lsp/seq.lisp"
             #~"kernel/lsp/seqlib.lisp"
             #~"kernel/lsp/iolib.lisp"
             #~"kernel/lsp/trace.lisp"
             #~"kernel/lsp/assorted.lisp"
             #~"kernel/lsp/packlib.lisp"
             #~"kernel/clos/sequences.lisp"
             #~"kernel/lsp/helpfile.lisp"
             #~"kernel/lsp/describe.lisp"
             #~"kernel/lsp/source-location.lisp"
             #~"kernel/clos/inspect.lisp"
             ;; CLOS part two: defining new generics, classes, etc
             #~"kernel/clos/change.lisp"
             #~"kernel/clos/dependent.lisp"
             #~"kernel/clos/class.lisp"
             #~"kernel/clos/cpl.lisp"
             #~"kernel/clos/generic.lisp"
             #~"kernel/clos/method.lisp"
             ;; compiler
             #~"kernel/cmp/cmputil.lisp"
             #~"kernel/cmp/compiler-conditions.lisp"
             #~"kernel/cmp/compile.lisp"
             #~"kernel/cmp/walk.lisp"
             #~"kernel2/cmp/bytecode-machines.lisp"
             #~"kernel/cmp/bytecode-introspect.lisp"
             #~"kernel/cmp/disassemble.lisp"
             #~"kernel/cmp/bundle.lisp"
             #~"kernel/cmp/exports.lisp"
             ;; compiler macros
             #~"kernel/lsp/source-transformations.lisp"
             #~"kernel/cmp/compiler-macro.lisp"
             #~"kernel/cmp/opt/opt.lisp"
             #~"kernel/cmp/opt/opt-character.lisp"
             #~"kernel/cmp/opt/opt-number.lisp"
             #~"kernel/cmp/opt/opt-type.lisp"
             #~"kernel/cmp/opt/opt-control.lisp"
             #~"kernel/cmp/opt/opt-sequence.lisp"
             #~"kernel/cmp/opt/opt-cons.lisp"
             #~"kernel/cmp/opt/opt-array.lisp"
             #~"kernel/cmp/opt/opt-object.lisp"
             #~"kernel/cmp/opt/opt-print.lisp"
             ;; macros
             #~"kernel/lsp/cmuutil.lisp"
             #~"kernel/lsp/shiftf-rotatef.lisp"
             #~"kernel/lsp/setf.lisp"
             #~"kernel/lsp/do.lisp"
             #~"kernel/lsp/defpackage.lisp"
             #~"kernel/lsp/format.lisp"
             #~"kernel/lsp/format-pprint.lisp"
             #~"kernel/lsp/defmacro.lisp"
             #~"kernel/lsp/evalmacros.lisp"
             #~"kernel/lsp/defstruct.lisp"
             #~"kernel/lsp/loop2.lisp"
             #~"kernel/lsp/sharpmacros.lisp"
             #~"kernel/lsp/mp.lisp"
             #~"kernel/lsp/atomics.lisp"
             #~"kernel/lsp/mp-package.lisp"
             #~"kernel/clos/atomics.lisp"
             #~"kernel/clos/define-method-combination.lisp"
             #~"kernel/lsp/special-operators.lisp"
             ;; some extensions
             #~"kernel/lsp/defvirtual.lisp"
             #~"kernel/clos/telemetry.lisp"
             #~"kernel/cmp/xref.lisp"
             #@"generated-encodings.lisp"
             #~"kernel/lsp/encodings.lisp"
             #~"kernel/lsp/posix.lisp"
             #~"kernel/lsp/process.lisp"
             ;; toplevel
             #~"kernel/lsp/top.lisp"
             #~"kernel/lsp/top-hook.lisp"
             #~"kernel/install-delayed-macros.lisp"
             :ecclesia
             ;; logical pathname translation
             #@"base-translations.lisp"
             #~"modules/sockets/sockets.lisp"
             #@"base-immutable.lisp"
             ;; CLOS part three: compiled discriminators, user satiation, static GFs
             #~"kernel/clos/compiled-discriminator.lisp"
             #~"kernel/clos/satiation.lisp"
             #~"kernel/clos/static-gfs/package.lisp"
             #~"kernel/clos/static-gfs/flag.lisp"
             #~"kernel/clos/static-gfs/constructor.lisp"
             #~"kernel/clos/static-gfs/cell.lisp"
             #~"kernel/clos/static-gfs/effective-method.lisp"
             #~"kernel/clos/static-gfs/svuc.lisp"
             #~"kernel/clos/static-gfs/shared-initialize.lisp"
             #~"kernel/clos/static-gfs/initialize-instance.lisp"
             #~"kernel/clos/static-gfs/allocate-instance.lisp"
             #~"kernel/clos/static-gfs/make-instance.lisp"
             #~"kernel/clos/static-gfs/compute-constructor.lisp"
             #~"kernel/clos/static-gfs/dependents.lisp"
             #~"kernel/clos/static-gfs/compiler-macros.lisp"
             ;; file compiler
             :eclector-concrete-syntax-tree
             #~"kernel/cmp/variables.lisp"
             #~"kernel/clos/make-load-form.lisp"
             #~"kernel/cmp/eclector.lisp"
             #~"kernel/cmp/cmpref-package.lisp"
             #~"kernel/cmp/startup-primitives.lisp"
             #~"kernel/cmp/cmpltv.lisp"
             #~"kernel/cmp/compile-file.lisp"
             ;; native compiler
             #~"kernel/cleavir/literal-package.lisp"
             #@"runtime-info.lisp"
             #~"kernel/cleavir/runtime-info.lisp"
             #~"kernel/cleavir/jit-setup.lisp"
             #~"kernel/cmp/cmpsetup.lisp"
             #~"kernel/cleavir/cmpintrinsics.lisp"
             #~"kernel/cleavir/primitives.lisp"
             #~"kernel/cleavir/cmpir.lisp"
             #~"kernel/cmp/debuginfo.lisp"
             #~"kernel/cmp/cmprunall.lisp"
             #~"kernel/cleavir/cmpliteral.lisp"
             #~"kernel/cmp/typeq.lisp"
             #~"kernel/cmp/codegen-special-form.lisp"
             :clasp-cleavir
             #~"kernel/cmp/arguments.lisp"
             #~"kernel/cleavir/compile-file.lisp"
             #~"kernel/cleavir/atomics.lisp"
             #~"kernel/cleavir/disassemble.lisp"
             #~"kernel/lsp/queue.lisp"
             #~"kernel/cmp/compile-file-parallel.lisp"
             #@"fli-specs.lisp"
             #~"kernel/lsp/fli.lisp"
             #~"kernel/lsp/cltl2.lisp"
             #~"kernel/lsp/macroexpand-all.lisp"
             #~"kernel/cmp/external-clang.lisp"
             #~"kernel/cleavir/auto-compile.lisp"))

(defun add-eclasp-sources (target)
  (add-nclasp-sources target)
  (k:sources target
             #~"kernel/stage/extension/0-begin.lisp"
             #@"extension-immutable.lisp"
             #@"extension-translations.lisp"
             #~"modules/asdf/build/asdf.lisp"
             :extension-systems
             #~"kernel/stage/extension/0-end.lisp"))

(add-nclasp-sources :nclasp)

(add-eclasp-sources :eclasp)


(k:sources :extension-translations
           :extension-systems)

(k:sources :modules
           #~"modules/asdf/build/asdf.lisp"
           #~"modules/serve-event/serve-event.lisp")

(k:sources :install-code
           #~"modules/"
           #~"kernel/contrib/Acclimation/"
           #~"kernel/contrib/alexandria/"
           #~"kernel/contrib/Cleavir/"
           #~"kernel/contrib/closer-mop/"
           #~"kernel/contrib/Concrete-Syntax-Tree/"
           #~"kernel/contrib/Eclector/")

(k:sources :install-extension-code
           #~"kernel/contrib/anaphora/"
           #~"kernel/contrib/architecture.builder-protocol/"
           #~"kernel/contrib/array-utils/"
           #~"kernel/contrib/babel/"
           #~"kernel/contrib/bordeaux-threads/"
           #~"kernel/contrib/cffi/"
           #~"kernel/contrib/cl-markup/"
           #~"kernel/contrib/cl-netcdf/"
           #~"kernel/contrib/cl-ppcre/"
           #~"kernel/contrib/cl-svg/"
           #~"kernel/contrib/documentation-utils/"
           #~"kernel/contrib/esrap/"
           #~"kernel/contrib/global-vars/"
           #~"kernel/contrib/let-plus/"
           #~"kernel/contrib/lparallel/"
           #~"kernel/contrib/mgl-pax/"
           #~"kernel/contrib/parser.common-rules/"
           #~"kernel/contrib/plump/"
           #~"kernel/contrib/split-sequence/"
           #~"kernel/contrib/static-vectors/"
           #~"kernel/contrib/trivial-features/"
           #~"kernel/contrib/trivial-garbage/"
           #~"kernel/contrib/trivial-http/"
           #~"kernel/contrib/trivial-indent/"
           #~"kernel/contrib/trivial-with-current-source-form/"
           #~"kernel/contrib/usocket/")

(k:sources :analyzer
           :clasp-analyzer)

(k:sources :vm-header
           #~"kernel/cmp/cmpref-package.lisp"
           #~"kernel/cmp/startup-primitives.lisp"
           #~"kernel/cmp/bytecode-machines.lisp")
