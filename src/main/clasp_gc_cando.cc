#ifdef GC_DECLARE_FORWARDS
 class Vector3;
 namespace geom {
    class Color_O;
    class ComplexVectorCoordinate_O;
    class SimpleMDArrayCoordinate_O;
    class BoundingCuboid_O;
    class SimpleVectorCoordinate_O;
    class GeomExposer_O;
    class OMatrix_O;
    class OVector3_O;
    class OVector2_O;
    class MDArrayCoordinate_O;
 };
 namespace clbind {
    class DummyCreator_O;
    class ClassRep_O;
    class ClassRegistry_O;
 };
 namespace core {
    class ComplexVector_byte32_t_O;
    class GlobalEntryPointGenerator_O;
    class LocalEntryPointGenerator_O;
    class ClassHolder_O;
    class Bignum_O;
    class SimpleMDArray_byte32_t_O;
    class SimpleVector_double_O;
    class LogicalPathname_O;
    class CatchEnvironment_O;
    class ComplexVector_byte4_t_O;
    class Lisp_O;
    class VaList_dummy_O;
    class ComplexVector_int32_t_O;
    class SymbolToEnumConverter_O;
    class DerivableCxxObject_O;
    class SimpleVector_int16_t_O;
    class ClassRepCreator_O;
    class ClosureWithSlots_O;
    class ComplexVector_byte2_t_O;
    class MDArray_int2_t_O;
    class SynonymStream_O;
    class Ratio_O;
    class FuncallableInstance_O;
    class MacroletEnvironment_O;
    class SymbolMacroletEnvironment_O;
    class ConcatenatedStream_O;
    class LambdaListHandler_O;
    class HashTableEqualp_O;
    class HashTableEq_O;
    class DerivableCxxClassCreator_O;
    class FunctionValueEnvironment_O;
    class SimpleMDArray_byte2_t_O;
    class SimpleString_O;
    class SimpleMDArray_int64_t_O;
    class SymbolStorage;
    class SimpleVector_O;
    class StringOutputStream_O;
    class FuncallableInstanceCreator_O;
    class MDArray_byte8_t_O;
    class Real_O;
    class HashTableEql_O;
    class ImmobileObject_O;
    class SimpleMDArray_int2_t_O;
    class Function_O;
    class MDArrayCharacter_O;
    class Rational_O;
    class FileStream_O;
    class SimpleMDArray_byte8_t_O;
    class RuntimeVisibleEnvironment_O;
    class IOFileStream_O;
    class CodeEntryPoint_O;
    class WeakPointer_O;
    class MDArray_double_O;
    class TranslationFunctor_O;
    class SimpleVector_int64_t_O;
    class Float_O;
    class SimpleMDArray_byte4_t_O;
    class FileScope_O;
    class ComplexVector_int64_t_O;
    class Pointer_O;
    class MDArray_byte16_t_O;
    class CxxObject_O;
    class GlueEnvironment_O;
    class SingleDispatchMethod_O;
    class RequiredArgument;
    class Null_O;
    class GlobalEntryPoint_O;
    class MDArray_byte4_t_O;
    class Array_O;
    class Symbol_O;
    class SimpleCharacterString_O;
    class SimpleMDArrayCharacter_O;
    class NativeVector_int_O;
    class SpecialForm_O;
    class TagbodyEnvironment_O;
    class Character_dummy_O;
    class MDArray_byte32_t_O;
    class ComplexVector_byte64_t_O;
    class SimpleMDArray_int8_t_O;
    class LoadTimeValues_O;
    class SharpEqualWrapper_O;
    class MDArray_fixnum_O;
    class SimpleVector_int4_t_O;
    class SimpleVector_float_O;
    class ComplexVector_fixnum_O;
    class SimpleVector_byte8_t_O;
    class Readtable_O;
    class FunctionContainerEnvironment_O;
    class SimpleVector_int8_t_O;
    class SimpleBitVector_O;
    class PosixTime_O;
    class LexicalEnvironment_O;
    class DirectoryIterator_O;
    class MDArray_byte2_t_O;
    class Exposer_O;
    class ActivationFrame_O;
    class SimpleMDArrayT_O;
    class SimpleMDArray_int16_t_O;
    class MDArray_O;
    class Test_O;
    class SimpleBaseString_O;
    class SimpleVector_byte64_t_O;
    class SimpleVector_byte16_t_O;
    class KeyValuePair;
    class BitVectorNs_O;
    class CoreExposer_O;
    class SimpleMDArray_byte64_t_O;
    class HashTableEqual_O;
    class PosixTimeDuration_O;
    class Unused_dummy_O;
    class SmallMap_O;
    class Instance_O;
    class BlockEnvironment_O;
    class ComplexVector_size_t_O;
    class General_O;
    class BroadcastStream_O;
    class ExternalObject_O;
    class UserData_O;
    class MDArrayBaseChar_O;
    class Rack_O;
    class WeakKeyHashTable_O;
    class MDArray_int4_t_O;
    class Cons_O;
    class MDArray_int8_t_O;
    class AuxArgument;
    class Fixnum_dummy_O;
    class SmallMultimap_O;
    class MDArray_int64_t_O;
    class SimpleMDArray_size_t_O;
    class MDArray_int32_t_O;
    class Sigset_O;
    class StringStream_O;
    class DoubleFloat_O;
    class UnwindProtectEnvironment_O;
    class StrNs_O;
    class Environment_O;
    class ValueEnvironment_O;
    class SingleFloat_dummy_O;
    class KeywordArgument;
    class AnsiStream_O;
    class SingleDispatchGenericFunctionClosure_O;
    class SimpleVector_byte32_t_O;
    class SimpleVector_fixnum_O;
    class MDArray_byte64_t_O;
    class SimpleVector_int2_t_O;
    class SimpleMDArray_float_O;
    class RandomState_O;
    class ComplexVector_int16_t_O;
    class EntryPointBase_O;
    class Complex_O;
    class SimpleMDArray_double_O;
    class SimpleVector_int32_t_O;
    class SimpleMDArray_int4_t_O;
    class ComplexVector_int8_t_O;
    class ValueFrame_O;
    class ComplexVector_T_O;
    class MDArray_int16_t_O;
    class ComplexVector_int4_t_O;
    class LongFloat_O;
    class FunctionFrame_O;
    class StringInputStream_O;
    class RecursiveDirectoryIterator_O;
    class LocalEntryPoint_O;
    class ComplexVector_int2_t_O;
    class ComplexVector_byte16_t_O;
    class MDArrayBit_O;
    class SimpleMDArrayBit_O;
    class HashTableBase_O;
    class EchoStream_O;
    class StrWNs_O;
    class ComplexVector_double_O;
    class FunctionDescription_O;
    class Scope_O;
    class IOStreamStream_O;
    class InstanceCreator_O;
    class Path_O;
    class CompileTimeEnvironment_O;
    class SimpleVector_byte4_t_O;
    class Str8Ns_O;
    class Pathname_O;
    class SimpleMDArray_byte16_t_O;
    class AbstractSimpleVector_O;
    class Number_O;
    class T_O;
    class ShortFloat_O;
    class SymbolClassHolderPair;
    class SimpleMDArray_O;
    class Stream_O;
    class SimpleMDArrayBaseChar_O;
    class Package_O;
    class FileStatus_O;
    class SimpleVector_size_t_O;
    class InvocationHistoryFrameIterator_O;
    class HashTable_O;
    class OptionalArgument;
    class ComplexVector_byte8_t_O;
    class HashTableCustom_O;
    class StandardClassCreator_O;
    class ComplexVector_float_O;
    class SourcePosInfo_O;
    class MDArray_float_O;
    class DirectoryEntry_O;
    class MDArrayT_O;
    class Record_O;
    class LightUserData_O;
    class Frame_O;
    class Integer_O;
    class SimpleMDArray_int32_t_O;
    class ComplexVector_O;
    class SimpleMDArray_fixnum_O;
    class SimpleVector_byte2_t_O;
    class MDArray_size_t_O;
    class TwoWayStream_O;
 };
 namespace chem {
    class SketchFunction_O;
    class Root_O;
    class FFVdw_O;
    class StepReport_O;
    class ConformationCollection_O;
    class RestrainedPiBond_O;
    class FixedNonbondRestraint;
    class NumericalFunction_O;
    class RingCoupling_O;
    class EnergyAtom;
    class RestrainedExoCyclicAtom_O;
    class EnergyComponent_O;
    class RestraintChiral_O;
    class Coupling_O;
    class Matter_O;
    class Stereoisomer_O;
    class PdbWriter_O;
    class TrajectoryFrame_O;
    class Oligomer_O;
    class PlugWithMates_O;
    class RigidBodyNonbondCrossTerm;
    class PdbMonomerConnectivity_O;
    class BondMatcher_O;
    class EntityNameSetWithCap_O;
    class Topology_O;
    class BondListMatchNode_O;
    class ConformationExplorerEntry_O;
    class PdbReader_O;
    class SpanningLoop_O;
    class AtomTable_O;
    class StereoisomerVirtualAtom_O;
    class CipPrioritizer_O;
    class IterateResidues_O;
    class ProperTorsion_O;
    class VirtualSphere_O;
    class ConstitutionVirtualAtom_O;
    class EnergyNonbond;
    class ResidueList_O;
    class EntityNameSet_O;
    class BeyondThresholdFixedNonbondRestraint;
    class SuperposeEngine_O;
    class TwisterDriver_O;
    class SmartsRoot_O;
    class RestraintDistance_O;
    class ResidueTest_O;
    class EnergySketchStretch;
    class FFParameterBaseDb_O;
    class Command_O;
    class StereoConfiguration_O;
    class FFNonbondCrossTermTable_O;
    class Plug_O;
    class EnergyDihedralRestraint;
    class MonomerContext_O;
    class CDFragment_O;
    class IterateBonds_O;
    class RingFinder_O;
    class FFItorDb_O;
    class AtomOrBondMatchNode_O;
    class ResidueOut;
    class EnergyStretch_O;
    class AntechamberBondToAtomTest_O;
    class SearchStatistics_O;
    class Aggregate_O;
    class PdbMonomerDatabase_O;
    class AntechamberFocusAtomMatch_O;
    class InfoDb_O;
    class FFPtor_O;
    class Twister_O;
    class FFVdwDb_O;
    class EnergyFunction_O;
    class MinimizerLog_O;
    class MonomerCoordinates_O;
    class RepresentedEntityNameSet_O;
    class GenericOctree_O;
    class RigidBodyAtomInfo;
    class FFParameter_O;
    class AtomPdbRec;
    class Restraint_O;
    class ChemInfoMatch_O;
    class AtomIndexer_O;
    class CalculatePositionRelativeToOrigin_O;
    class ZMatrixEntry_O;
    class StereoInformation_O;
    class AddIonOctree_O;
    class SpecificContextSet_O;
    class CDNode_O;
    class OligomerPart_Base_O;
    class JumpPlug_O;
    class Angle_O;
    class MacroModelFile_O;
    class BondList_O;
    class ConformationExplorer_O;
    class Mate_O;
    class Logical_O;
    class RigidBodyEnergyFunction_O;
    class EnergyAngle;
    class AtomReference_O;
    class CoordinateSystem_O;
    class SuperposableConformationCollection_O;
    class Bond_O;
    class EnergyPointToLineRestraint_O;
    class EnergyOutOfZPlane;
    class ChemInfoGraph_O;
    class FFItor_O;
    class EnergyRigidBodyComponent_O;
    class EnergyOutOfZPlane_O;
    class EnergyChiralRestraint;
    class BondTest_O;
    class MessageReport_O;
    class CDText_O;
    class KeyEntry;
    class SpanningInfo_O;
    class CandoDatabase_O;
    class EnergyStretch;
    class ChemExposer_O;
    class RestraintAngle_O;
    class ConformationExplorerMatch_O;
    class StereoisomerAtoms_O;
    class AbstractLargeSquareMatrix_O;
    class FFBaseDb_O;
    class FFNonbondCrossTerm;
    class EntityNameSetBase_O;
    class EnergyAnchorRestraint;
    class Rotamer_O;
    class ZMatrixAngleInternal_O;
    class ImproperTorsion_O;
    class Constitution_O;
    class ZMatrixBondInternal_O;
    class EnergyDihedral_O;
    class AtomInfo;
    class HybridizationInfo;
    class EnergyPeriodicBoundaryConditionsNonbond_O;
    class CalculatePositionUsingInternals_O;
    class CalculatePositionAlongBond_O;
    class FrameRecognizer_O;
    class ConformationExplorerEntryStage_O;
    class OligomerPart_Link_O;
    class AfterMatchBondToAtomTest_O;
    class OriginPlug_O;
    class VirtualAtom_O;
    class AGVertex_O;
    class FFNonbond_O;
    class RestraintFixedNonbond_O;
    class Trajectory_O;
    class EnergyRigidBodyStaple;
    class ForceField_O;
    class AtomReferenceBase_O;
    class SuperposeSelectedAtoms_O;
    class CalculatePosition_O;
    class Residue_O;
    class EnergySketchNonbond_O;
    class EnergyNonbond_O;
    class FFNonbondDb_O;
    class IterateRestraints_O;
    class FFStretch_O;
    class EnergyDihedral;
    class RingClosingMate_O;
    class ConformationCollectionEntry_O;
    class ScoringFunction_O;
    class Chain_O;
    class RootMatchNode_O;
    class WildElementDict_O;
    class ForceMatchReport_O;
    class ZMatrixDihedralInternal_O;
    class ComplexRestraint_O;
    class FFPtorDb_O;
    class DirectionalCoupling_O;
    class IterateAtoms_O;
    class AntechamberRoot_O;
    class RestraintDihedral_O;
    class InPlug_O;
    class RestraintAnchor_O;
    class CombinedForceField_O;
    class CDBond_O;
    class ConstitutionBond_O;
    class Branch_O;
    class FFStretchDb_O;
    class ConstitutionAtoms_O;
    class EnergyRigidBodyStaple_O;
    class Monomer_O;
    class Structure_Old_ListEntry_O;
    class FFTypeRule_O;
    class FFAngleDb_O;
    class BondToAtomTest_O;
    class MoleculeGraph_O;
    class BondLogical_O;
    class StructureComparer_O;
    class BoundingBox_O;
    class ChemInfoNode_O;
    class EstimateStretch;
    class ConstitutionAtom_O;
    class EnergyDihedralRestraint_O;
    class Smirks_O;
    class FFAngle_O;
    class EnergyAnchorRestraint_O;
    class ReadAmberParameters_O;
    class AtomTest_O;
    class AGEdge_O;
    class Entity_O;
    class OctNode_O;
    class Structure_Old_List_O;
    class EnergySketchNonbond;
    class EnergyFixedNonbondRestraint_O;
    class ElementsInfo_O;
    class OligomerPart_Monomer_O;
    class MonomerPack_O;
    class EnergyChiralRestraint_O;
    class EnergySketchStretch_O;
    class FullLargeSquareMatrix_O;
    class Dimacs_O;
    class RotamerAtom;
    class ReportBase_O;
    class Molecule_O;
    class ChemDraw_O;
    class SpecificContext_O;
    class Minimizer_O;
    class MapOfMonomerNamesToAtomIndexers_O;
    class ZMatrixInternal_O;
    class Alias_O;
    class FFTypesDb_O;
    class AtomicInfo;
    class IterateMatter_O;
    class StereoisomerAtom_O;
    class AtomIdToAtomMap_O;
    class ZMatrix_O;
    class Atom_O;
    class Isoname_O;
    class OutPlug_O;
    class SparseLargeSquareMatrix_O;
    class EnergyRigidBodyNonbond_O;
    class BondMatchNode_O;
    class PathMessage_O;
    class EnergyAngle_O;
 };
 namespace asttooling {
    class SourceLocation_O;
    class PresumedLoc_O;
    class DerivableMatchCallback;
    class AsttoolingExposer_O;
    class DerivableSyntaxOnlyAction;
    class QualType_O;
    class DerivableFrontendActionFactory;
    class DerivableASTFrontendAction;
    class AstVisitor_O;
 };
 namespace mpip {
    class Mpi_O;
 };
 namespace units {
    class Dimension_O;
    class NamedUnit_O;
    class Unit_O;
    class Quantity_O;
    class UnitsExposer_O;
 };
 namespace clasp_ffi {
    class ForeignTypeSpec_O;
    class ForeignData_O;
 };
 namespace llvmo {
    class PointerType_O;
    class GlobalValue_O;
    class UnaryInstruction_O;
    class LLVMTargetMachine_O;
    class TargetSubtargetInfo_O;
    class Pass_O;
    class SwitchInst_O;
    class Attribute_O;
    class ExecutionEngine_O;
    class ImmutablePass_O;
    class DICompositeType_O;
    class BlockAddress_O;
    class MCSubtargetInfo_O;
    class DIVariable_O;
    class ArrayType_O;
    class DISubprogram_O;
    class PassManager_O;
    class MDBuilder_O;
    class AtomicRMWInst_O;
    class AttributeSet_O;
    class LandingPadInst_O;
    class Instruction_O;
    class DebugLoc_O;
    class StoreInst_O;
    class Code_O;
    class ConstantDataSequential_O;
    class DIDerivedType_O;
    class UnreachableInst_O;
    class JITDylib_O;
    class Type_O;
    class DIContext_O;
    class FunctionType_O;
    class ReturnInst_O;
    class TargetPassConfig_O;
    class IRBuilderBase_O;
    class Argument_O;
    class APFloat_O;
    class APInt_O;
    class DIBuilder_O;
    class DIBasicType_O;
    class FunctionCallee_O;
    class Constant_O;
    class SectionedAddress_O;
    class EngineBuilder_O;
    class BasicBlock_O;
    class DataLayout_O;
    class CodeBase_O;
    class DIFile_O;
    class VAArgInst_O;
    class MDNode_O;
    class DILexicalBlockBase_O;
    class ClaspJIT_O;
    class IRBuilder_O;
    class DIType_O;
    class Function_O;
    class ResumeInst_O;
    class MetadataAsValue_O;
    class DISubroutineType_O;
    class ConstantStruct_O;
    class LoadInst_O;
    class PassManagerBase_O;
    class StructLayout_O;
    class ConstantInt_O;
    class Metadata_O;
    class Value_O;
    class ThreadSafeContext_O;
    class TargetMachine_O;
    class NamedMDNode_O;
    class Triple_O;
    class DWARFContext_O;
    class TargetOptions_O;
    class ConstantDataArray_O;
    class DINodeArray_O;
    class Library_O;
    class ObjectFile_O;
    class GlobalVariable_O;
    class DINode_O;
    class LLVMContext_O;
    class ConstantFP_O;
    class PassManagerBuilder_O;
    class IntegerType_O;
    class LibraryBase_O;
    class FunctionPassManager_O;
    class CallInst_O;
    class InvokeInst_O;
    class DIExpression_O;
    class Module_O;
    class Target_O;
    class StructType_O;
    class VectorType_O;
    class ConstantExpr_O;
    class ConstantPointerNull_O;
    class ValueAsMetadata_O;
    class AtomicCmpXchgInst_O;
    class FenceInst_O;
    class User_O;
    class LibraryFile_O;
    class TargetLibraryInfoWrapperPass_O;
    class DILocalVariable_O;
    class ModulePass_O;
    class DITypeRefArray_O;
    class DILexicalBlock_O;
    class DILocalScope_O;
    class InsertPoint_O;
    class CallBase_O;
    class UndefValue_O;
    class FunctionPass_O;
    class DICompileUnit_O;
    class MDString_O;
    class DILocation_O;
    class PHINode_O;
    class ConstantArray_O;
    class IndirectBrInst_O;
    class DIScope_O;
    class AllocaInst_O;
    class BranchInst_O;
    class Linker_O;
 };
 namespace mp {
    class ConditionVariable_O;
    class RecursiveMutex_O;
    class Mutex_O;
    class SharedMutex_O;
    class Process_O;
 };
 namespace kinematics {
    class MonomerId_O;
    class RootBondedJoint_O;
    class RingClosingMonomerNode_O;
    class JointTemplate_O;
    class BondedJointTemplate_O;
    class ChiList_O;
    class FoldTree_O;
    class DelayedBondedJoint_O;
    class RotamerSetBase_O;
    class DelayedBondedJointTemplate_O;
    class BackboneDependentRotamerSet_O;
    class BondedJoint_O;
    class KinematicsExposer_O;
    class MonomerBaseNode_O;
    class Rotamer_O;
    class RootBondedJointTemplate_O;
    class Joint_O;
    class OriginJumpJoint_O;
    class AtomTree_O;
    class JumpJoint_O;
    class RotamerSet_O;
    class BondId_O;
    class CheckpointJoint_O;
    class ChainNode_O;
    class AggregateNode_O;
    class Checkpoint_O;
    class MonomerNode_O;
    class ChiDihedral_O;
    class Conformation_O;
    class CheckpointOutPlugJoint_O;
    class BackboneDependentRotamerLibrary_O;
 };
 namespace adapt {
    class ObjectSet_O;
    class IndexedObjectBag_O;
    class IterateCons_O;
    class SymbolList_O;
    class AdaptExposer_O;
    class QDomNode_O;
    class SymbolSet_O;
 };
#endif // GC_DECLARE_FORWARDS
#if defined(GC_STAMP)
// Attempted to assign stamp to class asttooling::DerivableMatchCallback due to inherit from clang::ast_matchers::MatchFinder::MatchCallback but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class clbind::Derivable<clang::ast_matchers::MatchFinder::MatchCallback> due to inherit from clang::ast_matchers::MatchFinder::MatchCallback but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class asttooling::DerivableFrontendActionFactory due to inherit from clang::tooling::ToolAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class clbind::Derivable<clang::tooling::FrontendActionFactory> due to inherit from clang::tooling::ToolAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class asttooling::DerivableASTFrontendAction due to inherit from clang::FrontendAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class clbind::Derivable<clang::ASTFrontendAction> due to inherit from clang::FrontendAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class asttooling::DerivableSyntaxOnlyAction due to inherit from clang::FrontendAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class clbind::Derivable<clang::SyntaxOnlyAction> due to inherit from clang::FrontendAction but it already has one due to inheritance from core::T_O
// Attempted to assign stamp to class asttooling::DerivableASTFrontendAction due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class clbind::Derivable<clang::ASTFrontendAction> due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class asttooling::DerivableMatchCallback due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class clbind::Derivable<clang::ast_matchers::MatchFinder::MatchCallback> due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class asttooling::DerivableSyntaxOnlyAction due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class clbind::Derivable<clang::SyntaxOnlyAction> due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class asttooling::DerivableFrontendActionFactory due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
// Attempted to assign stamp to class clbind::Derivable<clang::tooling::FrontendActionFactory> due to inherit from core::T_O but it already has one due to inheritance from core::DerivableCxxObject_O
STAMPWTAG_null = ADJUST_STAMP(0), 
STAMPWTAG_core__T_O = ADJUST_STAMP(7), // Stamp(1)  wtag(3)
STAMPWTAG_core__Unused_dummy_O = ADJUST_STAMP(11), // Stamp(2)  wtag(3)
STAMPWTAG_core__General_O = ADJUST_STAMP(15), // Stamp(3)  wtag(3)
STAMPWTAG_core__LambdaListHandler_O = ADJUST_STAMP(19), // Stamp(4)  wtag(3)
STAMPWTAG_llvmo__AttributeSet_O = ADJUST_STAMP(23), // Stamp(5)  wtag(3)
STAMPWTAG_core__Pointer_O = ADJUST_STAMP(27), // Stamp(6)  wtag(3)
STAMPWTAG_clasp_ffi__ForeignData_O = ADJUST_STAMP(31), // Stamp(7)  wtag(3)
STAMPWTAG_core__CxxObject_O = ADJUST_STAMP(35), // Stamp(8)  wtag(3)
STAMPWTAG_asttooling__SourceLocation_O = ADJUST_STAMP(39), // Stamp(9)  wtag(3)
STAMPWTAG_kinematics__ChiList_O = ADJUST_STAMP(43), // Stamp(10)  wtag(3)
STAMPWTAG_chem__NumericalFunction_O = ADJUST_STAMP(47), // Stamp(11)  wtag(3)
STAMPWTAG_kinematics__FoldTree_O = ADJUST_STAMP(51), // Stamp(12)  wtag(3)
STAMPWTAG_kinematics__RotamerSetBase_O = ADJUST_STAMP(55), // Stamp(13)  wtag(3)
STAMPWTAG_kinematics__BackboneDependentRotamerSet_O = ADJUST_STAMP(59), // Stamp(14)  wtag(3)
STAMPWTAG_kinematics__RotamerSet_O = ADJUST_STAMP(63), // Stamp(15)  wtag(3)
STAMPWTAG_chem__EnergyComponent_O = ADJUST_STAMP(67), // Stamp(16)  wtag(3)
STAMPWTAG_chem__EnergyStretch_O = ADJUST_STAMP(71), // Stamp(17)  wtag(3)
STAMPWTAG_chem__EnergyRigidBodyComponent_O = ADJUST_STAMP(75), // Stamp(18)  wtag(3)
STAMPWTAG_chem__EnergyRigidBodyStaple_O = ADJUST_STAMP(79), // Stamp(19)  wtag(3)
STAMPWTAG_chem__EnergyRigidBodyNonbond_O = ADJUST_STAMP(83), // Stamp(20)  wtag(3)
STAMPWTAG_chem__EnergyOutOfZPlane_O = ADJUST_STAMP(87), // Stamp(21)  wtag(3)
STAMPWTAG_chem__EnergySketchNonbond_O = ADJUST_STAMP(91), // Stamp(22)  wtag(3)
STAMPWTAG_chem__EnergyDihedralRestraint_O = ADJUST_STAMP(95), // Stamp(23)  wtag(3)
STAMPWTAG_chem__EnergyChiralRestraint_O = ADJUST_STAMP(99), // Stamp(24)  wtag(3)
STAMPWTAG_chem__EnergyPointToLineRestraint_O = ADJUST_STAMP(103), // Stamp(25)  wtag(3)
STAMPWTAG_chem__EnergyDihedral_O = ADJUST_STAMP(107), // Stamp(26)  wtag(3)
STAMPWTAG_chem__EnergyNonbond_O = ADJUST_STAMP(111), // Stamp(27)  wtag(3)
STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O = ADJUST_STAMP(115), // Stamp(28)  wtag(3)
STAMPWTAG_chem__EnergyAnchorRestraint_O = ADJUST_STAMP(119), // Stamp(29)  wtag(3)
STAMPWTAG_chem__EnergyFixedNonbondRestraint_O = ADJUST_STAMP(123), // Stamp(30)  wtag(3)
STAMPWTAG_chem__EnergySketchStretch_O = ADJUST_STAMP(127), // Stamp(31)  wtag(3)
STAMPWTAG_chem__EnergyAngle_O = ADJUST_STAMP(131), // Stamp(32)  wtag(3)
STAMPWTAG_chem__Matter_O = ADJUST_STAMP(135), // Stamp(33)  wtag(3)
STAMPWTAG_chem__Aggregate_O = ADJUST_STAMP(139), // Stamp(34)  wtag(3)
STAMPWTAG_chem__Atom_O = ADJUST_STAMP(143), // Stamp(35)  wtag(3)
STAMPWTAG_chem__VirtualAtom_O = ADJUST_STAMP(147), // Stamp(36)  wtag(3)
STAMPWTAG_chem__Residue_O = ADJUST_STAMP(151), // Stamp(37)  wtag(3)
STAMPWTAG_chem__Molecule_O = ADJUST_STAMP(155), // Stamp(38)  wtag(3)
STAMPWTAG_chem__PdbWriter_O = ADJUST_STAMP(159), // Stamp(39)  wtag(3)
STAMPWTAG_chem__TrajectoryFrame_O = ADJUST_STAMP(163), // Stamp(40)  wtag(3)
STAMPWTAG_llvmo__MDBuilder_O = ADJUST_STAMP(167), // Stamp(41)  wtag(3)
STAMPWTAG_chem__Topology_O = ADJUST_STAMP(171), // Stamp(42)  wtag(3)
STAMPWTAG_chem__AtomTable_O = ADJUST_STAMP(175), // Stamp(43)  wtag(3)
STAMPWTAG_chem__CipPrioritizer_O = ADJUST_STAMP(179), // Stamp(44)  wtag(3)
STAMPWTAG_adapt__IndexedObjectBag_O = ADJUST_STAMP(183), // Stamp(45)  wtag(3)
STAMPWTAG_chem__VirtualSphere_O = ADJUST_STAMP(187), // Stamp(46)  wtag(3)
STAMPWTAG_chem__TwisterDriver_O = ADJUST_STAMP(191), // Stamp(47)  wtag(3)
STAMPWTAG_chem__RingFinder_O = ADJUST_STAMP(195), // Stamp(48)  wtag(3)
STAMPWTAG_llvmo__FunctionCallee_O = ADJUST_STAMP(199), // Stamp(49)  wtag(3)
STAMPWTAG_kinematics__Joint_O = ADJUST_STAMP(203), // Stamp(50)  wtag(3)
STAMPWTAG_kinematics__JumpJoint_O = ADJUST_STAMP(207), // Stamp(51)  wtag(3)
STAMPWTAG_kinematics__OriginJumpJoint_O = ADJUST_STAMP(211), // Stamp(52)  wtag(3)
STAMPWTAG_kinematics__BondedJoint_O = ADJUST_STAMP(215), // Stamp(53)  wtag(3)
STAMPWTAG_kinematics__RootBondedJoint_O = ADJUST_STAMP(219), // Stamp(54)  wtag(3)
STAMPWTAG_kinematics__DelayedBondedJoint_O = ADJUST_STAMP(223), // Stamp(55)  wtag(3)
STAMPWTAG_chem__SearchStatistics_O = ADJUST_STAMP(227), // Stamp(56)  wtag(3)
STAMPWTAG_chem__PdbMonomerDatabase_O = ADJUST_STAMP(231), // Stamp(57)  wtag(3)
STAMPWTAG_chem__Twister_O = ADJUST_STAMP(235), // Stamp(58)  wtag(3)
STAMPWTAG_chem__MonomerCoordinates_O = ADJUST_STAMP(239), // Stamp(59)  wtag(3)
STAMPWTAG_chem__FFParameter_O = ADJUST_STAMP(243), // Stamp(60)  wtag(3)
STAMPWTAG_chem__FFVdw_O = ADJUST_STAMP(247), // Stamp(61)  wtag(3)
STAMPWTAG_chem__FFStretch_O = ADJUST_STAMP(251), // Stamp(62)  wtag(3)
STAMPWTAG_chem__FFPtor_O = ADJUST_STAMP(255), // Stamp(63)  wtag(3)
STAMPWTAG_chem__FFItor_O = ADJUST_STAMP(259), // Stamp(64)  wtag(3)
STAMPWTAG_chem__FFNonbond_O = ADJUST_STAMP(263), // Stamp(65)  wtag(3)
STAMPWTAG_chem__FFAngle_O = ADJUST_STAMP(267), // Stamp(66)  wtag(3)
STAMPWTAG_chem__Restraint_O = ADJUST_STAMP(271), // Stamp(67)  wtag(3)
STAMPWTAG_chem__RestraintChiral_O = ADJUST_STAMP(275), // Stamp(68)  wtag(3)
STAMPWTAG_chem__RestraintDistance_O = ADJUST_STAMP(279), // Stamp(69)  wtag(3)
STAMPWTAG_chem__RestraintAngle_O = ADJUST_STAMP(283), // Stamp(70)  wtag(3)
STAMPWTAG_chem__RestraintAnchor_O = ADJUST_STAMP(287), // Stamp(71)  wtag(3)
STAMPWTAG_chem__RestraintFixedNonbond_O = ADJUST_STAMP(291), // Stamp(72)  wtag(3)
STAMPWTAG_chem__RestraintDihedral_O = ADJUST_STAMP(295), // Stamp(73)  wtag(3)
STAMPWTAG_chem__AtomIndexer_O = ADJUST_STAMP(299), // Stamp(74)  wtag(3)
STAMPWTAG_geom__BoundingCuboid_O = ADJUST_STAMP(303), // Stamp(75)  wtag(3)
STAMPWTAG_chem__StereoInformation_O = ADJUST_STAMP(307), // Stamp(76)  wtag(3)
STAMPWTAG_chem__AddIonOctree_O = ADJUST_STAMP(311), // Stamp(77)  wtag(3)
STAMPWTAG_chem__CDNode_O = ADJUST_STAMP(315), // Stamp(78)  wtag(3)
STAMPWTAG_chem__OligomerPart_Base_O = ADJUST_STAMP(319), // Stamp(79)  wtag(3)
STAMPWTAG_chem__OligomerPart_Link_O = ADJUST_STAMP(323), // Stamp(80)  wtag(3)
STAMPWTAG_chem__OligomerPart_Monomer_O = ADJUST_STAMP(327), // Stamp(81)  wtag(3)
STAMPWTAG_kinematics__BondId_O = ADJUST_STAMP(331), // Stamp(82)  wtag(3)
STAMPWTAG_chem__CoordinateSystem_O = ADJUST_STAMP(335), // Stamp(83)  wtag(3)
STAMPWTAG_chem__Bond_O = ADJUST_STAMP(339), // Stamp(84)  wtag(3)
STAMPWTAG_chem__CandoDatabase_O = ADJUST_STAMP(343), // Stamp(85)  wtag(3)
STAMPWTAG_chem__AbstractLargeSquareMatrix_O = ADJUST_STAMP(347), // Stamp(86)  wtag(3)
STAMPWTAG_chem__SparseLargeSquareMatrix_O = ADJUST_STAMP(351), // Stamp(87)  wtag(3)
STAMPWTAG_chem__FullLargeSquareMatrix_O = ADJUST_STAMP(355), // Stamp(88)  wtag(3)
STAMPWTAG_chem__FFBaseDb_O = ADJUST_STAMP(359), // Stamp(89)  wtag(3)
STAMPWTAG_chem__FFParameterBaseDb_O = ADJUST_STAMP(363), // Stamp(90)  wtag(3)
STAMPWTAG_chem__FFItorDb_O = ADJUST_STAMP(367), // Stamp(91)  wtag(3)
STAMPWTAG_chem__FFStretchDb_O = ADJUST_STAMP(371), // Stamp(92)  wtag(3)
STAMPWTAG_chem__FFAngleDb_O = ADJUST_STAMP(375), // Stamp(93)  wtag(3)
STAMPWTAG_chem__FFNonbondDb_O = ADJUST_STAMP(379), // Stamp(94)  wtag(3)
STAMPWTAG_chem__FFPtorDb_O = ADJUST_STAMP(383), // Stamp(95)  wtag(3)
STAMPWTAG_chem__FFVdwDb_O = ADJUST_STAMP(387), // Stamp(96)  wtag(3)
STAMPWTAG_chem__FFTypesDb_O = ADJUST_STAMP(391), // Stamp(97)  wtag(3)
STAMPWTAG_llvmo__LibraryBase_O = ADJUST_STAMP(395), // Stamp(98)  wtag(3)
STAMPWTAG_llvmo__ObjectFile_O = ADJUST_STAMP(399), // Stamp(99)  wtag(3)
STAMPWTAG_llvmo__LibraryFile_O = ADJUST_STAMP(403), // Stamp(100)  wtag(3)
STAMPWTAG_chem__AGVertex_O = ADJUST_STAMP(407), // Stamp(101)  wtag(3)
STAMPWTAG_chem__ForceField_O = ADJUST_STAMP(411), // Stamp(102)  wtag(3)
STAMPWTAG_chem__AtomReferenceBase_O = ADJUST_STAMP(415), // Stamp(103)  wtag(3)
STAMPWTAG_chem__AtomReference_O = ADJUST_STAMP(419), // Stamp(104)  wtag(3)
STAMPWTAG_chem__ScoringFunction_O = ADJUST_STAMP(423), // Stamp(105)  wtag(3)
STAMPWTAG_chem__EnergyFunction_O = ADJUST_STAMP(427), // Stamp(106)  wtag(3)
STAMPWTAG_chem__SketchFunction_O = ADJUST_STAMP(431), // Stamp(107)  wtag(3)
STAMPWTAG_chem__RigidBodyEnergyFunction_O = ADJUST_STAMP(435), // Stamp(108)  wtag(3)
STAMPWTAG_chem__WildElementDict_O = ADJUST_STAMP(439), // Stamp(109)  wtag(3)
STAMPWTAG_asttooling__QualType_O = ADJUST_STAMP(443), // Stamp(110)  wtag(3)
STAMPWTAG_llvmo__DITypeRefArray_O = ADJUST_STAMP(447), // Stamp(111)  wtag(3)
STAMPWTAG_geom__OVector3_O = ADJUST_STAMP(451), // Stamp(112)  wtag(3)
STAMPWTAG_geom__OVector2_O = ADJUST_STAMP(455), // Stamp(113)  wtag(3)
STAMPWTAG_chem__Structure_Old_ListEntry_O = ADJUST_STAMP(459), // Stamp(114)  wtag(3)
STAMPWTAG_chem__FFTypeRule_O = ADJUST_STAMP(463), // Stamp(115)  wtag(3)
STAMPWTAG_adapt__QDomNode_O = ADJUST_STAMP(467), // Stamp(116)  wtag(3)
STAMPWTAG_mp__SharedMutex_O = ADJUST_STAMP(471), // Stamp(117)  wtag(3)
STAMPWTAG_chem__ConstitutionAtom_O = ADJUST_STAMP(475), // Stamp(118)  wtag(3)
STAMPWTAG_chem__ConstitutionVirtualAtom_O = ADJUST_STAMP(479), // Stamp(119)  wtag(3)
STAMPWTAG_chem__Smirks_O = ADJUST_STAMP(483), // Stamp(120)  wtag(3)
STAMPWTAG_chem__ReadAmberParameters_O = ADJUST_STAMP(487), // Stamp(121)  wtag(3)
STAMPWTAG_chem__AGEdge_O = ADJUST_STAMP(491), // Stamp(122)  wtag(3)
STAMPWTAG_chem__Entity_O = ADJUST_STAMP(495), // Stamp(123)  wtag(3)
STAMPWTAG_chem__Stereoisomer_O = ADJUST_STAMP(499), // Stamp(124)  wtag(3)
STAMPWTAG_chem__EntityNameSetBase_O = ADJUST_STAMP(503), // Stamp(125)  wtag(3)
STAMPWTAG_chem__EntityNameSetWithCap_O = ADJUST_STAMP(507), // Stamp(126)  wtag(3)
STAMPWTAG_chem__Mate_O = ADJUST_STAMP(511), // Stamp(127)  wtag(3)
STAMPWTAG_chem__RingClosingMate_O = ADJUST_STAMP(515), // Stamp(128)  wtag(3)
STAMPWTAG_chem__EntityNameSet_O = ADJUST_STAMP(519), // Stamp(129)  wtag(3)
STAMPWTAG_chem__RepresentedEntityNameSet_O = ADJUST_STAMP(523), // Stamp(130)  wtag(3)
STAMPWTAG_chem__MonomerPack_O = ADJUST_STAMP(527), // Stamp(131)  wtag(3)
STAMPWTAG_chem__Constitution_O = ADJUST_STAMP(531), // Stamp(132)  wtag(3)
STAMPWTAG_chem__Monomer_O = ADJUST_STAMP(535), // Stamp(133)  wtag(3)
STAMPWTAG_chem__OctNode_O = ADJUST_STAMP(539), // Stamp(134)  wtag(3)
STAMPWTAG_chem__Structure_Old_List_O = ADJUST_STAMP(543), // Stamp(135)  wtag(3)
STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O = ADJUST_STAMP(547), // Stamp(136)  wtag(3)
STAMPWTAG_chem__ReportBase_O = ADJUST_STAMP(551), // Stamp(137)  wtag(3)
STAMPWTAG_chem__StepReport_O = ADJUST_STAMP(555), // Stamp(138)  wtag(3)
STAMPWTAG_chem__MessageReport_O = ADJUST_STAMP(559), // Stamp(139)  wtag(3)
STAMPWTAG_chem__ForceMatchReport_O = ADJUST_STAMP(563), // Stamp(140)  wtag(3)
STAMPWTAG_chem__ChemDraw_O = ADJUST_STAMP(567), // Stamp(141)  wtag(3)
STAMPWTAG_chem__ZMatrixInternal_O = ADJUST_STAMP(571), // Stamp(142)  wtag(3)
STAMPWTAG_chem__ZMatrixBondInternal_O = ADJUST_STAMP(575), // Stamp(143)  wtag(3)
STAMPWTAG_chem__ZMatrixDihedralInternal_O = ADJUST_STAMP(579), // Stamp(144)  wtag(3)
STAMPWTAG_chem__ZMatrixAngleInternal_O = ADJUST_STAMP(583), // Stamp(145)  wtag(3)
STAMPWTAG_chem__StereoisomerAtom_O = ADJUST_STAMP(587), // Stamp(146)  wtag(3)
STAMPWTAG_chem__StereoisomerVirtualAtom_O = ADJUST_STAMP(591), // Stamp(147)  wtag(3)
STAMPWTAG_chem__ZMatrix_O = ADJUST_STAMP(595), // Stamp(148)  wtag(3)
STAMPWTAG_chem__Isoname_O = ADJUST_STAMP(599), // Stamp(149)  wtag(3)
STAMPWTAG_chem__PathMessage_O = ADJUST_STAMP(603), // Stamp(150)  wtag(3)
STAMPWTAG_kinematics__MonomerId_O = ADJUST_STAMP(607), // Stamp(151)  wtag(3)
STAMPWTAG_kinematics__JointTemplate_O = ADJUST_STAMP(611), // Stamp(152)  wtag(3)
STAMPWTAG_kinematics__BondedJointTemplate_O = ADJUST_STAMP(615), // Stamp(153)  wtag(3)
STAMPWTAG_kinematics__DelayedBondedJointTemplate_O = ADJUST_STAMP(619), // Stamp(154)  wtag(3)
STAMPWTAG_kinematics__RootBondedJointTemplate_O = ADJUST_STAMP(623), // Stamp(155)  wtag(3)
STAMPWTAG_geom__Color_O = ADJUST_STAMP(627), // Stamp(156)  wtag(3)
STAMPWTAG_chem__ConformationCollection_O = ADJUST_STAMP(631), // Stamp(157)  wtag(3)
STAMPWTAG_chem__SuperposableConformationCollection_O = ADJUST_STAMP(635), // Stamp(158)  wtag(3)
STAMPWTAG_asttooling__PresumedLoc_O = ADJUST_STAMP(639), // Stamp(159)  wtag(3)
STAMPWTAG_chem__Coupling_O = ADJUST_STAMP(643), // Stamp(160)  wtag(3)
STAMPWTAG_chem__RingCoupling_O = ADJUST_STAMP(647), // Stamp(161)  wtag(3)
STAMPWTAG_chem__DirectionalCoupling_O = ADJUST_STAMP(651), // Stamp(162)  wtag(3)
STAMPWTAG_adapt__ObjectSet_O = ADJUST_STAMP(655), // Stamp(163)  wtag(3)
STAMPWTAG_chem__Oligomer_O = ADJUST_STAMP(659), // Stamp(164)  wtag(3)
STAMPWTAG_chem__PdbMonomerConnectivity_O = ADJUST_STAMP(663), // Stamp(165)  wtag(3)
STAMPWTAG_units__Dimension_O = ADJUST_STAMP(667), // Stamp(166)  wtag(3)
STAMPWTAG_chem__ConformationExplorerEntry_O = ADJUST_STAMP(671), // Stamp(167)  wtag(3)
STAMPWTAG_mp__ConditionVariable_O = ADJUST_STAMP(675), // Stamp(168)  wtag(3)
STAMPWTAG_chem__PdbReader_O = ADJUST_STAMP(679), // Stamp(169)  wtag(3)
STAMPWTAG_chem__SpanningLoop_O = ADJUST_STAMP(683), // Stamp(170)  wtag(3)
STAMPWTAG_chem__ProperTorsion_O = ADJUST_STAMP(687), // Stamp(171)  wtag(3)
STAMPWTAG_chem__ResidueList_O = ADJUST_STAMP(691), // Stamp(172)  wtag(3)
STAMPWTAG_chem__SuperposeEngine_O = ADJUST_STAMP(695), // Stamp(173)  wtag(3)
STAMPWTAG_chem__SuperposeSelectedAtoms_O = ADJUST_STAMP(699), // Stamp(174)  wtag(3)
STAMPWTAG_chem__Command_O = ADJUST_STAMP(703), // Stamp(175)  wtag(3)
STAMPWTAG_chem__StereoConfiguration_O = ADJUST_STAMP(707), // Stamp(176)  wtag(3)
STAMPWTAG_kinematics__MonomerBaseNode_O = ADJUST_STAMP(711), // Stamp(177)  wtag(3)
STAMPWTAG_kinematics__AggregateNode_O = ADJUST_STAMP(715), // Stamp(178)  wtag(3)
STAMPWTAG_kinematics__ChainNode_O = ADJUST_STAMP(719), // Stamp(179)  wtag(3)
STAMPWTAG_kinematics__MonomerNode_O = ADJUST_STAMP(723), // Stamp(180)  wtag(3)
STAMPWTAG_kinematics__RingClosingMonomerNode_O = ADJUST_STAMP(727), // Stamp(181)  wtag(3)
STAMPWTAG_chem__FFNonbondCrossTermTable_O = ADJUST_STAMP(731), // Stamp(182)  wtag(3)
STAMPWTAG_chem__Plug_O = ADJUST_STAMP(735), // Stamp(183)  wtag(3)
STAMPWTAG_chem__JumpPlug_O = ADJUST_STAMP(739), // Stamp(184)  wtag(3)
STAMPWTAG_chem__PlugWithMates_O = ADJUST_STAMP(743), // Stamp(185)  wtag(3)
STAMPWTAG_chem__InPlug_O = ADJUST_STAMP(747), // Stamp(186)  wtag(3)
STAMPWTAG_chem__OutPlug_O = ADJUST_STAMP(751), // Stamp(187)  wtag(3)
STAMPWTAG_chem__OriginPlug_O = ADJUST_STAMP(755), // Stamp(188)  wtag(3)
STAMPWTAG_kinematics__Rotamer_O = ADJUST_STAMP(759), // Stamp(189)  wtag(3)
STAMPWTAG_chem__MonomerContext_O = ADJUST_STAMP(763), // Stamp(190)  wtag(3)
STAMPWTAG_chem__CDFragment_O = ADJUST_STAMP(767), // Stamp(191)  wtag(3)
STAMPWTAG_units__Unit_O = ADJUST_STAMP(771), // Stamp(192)  wtag(3)
STAMPWTAG_units__NamedUnit_O = ADJUST_STAMP(775), // Stamp(193)  wtag(3)
STAMPWTAG_core__NativeVector_int_O = ADJUST_STAMP(779), // Stamp(194)  wtag(3)
STAMPWTAG_llvmo__CodeBase_O = ADJUST_STAMP(783), // Stamp(195)  wtag(3)
STAMPWTAG_llvmo__Code_O = ADJUST_STAMP(787), // Stamp(196)  wtag(3)
STAMPWTAG_llvmo__Library_O = ADJUST_STAMP(791), // Stamp(197)  wtag(3)
STAMPWTAG_chem__InfoDb_O = ADJUST_STAMP(795), // Stamp(198)  wtag(3)
STAMPWTAG_chem__MinimizerLog_O = ADJUST_STAMP(799), // Stamp(199)  wtag(3)
STAMPWTAG_chem__GenericOctree_O = ADJUST_STAMP(803), // Stamp(200)  wtag(3)
STAMPWTAG_kinematics__AtomTree_O = ADJUST_STAMP(807), // Stamp(201)  wtag(3)
STAMPWTAG_units__Quantity_O = ADJUST_STAMP(811), // Stamp(202)  wtag(3)
STAMPWTAG_chem__ChemInfoMatch_O = ADJUST_STAMP(815), // Stamp(203)  wtag(3)
STAMPWTAG_chem__ZMatrixEntry_O = ADJUST_STAMP(819), // Stamp(204)  wtag(3)
STAMPWTAG_chem__SpecificContextSet_O = ADJUST_STAMP(823), // Stamp(205)  wtag(3)
STAMPWTAG_chem__Angle_O = ADJUST_STAMP(827), // Stamp(206)  wtag(3)
STAMPWTAG_chem__MacroModelFile_O = ADJUST_STAMP(831), // Stamp(207)  wtag(3)
STAMPWTAG_chem__BondList_O = ADJUST_STAMP(835), // Stamp(208)  wtag(3)
STAMPWTAG_chem__ConformationExplorer_O = ADJUST_STAMP(839), // Stamp(209)  wtag(3)
STAMPWTAG_chem__ChemInfoGraph_O = ADJUST_STAMP(843), // Stamp(210)  wtag(3)
STAMPWTAG_chem__CDText_O = ADJUST_STAMP(847), // Stamp(211)  wtag(3)
STAMPWTAG_llvmo__DINodeArray_O = ADJUST_STAMP(851), // Stamp(212)  wtag(3)
STAMPWTAG_chem__SpanningInfo_O = ADJUST_STAMP(855), // Stamp(213)  wtag(3)
STAMPWTAG_kinematics__Checkpoint_O = ADJUST_STAMP(859), // Stamp(214)  wtag(3)
STAMPWTAG_kinematics__CheckpointJoint_O = ADJUST_STAMP(863), // Stamp(215)  wtag(3)
STAMPWTAG_kinematics__CheckpointOutPlugJoint_O = ADJUST_STAMP(867), // Stamp(216)  wtag(3)
STAMPWTAG_chem__ConformationExplorerMatch_O = ADJUST_STAMP(871), // Stamp(217)  wtag(3)
STAMPWTAG_chem__StereoisomerAtoms_O = ADJUST_STAMP(875), // Stamp(218)  wtag(3)
STAMPWTAG_chem__Rotamer_O = ADJUST_STAMP(879), // Stamp(219)  wtag(3)
STAMPWTAG_chem__ImproperTorsion_O = ADJUST_STAMP(883), // Stamp(220)  wtag(3)
STAMPWTAG_adapt__SymbolList_O = ADJUST_STAMP(887), // Stamp(221)  wtag(3)
STAMPWTAG_chem__FrameRecognizer_O = ADJUST_STAMP(891), // Stamp(222)  wtag(3)
STAMPWTAG_chem__ConformationExplorerEntryStage_O = ADJUST_STAMP(895), // Stamp(223)  wtag(3)
STAMPWTAG_chem__Trajectory_O = ADJUST_STAMP(899), // Stamp(224)  wtag(3)
STAMPWTAG_chem__CalculatePosition_O = ADJUST_STAMP(903), // Stamp(225)  wtag(3)
STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O = ADJUST_STAMP(907), // Stamp(226)  wtag(3)
STAMPWTAG_chem__CalculatePositionUsingInternals_O = ADJUST_STAMP(911), // Stamp(227)  wtag(3)
STAMPWTAG_chem__CalculatePositionAlongBond_O = ADJUST_STAMP(915), // Stamp(228)  wtag(3)
STAMPWTAG_geom__OMatrix_O = ADJUST_STAMP(919), // Stamp(229)  wtag(3)
STAMPWTAG_chem__ConformationCollectionEntry_O = ADJUST_STAMP(923), // Stamp(230)  wtag(3)
STAMPWTAG_chem__ComplexRestraint_O = ADJUST_STAMP(927), // Stamp(231)  wtag(3)
STAMPWTAG_chem__RestrainedExoCyclicAtom_O = ADJUST_STAMP(931), // Stamp(232)  wtag(3)
STAMPWTAG_chem__RestrainedPiBond_O = ADJUST_STAMP(935), // Stamp(233)  wtag(3)
STAMPWTAG_mp__Mutex_O = ADJUST_STAMP(939), // Stamp(234)  wtag(3)
STAMPWTAG_mp__RecursiveMutex_O = ADJUST_STAMP(943), // Stamp(235)  wtag(3)
STAMPWTAG_chem__CombinedForceField_O = ADJUST_STAMP(947), // Stamp(236)  wtag(3)
STAMPWTAG_chem__CDBond_O = ADJUST_STAMP(951), // Stamp(237)  wtag(3)
STAMPWTAG_chem__ConstitutionBond_O = ADJUST_STAMP(955), // Stamp(238)  wtag(3)
STAMPWTAG_kinematics__ChiDihedral_O = ADJUST_STAMP(959), // Stamp(239)  wtag(3)
STAMPWTAG_chem__ConstitutionAtoms_O = ADJUST_STAMP(963), // Stamp(240)  wtag(3)
STAMPWTAG_kinematics__Conformation_O = ADJUST_STAMP(967), // Stamp(241)  wtag(3)
STAMPWTAG_chem__MoleculeGraph_O = ADJUST_STAMP(971), // Stamp(242)  wtag(3)
STAMPWTAG_chem__StructureComparer_O = ADJUST_STAMP(975), // Stamp(243)  wtag(3)
STAMPWTAG_chem__BoundingBox_O = ADJUST_STAMP(979), // Stamp(244)  wtag(3)
STAMPWTAG_chem__ChemInfoNode_O = ADJUST_STAMP(983), // Stamp(245)  wtag(3)
STAMPWTAG_chem__BondMatcher_O = ADJUST_STAMP(987), // Stamp(246)  wtag(3)
STAMPWTAG_chem__BondTest_O = ADJUST_STAMP(991), // Stamp(247)  wtag(3)
STAMPWTAG_chem__BondLogical_O = ADJUST_STAMP(995), // Stamp(248)  wtag(3)
STAMPWTAG_chem__BondMatchNode_O = ADJUST_STAMP(999), // Stamp(249)  wtag(3)
STAMPWTAG_chem__AtomOrBondMatchNode_O = ADJUST_STAMP(1003), // Stamp(250)  wtag(3)
STAMPWTAG_chem__Root_O = ADJUST_STAMP(1007), // Stamp(251)  wtag(3)
STAMPWTAG_chem__SmartsRoot_O = ADJUST_STAMP(1011), // Stamp(252)  wtag(3)
STAMPWTAG_chem__AntechamberRoot_O = ADJUST_STAMP(1015), // Stamp(253)  wtag(3)
STAMPWTAG_chem__ResidueTest_O = ADJUST_STAMP(1019), // Stamp(254)  wtag(3)
STAMPWTAG_chem__AntechamberFocusAtomMatch_O = ADJUST_STAMP(1023), // Stamp(255)  wtag(3)
STAMPWTAG_chem__Logical_O = ADJUST_STAMP(1027), // Stamp(256)  wtag(3)
STAMPWTAG_chem__AtomTest_O = ADJUST_STAMP(1031), // Stamp(257)  wtag(3)
STAMPWTAG_chem__BondToAtomTest_O = ADJUST_STAMP(1035), // Stamp(258)  wtag(3)
STAMPWTAG_chem__AntechamberBondToAtomTest_O = ADJUST_STAMP(1039), // Stamp(259)  wtag(3)
STAMPWTAG_chem__BondListMatchNode_O = ADJUST_STAMP(1043), // Stamp(260)  wtag(3)
STAMPWTAG_chem__Chain_O = ADJUST_STAMP(1047), // Stamp(261)  wtag(3)
STAMPWTAG_chem__Branch_O = ADJUST_STAMP(1051), // Stamp(262)  wtag(3)
STAMPWTAG_chem__RootMatchNode_O = ADJUST_STAMP(1055), // Stamp(263)  wtag(3)
STAMPWTAG_chem__AfterMatchBondToAtomTest_O = ADJUST_STAMP(1059), // Stamp(264)  wtag(3)
STAMPWTAG_chem__ElementsInfo_O = ADJUST_STAMP(1063), // Stamp(265)  wtag(3)
STAMPWTAG_chem__Dimacs_O = ADJUST_STAMP(1067), // Stamp(266)  wtag(3)
STAMPWTAG_chem__SpecificContext_O = ADJUST_STAMP(1071), // Stamp(267)  wtag(3)
STAMPWTAG_chem__Minimizer_O = ADJUST_STAMP(1075), // Stamp(268)  wtag(3)
STAMPWTAG_adapt__SymbolSet_O = ADJUST_STAMP(1079), // Stamp(269)  wtag(3)
STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O = ADJUST_STAMP(1083), // Stamp(270)  wtag(3)
STAMPWTAG_chem__Alias_O = ADJUST_STAMP(1087), // Stamp(271)  wtag(3)
STAMPWTAG_chem__AtomIdToAtomMap_O = ADJUST_STAMP(1091), // Stamp(272)  wtag(3)
STAMPWTAG_mp__Process_O = ADJUST_STAMP(1095), // Stamp(273)  wtag(3)
STAMPWTAG_core__SingleDispatchMethod_O = ADJUST_STAMP(1099), // Stamp(274)  wtag(3)
STAMPWTAG_core__Iterator_O = ADJUST_STAMP(1103), // Stamp(275)  wtag(3)
STAMPWTAG_core__DirectoryIterator_O = ADJUST_STAMP(1107), // Stamp(276)  wtag(3)
STAMPWTAG_chem__IterateRestraints_O = ADJUST_STAMP(1111), // Stamp(277)  wtag(3)
STAMPWTAG_adapt__IterateCons_O = ADJUST_STAMP(1115), // Stamp(278)  wtag(3)
STAMPWTAG_core__RecursiveDirectoryIterator_O = ADJUST_STAMP(1119), // Stamp(279)  wtag(3)
STAMPWTAG_chem__IterateMatter_O = ADJUST_STAMP(1123), // Stamp(280)  wtag(3)
STAMPWTAG_chem__IterateResidues_O = ADJUST_STAMP(1127), // Stamp(281)  wtag(3)
STAMPWTAG_chem__IterateBonds_O = ADJUST_STAMP(1131), // Stamp(282)  wtag(3)
STAMPWTAG_chem__IterateAtoms_O = ADJUST_STAMP(1135), // Stamp(283)  wtag(3)
STAMPWTAG_core__Symbol_O = ADJUST_STAMP(1139), // Stamp(284)  wtag(3)
STAMPWTAG_core__Null_O = ADJUST_STAMP(1143), // Stamp(285)  wtag(3)
STAMPWTAG_core__SharpEqualWrapper_O = ADJUST_STAMP(1147), // Stamp(286)  wtag(3)
STAMPWTAG_llvmo__ClaspJIT_O = ADJUST_STAMP(1151), // Stamp(287)  wtag(3)
STAMPWTAG_core__Exposer_O = ADJUST_STAMP(1155), // Stamp(288)  wtag(3)
STAMPWTAG_units__UnitsExposer_O = ADJUST_STAMP(1159), // Stamp(289)  wtag(3)
STAMPWTAG_core__CoreExposer_O = ADJUST_STAMP(1163), // Stamp(290)  wtag(3)
STAMPWTAG_geom__GeomExposer_O = ADJUST_STAMP(1167), // Stamp(291)  wtag(3)
STAMPWTAG_adapt__AdaptExposer_O = ADJUST_STAMP(1171), // Stamp(292)  wtag(3)
STAMPWTAG_kinematics__KinematicsExposer_O = ADJUST_STAMP(1175), // Stamp(293)  wtag(3)
STAMPWTAG_chem__ChemExposer_O = ADJUST_STAMP(1179), // Stamp(294)  wtag(3)
STAMPWTAG_asttooling__AsttoolingExposer_O = ADJUST_STAMP(1183), // Stamp(295)  wtag(3)
STAMPWTAG_core__PosixTimeDuration_O = ADJUST_STAMP(1187), // Stamp(296)  wtag(3)
STAMPWTAG_clasp_ffi__ForeignTypeSpec_O = ADJUST_STAMP(1191), // Stamp(297)  wtag(3)
STAMPWTAG_core__SmallMap_O = ADJUST_STAMP(1195), // Stamp(298)  wtag(3)
STAMPWTAG_core__Instance_O = ADJUST_STAMP(1197), // Stamp(299)  wtag(1)
STAMPWTAG_clbind__ClassRep_O = ADJUST_STAMP(1201), // Stamp(300)  wtag(1)
STAMPWTAG_core__DerivableCxxObject_O = ADJUST_STAMP(1204), // Stamp(301)  wtag(0)
STAMPWTAG_mpip__Mpi_O = ADJUST_STAMP(1211), // Stamp(302)  wtag(3)
STAMPWTAG_core__Sigset_O = ADJUST_STAMP(1215), // Stamp(303)  wtag(3)
STAMPWTAG_core__Environment_O = ADJUST_STAMP(1219), // Stamp(304)  wtag(3)
STAMPWTAG_core__GlueEnvironment_O = ADJUST_STAMP(1223), // Stamp(305)  wtag(3)
STAMPWTAG_core__LexicalEnvironment_O = ADJUST_STAMP(1227), // Stamp(306)  wtag(3)
STAMPWTAG_core__CompileTimeEnvironment_O = ADJUST_STAMP(1231), // Stamp(307)  wtag(3)
STAMPWTAG_core__CatchEnvironment_O = ADJUST_STAMP(1235), // Stamp(308)  wtag(3)
STAMPWTAG_core__SymbolMacroletEnvironment_O = ADJUST_STAMP(1239), // Stamp(309)  wtag(3)
STAMPWTAG_core__FunctionContainerEnvironment_O = ADJUST_STAMP(1243), // Stamp(310)  wtag(3)
STAMPWTAG_core__UnwindProtectEnvironment_O = ADJUST_STAMP(1247), // Stamp(311)  wtag(3)
STAMPWTAG_core__MacroletEnvironment_O = ADJUST_STAMP(1251), // Stamp(312)  wtag(3)
STAMPWTAG_core__RuntimeVisibleEnvironment_O = ADJUST_STAMP(1255), // Stamp(313)  wtag(3)
STAMPWTAG_core__TagbodyEnvironment_O = ADJUST_STAMP(1259), // Stamp(314)  wtag(3)
STAMPWTAG_core__BlockEnvironment_O = ADJUST_STAMP(1263), // Stamp(315)  wtag(3)
STAMPWTAG_core__FunctionValueEnvironment_O = ADJUST_STAMP(1267), // Stamp(316)  wtag(3)
STAMPWTAG_core__ValueEnvironment_O = ADJUST_STAMP(1271), // Stamp(317)  wtag(3)
STAMPWTAG_core__ActivationFrame_O = ADJUST_STAMP(1275), // Stamp(318)  wtag(3)
STAMPWTAG_core__ValueFrame_O = ADJUST_STAMP(1279), // Stamp(319)  wtag(3)
STAMPWTAG_core__FunctionFrame_O = ADJUST_STAMP(1283), // Stamp(320)  wtag(3)
STAMPWTAG_core__RandomState_O = ADJUST_STAMP(1287), // Stamp(321)  wtag(3)
STAMPWTAG_core__EntryPointBase_O = ADJUST_STAMP(1291), // Stamp(322)  wtag(3)
STAMPWTAG_core__GlobalEntryPointGenerator_O = ADJUST_STAMP(1295), // Stamp(323)  wtag(3)
STAMPWTAG_core__LocalEntryPointGenerator_O = ADJUST_STAMP(1299), // Stamp(324)  wtag(3)
STAMPWTAG_core__CodeEntryPoint_O = ADJUST_STAMP(1303), // Stamp(325)  wtag(3)
STAMPWTAG_core__LocalEntryPoint_O = ADJUST_STAMP(1307), // Stamp(326)  wtag(3)
STAMPWTAG_core__GlobalEntryPoint_O = ADJUST_STAMP(1311), // Stamp(327)  wtag(3)
STAMPWTAG_core__HashTableBase_O = ADJUST_STAMP(1315), // Stamp(328)  wtag(3)
STAMPWTAG_core__HashTable_O = ADJUST_STAMP(1319), // Stamp(329)  wtag(3)
STAMPWTAG_core__HashTableEqualp_O = ADJUST_STAMP(1323), // Stamp(330)  wtag(3)
STAMPWTAG_core__HashTableEq_O = ADJUST_STAMP(1327), // Stamp(331)  wtag(3)
STAMPWTAG_core__HashTableEqual_O = ADJUST_STAMP(1331), // Stamp(332)  wtag(3)
STAMPWTAG_core__HashTableCustom_O = ADJUST_STAMP(1335), // Stamp(333)  wtag(3)
STAMPWTAG_core__HashTableEql_O = ADJUST_STAMP(1339), // Stamp(334)  wtag(3)
STAMPWTAG_core__WeakKeyHashTable_O = ADJUST_STAMP(1343), // Stamp(335)  wtag(3)
STAMPWTAG_core__FunctionDescription_O = ADJUST_STAMP(1347), // Stamp(336)  wtag(3)
STAMPWTAG_llvmo__InsertPoint_O = ADJUST_STAMP(1351), // Stamp(337)  wtag(3)
STAMPWTAG_core__Number_O = ADJUST_STAMP(1355), // Stamp(338)  wtag(3)
STAMPWTAG_core__Real_O = ADJUST_STAMP(1359), // Stamp(339)  wtag(3)
STAMPWTAG_core__Rational_O = ADJUST_STAMP(1363), // Stamp(340)  wtag(3)
STAMPWTAG_core__Ratio_O = ADJUST_STAMP(1367), // Stamp(341)  wtag(3)
STAMPWTAG_core__Integer_O = ADJUST_STAMP(1371), // Stamp(342)  wtag(3)
STAMPWTAG_core__Bignum_O = ADJUST_STAMP(1375), // Stamp(343)  wtag(3)
STAMPWTAG_core__Fixnum_dummy_O = ADJUST_STAMP(1379), // Stamp(344)  wtag(3)
STAMPWTAG_core__Float_O = ADJUST_STAMP(1383), // Stamp(345)  wtag(3)
STAMPWTAG_core__DoubleFloat_O = ADJUST_STAMP(1387), // Stamp(346)  wtag(3)
STAMPWTAG_core__SingleFloat_dummy_O = ADJUST_STAMP(1391), // Stamp(347)  wtag(3)
STAMPWTAG_core__LongFloat_O = ADJUST_STAMP(1395), // Stamp(348)  wtag(3)
STAMPWTAG_core__ShortFloat_O = ADJUST_STAMP(1399), // Stamp(349)  wtag(3)
STAMPWTAG_core__Complex_O = ADJUST_STAMP(1403), // Stamp(350)  wtag(3)
STAMPWTAG_core__SourcePosInfo_O = ADJUST_STAMP(1407), // Stamp(351)  wtag(3)
STAMPWTAG_core__Record_O = ADJUST_STAMP(1411), // Stamp(352)  wtag(3)
STAMPWTAG_core__Frame_O = ADJUST_STAMP(1415), // Stamp(353)  wtag(3)
STAMPWTAG_clbind__ClassRegistry_O = ADJUST_STAMP(1419), // Stamp(354)  wtag(3)
STAMPWTAG_core__ClassHolder_O = ADJUST_STAMP(1423), // Stamp(355)  wtag(3)
STAMPWTAG_core__WrappedPointer_O = ADJUST_STAMP(1426), // Stamp(356)  wtag(2)
STAMPWTAG_core__SymbolToEnumConverter_O = ADJUST_STAMP(1431), // Stamp(357)  wtag(3)
STAMPWTAG_llvmo__Attribute_O = ADJUST_STAMP(1435), // Stamp(358)  wtag(3)
STAMPWTAG_core__ImmobileObject_O = ADJUST_STAMP(1439), // Stamp(359)  wtag(3)
STAMPWTAG_core__Function_O = ADJUST_STAMP(1443), // Stamp(360)  wtag(3)
STAMPWTAG_core__FuncallableInstance_O = ADJUST_STAMP(1445), // Stamp(361)  wtag(1)
STAMPWTAG_core__Creator_O = ADJUST_STAMP(1451), // Stamp(362)  wtag(3)
STAMPWTAG_core__FuncallableInstanceCreator_O = ADJUST_STAMP(1455), // Stamp(363)  wtag(3)
STAMPWTAG_clbind__ConstructorCreator_O = ADJUST_STAMP(1459), // Stamp(364)  wtag(3)
STAMPWTAG_clbind__DummyCreator_O = ADJUST_STAMP(1463), // Stamp(365)  wtag(3)
STAMPWTAG_core__InstanceCreator_O = ADJUST_STAMP(1467), // Stamp(366)  wtag(3)
STAMPWTAG_core__ClassRepCreator_O = ADJUST_STAMP(1471), // Stamp(367)  wtag(3)
STAMPWTAG_core__DerivableCxxClassCreator_O = ADJUST_STAMP(1475), // Stamp(368)  wtag(3)
STAMPWTAG_core__StandardClassCreator_O = ADJUST_STAMP(1479), // Stamp(369)  wtag(3)
STAMPWTAG_core__SpecialForm_O = ADJUST_STAMP(1483), // Stamp(370)  wtag(3)
STAMPWTAG_core__Closure_O = ADJUST_STAMP(1487), // Stamp(371)  wtag(3)
STAMPWTAG_core__BuiltinClosure_O = ADJUST_STAMP(1491), // Stamp(372)  wtag(3)
STAMPWTAG_core__TranslationFunctor_O = ADJUST_STAMP(1495), // Stamp(373)  wtag(3)
STAMPWTAG_core__ClosureWithSlots_O = ADJUST_STAMP(1499), // Stamp(374)  wtag(3)
STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O = ADJUST_STAMP(1503), // Stamp(375)  wtag(3)
STAMPWTAG_core__WeakPointer_O = ADJUST_STAMP(1507), // Stamp(376)  wtag(3)
STAMPWTAG_llvmo__DebugLoc_O = ADJUST_STAMP(1511), // Stamp(377)  wtag(3)
STAMPWTAG_core__Array_O = ADJUST_STAMP(1515), // Stamp(378)  wtag(3)
STAMPWTAG_core__MDArray_O = ADJUST_STAMP(1519), // Stamp(379)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_ = ADJUST_STAMP(1523), // Stamp(380)  wtag(3)
STAMPWTAG_core__MDArray_int16_t_O = ADJUST_STAMP(1527), // Stamp(381)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_ = ADJUST_STAMP(1531), // Stamp(382)  wtag(3)
STAMPWTAG_core__MDArray_int8_t_O = ADJUST_STAMP(1535), // Stamp(383)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_ = ADJUST_STAMP(1539), // Stamp(384)  wtag(3)
STAMPWTAG_core__MDArray_int32_t_O = ADJUST_STAMP(1543), // Stamp(385)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_ = ADJUST_STAMP(1547), // Stamp(386)  wtag(3)
STAMPWTAG_core__MDArray_byte4_t_O = ADJUST_STAMP(1551), // Stamp(387)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_ = ADJUST_STAMP(1555), // Stamp(388)  wtag(3)
STAMPWTAG_core__MDArray_float_O = ADJUST_STAMP(1559), // Stamp(389)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_ = ADJUST_STAMP(1563), // Stamp(390)  wtag(3)
STAMPWTAG_core__MDArray_size_t_O = ADJUST_STAMP(1567), // Stamp(391)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_ = ADJUST_STAMP(1571), // Stamp(392)  wtag(3)
STAMPWTAG_core__MDArray_byte8_t_O = ADJUST_STAMP(1575), // Stamp(393)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_ = ADJUST_STAMP(1579), // Stamp(394)  wtag(3)
STAMPWTAG_core__MDArray_int2_t_O = ADJUST_STAMP(1583), // Stamp(395)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_ = ADJUST_STAMP(1587), // Stamp(396)  wtag(3)
STAMPWTAG_core__MDArray_fixnum_O = ADJUST_STAMP(1591), // Stamp(397)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_ = ADJUST_STAMP(1595), // Stamp(398)  wtag(3)
STAMPWTAG_core__MDArrayBaseChar_O = ADJUST_STAMP(1599), // Stamp(399)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_ = ADJUST_STAMP(1603), // Stamp(400)  wtag(3)
STAMPWTAG_core__MDArray_byte64_t_O = ADJUST_STAMP(1607), // Stamp(401)  wtag(3)
STAMPWTAG_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_ = ADJUST_STAMP(1611), // Stamp(402)  wtag(3)
STAMPWTAG_geom__MDArrayCoordinate_O = ADJUST_STAMP(1615), // Stamp(403)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_ = ADJUST_STAMP(1619), // Stamp(404)  wtag(3)
STAMPWTAG_core__MDArrayT_O = ADJUST_STAMP(1623), // Stamp(405)  wtag(3)
STAMPWTAG_core__SimpleMDArray_O = ADJUST_STAMP(1627), // Stamp(406)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1631), // Stamp(407)  wtag(3)
STAMPWTAG_core__SimpleMDArray_int8_t_O = ADJUST_STAMP(1635), // Stamp(408)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1639), // Stamp(409)  wtag(3)
STAMPWTAG_core__SimpleMDArray_byte32_t_O = ADJUST_STAMP(1643), // Stamp(410)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1647), // Stamp(411)  wtag(3)
STAMPWTAG_core__SimpleMDArray_int2_t_O = ADJUST_STAMP(1651), // Stamp(412)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1655), // Stamp(413)  wtag(3)
STAMPWTAG_core__SimpleMDArray_byte4_t_O = ADJUST_STAMP(1659), // Stamp(414)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1663), // Stamp(415)  wtag(3)
STAMPWTAG_core__SimpleMDArray_int32_t_O = ADJUST_STAMP(1667), // Stamp(416)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1671), // Stamp(417)  wtag(3)
STAMPWTAG_core__SimpleMDArray_float_O = ADJUST_STAMP(1675), // Stamp(418)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1679), // Stamp(419)  wtag(3)
STAMPWTAG_core__SimpleMDArray_int16_t_O = ADJUST_STAMP(1683), // Stamp(420)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1687), // Stamp(421)  wtag(3)
STAMPWTAG_core__SimpleMDArray_size_t_O = ADJUST_STAMP(1691), // Stamp(422)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1695), // Stamp(423)  wtag(3)
STAMPWTAG_core__SimpleMDArrayCharacter_O = ADJUST_STAMP(1699), // Stamp(424)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1703), // Stamp(425)  wtag(3)
STAMPWTAG_core__SimpleMDArray_byte2_t_O = ADJUST_STAMP(1707), // Stamp(426)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1711), // Stamp(427)  wtag(3)
STAMPWTAG_core__SimpleMDArray_byte16_t_O = ADJUST_STAMP(1715), // Stamp(428)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1719), // Stamp(429)  wtag(3)
STAMPWTAG_core__SimpleMDArrayBaseChar_O = ADJUST_STAMP(1723), // Stamp(430)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1727), // Stamp(431)  wtag(3)
STAMPWTAG_core__SimpleMDArray_byte64_t_O = ADJUST_STAMP(1731), // Stamp(432)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1735), // Stamp(433)  wtag(3)
STAMPWTAG_core__SimpleMDArray_double_O = ADJUST_STAMP(1739), // Stamp(434)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1743), // Stamp(435)  wtag(3)
STAMPWTAG_core__SimpleMDArrayT_O = ADJUST_STAMP(1747), // Stamp(436)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1751), // Stamp(437)  wtag(3)
STAMPWTAG_core__SimpleMDArray_int4_t_O = ADJUST_STAMP(1755), // Stamp(438)  wtag(3)
STAMPWTAG_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1759), // Stamp(439)  wtag(3)
STAMPWTAG_geom__SimpleMDArrayCoordinate_O = ADJUST_STAMP(1763), // Stamp(440)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1767), // Stamp(441)  wtag(3)
STAMPWTAG_core__SimpleMDArray_fixnum_O = ADJUST_STAMP(1771), // Stamp(442)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1775), // Stamp(443)  wtag(3)
STAMPWTAG_core__SimpleMDArrayBit_O = ADJUST_STAMP(1779), // Stamp(444)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1783), // Stamp(445)  wtag(3)
STAMPWTAG_core__SimpleMDArray_byte8_t_O = ADJUST_STAMP(1787), // Stamp(446)  wtag(3)
STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_ = ADJUST_STAMP(1791), // Stamp(447)  wtag(3)
STAMPWTAG_core__SimpleMDArray_int64_t_O = ADJUST_STAMP(1795), // Stamp(448)  wtag(3)
STAMPWTAG_core__ComplexVector_O = ADJUST_STAMP(1799), // Stamp(449)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_ = ADJUST_STAMP(1803), // Stamp(450)  wtag(3)
STAMPWTAG_core__ComplexVector_double_O = ADJUST_STAMP(1807), // Stamp(451)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1811), // Stamp(452)  wtag(3)
STAMPWTAG_core__ComplexVector_int8_t_O = ADJUST_STAMP(1815), // Stamp(453)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_ = ADJUST_STAMP(1819), // Stamp(454)  wtag(3)
STAMPWTAG_core__ComplexVector_T_O = ADJUST_STAMP(1823), // Stamp(455)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1827), // Stamp(456)  wtag(3)
STAMPWTAG_core__ComplexVector_int32_t_O = ADJUST_STAMP(1831), // Stamp(457)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1835), // Stamp(458)  wtag(3)
STAMPWTAG_core__ComplexVector_byte16_t_O = ADJUST_STAMP(1839), // Stamp(459)  wtag(3)
STAMPWTAG_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_ = ADJUST_STAMP(1843), // Stamp(460)  wtag(3)
STAMPWTAG_geom__ComplexVectorCoordinate_O = ADJUST_STAMP(1847), // Stamp(461)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1851), // Stamp(462)  wtag(3)
STAMPWTAG_core__ComplexVector_byte4_t_O = ADJUST_STAMP(1855), // Stamp(463)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1859), // Stamp(464)  wtag(3)
STAMPWTAG_core__ComplexVector_byte64_t_O = ADJUST_STAMP(1863), // Stamp(465)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1867), // Stamp(466)  wtag(3)
STAMPWTAG_core__ComplexVector_int2_t_O = ADJUST_STAMP(1871), // Stamp(467)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_ = ADJUST_STAMP(1875), // Stamp(468)  wtag(3)
STAMPWTAG_core__ComplexVector_float_O = ADJUST_STAMP(1879), // Stamp(469)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1883), // Stamp(470)  wtag(3)
STAMPWTAG_core__ComplexVector_int16_t_O = ADJUST_STAMP(1887), // Stamp(471)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1891), // Stamp(472)  wtag(3)
STAMPWTAG_core__ComplexVector_int4_t_O = ADJUST_STAMP(1895), // Stamp(473)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1899), // Stamp(474)  wtag(3)
STAMPWTAG_core__ComplexVector_size_t_O = ADJUST_STAMP(1903), // Stamp(475)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1907), // Stamp(476)  wtag(3)
STAMPWTAG_core__ComplexVector_byte2_t_O = ADJUST_STAMP(1911), // Stamp(477)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1915), // Stamp(478)  wtag(3)
STAMPWTAG_core__ComplexVector_byte8_t_O = ADJUST_STAMP(1919), // Stamp(479)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1923), // Stamp(480)  wtag(3)
STAMPWTAG_core__ComplexVector_byte32_t_O = ADJUST_STAMP(1927), // Stamp(481)  wtag(3)
STAMPWTAG_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_ = ADJUST_STAMP(1931), // Stamp(482)  wtag(3)
STAMPWTAG_core__BitVectorNs_O = ADJUST_STAMP(1935), // Stamp(483)  wtag(3)
STAMPWTAG_core__StrNs_O = ADJUST_STAMP(1939), // Stamp(484)  wtag(3)
STAMPWTAG_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_ = ADJUST_STAMP(1943), // Stamp(485)  wtag(3)
STAMPWTAG_core__Str8Ns_O = ADJUST_STAMP(1947), // Stamp(486)  wtag(3)
STAMPWTAG_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_ = ADJUST_STAMP(1951), // Stamp(487)  wtag(3)
STAMPWTAG_core__StrWNs_O = ADJUST_STAMP(1955), // Stamp(488)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_ = ADJUST_STAMP(1959), // Stamp(489)  wtag(3)
STAMPWTAG_core__ComplexVector_fixnum_O = ADJUST_STAMP(1963), // Stamp(490)  wtag(3)
STAMPWTAG_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_ = ADJUST_STAMP(1967), // Stamp(491)  wtag(3)
STAMPWTAG_core__ComplexVector_int64_t_O = ADJUST_STAMP(1971), // Stamp(492)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_ = ADJUST_STAMP(1975), // Stamp(493)  wtag(3)
STAMPWTAG_core__MDArray_int64_t_O = ADJUST_STAMP(1979), // Stamp(494)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_ = ADJUST_STAMP(1983), // Stamp(495)  wtag(3)
STAMPWTAG_core__MDArray_byte32_t_O = ADJUST_STAMP(1987), // Stamp(496)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_ = ADJUST_STAMP(1991), // Stamp(497)  wtag(3)
STAMPWTAG_core__MDArray_byte2_t_O = ADJUST_STAMP(1995), // Stamp(498)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_ = ADJUST_STAMP(1999), // Stamp(499)  wtag(3)
STAMPWTAG_core__MDArrayCharacter_O = ADJUST_STAMP(2003), // Stamp(500)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_ = ADJUST_STAMP(2007), // Stamp(501)  wtag(3)
STAMPWTAG_core__MDArrayBit_O = ADJUST_STAMP(2011), // Stamp(502)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_ = ADJUST_STAMP(2015), // Stamp(503)  wtag(3)
STAMPWTAG_core__MDArray_byte16_t_O = ADJUST_STAMP(2019), // Stamp(504)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_ = ADJUST_STAMP(2023), // Stamp(505)  wtag(3)
STAMPWTAG_core__MDArray_int4_t_O = ADJUST_STAMP(2027), // Stamp(506)  wtag(3)
STAMPWTAG_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_ = ADJUST_STAMP(2031), // Stamp(507)  wtag(3)
STAMPWTAG_core__MDArray_double_O = ADJUST_STAMP(2035), // Stamp(508)  wtag(3)
STAMPWTAG_core__AbstractSimpleVector_O = ADJUST_STAMP(2039), // Stamp(509)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2043), // Stamp(510)  wtag(3)
STAMPWTAG_core__SimpleVector_byte32_t_O = ADJUST_STAMP(2047), // Stamp(511)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2051), // Stamp(512)  wtag(3)
STAMPWTAG_core__SimpleVector_size_t_O = ADJUST_STAMP(2055), // Stamp(513)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2059), // Stamp(514)  wtag(3)
STAMPWTAG_core__SimpleVector_double_O = ADJUST_STAMP(2063), // Stamp(515)  wtag(3)
STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_ = ADJUST_STAMP(2067), // Stamp(516)  wtag(3)
STAMPWTAG_core__SimpleVector_int2_t_O = ADJUST_STAMP(2071), // Stamp(517)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2075), // Stamp(518)  wtag(3)
STAMPWTAG_core__SimpleVector_int64_t_O = ADJUST_STAMP(2079), // Stamp(519)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2083), // Stamp(520)  wtag(3)
STAMPWTAG_core__SimpleVector_int8_t_O = ADJUST_STAMP(2087), // Stamp(521)  wtag(3)
STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_ = ADJUST_STAMP(2091), // Stamp(522)  wtag(3)
STAMPWTAG_core__SimpleVector_byte4_t_O = ADJUST_STAMP(2095), // Stamp(523)  wtag(3)
STAMPWTAG_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2099), // Stamp(524)  wtag(3)
STAMPWTAG_geom__SimpleVectorCoordinate_O = ADJUST_STAMP(2103), // Stamp(525)  wtag(3)
STAMPWTAG_core__SimpleString_O = ADJUST_STAMP(2107), // Stamp(526)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_ = ADJUST_STAMP(2111), // Stamp(527)  wtag(3)
STAMPWTAG_core__SimpleBaseString_O = ADJUST_STAMP(2115), // Stamp(528)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleCharacterString_O_unsigned_int_core__SimpleString_O_ = ADJUST_STAMP(2119), // Stamp(529)  wtag(3)
STAMPWTAG_core__SimpleCharacterString_O = ADJUST_STAMP(2123), // Stamp(530)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2127), // Stamp(531)  wtag(3)
STAMPWTAG_core__SimpleVector_int16_t_O = ADJUST_STAMP(2131), // Stamp(532)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2135), // Stamp(533)  wtag(3)
STAMPWTAG_core__SimpleVector_byte16_t_O = ADJUST_STAMP(2139), // Stamp(534)  wtag(3)
STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_ = ADJUST_STAMP(2143), // Stamp(535)  wtag(3)
STAMPWTAG_core__SimpleBitVector_O = ADJUST_STAMP(2147), // Stamp(536)  wtag(3)
STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_ = ADJUST_STAMP(2151), // Stamp(537)  wtag(3)
STAMPWTAG_core__SimpleVector_int4_t_O = ADJUST_STAMP(2155), // Stamp(538)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2159), // Stamp(539)  wtag(3)
STAMPWTAG_core__SimpleVector_byte64_t_O = ADJUST_STAMP(2163), // Stamp(540)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2167), // Stamp(541)  wtag(3)
STAMPWTAG_core__SimpleVector_fixnum_O = ADJUST_STAMP(2171), // Stamp(542)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2175), // Stamp(543)  wtag(3)
STAMPWTAG_core__SimpleVector_float_O = ADJUST_STAMP(2179), // Stamp(544)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_ = ADJUST_STAMP(2183), // Stamp(545)  wtag(3)
STAMPWTAG_core__SimpleVector_O = ADJUST_STAMP(2187), // Stamp(546)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2191), // Stamp(547)  wtag(3)
STAMPWTAG_core__SimpleVector_byte8_t_O = ADJUST_STAMP(2195), // Stamp(548)  wtag(3)
STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_ = ADJUST_STAMP(2199), // Stamp(549)  wtag(3)
STAMPWTAG_core__SimpleVector_byte2_t_O = ADJUST_STAMP(2203), // Stamp(550)  wtag(3)
STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_ = ADJUST_STAMP(2207), // Stamp(551)  wtag(3)
STAMPWTAG_core__SimpleVector_int32_t_O = ADJUST_STAMP(2211), // Stamp(552)  wtag(3)
STAMPWTAG_core__Character_dummy_O = ADJUST_STAMP(2215), // Stamp(553)  wtag(3)
STAMPWTAG_llvmo__DataLayout_O = ADJUST_STAMP(2219), // Stamp(554)  wtag(3)
STAMPWTAG_core__LoadTimeValues_O = ADJUST_STAMP(2223), // Stamp(555)  wtag(3)
STAMPWTAG_core__Readtable_O = ADJUST_STAMP(2227), // Stamp(556)  wtag(3)
STAMPWTAG_core__PosixTime_O = ADJUST_STAMP(2231), // Stamp(557)  wtag(3)
STAMPWTAG_llvmo__StructLayout_O = ADJUST_STAMP(2235), // Stamp(558)  wtag(3)
STAMPWTAG_core__ExternalObject_O = ADJUST_STAMP(2239), // Stamp(559)  wtag(3)
STAMPWTAG_llvmo__Pass_O = ADJUST_STAMP(2243), // Stamp(560)  wtag(3)
STAMPWTAG_llvmo__ModulePass_O = ADJUST_STAMP(2247), // Stamp(561)  wtag(3)
STAMPWTAG_llvmo__ImmutablePass_O = ADJUST_STAMP(2251), // Stamp(562)  wtag(3)
STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O = ADJUST_STAMP(2255), // Stamp(563)  wtag(3)
STAMPWTAG_llvmo__FunctionPass_O = ADJUST_STAMP(2259), // Stamp(564)  wtag(3)
STAMPWTAG_llvmo__MCSubtargetInfo_O = ADJUST_STAMP(2263), // Stamp(565)  wtag(3)
STAMPWTAG_llvmo__TargetSubtargetInfo_O = ADJUST_STAMP(2267), // Stamp(566)  wtag(3)
STAMPWTAG_llvmo__JITDylib_O = ADJUST_STAMP(2271), // Stamp(567)  wtag(3)
STAMPWTAG_llvmo__DIContext_O = ADJUST_STAMP(2275), // Stamp(568)  wtag(3)
STAMPWTAG_llvmo__IRBuilderBase_O = ADJUST_STAMP(2279), // Stamp(569)  wtag(3)
STAMPWTAG_llvmo__IRBuilder_O = ADJUST_STAMP(2283), // Stamp(570)  wtag(3)
STAMPWTAG_llvmo__APInt_O = ADJUST_STAMP(2287), // Stamp(571)  wtag(3)
STAMPWTAG_llvmo__DIBuilder_O = ADJUST_STAMP(2291), // Stamp(572)  wtag(3)
STAMPWTAG_llvmo__SectionedAddress_O = ADJUST_STAMP(2295), // Stamp(573)  wtag(3)
STAMPWTAG_llvmo__EngineBuilder_O = ADJUST_STAMP(2299), // Stamp(574)  wtag(3)
STAMPWTAG_llvmo__PassManagerBase_O = ADJUST_STAMP(2303), // Stamp(575)  wtag(3)
STAMPWTAG_llvmo__PassManager_O = ADJUST_STAMP(2307), // Stamp(576)  wtag(3)
STAMPWTAG_llvmo__FunctionPassManager_O = ADJUST_STAMP(2311), // Stamp(577)  wtag(3)
STAMPWTAG_llvmo__Value_O = ADJUST_STAMP(2315), // Stamp(578)  wtag(3)
STAMPWTAG_llvmo__User_O = ADJUST_STAMP(2319), // Stamp(579)  wtag(3)
STAMPWTAG_llvmo__Instruction_O = ADJUST_STAMP(2323), // Stamp(580)  wtag(3)
STAMPWTAG_llvmo__StoreInst_O = ADJUST_STAMP(2327), // Stamp(581)  wtag(3)
STAMPWTAG_llvmo__UnreachableInst_O = ADJUST_STAMP(2331), // Stamp(582)  wtag(3)
STAMPWTAG_llvmo__ResumeInst_O = ADJUST_STAMP(2335), // Stamp(583)  wtag(3)
STAMPWTAG_llvmo__AtomicCmpXchgInst_O = ADJUST_STAMP(2339), // Stamp(584)  wtag(3)
STAMPWTAG_llvmo__FenceInst_O = ADJUST_STAMP(2343), // Stamp(585)  wtag(3)
STAMPWTAG_llvmo__CallBase_O = ADJUST_STAMP(2347), // Stamp(586)  wtag(3)
STAMPWTAG_llvmo__CallInst_O = ADJUST_STAMP(2351), // Stamp(587)  wtag(3)
STAMPWTAG_llvmo__InvokeInst_O = ADJUST_STAMP(2355), // Stamp(588)  wtag(3)
STAMPWTAG_llvmo__BranchInst_O = ADJUST_STAMP(2359), // Stamp(589)  wtag(3)
STAMPWTAG_llvmo__UnaryInstruction_O = ADJUST_STAMP(2363), // Stamp(590)  wtag(3)
STAMPWTAG_llvmo__VAArgInst_O = ADJUST_STAMP(2367), // Stamp(591)  wtag(3)
STAMPWTAG_llvmo__AllocaInst_O = ADJUST_STAMP(2371), // Stamp(592)  wtag(3)
STAMPWTAG_llvmo__LoadInst_O = ADJUST_STAMP(2375), // Stamp(593)  wtag(3)
STAMPWTAG_llvmo__SwitchInst_O = ADJUST_STAMP(2379), // Stamp(594)  wtag(3)
STAMPWTAG_llvmo__AtomicRMWInst_O = ADJUST_STAMP(2383), // Stamp(595)  wtag(3)
STAMPWTAG_llvmo__LandingPadInst_O = ADJUST_STAMP(2387), // Stamp(596)  wtag(3)
STAMPWTAG_llvmo__ReturnInst_O = ADJUST_STAMP(2391), // Stamp(597)  wtag(3)
STAMPWTAG_llvmo__PHINode_O = ADJUST_STAMP(2395), // Stamp(598)  wtag(3)
STAMPWTAG_llvmo__IndirectBrInst_O = ADJUST_STAMP(2399), // Stamp(599)  wtag(3)
STAMPWTAG_llvmo__Constant_O = ADJUST_STAMP(2403), // Stamp(600)  wtag(3)
STAMPWTAG_llvmo__GlobalValue_O = ADJUST_STAMP(2407), // Stamp(601)  wtag(3)
STAMPWTAG_llvmo__Function_O = ADJUST_STAMP(2411), // Stamp(602)  wtag(3)
STAMPWTAG_llvmo__GlobalVariable_O = ADJUST_STAMP(2415), // Stamp(603)  wtag(3)
STAMPWTAG_llvmo__BlockAddress_O = ADJUST_STAMP(2419), // Stamp(604)  wtag(3)
STAMPWTAG_llvmo__ConstantStruct_O = ADJUST_STAMP(2423), // Stamp(605)  wtag(3)
STAMPWTAG_llvmo__ConstantInt_O = ADJUST_STAMP(2427), // Stamp(606)  wtag(3)
STAMPWTAG_llvmo__ConstantFP_O = ADJUST_STAMP(2431), // Stamp(607)  wtag(3)
STAMPWTAG_llvmo__ConstantPointerNull_O = ADJUST_STAMP(2435), // Stamp(608)  wtag(3)
STAMPWTAG_llvmo__ConstantDataSequential_O = ADJUST_STAMP(2439), // Stamp(609)  wtag(3)
STAMPWTAG_llvmo__ConstantDataArray_O = ADJUST_STAMP(2443), // Stamp(610)  wtag(3)
STAMPWTAG_llvmo__ConstantExpr_O = ADJUST_STAMP(2447), // Stamp(611)  wtag(3)
STAMPWTAG_llvmo__UndefValue_O = ADJUST_STAMP(2451), // Stamp(612)  wtag(3)
STAMPWTAG_llvmo__ConstantArray_O = ADJUST_STAMP(2455), // Stamp(613)  wtag(3)
STAMPWTAG_llvmo__Argument_O = ADJUST_STAMP(2459), // Stamp(614)  wtag(3)
STAMPWTAG_llvmo__BasicBlock_O = ADJUST_STAMP(2463), // Stamp(615)  wtag(3)
STAMPWTAG_llvmo__MetadataAsValue_O = ADJUST_STAMP(2467), // Stamp(616)  wtag(3)
STAMPWTAG_llvmo__ThreadSafeContext_O = ADJUST_STAMP(2471), // Stamp(617)  wtag(3)
STAMPWTAG_llvmo__TargetMachine_O = ADJUST_STAMP(2475), // Stamp(618)  wtag(3)
STAMPWTAG_llvmo__LLVMTargetMachine_O = ADJUST_STAMP(2479), // Stamp(619)  wtag(3)
STAMPWTAG_llvmo__Triple_O = ADJUST_STAMP(2483), // Stamp(620)  wtag(3)
STAMPWTAG_llvmo__LLVMContext_O = ADJUST_STAMP(2487), // Stamp(621)  wtag(3)
STAMPWTAG_llvmo__PassManagerBuilder_O = ADJUST_STAMP(2491), // Stamp(622)  wtag(3)
STAMPWTAG_llvmo__ExecutionEngine_O = ADJUST_STAMP(2495), // Stamp(623)  wtag(3)
STAMPWTAG_llvmo__Type_O = ADJUST_STAMP(2499), // Stamp(624)  wtag(3)
STAMPWTAG_llvmo__PointerType_O = ADJUST_STAMP(2503), // Stamp(625)  wtag(3)
STAMPWTAG_llvmo__ArrayType_O = ADJUST_STAMP(2507), // Stamp(626)  wtag(3)
STAMPWTAG_llvmo__FunctionType_O = ADJUST_STAMP(2511), // Stamp(627)  wtag(3)
STAMPWTAG_llvmo__IntegerType_O = ADJUST_STAMP(2515), // Stamp(628)  wtag(3)
STAMPWTAG_llvmo__VectorType_O = ADJUST_STAMP(2519), // Stamp(629)  wtag(3)
STAMPWTAG_llvmo__StructType_O = ADJUST_STAMP(2523), // Stamp(630)  wtag(3)
STAMPWTAG_llvmo__TargetPassConfig_O = ADJUST_STAMP(2527), // Stamp(631)  wtag(3)
STAMPWTAG_llvmo__APFloat_O = ADJUST_STAMP(2531), // Stamp(632)  wtag(3)
STAMPWTAG_llvmo__Metadata_O = ADJUST_STAMP(2535), // Stamp(633)  wtag(3)
STAMPWTAG_llvmo__MDNode_O = ADJUST_STAMP(2539), // Stamp(634)  wtag(3)
STAMPWTAG_llvmo__DILocation_O = ADJUST_STAMP(2543), // Stamp(635)  wtag(3)
STAMPWTAG_llvmo__DINode_O = ADJUST_STAMP(2547), // Stamp(636)  wtag(3)
STAMPWTAG_llvmo__DIVariable_O = ADJUST_STAMP(2551), // Stamp(637)  wtag(3)
STAMPWTAG_llvmo__DILocalVariable_O = ADJUST_STAMP(2555), // Stamp(638)  wtag(3)
STAMPWTAG_llvmo__DIScope_O = ADJUST_STAMP(2559), // Stamp(639)  wtag(3)
STAMPWTAG_llvmo__DIFile_O = ADJUST_STAMP(2563), // Stamp(640)  wtag(3)
STAMPWTAG_llvmo__DILocalScope_O = ADJUST_STAMP(2567), // Stamp(641)  wtag(3)
STAMPWTAG_llvmo__DISubprogram_O = ADJUST_STAMP(2571), // Stamp(642)  wtag(3)
STAMPWTAG_llvmo__DILexicalBlockBase_O = ADJUST_STAMP(2575), // Stamp(643)  wtag(3)
STAMPWTAG_llvmo__DILexicalBlock_O = ADJUST_STAMP(2579), // Stamp(644)  wtag(3)
STAMPWTAG_llvmo__DICompileUnit_O = ADJUST_STAMP(2583), // Stamp(645)  wtag(3)
STAMPWTAG_llvmo__DIType_O = ADJUST_STAMP(2587), // Stamp(646)  wtag(3)
STAMPWTAG_llvmo__DICompositeType_O = ADJUST_STAMP(2591), // Stamp(647)  wtag(3)
STAMPWTAG_llvmo__DIDerivedType_O = ADJUST_STAMP(2595), // Stamp(648)  wtag(3)
STAMPWTAG_llvmo__DISubroutineType_O = ADJUST_STAMP(2599), // Stamp(649)  wtag(3)
STAMPWTAG_llvmo__DIBasicType_O = ADJUST_STAMP(2603), // Stamp(650)  wtag(3)
STAMPWTAG_llvmo__DIExpression_O = ADJUST_STAMP(2607), // Stamp(651)  wtag(3)
STAMPWTAG_llvmo__ValueAsMetadata_O = ADJUST_STAMP(2611), // Stamp(652)  wtag(3)
STAMPWTAG_llvmo__MDString_O = ADJUST_STAMP(2615), // Stamp(653)  wtag(3)
STAMPWTAG_core__Test_O = ADJUST_STAMP(2619), // Stamp(654)  wtag(3)
STAMPWTAG_llvmo__NamedMDNode_O = ADJUST_STAMP(2623), // Stamp(655)  wtag(3)
STAMPWTAG_llvmo__DWARFContext_O = ADJUST_STAMP(2627), // Stamp(656)  wtag(3)
STAMPWTAG_llvmo__TargetOptions_O = ADJUST_STAMP(2631), // Stamp(657)  wtag(3)
STAMPWTAG_llvmo__Module_O = ADJUST_STAMP(2635), // Stamp(658)  wtag(3)
STAMPWTAG_llvmo__Target_O = ADJUST_STAMP(2639), // Stamp(659)  wtag(3)
STAMPWTAG_llvmo__Linker_O = ADJUST_STAMP(2643), // Stamp(660)  wtag(3)
STAMPWTAG_core__Rack_O = ADJUST_STAMP(2647), // Stamp(661)  wtag(3)
STAMPWTAG_core__SmallMultimap_O = ADJUST_STAMP(2651), // Stamp(662)  wtag(3)
STAMPWTAG_core__Scope_O = ADJUST_STAMP(2655), // Stamp(663)  wtag(3)
STAMPWTAG_core__FileScope_O = ADJUST_STAMP(2659), // Stamp(664)  wtag(3)
STAMPWTAG_core__Path_O = ADJUST_STAMP(2663), // Stamp(665)  wtag(3)
STAMPWTAG_core__Pathname_O = ADJUST_STAMP(2667), // Stamp(666)  wtag(3)
STAMPWTAG_core__LogicalPathname_O = ADJUST_STAMP(2671), // Stamp(667)  wtag(3)
STAMPWTAG_core__Stream_O = ADJUST_STAMP(2675), // Stamp(668)  wtag(3)
STAMPWTAG_core__AnsiStream_O = ADJUST_STAMP(2679), // Stamp(669)  wtag(3)
STAMPWTAG_core__TwoWayStream_O = ADJUST_STAMP(2683), // Stamp(670)  wtag(3)
STAMPWTAG_core__SynonymStream_O = ADJUST_STAMP(2687), // Stamp(671)  wtag(3)
STAMPWTAG_core__StringStream_O = ADJUST_STAMP(2691), // Stamp(672)  wtag(3)
STAMPWTAG_core__StringOutputStream_O = ADJUST_STAMP(2695), // Stamp(673)  wtag(3)
STAMPWTAG_core__StringInputStream_O = ADJUST_STAMP(2699), // Stamp(674)  wtag(3)
STAMPWTAG_core__EchoStream_O = ADJUST_STAMP(2703), // Stamp(675)  wtag(3)
STAMPWTAG_core__ConcatenatedStream_O = ADJUST_STAMP(2707), // Stamp(676)  wtag(3)
STAMPWTAG_core__FileStream_O = ADJUST_STAMP(2711), // Stamp(677)  wtag(3)
STAMPWTAG_core__IOFileStream_O = ADJUST_STAMP(2715), // Stamp(678)  wtag(3)
STAMPWTAG_core__IOStreamStream_O = ADJUST_STAMP(2719), // Stamp(679)  wtag(3)
STAMPWTAG_core__BroadcastStream_O = ADJUST_STAMP(2723), // Stamp(680)  wtag(3)
STAMPWTAG_core__Package_O = ADJUST_STAMP(2727), // Stamp(681)  wtag(3)
STAMPWTAG_core__FileStatus_O = ADJUST_STAMP(2731), // Stamp(682)  wtag(3)
STAMPWTAG_core__InvocationHistoryFrameIterator_O = ADJUST_STAMP(2735), // Stamp(683)  wtag(3)
STAMPWTAG_core__DirectoryEntry_O = ADJUST_STAMP(2739), // Stamp(684)  wtag(3)
STAMPWTAG_core__LightUserData_O = ADJUST_STAMP(2743), // Stamp(685)  wtag(3)
STAMPWTAG_core__UserData_O = ADJUST_STAMP(2747), // Stamp(686)  wtag(3)
STAMPWTAG_core__Cons_O = ADJUST_STAMP(2751), // Stamp(687)  wtag(3)
STAMPWTAG_core__VaList_dummy_O = ADJUST_STAMP(2755), // Stamp(688)  wtag(3)
STAMPWTAG_core__Lisp_O = ADJUST_STAMP(2759), // Stamp(689)  wtag(3)
STAMPWTAG_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_ = ADJUST_STAMP(2763), // Stamp(690)  wtag(3)
STAMPWTAG_asttooling__AstVisitor_O = ADJUST_STAMP(2767), // Stamp(691)  wtag(3)
STAMPWTAG_gctools__GCContainer = ADJUST_STAMP(2771), // Stamp(692)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__ = ADJUST_STAMP(2775), // Stamp(693)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_ = ADJUST_STAMP(2779), // Stamp(694)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__ = ADJUST_STAMP(2783), // Stamp(695)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_ = ADJUST_STAMP(2787), // Stamp(696)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__ = ADJUST_STAMP(2791), // Stamp(697)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__ = ADJUST_STAMP(2795), // Stamp(698)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_short_ = ADJUST_STAMP(2799), // Stamp(699)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__ = ADJUST_STAMP(2803), // Stamp(700)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_unsigned_long_ = ADJUST_STAMP(2807), // Stamp(701)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___ = ADJUST_STAMP(2811), // Stamp(702)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__ = ADJUST_STAMP(2815), // Stamp(703)  wtag(3)
STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_ = ADJUST_STAMP(2819), // Stamp(704)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_ = ADJUST_STAMP(2823), // Stamp(705)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___ = ADJUST_STAMP(2827), // Stamp(706)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_ = ADJUST_STAMP(2831), // Stamp(707)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__ = ADJUST_STAMP(2835), // Stamp(708)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_ = ADJUST_STAMP(2839), // Stamp(709)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___ = ADJUST_STAMP(2843), // Stamp(710)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__ = ADJUST_STAMP(2847), // Stamp(711)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_unsigned_char_ = ADJUST_STAMP(2851), // Stamp(712)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___ = ADJUST_STAMP(2855), // Stamp(713)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__ = ADJUST_STAMP(2859), // Stamp(714)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___ = ADJUST_STAMP(2863), // Stamp(715)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_ = ADJUST_STAMP(2867), // Stamp(716)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__ = ADJUST_STAMP(2871), // Stamp(717)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_ = ADJUST_STAMP(2875), // Stamp(718)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__ = ADJUST_STAMP(2879), // Stamp(719)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__ = ADJUST_STAMP(2883), // Stamp(720)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__ = ADJUST_STAMP(2887), // Stamp(721)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___ = ADJUST_STAMP(2891), // Stamp(722)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__ = ADJUST_STAMP(2895), // Stamp(723)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_ = ADJUST_STAMP(2899), // Stamp(724)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_ = ADJUST_STAMP(2903), // Stamp(725)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_ = ADJUST_STAMP(2907), // Stamp(726)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___ = ADJUST_STAMP(2911), // Stamp(727)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__ = ADJUST_STAMP(2915), // Stamp(728)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_Vector3_ = ADJUST_STAMP(2919), // Stamp(729)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_ = ADJUST_STAMP(2923), // Stamp(730)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__ = ADJUST_STAMP(2927), // Stamp(731)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___ = ADJUST_STAMP(2931), // Stamp(732)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_ = ADJUST_STAMP(2935), // Stamp(733)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__ = ADJUST_STAMP(2939), // Stamp(734)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___ = ADJUST_STAMP(2943), // Stamp(735)  wtag(3)
STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__ = ADJUST_STAMP(2947), // Stamp(736)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__ = ADJUST_STAMP(2951), // Stamp(737)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__ = ADJUST_STAMP(2955), // Stamp(738)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__ = ADJUST_STAMP(2959), // Stamp(739)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__ = ADJUST_STAMP(2963), // Stamp(740)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___ = ADJUST_STAMP(2967), // Stamp(741)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___ = ADJUST_STAMP(2971), // Stamp(742)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__ = ADJUST_STAMP(2975), // Stamp(743)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___ = ADJUST_STAMP(2979), // Stamp(744)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__ = ADJUST_STAMP(2983), // Stamp(745)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__ = ADJUST_STAMP(2987), // Stamp(746)  wtag(3)
STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_ = ADJUST_STAMP(2991), // Stamp(747)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__ = ADJUST_STAMP(2995), // Stamp(748)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__ = ADJUST_STAMP(2999), // Stamp(749)  wtag(3)
STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_ = ADJUST_STAMP(3003), // Stamp(750)  wtag(3)
STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_ = ADJUST_STAMP(3007), // Stamp(751)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__ = ADJUST_STAMP(3011), // Stamp(752)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_int_ = ADJUST_STAMP(3015), // Stamp(753)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___ = ADJUST_STAMP(3019), // Stamp(754)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__ = ADJUST_STAMP(3023), // Stamp(755)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__ = ADJUST_STAMP(3027), // Stamp(756)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_float_ = ADJUST_STAMP(3031), // Stamp(757)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__ = ADJUST_STAMP(3035), // Stamp(758)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__ = ADJUST_STAMP(3039), // Stamp(759)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_core__T_O___ = ADJUST_STAMP(3043), // Stamp(760)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_ = ADJUST_STAMP(3047), // Stamp(761)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___ = ADJUST_STAMP(3051), // Stamp(762)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_unsigned_int_ = ADJUST_STAMP(3055), // Stamp(763)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__ = ADJUST_STAMP(3059), // Stamp(764)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__ = ADJUST_STAMP(3063), // Stamp(765)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_ = ADJUST_STAMP(3067), // Stamp(766)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__ = ADJUST_STAMP(3071), // Stamp(767)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_double_ = ADJUST_STAMP(3075), // Stamp(768)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__ = ADJUST_STAMP(3079), // Stamp(769)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__ = ADJUST_STAMP(3083), // Stamp(770)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___ = ADJUST_STAMP(3087), // Stamp(771)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__ = ADJUST_STAMP(3091), // Stamp(772)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_ = ADJUST_STAMP(3095), // Stamp(773)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_ = ADJUST_STAMP(3099), // Stamp(774)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_signed_char_ = ADJUST_STAMP(3103), // Stamp(775)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_ = ADJUST_STAMP(3107), // Stamp(776)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__ = ADJUST_STAMP(3111), // Stamp(777)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___ = ADJUST_STAMP(3115), // Stamp(778)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__ = ADJUST_STAMP(3119), // Stamp(779)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__ = ADJUST_STAMP(3123), // Stamp(780)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_ = ADJUST_STAMP(3127), // Stamp(781)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_ = ADJUST_STAMP(3131), // Stamp(782)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__ = ADJUST_STAMP(3135), // Stamp(783)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__ = ADJUST_STAMP(3139), // Stamp(784)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_ = ADJUST_STAMP(3143), // Stamp(785)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__ = ADJUST_STAMP(3147), // Stamp(786)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__ = ADJUST_STAMP(3151), // Stamp(787)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___ = ADJUST_STAMP(3155), // Stamp(788)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__ = ADJUST_STAMP(3159), // Stamp(789)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_double_ = ADJUST_STAMP(3163), // Stamp(790)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___ = ADJUST_STAMP(3167), // Stamp(791)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___ = ADJUST_STAMP(3171), // Stamp(792)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__ = ADJUST_STAMP(3175), // Stamp(793)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__ = ADJUST_STAMP(3179), // Stamp(794)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_ = ADJUST_STAMP(3183), // Stamp(795)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__ = ADJUST_STAMP(3187), // Stamp(796)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__ = ADJUST_STAMP(3191), // Stamp(797)  wtag(3)
STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_ = ADJUST_STAMP(3195), // Stamp(798)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_ = ADJUST_STAMP(3199), // Stamp(799)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_ = ADJUST_STAMP(3203), // Stamp(800)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___ = ADJUST_STAMP(3207), // Stamp(801)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___ = ADJUST_STAMP(3211), // Stamp(802)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__ = ADJUST_STAMP(3215), // Stamp(803)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__ = ADJUST_STAMP(3219), // Stamp(804)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___ = ADJUST_STAMP(3223), // Stamp(805)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_ = ADJUST_STAMP(3227), // Stamp(806)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__ = ADJUST_STAMP(3231), // Stamp(807)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_unsigned_long_ = ADJUST_STAMP(3235), // Stamp(808)  wtag(3)
STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_ = ADJUST_STAMP(3239), // Stamp(809)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_ = ADJUST_STAMP(3243), // Stamp(810)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___ = ADJUST_STAMP(3247), // Stamp(811)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_ = ADJUST_STAMP(3251), // Stamp(812)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__ = ADJUST_STAMP(3255), // Stamp(813)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__ = ADJUST_STAMP(3259), // Stamp(814)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_ = ADJUST_STAMP(3263), // Stamp(815)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___ = ADJUST_STAMP(3267), // Stamp(816)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_int_ = ADJUST_STAMP(3271), // Stamp(817)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__ = ADJUST_STAMP(3275), // Stamp(818)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_ = ADJUST_STAMP(3279), // Stamp(819)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_ = ADJUST_STAMP(3283), // Stamp(820)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_long_ = ADJUST_STAMP(3287), // Stamp(821)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__ = ADJUST_STAMP(3291), // Stamp(822)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_ = ADJUST_STAMP(3295), // Stamp(823)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___ = ADJUST_STAMP(3299), // Stamp(824)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__ = ADJUST_STAMP(3303), // Stamp(825)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__ = ADJUST_STAMP(3307), // Stamp(826)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_unsigned_int_ = ADJUST_STAMP(3311), // Stamp(827)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_ = ADJUST_STAMP(3315), // Stamp(828)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__ = ADJUST_STAMP(3319), // Stamp(829)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__ = ADJUST_STAMP(3323), // Stamp(830)  wtag(3)
STAMPWTAG_gctools__GCArray_moveable_unsigned_short_ = ADJUST_STAMP(3327), // Stamp(831)  wtag(3)
STAMPWTAG_gctools__GCVector_moveable_float_ = ADJUST_STAMP(3331), // Stamp(832)  wtag(3)
STAMPWTAG_clang__FrontendAction = ADJUST_STAMP(3335), // Stamp(833)  wtag(3)
STAMPWTAG_clang__ASTFrontendAction = ADJUST_STAMP(3339), // Stamp(834)  wtag(3)
STAMPWTAG_clang__SyntaxOnlyAction = ADJUST_STAMP(3343), // Stamp(835)  wtag(3)
STAMPWTAG_clang__tooling__ToolAction = ADJUST_STAMP(3347), // Stamp(836)  wtag(3)
STAMPWTAG_clang__tooling__FrontendActionFactory = ADJUST_STAMP(3351), // Stamp(837)  wtag(3)
STAMPWTAG_clang__ast_matchers__MatchFinder__MatchCallback = ADJUST_STAMP(3355), // Stamp(838)  wtag(3)
// Unused CLEAVIR-BIR::CASE = 1521, 
// Unused CLASP-CLEAVIR-AST::DEBUG-MESSAGE-AST = 1715, 
// Unused CLEAVIR-BIR::TYPEQ-TEST = 1520, 
// Unused CLASP-ANALYZER::BASIC-STRING-CTYPE = 1820, 
// Unused CLEAVIR-BIR::FUNCTION = 1486, 
// Unused ECLECTOR.READER::UNQUOTE-CONDITION = 1378, 
// Unused CLEAVIR-AST::FIXNUM-NOT-GREATER-AST = 1583, 
// Unused CLASP-CLEAVIR-AST::THROW-AST = 1714, 
// Unused CONCRETE-SYNTAX-TREE::NULL-CST-REQUIRED = 1258, 
// Unused CLASP-CLEAVIR-AST::FOREIGN-CALL-POINTER-AST = 1720, 
// Unused CONCRETE-SYNTAX-TREE::MACRO-LAMBDA-LIST = 1318, 
// Unused ECLECTOR.READER::SHARPSIGN-EQUALS-LABEL-DEFINED-MORE-THAN-ONCE = 1451, 
// Unused CLASP-ANALYZER::CXX-SHARED-MUTEX-OFFSET = 1867, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-LAMBDA-LIST = 1319, 
// Unused STATIC-GFS::CLASS-CHANGER = 1110, 
// Unused CORE::PPRINT-DISPATCH-ENTRY = 1205, 
// Unused CLASP-CLEAVIR-BIR::CAS-RACK = 1761, 
// Unused CLEAVIR-AST::FIXNUM-EQUAL-AST = 1586, 
// Unused CLASP-ANALYZER::DEPENDENT-NAME-CTYPE = 1828, 
// Unused CLEAVIR-METER::METER = 1534, 
// Unused CLASP-CLEAVIR-BIR::FOREIGN-CALL-POINTER = 1754, 
// Unused CLEAVIR-BIR::LEXICAL = 1466, 
// Unused CLANG-TOOL::MULTITOOL = 1788, 
// Unused ECLECTOR.READER::READ-OBJECT-TYPE-ERROR = 1349, 
// Unused CLANG-TOOL::COMPILATION-TOOL-DATABASE = 1779, 
// Unused CLASP-ANALYZER::ENUM-CTYPE = 1829, 
// Unused CLASP-ANALYZER::UNIQUE-PTR-CTYPE = 1846, 
// Unused CLEAVIR-CST-TO-AST::SITUATIONS-MUST-BE-PROPER-LIST = 1669, 
// Unused ACCLIMATION::TIENG-VIET = 1247, 
// Unused CLEAVIR-AST::NEQ-AST = 1578, 
// Unused CLEAVIR-METER::BASIC-METER = 1535, 
// Unused CLEAVIR-BIR::OUTPUT = 1474, 
// Unused CLEAVIR-AST::FIXNUM-ADD-AST = 1580, 
// Unused CLASP-ANALYZER::POINTER-CTYPE = 1839, 
// Unused COMMON-LISP::METHOD = 1094, 
// Unused ECLECTOR.READER::UNTERMINATED-LIST = 1387, 
// Unused COMMON-LISP::TYPE-ERROR = 1130, 
// Unused CLEAVIR-AST::FLOAT-GREATER-AST = 1593, 
// Unused STAMPWTAG_gctools__GCBitUnitArray_moveable_2__false_ = 713, 
// Unused CONCRETE-SYNTAX-TREE::EXPLICIT-MULTI-PARAMETER-GROUP = 1272, 
// Unused CLASP-CLEAVIR-AST::HEADER-STAMP-AST = 1723, 
// Unused CONCRETE-SYNTAX-TREE::DEFINE-MODIFY-MACRO-LAMBDA-LIST = 1323, 
// Unused CORE::SIMPLE-STREAM-ERROR = 1147, 
// Unused CORE::UNRECOGNIZED-KEYWORD-ARGUMENT-ERROR = 1170, 
// Unused EXT::STACK-OVERFLOW = 1125, 
// Unused COMMON-LISP::PACKAGE-ERROR = 1152, 
// Unused STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__StereoisomerAtoms_O___ = 691, 
// Unused CLEAVIR-BIR::UNWIND = 1515, 
// Unused ECLECTOR.READER::READ-TIME-EVALUATION-INHIBITED = 1398, 
// Unused CONCRETE-SYNTAX-TREE::PARAMETER-GROUP = 1267, 
// Unused CONCRETE-SYNTAX-TREE::DEFSETF-LAMBDA-LIST = 1321, 
// Unused CLASP-ANALYZER::STAMP = 1805, 
// Unused CONCRETE-SYNTAX-TREE::IMPLICIT-PARAMETER-GROUP = 1270, 
// Unused COMMON-LISP::STANDARD-METHOD = 1096, 
// Unused MP::PROCESS-ERROR = 1144, 
// Unused CLEAVIR-AST::AST = 1537, 
// Unused CLEAVIR-BIR::RETURNI = 1505, 
// Unused CLASP-CLEAVIR-AST::UNWIND-PROTECT-AST = 1746, 
// Unused CLASP-ANALYZER::CCLASS = 1794, 
// Unused CLASP-ANALYZER::ROOTCLASSALLOC = 1802, 
// Unused CLEAVIR-AST::RETURN-FROM-AST = 1559, 
// Unused CLASP-CLEAVIR::CLASP-ORDINARY-LAMBDA-LIST = 1711, 
// Unused CLEAVIR-CST-TO-AST::SETQ-MUST-HAVE-EVEN-NUMBER-OF-ARGUMENTS = 1682, 
// Unused CLEAVIR-BIR::NO-INPUT = 1475, 
// Unused SB-BSD-SOCKETS::NO-ADDRESS-ERROR = 1242, 
// Unused CLASP-ANALYZER::INSTANCE-VARIABLE = 1796, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-OPTIONAL-PARAMETER = 1303, 
// Unused CLEAVIR-BIR::VERIFICATION-FAILED = 1528, 
// Unused CORE::FORMAT-ERROR = 1176, 
// Unused CONCRETE-SYNTAX-TREE::WHOLE-PARAMETER-GROUP = 1290, 
// Unused CLEAVIR-CONDITIONS::PROGRAM-ERROR = 1459, 
// Unused CLEAVIR-BIR::TERMINATOR0 = 1480, 
// Unused ECLECTOR.READER::FEATURE-EXPRESSION-TYPE-ERROR = 1442, 
// Unused ECLECTOR.READER::NON-LIST-FOLLOWING-SHARPSIGN-S = 1427, 
// Unused COMPILER::COMPILER-MACRO-EXPANSION-ERROR-WARNING = 1215, 
// Unused CLEAVIR-AST::FDEFINITION-AST = 1551, 
// Unused CLEAVIR-ENVIRONMENT::BLOCK-INFO = 1624, 
// Unused STAMPWTAG_gctools__GCVector_moveable_core__CacheRecord_ = 717, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-FEATURE-EXPRESSION = 1447, 
// Unused CLEAVIR-BIR::ACCESSVAR = 1491, 
// Unused CORE::TAB = 1204, 
// Unused SB-BSD-SOCKETS::PROTOCOL-NOT-SUPPORTED-ERROR = 1233, 
// Unused ECLECTOR.READER::SINGLE-FEATURE-EXPECTED = 1444, 
// Unused CONCRETE-SYNTAX-TREE::MULTI-PARAMETER-GROUP-MIXIN = 1269, 
// Unused COMMON-LISP::RESTART = 1113, 
// Unused COMMON-LISP::CELL-ERROR = 1156, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-QUOTE = 1370, 
// Unused CLEAVIR-AST::BLOCK-AST = 1558, 
// Unused CLEAVIR-AST::FUNCALLABLE-SLOT-READ-AST = 1606, 
// Unused CLEAVIR-BIR::TERMINATOR1 = 1481, 
// Unused CORE::FOREIGN-DATA = 1088, 
// Unused CLASP-CLEAVIR-AST::DEFCALLBACK-AST = 1721, 
// Unused CORE::PACKAGE-LOCK-VIOLATION = 1155, 
// Unused CLASP-ANALYZER::ATOMIC-CTYPE = 1847, 
// Unused EXT::CHARACTER-CODING-ERROR = 1181, 
// Unused CLOS::INITARGS-UPDATER = 1105, 
// Unused COMMON-LISP::SIMPLE-ERROR = 1122, 
// Unused ECLECTOR.READER::TOO-MANY-ELEMENTS = 1415, 
// Unused EXT::CHARACTER-DECODING-ERROR = 1183, 
// Unused CLASP-CLEAVIR-BIR::ATOMIC-RACK-WRITE = 1760, 
// Unused CONCRETE-SYNTAX-TREE::RULE = 1326, 
// Unused CLASP-CLEAVIR::KEYWORD-VA-REST = 1710, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-RACK-WRITE-AST = 1738, 
// Unused CLEAVIR-COMPILATION-POLICY::UNKNOWN-OPTIMIZE-QUALITY = 1645, 
// Unused ECLECTOR.READER::UNQUOTE-SPLICING-AT-TOP = 1386, 
// Unused CLEAVIR-BIR::THEI = 1525, 
// Unused CLEAVIR-AST::CONSTANT-FDEFINITION-AST = 1552, 
// Unused CLASP-CLEAVIR-AST::CAS-RACK-AST = 1739, 
// Unused CLEAVIR-CST-TO-AST::CASE-KEYS-MUST-BE-PROPER-LIST = 1671, 
// Unused CLASP-ANALYZER::POD-OFFSET = 1865, 
// Unused CLASP-CLEAVIR-BMIR::STORE = 1774, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-SHARPSIGN-S = 1425, 
// Unused CLASP-ANALYZER::ALLOC = 1798, 
// Unused CONCRETE-SYNTAX-TREE::BOA-LAMBDA-LIST = 1320, 
// Unused COMMON-LISP::FLOATING-POINT-UNDERFLOW = 1164, 
// Unused CLASP-CLEAVIR-AST::FENCE-AST = 1729, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-SHARPSIGN-PLUS-MINUS = 1440, 
// Unused CLEAVIR-ENVIRONMENT::VARIABLE-TYPE = 1635, 
// Unused CLEAVIR-CST-TO-AST::SYMBOL-MACRO-NAMES-CONSTANT = 1686, 
// Unused COMMON-LISP::FLOATING-POINT-INVALID-OPERATION = 1166, 
// Unused ACCLIMATION::SWEDISH = 1250, 
// Unused CLEAVIR-CST-TO-AST::FORM-MUST-BE-PROPER-LIST = 1668, 
// Unused COMMON-LISP::STORAGE-CONDITION = 1123, 
// Unused CLEAVIR-AST::LEXICAL-BIND-AST = 1561, 
// Unused CLEAVIR-BIR::VARIABLE = 1484, 
// Unused COMMON-LISP::READER-ERROR = 1174, 
// Unused CLEAVIR-AST::FUNCALLABLE-SLOT-WRITE-AST = 1607, 
// Unused COMMON-LISP::PROGRAM-ERROR = 1138, 
// Unused COMMON-LISP::VECTOR = 1082, 
// Unused CONCRETE-SYNTAX-TREE::TARGET = 1325, 
// Unused EXT::SEGMENTATION-VIOLATION = 1124, 
// Unused CORE::LOGICAL-BLOCK = 1197, 
// Unused CLEAVIR-AST::SETQ-AST = 1560, 
// Unused CLEAVIR-CST-TO-AST::BINDINGS-MUST-BE-PROPER-LIST = 1677, 
// Unused SB-BSD-SOCKETS::NO-RECOVERY-ERROR = 1241, 
// Unused CLEAVIR-BIR::LETI = 1513, 
// Unused CLEAVIR-AST::PROGN-AST = 1557, 
// Unused CLOS::STANDARD-EFFECTIVE-SLOT-DEFINITION = 1065, 
// Unused CLOS::EFFECTIVE-READER-METHOD = 1100, 
// Unused CONCRETE-SYNTAX-TREE::CST-ERROR = 1257, 
// Unused CLEAVIR-SET::SET = 1457, 
// Unused CLEAVIR-AST::CALL-AST = 1553, 
// Unused CORE::FORMAT-WARNING-TOO-MANY-ARGUMENTS = 1178, 
// Unused CONCRETE-SYNTAX-TREE::KEY-PARAMETER-GROUP = 1276, 
// Unused ECLECTOR.PARSE-RESULT::PARSE-RESULT-CLIENT = 1454, 
// Unused CLASP-CLEAVIR-BIR::BIND = 1752, 
// Unused STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Isoname_O__ = 644, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-SHARPSIGN-SINGLE-QUOTE = 1394, 
// Unused CONCRETE-SYNTAX-TREE::SUPPLIED-P-MIXIN = 1293, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-REST = 1307, 
// Unused CLEAVIR-ENVIRONMENT::TAG-INFO = 1625, 
// Unused CLASP-CLEAVIR-BMIR::CONSP = 1767, 
// Unused ECLECTOR.READER::FEATURE-EXPRESSION-TYPE-ERROR/READER = 1443, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-OPTIONAL-PARAMETER-GROUP = 1280, 
// Unused CLEAVIR-BIR::CATCH = 1512, 
// Unused CLEAVIR-BIR::UNUSED-VARIABLE = 1526, 
// Unused CLASP-ANALYZER::CXX-FIXUP-OFFSET = 1866, 
// Unused CLASP-ANALYZER::CONTAINER-OFFSET = 1871, 
// Unused CLASP-ANALYZER::GLOBAL-VARIABLE = 1809, 
// Unused CLASP-CLEAVIR-BMIR::GENERALP = 1770, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-CAR-AST = 1730, 
// Unused STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__KeyValuePair__ = 731, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-QUOTE = 1369, 
// Unused CORE::SIMPLE-FILE-ERROR = 1151, 
// Unused COMMON-LISP::STYLE-WARNING = 1120, 
// Unused ECLECTOR.READER::UNQUOTE-SPLICING-IN-DOTTED-LIST = 1385, 
// Unused COMMON-LISP::STANDARD-OBJECT = 1067, 
// Unused CLEAVIR-CST-TO-AST::VARIABLE-MUST-BE-A-SYMBOL = 1680, 
// Unused CONCRETE-SYNTAX-TREE::EARLEY-ITEM = 1328, 
// Unused CLEAVIR-AST::TAG-AST = 1563, 
// Unused STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TopologyAtomInfo_O__ = 664, 
// Unused CLASP-ANALYZER::GCVECTOR-OFFSET = 1874, 
// Unused CLASP-ANALYZER::RAW-POINTER-OFFSET = 1864, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-OPTIONAL-PARAMETER-GROUP = 1283, 
// Unused CLANG-TOOL::COUNT-MATCH-CALLBACK = 1783, 
// Unused CONCRETE-SYNTAX-TREE::FORM-MIXIN = 1292, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-OPTIONAL-PARAMETER = 1300, 
// Unused COMMON-LISP::SERIOUS-CONDITION = 1116, 
// Unused ACCLIMATION::JAPANESE = 1252, 
// Unused CLEAVIR-CST-TO-AST::SPECIAL-SYMBOL-MACRO = 1685, 
// Unused STAMPWTAG_gctools__GCVector_moveable_core__DynamicBinding_ = 718, 
// Unused CORE::CODE-BLOCK = 1087, 
// Unused CLEAVIR-ENVIRONMENT::SPECIAL-VARIABLE-INFO = 1616, 
// Unused CLEAVIR-AST::LEXICAL-AST = 1546, 
// Unused CLEAVIR-BIR::NO-OUTPUT = 1477, 
// Unused CLEAVIR-ENVIRONMENT::GLOBAL-FUNCTION-INFO = 1620, 
// Unused CLEAVIR-AST::COERCE-AST = 1599, 
// Unused CLASP-ANALYZER::CLASSALLOC = 1801, 
// Unused CLASP-CLEAVIR-BIR::DEFCALLBACK = 1755, 
// Unused CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE = 1843, 
// Unused STAMPWTAG_gctools__GCBitUnitArray_moveable_4__false_ = 714, 
// Unused ECLECTOR.READER::SLOT-NAME-IS-NOT-A-STRING-DESIGNATOR = 1432, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-SHARPSIGN-C = 1418, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-REQUIRED-PARAMETER-GROUP = 1282, 
// Unused CLEAVIR-AST::MULTIPLE-VALUE-SETQ-AST = 1562, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-VSET-AST = 1743, 
// Unused CLEAVIR-ENVIRONMENT::SPECIAL-OPERATOR-INFO = 1623, 
// Unused CORE::QUEUE = 1778, 
// Unused CLEAVIR-AST::BRANCH-AST = 1570, 
// Unused CLEAVIR-CST-TO-AST::EVAL-ERROR = 1701, 
// Unused ECLECTOR.READER::DIGIT-CONDITION = 1404, 
// Unused CLEAVIR-AST::IMMEDIATE-AST = 1543, 
// Unused ALEXANDRIA.0.DEV::SIMPLE-PARSE-ERROR = 1333, 
// Unused MP::LOCK = 1089, 
// Unused SB-BSD-SOCKETS::LOCAL-SOCKET = 1221, 
// Unused STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__OctNode_O__ = 674, 
// Unused CLEAVIR-BIR::ALLOCA = 1508, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-BACKSLASH = 1400, 
// Unused COMMON-LISP::WARNING = 1115, 
// Unused CLASP-ANALYZER::CONSTANT-ARRAY-OFFSET = 1870, 
// Unused CLANG-TOOL::MATCH-INFO = 1784, 
// Unused ECLECTOR.READER::INVALID-CONTEXT-FOR-RIGHT-PARENTHESIS = 1393, 
// Unused GRAY::FUNDAMENTAL-CHARACTER-INPUT-STREAM = 1191, 
// Unused CLASP-CLEAVIR-AST::MULTIPLE-VALUE-FOREIGN-CALL-AST = 1718, 
// Unused ECLECTOR.READER::MULTIPLE-OBJECTS-FOLLOWING-CONSING-DOT = 1392, 
// Unused ACCLIMATION::LOCALE = 1243, 
// Unused CLASP-ANALYZER::RVALUE-REFERENCE-CTYPE = 1827, 
// Unused CLEAVIR-BIR::ONE-INPUT = 1476, 
// Unused CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE = 1840, 
// Unused CLASP-CLEAVIR-AST::RACK-STAMP-AST = 1724, 
// Unused ECLECTOR.READER::SYMBOL-DOES-NOT-EXIST = 1354, 
// Unused CLEAVIR-ENVIRONMENT::VARIABLE-IGNORE = 1637, 
// Unused CLASP-ANALYZER::UNCLASSIFIED-TEMPLATE-SPECIALIZATION-CTYPE = 1835, 
// Unused CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE = 1851, 
// Unused CLASP-ANALYZER::BITUNIT-CTYPE = 1818, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-AUX = 1311, 
// Unused GRAY::FUNDAMENTAL-INPUT-STREAM = 1187, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-SHARPSIGN-DOT = 1397, 
// Unused CLASP-ANALYZER::TEMPLATE-TYPE-PARM-CTYPE = 1826, 
// Unused CLEAVIR-AST::THE-AST = 1566, 
// Unused GRAY::FUNDAMENTAL-CHARACTER-OUTPUT-STREAM = 1192, 
// Unused CLEAVIR-AST::LOAD-TIME-VALUE-AST = 1568, 
// Unused CLEAVIR-AST::FLOAT-DIV-AST = 1590, 
// Unused CLOSER-MOP::DEFMETHOD-WITHOUT-GENERIC-FUNCTION = 1336, 
// Unused CLOS::FUNCALLABLE-STANDARD-CLASS = 1079, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-KEY-PARAMETER = 1297, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-VREF-AST = 1742, 
// Unused CLEAVIR-AST::CAR-AST = 1600, 
// Unused CONCRETE-SYNTAX-TREE::PARSER = 1330, 
// Unused CONCRETE-SYNTAX-TREE::PARAMETER = 1291, 
// Unused CLASP-ANALYZER::PARALLEL-JOB = 1880, 
// Unused CLEAVIR-BIR::PHI = 1483, 
// Unused EXT::BUS-ERROR = 1128, 
// Unused CLASP-ANALYZER::ATOMIC-SMART-PTR-OFFSET = 1857, 
// Unused CLOS::SLOT-DEFINITION = 1069, 
// Unused CLEAVIR-CST-TO-AST::IGNORED-VARIABLE-REFERENCED = 1666, 
// Unused SEQUENCE::PROTOCOL-UNIMPLEMENTED = 1195, 
// Unused ECLECTOR.READER::SYMBOL-IS-NOT-EXTERNAL = 1355, 
// Unused CLEAVIR-CONDITIONS::PROGRAM-WARNING = 1460, 
// Unused CLASP-CLEAVIR-BMIR::MEMREF2 = 1772, 
// Unused CLASP-ANALYZER::BUILTIN-CTYPE = 1830, 
// Unused CLEAVIR-AST::FUNCTION-AST = 1554, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-BACKQUOTE = 1376, 
// Unused CLASP-CLEAVIR::CLASP-GLOBAL-ENVIRONMENT = 1707, 
// Unused CLEAVIR-AST::FIXNUM-SUB-AST = 1581, 
// Unused ACCLIMATION::SVENSKA = 1245, 
// Unused CLASP-ANALYZER::LOCAL-VARIABLE = 1811, 
// Unused CLASP-ANALYZER::NAMESPACE = 1879, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-NAMES-SPECIAL-OPERATOR = 1690, 
// Unused CONCRETE-SYNTAX-TREE::CONS-STRUCTURE-MISMATCH-ERROR = 1614, 
// Unused COMMON-LISP::METHOD-COMBINATION = 1073, 
// Unused ECLECTOR.READER::ZERO-DENOMINATOR = 1407, 
// Unused CLEAVIR-CST-TO-AST::ODD-KEYWORD-PORTION-STYLE-WARNING = 1664, 
// Unused CLEAVIR-AST::FLOAT-SIN-AST = 1596, 
// Unused ECLECTOR.READTABLE::CHAR-MUST-BE-A-DISPATCHING-CHARACTER = 1345, 
// Unused CLEAVIR-ENVIRONMENT::FUNCTION-IGNORE = 1638, 
// Unused ECLECTOR.READER::NUMERIC-PARAMETER-NOT-SUPPLIED-BUT-REQUIRED = 1368, 
// Unused CLASP-ANALYZER::INCOMPLETE-ARRAY-CTYPE = 1841, 
// Unused CLEAVIR-BIR::MULTIPLE-TO-FIXED = 1523, 
// Unused ACCLIMATION::FRENCH = 1249, 
// Unused ECLECTOR.READER::STRUCTURE-TYPE-NAME-IS-NOT-A-SYMBOL = 1430, 
// Unused ECLECTOR.READER::NAMESTRING-MUST-FOLLOW-SHARPSIGN-P = 1437, 
// Unused CLEAVIR-ENVIRONMENT::GLOBAL-MACRO-INFO = 1622, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-MUST-BE-PROPER-FUNCTION-NAME = 1676, 
// Unused CLEAVIR-AST::ASET-AST = 1609, 
// Unused CLASP-ANALYZER::GCARRAY-OFFSET = 1872, 
// Unused COMMON-LISP::CONTROL-ERROR = 1140, 
// Unused CLASP-ANALYZER::CXXRECORD-CTYPE = 1842, 
// Unused CLASP-ANALYZER::GCARRAY-MOVEABLE-CTYPE = 1852, 
// Unused CLEAVIR-CST-TO-AST::NO-DEFAULT-METHOD = 1691, 
// Unused CORE::SEQUENCE-OUT-OF-BOUNDS = 1134, 
// Unused CONCRETE-SYNTAX-TREE::ECL = 1264, 
// Unused COMMON-LISP::PRINT-NOT-READABLE = 1171, 
// Unused CONCRETE-SYNTAX-TREE::NULL-STRUCTURE-MISMATCH-ERROR = 1613, 
// Unused COMMON-LISP::SIMPLE-TYPE-ERROR = 1135, 
// Unused CLEAVIR-IO::FILE-DOES-NOT-EXIST = 1532, 
// Unused SB-BSD-SOCKETS::OPERATION-NOT-PERMITTED-ERROR = 1232, 
// Unused CLOS::STANDARD-WRITER-METHOD = 1099, 
// Unused CLEAVIR-BIR::LOAD-TIME-VALUE-REFERENCE = 1495, 
// Unused ECLECTOR.READER::NON-STRING-FOLLOWING-SHARPSIGN-P = 1438, 
// Unused EXT::ASSERT-ERROR = 1180, 
// Unused CLASP-ANALYZER::MUTEX-CTYPE = 1823, 
// Unused CLASP-CLEAVIR::CLASP = 1705, 
// Unused CONCRETE-SYNTAX-TREE::DEFTYPE-LAMBDA-LIST = 1322, 
// Unused CORE::CASE-FAILURE = 1136, 
// Unused CORE::SECTION-START = 1199, 
// Unused CONCRETE-SYNTAX-TREE::GRAMMAR = 1327, 
// Unused CLEAVIR-BIR::SSA = 1467, 
// Unused COMMON-LISP::FILE-ERROR = 1150, 
// Unused CLEAVIR-ENVIRONMENT::LEXICAL-VARIABLE = 1628, 
// Unused ECLECTOR.READER::UNTERMINATED-MULTIPLE-ESCAPE-IN-CHARACTER-NAME = 1402, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-KEY-PARAMETER = 1298, 
// Unused CONCRETE-SYNTAX-TREE::CLASP = 1263, 
// Unused CLEAVIR-AST::IF-AST = 1569, 
// Unused CORE::SIMPLE-PROGRAM-ERROR = 1139, 
// Unused CLEAVIR-ENVIRONMENT::VARIABLE-DYNAMIC-EXTENT = 1639, 
// Unused CLEAVIR-AST::MULTIWAY-AST-MIXIN = 1539, 
// Unused ECLECTOR.READER::NO-STRUCTURE-TYPE-NAME-FOUND = 1429, 
// Unused COMMON-LISP::END-OF-FILE = 1149, 
// Unused CLANG-TOOL::SINGLE-TOOL = 1789, 
// Unused COMPILER::UNDEFINED-TYPE-WARNING = 1212, 
// Unused CLEAVIR-BIR::INSTRUCTION = 1473, 
// Unused ECLECTOR.READER::UNTERMINATED-SINGLE-ESCAPE-IN-STRING = 1372, 
// Unused CLASP-ANALYZER::DONT-ANALYZE-OFFSET = 1860, 
// Unused CLASP-CLEAVIR::CLASP-64BIT = 1706, 
// Unused STAMPWTAG_gctools__GCBitUnitArray_moveable_1__false_ = 712, 
// Unused CONCRETE-SYNTAX-TREE::EARLEY-STATE = 1329, 
// Unused SB-BSD-SOCKETS::BAD-FILE-DESCRIPTOR-ERROR = 1225, 
// Unused CLEAVIR-ENVIRONMENT::MACRO = 1632, 
// Unused CLASP-ANALYZER::STAMP-VALUE-GENERATOR = 1813, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-CONSING-DOT = 1391, 
// Unused CLEAVIR-CST-TO-AST::INCORRECT-NUMBER-OF-ARGUMENTS-STYLE-WARNING = 1662, 
// Unused CLEAVIR-CST-TO-AST::COMPILATION-STYLE-WARNING = 1650, 
// Unused CLEAVIR-BIR::MV-CALL = 1501, 
// Unused CORE::DO-NOT-FUNCALL-SPECIAL-OPERATOR = 1167, 
// Unused CLASP-ANALYZER::TEMPLATED-STAMP = 1807, 
// Unused CLASP-ANALYZER::ABSTRACTALLOC = 1799, 
// Unused CLEAVIR-AST::GO-AST = 1565, 
// Unused CLASP-CLEAVIR-AST::SLOT-CAS-AST = 1740, 
// Unused CLEAVIR-AST::BOOLEAN-AST-MIXIN = 1538, 
// Unused CONCRETE-SYNTAX-TREE::SINGLETON-PARAMETER-GROUP = 1285, 
// Unused CLEAVIR-BIR::TPRIMOP = 1498, 
// Unused SB-BSD-SOCKETS::NETDB-INTERNAL-ERROR = 1237, 
// Unused CLEAVIR-AST::SIDE-EFFECT-FREE-AST-MIXIN = 1542, 
// Unused CLEAVIR-ENVIRONMENT::SYMBOL-MACRO = 1630, 
// Unused COMMON-LISP::SEQUENCE = 1080, 
// Unused ECLECTOR.READER::INVALID-CONTEXT-FOR-UNQUOTE = 1380, 
// Unused CLEAVIR-ENVIRONMENT::ENTRY = 1627, 
// Unused CLASP-CLEAVIR-AST::HEADER-STAMP-CASE-AST = 1722, 
// Unused CLASP-ANALYZER::GCBITUNITARRAY-OFFSET = 1873, 
// Unused CLASP-ANALYZER::ANALYSIS = 1814, 
// Unused CLEAVIR-AST::FIXNUM-NOT-LESS-AST = 1585, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-KEY-PARAMETER-GROUP = 1278, 
// Unused COMMON-LISP::BIT-VECTOR = 1085, 
// Unused ECLECTOR.READTABLE::SUB-CHAR-MUST-NOT-BE-A-DECIMAL-DIGIT = 1344, 
// Unused CLEAVIR-CST-TO-AST::ODD-KEYWORD-PORTION-WARNING = 1663, 
// Unused ECLECTOR.READER::UNTERMINATED-MULTIPLE-ESCAPE = 1351, 
// Unused CLASP-ANALYZER::DEBUG-INFO = 1793, 
// Unused CLEAVIR-AST::NO-VALUE-AST-MIXIN = 1540, 
// Unused CLEAVIR-BIR::EQ-TEST = 1519, 
// Unused CLEAVIR-BIR::READVAR = 1493, 
// Unused CLASP-ANALYZER::GCBITUNITARRAY-MOVEABLE-CTYPE = 1853, 
// Unused ECLECTOR.BASE::STREAM-POSITION-READER-ERROR = 1338, 
// Unused CLEAVIR-CST-TO-AST::MALFORMED-LAMBDA-LIST = 1693, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-WHOLE = 1313, 
// Unused CLASP-ANALYZER::CONTAINER = 1850, 
// Unused CLEAVIR-BIR::LINEAR-DATUM = 1468, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-RPLACA-AST = 1732, 
// Unused CLEAVIR-ENVIRONMENT::OPTIMIZE = 1641, 
// Unused CLEAVIR-AST::SCOPE-AST = 1610, 
// Unused ECLECTOR.READER::SYMBOL-ACCESS-ERROR = 1353, 
// Unused GRAY::FUNDAMENTAL-CHARACTER-STREAM = 1189, 
// Unused ECLECTOR.READER::ARRAY-INITIALIZATION-ERROR = 1414, 
// Unused ECLECTOR.READER::UNTERMINATED-SINGLE-ESCAPE-IN-SYMBOL = 1358, 
// Unused COMMON-LISP::STRING = 1083, 
// Unused CLEAVIR-CST-TO-AST::NO-VARIABLE-INFO = 1656, 
// Unused CONCRETE-SYNTAX-TREE::SBCL = 1261, 
// Unused EXT::SEQUENCE-STREAM = 1086, 
// Unused STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Entity_O___ = 684, 
// Unused SB-BSD-SOCKETS::NETDB-SUCCESS-ERROR = 1238, 
// Unused CLEAVIR-CST-TO-AST::EVAL-STYLE-WARNING = 1703, 
// Unused CLASP-CLEAVIR-BIR::ABSTRACT-VREF = 1762, 
// Unused CLASP-ANALYZER::LISPALLOC = 1800, 
// Unused CLEAVIR-CST-TO-AST::DEFAULT-CASE-MISSING = 1694, 
// Unused CLOS::FUNCALLABLE-STANDARD-OBJECT = 1091, 
// Unused EXT::CHARACTER-ENCODING-ERROR = 1182, 
// Unused CLEAVIR-CST-TO-AST::COMPILER-MACRO-EXPANSION-WARNING = 1699, 
// Unused CLEAVIR-BIR::DYNAMIC-LETI = 1514, 
// Unused CLEAVIR-BIR::CALL = 1500, 
// Unused ACCLIMATION::DEUTSCH = 1246, 
// Unused ECLECTOR.READER::UNTERMINATED-MULTIPLE-ESCAPE-IN-SYMBOL = 1359, 
// Unused CLEAVIR-ENVIRONMENT::LOCAL-FUNCTION-INFO = 1619, 
// Unused CLEAVIR-CST-TO-AST::SETQ-VAR-MUST-BE-SYMBOL = 1683, 
// Unused COMMON-LISP::BASE-STRING = 1084, 
// Unused CLASP-ANALYZER::POINTER-TO-RECORD-CTYPE = 1845, 
// Unused CORE::QUEUED-OP = 1198, 
// Unused ECLECTOR.READER::BACKQUOTE-IN-INVALID-CONTEXT = 1375, 
// Unused CLEAVIR-AST::TOP-LEVEL-FUNCTION-AST = 1555, 
// Unused CLEAVIR-AST::CDR-AST = 1601, 
// Unused CLASP-CLEAVIR-AST::CAS-CAR-AST = 1734, 
// Unused CONCRETE-SYNTAX-TREE::SPECIALIZED-LAMBDA-LIST = 1317, 
// Unused CLEAVIR-BIR::PROBLEM = 1530, 
// Unused CLEAVIR-BIR::VPRIMOP = 1497, 
// Unused CONCRETE-SYNTAX-TREE::DEFINE-METHOD-COMBINATION-LAMBDA-LIST = 1324, 
// Unused CLASP-CLEAVIR-BMIR::SINGLE-FLOAT-P = 1769, 
// Unused CLEAVIR-AST::CONSTANT-AST = 1544, 
// Unused CLEAVIR-AST::FLOAT-SQRT-AST = 1598, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-SHARPSIGN-A = 1412, 
// Unused CLEAVIR-BIR::VALUE = 1470, 
// Unused CLEAVIR-AST::CONSTANT-SYMBOL-VALUE-AST = 1548, 
// Unused COMMON-LISP::GENERIC-FUNCTION = 1092, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-REST-PARAMETER-GROUP = 1287, 
// Unused CONCRETE-SYNTAX-TREE::REST-PARAMETER-GROUP = 1286, 
// Unused CLEAVIR-ENVIRONMENT::SPECIAL-VARIABLE = 1629, 
// Unused CLASP-ANALYZER::JOB-GROUP = 1882, 
// Unused MP::PROCESS-JOIN-ERROR = 1145, 
// Unused STAMPWTAG_gctools__GCVector_moveable_core__ExceptionEntry_ = 719, 
// Unused CLEAVIR-BIR::ABSTRACT-LOCAL-CALL = 1502, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-NAMES-GLOBAL-MACRO = 1688, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-FEATURE-EXPRESSION = 1446, 
// Unused CLEAVIR-IO::MODEL-CONDITION = 1531, 
// Unused CLASP-ANALYZER::UNCLASSIFIED-CTYPE = 1831, 
// Unused CORE::FORMAT-WARNING-TOO-FEW-ARGUMENTS = 1177, 
// Unused CONCRETE-SYNTAX-TREE::AUX-PARAMETER-GROUP = 1279, 
// Unused CORE::INDENTATION = 1201, 
// Unused STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SingleDispatchMethod_O__ = 736, 
// Unused ECLECTOR.READER::INVALID-RADIX = 1408, 
// Unused CLOS::%METHOD-FUNCTION = 1103, 
// Unused CLEAVIR-BIR::MODULE = 1487, 
// Unused CLEAVIR-AST::FIXNUM-LESS-AST = 1582, 
// Unused CLASP-CLEAVIR-BIR::UNWIND-PROTECT = 1751, 
// Unused STATIC-GFS::REINITIALIZER = 1108, 
// Unused ECLECTOR.READER::COMPLEX-PART-EXPECTED = 1423, 
// Unused GRAY::FUNDAMENTAL-STREAM = 1186, 
// Unused CLEAVIR-AST::FLOAT-ADD-AST = 1587, 
// Unused ECLECTOR.READER::SLOT-VALUE-CONDITION = 1433, 
// Unused CLEAVIR-AST::SET-CONSTANT-SYMBOL-VALUE-AST = 1550, 
// Unused CLEAVIR-CST-TO-AST::COMPILER-MACRO-EXPANSION-ERROR = 1698, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-ALLOW-OTHER-KEYS = 1310, 
// Unused CLASP-CLEAVIR-AST::SETF-FDEFINITION-AST = 1713, 
// Unused CLASP-CLEAVIR-AST::CAS-AST = 1728, 
// Unused CLEAVIR-ENVIRONMENT::LOCAL-MACRO-INFO = 1621, 
// Unused CLEAVIR-CST-TO-AST::INCORRECT-NUMBER-OF-ARGUMENTS = 1652, 
// Unused CLEAVIR-AST::SLOT-READ-AST = 1604, 
// Unused COMMON-LISP::FLOATING-POINT-OVERFLOW = 1163, 
// Unused COMMON-LISP::SIMPLE-CONDITION = 1118, 
// Unused ECLECTOR.READER::INVALID-DEFAULT-FLOAT-FORMAT = 1409, 
// Unused CLEAVIR-CST-TO-AST::ODD-KEYWORD-PORTION = 1654, 
// Unused CLASP-CLEAVIR-BIR::VSET = 1764, 
// Unused CLEAVIR-CST-TO-AST::READ-ONLY-P-MUST-BE-BOOLEAN = 1681, 
// Unused SB-BSD-SOCKETS::OUT-OF-MEMORY-ERROR = 1230, 
// Unused COMMON-LISP::UNBOUND-VARIABLE = 1157, 
// Unused SB-BSD-SOCKETS::NETWORK-UNREACHABLE-ERROR = 1235, 
// Unused CLEAVIR-AST::MULTIPLE-VALUE-CALL-AST = 1571, 
// Unused CLEAVIR-BIR::VERIFICATION-ERROR = 1529, 
// Unused COMMON-LISP::ERROR = 1117, 
// Unused EXT::NAME-CONFLICT = 1154, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-SHARPSIGN-A = 1411, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-CONSING-DOT = 1390, 
// Unused CONCRETE-SYNTAX-TREE::EXPLICIT-PARAMETER-GROUP = 1271, 
// Unused SB-BSD-SOCKETS::NO-BUFFERS-ERROR = 1229, 
// Unused CLEAVIR-BIR::DYNAMIC-ENVIRONMENT = 1464, 
// Unused CLEAVIR-CST-TO-AST::BLOCK-NAME-MUST-BE-A-SYMBOL = 1667, 
// Unused ECLECTOR.READER::UNTERMINATED-SINGLE-ESCAPE = 1350, 
// Unused SB-BSD-SOCKETS::HOST-NOT-FOUND-ERROR = 1239, 
// Unused CLEAVIR-ENVIRONMENT::INLINE-EXPANSION = 1643, 
// Unused CLEAVIR-BIR::NOP = 1490, 
// Unused CLEAVIR-AST::AREF-AST = 1608, 
// Unused CLASP-ANALYZER::MANAGER = 1877, 
// Unused CLEAVIR-BIR::CAST = 1524, 
// Unused CLASP-CLEAVIR-BMIR::FIXNUMP = 1766, 
// Unused COMMON-LISP::VARIABLE = 1808, 
// Unused ECLECTOR.READER::SINGLE-FEATURE-EXPECTED/READER = 1445, 
// Unused COMMON-LISP::CONDITION = 1114, 
// Unused ECLECTOR.READER::TWO-PACKAGE-MARKERS-MUST-NOT-BE-FIRST = 1363, 
// Unused COMPILER::UNDEFINED-WARNING = 1209, 
// Unused CLASP-ANALYZER::DONT-EXPOSE-OFFSET = 1859, 
// Unused ECLECTOR.READER::REFERENCE-ERROR = 1450, 
// Unused CORE::ROW-MAJOR-OUT-OF-BOUNDS = 1132, 
// Unused COMPILER::SIMPLE-COMPILER-WARNING = 1216, 
// Unused CLOS::FORWARD-REFERENCED-CLASS = 1076, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-AST = 1727, 
// Unused CLEAVIR-BIR::PRIMOP = 1496, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-UNQUOTE = 1383, 
// Unused CLASP-ANALYZER::CLASS-LAYOUT = 1804, 
// Unused ECLECTOR.READER::BACKQUOTE-ERROR = 1373, 
// Unused CLEAVIR-AST::ONE-VALUE-AST-MIXIN = 1541, 
// Unused CLEAVIR-CST-TO-AST::SYMBOL-MACRO-NAMES-GLOBAL-SPECIAL = 1687, 
// Unused CLOS::METAOBJECT = 1068, 
// Unused COMMON-LISP::UNDEFINED-FUNCTION = 1159, 
// Unused ECLECTOR.READER::BACKQUOTE-CONTEXT-ERROR = 1374, 
// Unused CONCRETE-SYNTAX-TREE::SINGLETON-PARAMETER-GROUP-MIXIN = 1268, 
// Unused CLASP-CLEAVIR-AST::BIND-AST = 1745, 
// Unused CORE::PRETTY-STREAM = 1196, 
// Unused CLANG-TOOL::GOOD-DUMP-MATCH-CALLBACK = 1781, 
// Unused COMMON-LISP::FLOATING-POINT-INEXACT = 1165, 
// Unused CLEAVIR-CST-TO-AST::INCORRECT-NUMBER-OF-ARGUMENTS-WARNING = 1661, 
// Unused CONCRETE-SYNTAX-TREE::CCL = 1265, 
// Unused COMMON-LISP::PARSE-ERROR = 1172, 
// Unused CLEAVIR-AST::TAGBODY-AST = 1564, 
// Unused CLASP-ANALYZER::CTYPE = 1817, 
// Unused SB-BSD-SOCKETS::SOCKET-TYPE-NOT-SUPPORTED-ERROR = 1234, 
// Unused CLEAVIR-CONDITIONS::PROGRAM-CONDITION = 1458, 
// Unused CLOS::STANDARD-DIRECT-SLOT-DEFINITION = 1066, 
// Unused CLEAVIR-ENVIRONMENT::BLOCK = 1633, 
// Unused CLASP-ANALYZER::DONT-EXPOSE-CTYPE = 1848, 
// Unused CLASP-ANALYZER::SIMPLE-CTYPE = 1819, 
// Unused ACCLIMATION::VIETNAMESE = 1251, 
// Unused SB-BSD-SOCKETS::ADDRESS-IN-USE-ERROR = 1223, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-BODY = 1308, 
// Unused CLASP-CLEAVIR-AST::BIND-VA-LIST-AST = 1747, 
// Unused CLASP-ANALYZER::ATOMIC-POD-OFFSET = 1858, 
// Unused COMMON-LISP::UNBOUND-SLOT = 1158, 
// Unused CLEAVIR-ENVIRONMENT::FUNCTION-DYNAMIC-EXTENT = 1640, 
// Unused CORE::SIMPLE-PARSE-ERROR = 1173, 
// Unused ECLECTOR.READER::NO-SLOT-VALUE-FOUND = 1435, 
// Unused ECLECTOR.READER::END-OF-LIST = 1348, 
// Unused COMMON-LISP::SIMPLE-WARNING = 1119, 
// Unused CONCRETE-SYNTAX-TREE::CLIENT = 1260, 
// Unused CLEAVIR-BIR::IBLOCK = 1485, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-SHARPSIGN-EQUALS = 1448, 
// Unused CLEAVIR-CST-TO-AST::ENCAPSULATED-CONDITION = 1651, 
// Unused CLASP-CLEAVIR-BIR::MV-FOREIGN-CALL = 1753, 
// Unused CLEAVIR-AST::BIND-AST = 1576, 
// Unused CLEAVIR-BIR::READTEMP = 1510, 
// Unused STATIC-GFS::CONSTRUCTOR-CELL = 1106, 
// Unused ECLECTOR.CONCRETE-SYNTAX-TREE::CST-CLIENT = 1455, 
// Unused CLANG-TOOL::DUMP-MATCH-CALLBACK = 1782, 
// Unused CLEAVIR-ENVIRONMENT::FUNCTION-TYPE = 1636, 
// Unused COMPILER::REDEFINED-FUNCTION-WARNING = 1213, 
// Unused CLASP-ANALYZER::PROJECT = 1812, 
// Unused CLASP-ANALYZER::INSTANCE-FIELD = 1795, 
// Unused ECLECTOR.READER::UNQUOTE-ERROR = 1379, 
// Unused SB-BSD-SOCKETS::INVALID-ARGUMENT-ERROR = 1228, 
// Unused CLASP-ANALYZER::INSTANCE-ARRAY-ELEMENT = 1797, 
// Unused ECLECTOR.READER::END-OF-INPUT-BEFORE-SLOT-VALUE = 1434, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-CDR-AST = 1731, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-SHARPSIGN-SINGLE-QUOTE = 1395, 
// Unused CLEAVIR-AST::FLOAT-COS-AST = 1597, 
// Unused ECLECTOR.BASE::INCOMPLETE-CONSTRUCT = 1340, 
// Unused CLEAVIR-CST-TO-AST::SETQ-CONSTANT-VARIABLE = 1684, 
// Unused CLEAVIR-IO::UNKNOWN-FILE-VERSION = 1533, 
// Unused ECLECTOR.BASE::MISSING-DELIMITER = 1341, 
// Unused CLASP-CLEAVIR-BIR::VREF = 1763, 
// Unused CLEAVIR-ENVIRONMENT::FUNCTION = 1631, 
// Unused CLEAVIR-AST::EQ-AST = 1577, 
// Unused CLASP-ANALYZER::RECORD-CTYPE = 1836, 
// Unused CLEAVIR-BIR::ARGUMENT = 1482, 
// Unused CLANG-TOOL::CODE-MATCH-TIMER = 1780, 
// Unused CONCRETE-SYNTAX-TREE::CST = 1254, 
// Unused STATIC-GFS::CELL-UPDATER = 1107, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-BACKQUOTE = 1377, 
// Unused CLASP-ANALYZER::SIMPLE-STAMP = 1806, 
// Unused CLEAVIR-AST::LEXICAL-VARIABLE = 1545, 
// Unused ACCLIMATION::LANGUAGE = 1244, 
// Unused COMPILER::WRONG-ARGCOUNT-WARNING = 1214, 
// Unused CLASP-ANALYZER::PARALLEL-RESULT = 1881, 
// Unused EXT::STORAGE-EXHAUSTED = 1126, 
// Unused CLEAVIR-AST::SET-SYMBOL-VALUE-AST = 1549, 
// Unused GRAY::FUNDAMENTAL-BINARY-OUTPUT-STREAM = 1194, 
// Unused ECLECTOR.READER::READER-CONDITIONAL-CONDITION = 1439, 
// Unused ECLECTOR.READER::END-OF-INPUT-BEFORE-COMPLEX-PART = 1422, 
// Unused CLASP-ANALYZER::SHARED-MUTEX-CTYPE = 1822, 
// Unused CORE::CXX-CLASS = 1077, 
// Unused CLEAVIR-BIR::ONE-OUTPUT = 1478, 
// Unused CLEAVIR-BIR::LOAD-TIME-VALUE = 1472, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-KEY-PARAMETER = 1304, 
// Unused SB-BSD-SOCKETS::SOCKET-ERROR = 1222, 
// Unused CLEAVIR-CST-TO-AST::NO-BLOCK-INFO = 1658, 
// Unused CLEAVIR-AST::CASE-AST = 1579, 
// Unused CONCRETE-SYNTAX-TREE::LAMBDA-LIST-TYPE = 1314, 
// Unused SB-BSD-SOCKETS::SOCKET = 1219, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-UNQUOTE = 1384, 
// Unused CLEAVIR-AST::SYMBOL-VALUE-AST = 1547, 
// Unused ECLECTOR.READER::UNTERMINATED-STRING = 1371, 
// Unused CORE::NEWLINE = 1200, 
// Unused CORE::PPRINT-DISPATCH-TABLE = 1206, 
// Unused ECLECTOR.READER::SHARPSIGN-INVALID = 1366, 
// Unused CLEAVIR-BIR::VALUES-COLLECT = 1507, 
// Unused CLEAVIR-AST::RPLACD-AST = 1603, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-OPTIONAL-PARAMETER = 1296, 
// Unused CLEAVIR-CST-TO-AST::NO-TAG-INFO = 1657, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-KEY-PARAMETER-GROUP = 1284, 
// Unused CONCRETE-SYNTAX-TREE::GENERIC-FUNCTION-LAMBDA-LIST = 1316, 
// Unused CLEAVIR-CST-TO-AST::INVALID-EVAL-WHEN-SITUATION = 1672, 
// Unused CLASP-CLEAVIR-BIR::VCAS = 1765, 
// Unused STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AntechamberRoot_O__ = 645, 
// Unused CLEAVIR-CST-TO-AST::LAMBDA-MUST-BE-PROPER-LIST = 1674, 
// Unused EXT::UNIX-SIGNAL-RECEIVED = 1129, 
// Unused CLASP-ANALYZER::ARRAY-OFFSET = 1869, 
// Unused CLASP-CLEAVIR-BIR::FENCE = 1758, 
// Unused CLASP-CLEAVIR-AST::VREF-AST = 1741, 
// Unused EXT::STREAM-DECODING-ERROR = 1185, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-OPTIONAL-PARAMETER-GROUP = 1275, 
// Unused CLASP-ANALYZER::FUNCTION-PROTO-CTYPE = 1824, 
// Unused CLEAVIR-BIR::CONSTANT-REFERENCE = 1494, 
// Unused STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O___gctools__smart_ptr_kinematics__MonomerNode_O_____ = 634, 
// Unused ECLECTOR.READER::INCORRECT-INITIALIZATION-LENGTH = 1417, 
// Unused CLASP-ANALYZER::POINTER-OFFSET = 1863, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-KEY-PARAMETER-GROUP = 1277, 
// Unused CLEAVIR-AST::FLOAT-EQUAL-AST = 1595, 
// Unused CORE::WRONG-NUMBER-OF-ARGUMENTS = 1168, 
// Unused CLOS::EFFECTIVE-SLOT-DEFINITION = 1072, 
// Unused MP::NOT-ATOMIC = 1143, 
// Unused ECLECTOR.READTABLE::UNKNOWN-MACRO-SUB-CHARACTER = 1346, 
// Unused CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT = 1816, 
// Unused SB-BSD-SOCKETS::TRY-AGAIN-ERROR = 1240, 
// Unused CONCRETE-SYNTAX-TREE::CONS-CST-REQUIRED = 1259, 
// Unused CLASP-CLEAVIR-AST::DERIVABLE-STAMP-AST = 1726, 
// Unused CLEAVIR-BIR::CONSTANT = 1471, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-SHARPSIGN-P = 1436, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-PARAMETER = 1302, 
// Unused CLASP-ANALYZER::DONT-ANALYZE-CTYPE = 1849, 
// Unused CLASP-ANALYZER::STATIC-LOCAL-VARIABLE = 1810, 
// Unused ACCLIMATION::CONDITION = 1253, 
// Unused CLOS::DIRECT-SLOT-DEFINITION = 1071, 
// Unused COMPILER::COMPILED-PROGRAM-ERROR = 1207, 
// Unused CLANG-TOOL::WRONG-MATCHER = 1790, 
// Unused CLEAVIR-AST::DYNAMIC-ALLOCATION-AST = 1574, 
// Unused CLASP-ANALYZER::CXX-MUTEX-OFFSET = 1868, 
// Unused CLEAVIR-AST::FLOAT-SUB-AST = 1588, 
// Unused ECLECTOR.READER::SYMBOL-NAME-MUST-NOT-END-WITH-PACKAGE-MARKER = 1361, 
// Unused CLASP-CLEAVIR-BMIR::HEADERQ = 1771, 
// Unused CLEAVIR-BIR::TERMINATOR = 1479, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-REQUIRED-PARAMETER-GROUP = 1273, 
// Unused CONCRETE-SYNTAX-TREE::SIMPLE-VARIABLE = 1295, 
// Unused SB-BSD-SOCKETS::INTERRUPTED-ERROR = 1224, 
// Unused MP::RWLOCK = 1090, 
// Unused COMMON-LISP::DIVISION-BY-ZERO = 1162, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-RPLACD-AST = 1733, 
// Unused CLEAVIR-BIR::FIXED-TO-MULTIPLE = 1522, 
// Unused CONCRETE-SYNTAX-TREE::STRUCTURE-MISMATCH-ERROR = 1612, 
// Unused COMPILER::COMPILER-CONDITION = 1208, 
// Unused COMMON-LISP::STANDARD-GENERIC-FUNCTION = 1093, 
// Unused CLEAVIR-ENVIRONMENT::INLINE = 1642, 
// Unused SB-BSD-SOCKETS::NAME-SERVICE-ERROR = 1236, 
// Unused CLEAVIR-BIR::LOCAL-CALL = 1503, 
// Unused CLEAVIR-BIR::UNREACHABLE = 1489, 
// Unused SB-BSD-SOCKETS::INET-SOCKET = 1220, 
// Unused CLOSER-MOP::STANDARD-GENERIC-FUNCTION = 1335, 
// Unused CLEAVIR-AST::RPLACA-AST = 1602, 
// Unused CORE::ARRAY-OUT-OF-BOUNDS = 1133, 
// Unused ECLECTOR.READER::UNINTERNED-SYMBOL-MUST-NOT-CONTAIN-PACKAGE-MARKER = 1365, 
// Unused CONCRETE-SYNTAX-TREE::CONS-CST = 1256, 
// Unused CLEAVIR-BIR::JUMP = 1516, 
// Unused CLASP-CLEAVIR::CLASP-CST-CLIENT = 1750, 
// Unused ECLECTOR.READER::NON-LIST-FOLLOWING-SHARPSIGN-C = 1420, 
// Unused CLEAVIR-BIR::WRITEVAR = 1492, 
// Unused CLASP-ANALYZER::UNKNOWN-CTYPE = 1833, 
// Unused CLOS::EFFECTIVE-WRITER-METHOD = 1101, 
// Unused CLEAVIR-ENVIRONMENT::SYMBOL-MACRO-INFO = 1618, 
// Unused CLEAVIR-ENVIRONMENT::CONSTANT-VARIABLE-INFO = 1617, 
// Unused GRAY::FUNDAMENTAL-BINARY-STREAM = 1190, 
// Unused COMPILER::UNDEFINED-FUNCTION-WARNING = 1211, 
// Unused CLANG-TOOL::SOURCE-LOC-MATCH-CALLBACK = 1786, 
// Unused CLEAVIR-CST-TO-AST::COMPILER-MACRO-EXPANSION-STYLE-WARNING = 1700, 
// Unused CLEAVIR-CST-TO-AST::RUN-TIME-PROGRAM-ERROR = 1659, 
// Unused EXT::STREAM-ENCODING-ERROR = 1184, 
// Unused CLASP-ANALYZER::UNSUPPORTED-TYPE = 1792, 
// Unused ECLECTOR.READER::NUMERIC-PARAMETER-SUPPLIED-BUT-IGNORED = 1367, 
// Unused CLEAVIR-COMPILATION-POLICY::BAD-OPTIMIZE-VALUE = 1644, 
// Unused CLEAVIR-CST-TO-AST::COMPILATION-PROGRAM-ERROR = 1648, 
// Unused ECLECTOR.READER::UNTERMINATED-SINGLE-ESCAPE-IN-CHARACTER-NAME = 1401, 
// Unused CLASP-ANALYZER::STD-MAP-CTYPE = 1821, 
// Unused GRAY::FUNDAMENTAL-OUTPUT-STREAM = 1188, 
// Unused SB-BSD-SOCKETS::HOST-ENT = 1218, 
// Unused ECLECTOR.READER::SYMBOL-SYNTAX-ERROR = 1356, 
// Unused ECLECTOR.READER::END-OF-INPUT-AFTER-SHARPSIGN-DOT = 1396, 
// Unused CLEAVIR-BIR::DATUM = 1465, 
// Unused CLASP-CLEAVIR-AST::RACK-REF-AST = 1736, 
// Unused CLEAVIR-CST-TO-AST::COMPILATION-WARNING = 1649, 
// Unused CLASP-ANALYZER::GCSTRING-OFFSET = 1875, 
// Unused ECLECTOR.READER::SYMBOL-CAN-HAVE-AT-MOST-TWO-PACKAGE-MARKERS = 1364, 
// Unused CLOS::STANDARD-ACCESSOR-METHOD = 1097, 
// Unused CLASP-ANALYZER::TEMPLATE-SPECIALIZATION-CTYPE = 1834, 
// Unused CLASP-ANALYZER::TAGGED-POINTER-OFFSET = 1862, 
// Unused COMMON-LISP::STRUCTURE-OBJECT = 1102, 
// Unused ECLECTOR.READTABLE.SIMPLE::READTABLE = 1347, 
// Unused CLEAVIR-AST::FLOAT-NOT-GREATER-AST = 1592, 
// Unused ECLECTOR.READER::INVALID-CONSTITUENT-CHARACTER = 1357, 
// Unused ECLECTOR.READER::PACKAGE-DOES-NOT-EXIST = 1352, 
// Unused CLASP-ANALYZER::CONTAINERALLOC = 1803, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-NAME-NAMES-LOCAL-MACRO = 1689, 
// Unused CONCRETE-SYNTAX-TREE::ORDINARY-LAMBDA-LIST = 1315, 
// Unused ECLECTOR.READTABLE::CLASP-NON-CST-ELECTOR-CLIENT = 1777, 
// Unused CORE::CLOSED-STREAM = 1148, 
// Unused CLEAVIR-AST::PRIMOP-AST = 1556, 
// Unused CLEAVIR-CONDITIONS::PROGRAM-NOTE = 1463, 
// Unused CLASP-CLEAVIR-AST::VCAS-AST = 1744, 
// Unused CLEAVIR-CST-TO-AST::MACROEXPANSION-STYLE-WARNING = 1697, 
// Unused CONCRETE-SYNTAX-TREE::SPECIALIZED-REQUIRED-PARAMETER = 1301, 
// Unused INTERPRET-AST::CANNOT-INTERPRET = 1748, 
// Unused CLEAVIR-BIR::MV-LOCAL-CALL = 1504, 
// Unused CLEAVIR-AST::UNREACHABLE-AST = 1575, 
// Unused CLASP-CLEAVIR::ABI-X86-64 = 1708, 
// Unused CLOS::SPECIALIZER = 1074, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-MIXIN = 1294, 
// Unused CLASP-CLEAVIR-BIR::HEADER-STAMP-CASE = 1756, 
// Unused SB-BSD-SOCKETS::OPERATION-TIMEOUT-ERROR = 1227, 
// Unused CLANG-TOOL::NO-NODE-FOR-TAG-ERROR = 1787, 
// Unused ECLECTOR.READER::TOO-MANY-DOTS = 1388, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-OPTIONAL = 1306, 
// Unused CLEAVIR-AST-TO-BIR::INSERTER = 1611, 
// Unused COMMON-LISP::STREAM-ERROR = 1146, 
// Unused ECLECTOR.READER::OBJECT-MUST-FOLLOW-SHARPSIGN-EQUALS = 1449, 
// Unused SB-BSD-SOCKETS::CONNECTION-REFUSED-ERROR = 1226, 
// Unused CLEAVIR-PRIMOP-INFO::INFO = 1456, 
// Unused CLASP-CLEAVIR::LLVM-FUNCTION-INFO = 1776, 
// Unused CLEAVIR-BIR::ACCESSTEMP = 1509, 
// Unused STAMPWTAG_gctools__GCVector_moveable_core__BacktraceEntry_ = 725, 
// Unused CORE::SIMPLE-READER-ERROR = 1175, 
// Unused ECLECTOR.READER::TWO-PACKAGE-MARKERS-MUST-BE-ADJACENT = 1362, 
// Unused CLEAVIR-CST-TO-AST::VALUES-&REST-SYNTAX = 1665, 
// Unused CLASP-ANALYZER::OFFSET = 1855, 
// Unused ECLECTOR.READER::COMPLEX-PARTS-MUST-FOLLOW-SHARPSIGN-C = 1419, 
// Unused CLEAVIR-CST-TO-AST::BODY = 1704, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-KEY = 1309, 
// Unused CORE::BLOCK-START = 1202, 
// Unused CLEAVIR-ENVIRONMENT::TAG = 1634, 
// Unused STATIC-GFS::CHANGER-UPDATER = 1111, 
// Unused SB-BSD-SOCKETS::OPERATION-NOT-SUPPORTED-ERROR = 1231, 
// Unused CLASP-ANALYZER::SMART-PTR-OFFSET = 1861, 
// Unused COMPILER::SIMPLE-COMPILER-STYLE-WARNING = 1217, 
// Unused ECLECTOR.READER::TOO-MANY-COMPLEX-PARTS = 1424, 
// Unused CLEAVIR-ENVIRONMENT::LEXICAL-VARIABLE-INFO = 1615, 
// Unused CLOS::STANDARD-SLOT-DEFINITION = 1070, 
// Unused CLASP-CLEAVIR-AST::DEBUG-BREAK-AST = 1716, 
// Unused CLASP-ANALYZER::SMART-PTR-CTYPE = 1837, 
// Unused CLEAVIR-AST::FLOAT-NOT-LESS-AST = 1594, 
// Unused ECLECTOR.READER::READ-TIME-EVALUATION-ERROR = 1399, 
// Unused CLASP-CLEAVIR-AST::CAS-CDR-AST = 1735, 
// Unused CLEAVIR-AST::SLOT-WRITE-AST = 1605, 
// Unused CLASP-CLEAVIR-AST::BASE-FOREIGN-CALL-AST = 1717, 
// Unused CLASP-ANALYZER::TAGGED-POINTER-CTYPE = 1838, 
// Unused CLEAVIR-COMPILATION-POLICY::NO-POLICY-COMPUTER = 1646, 
// Unused CLASP-ANALYZER::HNODE = 1815, 
// Unused CLOS::%NO-NEXT-METHOD-CONTINUATION = 1104, 
// Unused CLEAVIR-ENVIRONMENT::OPTIMIZE-INFO = 1626, 
// Unused COMMON-LISP::LIST = 1081, 
// Unused CLEAVIR-CST-TO-AST::NO-FUNCTION-INFO = 1655, 
// Unused CLEAVIR-CST-TO-AST::NO-INFO = 1653, 
// Unused CLASP-CLEAVIR::CLASP-ECLECTOR-CLIENT-MIXIN = 1749, 
// Unused CLASP-CLEAVIR::CLASP-ORDINARY-REST-PARAMETER-GROUP = 1712, 
// Unused CLASP-ANALYZER::LVALUE-REFERENCE-CTYPE = 1825, 
// Unused CLEAVIR-AST::FIXNUM-GREATER-AST = 1584, 
// Unused CLASP-ANALYZER::INJECTED-CLASS-NAME-CTYPE = 1844, 
// Unused CLEAVIR-CST-TO-AST::FUNCTION-ARGUMENT-MUST-BE-FUNCTION-NAME-OR-LAMBDA-EXPRESSION = 1675, 
// Unused CLEAVIR-CST-TO-AST::BINDING-MUST-BE-SYMBOL-OR-LIST = 1678, 
// Unused CORE::SIMPLE-STYLE-WARNING = 1121, 
// Unused CLEAVIR-BIR::ABSTRACT-CALL = 1499, 
// Unused CORE::SIMPLE-CONTROL-ERROR = 1141, 
// Unused CONCRETE-SYNTAX-TREE::KEYWORD-ENVIRONMENT = 1312, 
// Unused ALEXANDRIA.0.DEV::SIMPLE-READER-ERROR = 1332, 
// Unused CLASP-CLEAVIR-AST::ATOMIC-RACK-READ-AST = 1737, 
// Unused ECLECTOR.READER::UNTERMINATED-VECTOR = 1413, 
// Unused CLEAVIR-CST-TO-AST::INCORRECT-NUMBER-OF-ARGUMENTS-ERROR = 1660, 
// Unused CLEAVIR-CST-TO-AST::MACROEXPANSION-WARNING = 1696, 
// Unused CLASP-CLEAVIR-BMIR::CAS = 1775, 
// Unused CONCRETE-SYNTAX-TREE::SICL = 1262, 
// Unused CONCRETE-SYNTAX-TREE::ENVIRONMENT-PARAMETER-GROUP = 1289, 
// Unused ACCLIMATION::ENGLISH = 1248, 
// Unused CONCRETE-SYNTAX-TREE::SPECIALIZED-REQUIRED-PARAMETER-GROUP = 1281, 
// Unused CORE::STD-CLASS = 1078, 
// Unused ECLECTOR.READER::END-OF-INPUT-BEFORE-DIGIT = 1405, 
// Unused CONCRETE-SYNTAX-TREE::AUX-PARAMETER = 1299, 
// Unused CLOS::STANDARD-READER-METHOD = 1098, 
// Unused EXT::SOURCE-LOCATION = 1112, 
// Unused CLEAVIR-BIR::WRITETEMP = 1511, 
// Unused ECLECTOR.READER::UNKNOWN-CHARACTER-NAME = 1403, 
// Unused CLASP-ANALYZER::COPYABLE-OFFSET = 1856, 
// Unused CLASP-ANALYZER::UNINTERESTING-CTYPE = 1832, 
// Unused CLEAVIR-CONDITIONS::ORIGIN = 1462, 
// Unused ECLECTOR.READER::COMPLEX-PART-CONDITION = 1421, 
// Unused CLEAVIR-BIR::TYPE-CONFLICT = 1527, 
// Unused ECLECTOR.READER::DIGIT-EXPECTED = 1406, 
// Unused CLEAVIR-CONDITIONS::PROGRAM-STYLE-WARNING = 1461, 
// Unused CLASP-CLEAVIR-AST::WRAPPED-STAMP-AST = 1725, 
// Unused ECLECTOR.READER::SYMBOL-NAME-MUST-NOT-BE-ONLY-PACKAGE-MARKERS = 1360, 
// Unused ECLECTOR.READER::UNQUOTE-IN-INVALID-CONTEXT = 1382, 
// Unused CLEAVIR-CST-TO-AST::MACROEXPANSION-ERROR = 1695, 
// Unused CLEAVIR-CST-TO-AST::EVAL-WARNING = 1702, 
// Unused CLEAVIR-AST::MULTIPLE-VALUE-PROG1-AST = 1573, 
// Unused CLEAVIR-BIR::TRANSFER = 1469, 
// Unused CLOS::EQL-SPECIALIZER = 1075, 
// Unused CLASP-ANALYZER::GCSTRING-MOVEABLE-CTYPE = 1854, 
// Unused CLEAVIR-CST-TO-AST::CASE-MUST-BE-PROPER-LIST = 1670, 
// Unused CLEAVIR-BIR::VALUES-SAVE = 1506, 
// Unused CLASP-ANALYZER::DESTINATION = 1878, 
// Unused CLEAVIR-METER::SIZE-METER = 1536, 
// Unused CLASP-CLEAVIR-BMIR::CHARACTERP = 1768, 
// Unused CLEAVIR-CST-TO-AST::COMPILATION-CONDITION = 1647, 
// Unused CLANG-TOOL::CODE-MATCH-CALLBACK = 1785, 
// Unused CONCRETE-SYNTAX-TREE::ATOM-CST = 1255, 
// Unused ALEXANDRIA.0.DEV::SIMPLE-PROGRAM-ERROR = 1334, 
// Unused CONCRETE-SYNTAX-TREE::OPTIONAL-PARAMETER-GROUP = 1274, 
// Unused ECLECTOR.READER::UNQUOTE-NOT-INSIDE-BACKQUOTE = 1381, 
// Unused CONCRETE-SYNTAX-TREE::DESTRUCTURING-REST-PARAMETER-GROUP = 1288, 
// Unused COMPILER::UNDEFINED-VARIABLE-WARNING = 1210, 
// Unused CLEAVIR-BIR::ENCLOSE = 1488, 
// Unused CLEAVIR-AST::FLOAT-LESS-AST = 1591, 
// Unused CORE::SIMPLE-PACKAGE-ERROR = 1153, 
// Unused ECLECTOR.READTABLE::DISPATCH-MACRO-CHARACTER-ERROR = 1342, 
// Unused CLANG-TOOL::NODE-MATCHER-AMBIGUOUS-ERROR = 1791, 
// Unused CLEAVIR-AST::FLOAT-MUL-AST = 1589, 
// Unused COMMON-LISP::ARITHMETIC-ERROR = 1161, 
// Unused ECLECTOR.READER::FEATURE-EXPRESSION-MUST-FOLLOW-SHARPSIGN-PLUS-MINUS = 1441, 
// Unused STATIC-GFS::REINITIALIZER-UPDATER = 1109, 
// Unused CLOS::STD-METHOD = 1095, 
// Unused CLASP-CLEAVIR-BIR::ATOMIC-RACK-READ = 1759, 
// Unused CLASP-ANALYZER::SPECIES = 1876, 
// Unused CLEAVIR-CST-TO-AST::LOCAL-FUNCTION-DEFINITION-MUST-BE-PROPER-LIST = 1673, 
// Unused EXT::UNDEFINED-CLASS = 1160, 
// Unused CORE::BLOCK-END = 1203, 
// Unused ECLECTOR.READER::SHARPSIGN-SHARPSIGN-UNDEFINED-LABEL = 1453, 
// Unused ECLECTOR.READER::STRUCTURE-CONSTRUCTOR-MUST-FOLLOW-SHARPSIGN-S = 1426, 
// Unused ALEXANDRIA.0.DEV::SIMPLE-STYLE-WARNING = 1331, 
// Unused CLASP-CLEAVIR-BMIR::LOAD = 1773, 
// Unused EXT::INTERACTIVE-INTERRUPT = 1179, 
// Unused ECLECTOR.READER::NO-ELEMENTS-FOUND = 1416, 
// Unused CONCRETE-SYNTAX-TREE::LAMBDA-LIST-KEYWORD = 1305, 
// Unused CORE::OUT-OF-BOUNDS = 1131, 
// Unused CLOS::NO-APPLICABLE-METHOD-ERROR = 1137, 
// Unused ECLECTOR.READER::END-OF-INPUT-BEFORE-STRUCTURE-TYPE-NAME = 1428, 
// Unused CLEAVIR-CST-TO-AST::BINDING-MUST-HAVE-LENGTH-ONE-OR-TWO = 1679, 
// Unused CLASP-CLEAVIR-BIR::ATOMIC = 1757, 
// Unused EXT::ILLEGAL-INSTRUCTION = 1127, 
// Unused CORE::OUT-OF-EXTENT-UNWIND = 1142, 
// Unused CONCRETE-SYNTAX-TREE::GRAMMAR-SYMBOL = 1266, 
// Unused ECLECTOR.READER::END-OF-INPUT-BEFORE-SLOT-NAME = 1431, 
// Unused CLASP-CLEAVIR-AST::FOREIGN-CALL-AST = 1719, 
// Unused CORE::DESTRUCTURE-WRONG-NUMBER-OF-ARGUMENTS = 1169, 
// Unused CLEAVIR-BIR::IFI = 1517, 
// Unused CLASP-CLEAVIR::ABI-X86-32 = 1709, 
// Unused CLEAVIR-BIR::CONDITIONAL-TEST = 1518, 
// Unused ECLECTOR.BASE::END-OF-FILE = 1339, 
// Unused CLEAVIR-AST::TYPEQ-AST = 1567, 
// Unused CLEAVIR-AST::VALUES-AST = 1572, 
// Unused ECLECTOR.READER::UNTERMINATED-BLOCK-COMMENT = 1410, 
// Unused GRAY::FUNDAMENTAL-BINARY-INPUT-STREAM = 1193, 
// Unused ECLECTOR.READER::SHARPSIGN-EQUALS-ONLY-REFERS-TO-SELF = 1452, 
// Unused ECLECTOR.READTABLE::UNTERMINATED-DISPATCH-MACRO = 1343, 
// Unused CLEAVIR-CST-TO-AST::LAMBDA-CALL-FIRST-SYMBOL-NOT-LAMBDA = 1692, 
// Unused ECLECTOR.BASE::STREAM-POSITION-CONDITION = 1337, 
// Unused ECLECTOR.READER::INVALID-CONTEXT-FOR-CONSING-DOT = 1389, 
  STAMPWTAG_max = 3355,

#endif // defined(GC_STAMP)
#if defined(GC_ENUM_NAMES)
register_stamp_name("STAMPWTAG_null",0); 
register_stamp_name("STAMPWTAG_core__T_O", ADJUST_STAMP(7));
register_stamp_name("STAMPWTAG_core__Unused_dummy_O", ADJUST_STAMP(11));
register_stamp_name("STAMPWTAG_core__General_O", ADJUST_STAMP(15));
register_stamp_name("STAMPWTAG_core__LambdaListHandler_O", ADJUST_STAMP(19));
register_stamp_name("STAMPWTAG_llvmo__AttributeSet_O", ADJUST_STAMP(23));
register_stamp_name("STAMPWTAG_core__Pointer_O", ADJUST_STAMP(27));
register_stamp_name("STAMPWTAG_clasp_ffi__ForeignData_O", ADJUST_STAMP(31));
register_stamp_name("STAMPWTAG_core__CxxObject_O", ADJUST_STAMP(35));
register_stamp_name("STAMPWTAG_asttooling__SourceLocation_O", ADJUST_STAMP(39));
register_stamp_name("STAMPWTAG_kinematics__ChiList_O", ADJUST_STAMP(43));
register_stamp_name("STAMPWTAG_chem__NumericalFunction_O", ADJUST_STAMP(47));
register_stamp_name("STAMPWTAG_kinematics__FoldTree_O", ADJUST_STAMP(51));
register_stamp_name("STAMPWTAG_kinematics__RotamerSetBase_O", ADJUST_STAMP(55));
register_stamp_name("STAMPWTAG_kinematics__BackboneDependentRotamerSet_O", ADJUST_STAMP(59));
register_stamp_name("STAMPWTAG_kinematics__RotamerSet_O", ADJUST_STAMP(63));
register_stamp_name("STAMPWTAG_chem__EnergyComponent_O", ADJUST_STAMP(67));
register_stamp_name("STAMPWTAG_chem__EnergyStretch_O", ADJUST_STAMP(71));
register_stamp_name("STAMPWTAG_chem__EnergyRigidBodyComponent_O", ADJUST_STAMP(75));
register_stamp_name("STAMPWTAG_chem__EnergyRigidBodyStaple_O", ADJUST_STAMP(79));
register_stamp_name("STAMPWTAG_chem__EnergyRigidBodyNonbond_O", ADJUST_STAMP(83));
register_stamp_name("STAMPWTAG_chem__EnergyOutOfZPlane_O", ADJUST_STAMP(87));
register_stamp_name("STAMPWTAG_chem__EnergySketchNonbond_O", ADJUST_STAMP(91));
register_stamp_name("STAMPWTAG_chem__EnergyDihedralRestraint_O", ADJUST_STAMP(95));
register_stamp_name("STAMPWTAG_chem__EnergyChiralRestraint_O", ADJUST_STAMP(99));
register_stamp_name("STAMPWTAG_chem__EnergyPointToLineRestraint_O", ADJUST_STAMP(103));
register_stamp_name("STAMPWTAG_chem__EnergyDihedral_O", ADJUST_STAMP(107));
register_stamp_name("STAMPWTAG_chem__EnergyNonbond_O", ADJUST_STAMP(111));
register_stamp_name("STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O", ADJUST_STAMP(115));
register_stamp_name("STAMPWTAG_chem__EnergyAnchorRestraint_O", ADJUST_STAMP(119));
register_stamp_name("STAMPWTAG_chem__EnergyFixedNonbondRestraint_O", ADJUST_STAMP(123));
register_stamp_name("STAMPWTAG_chem__EnergySketchStretch_O", ADJUST_STAMP(127));
register_stamp_name("STAMPWTAG_chem__EnergyAngle_O", ADJUST_STAMP(131));
register_stamp_name("STAMPWTAG_chem__Matter_O", ADJUST_STAMP(135));
register_stamp_name("STAMPWTAG_chem__Aggregate_O", ADJUST_STAMP(139));
register_stamp_name("STAMPWTAG_chem__Atom_O", ADJUST_STAMP(143));
register_stamp_name("STAMPWTAG_chem__VirtualAtom_O", ADJUST_STAMP(147));
register_stamp_name("STAMPWTAG_chem__Residue_O", ADJUST_STAMP(151));
register_stamp_name("STAMPWTAG_chem__Molecule_O", ADJUST_STAMP(155));
register_stamp_name("STAMPWTAG_chem__PdbWriter_O", ADJUST_STAMP(159));
register_stamp_name("STAMPWTAG_chem__TrajectoryFrame_O", ADJUST_STAMP(163));
register_stamp_name("STAMPWTAG_llvmo__MDBuilder_O", ADJUST_STAMP(167));
register_stamp_name("STAMPWTAG_chem__Topology_O", ADJUST_STAMP(171));
register_stamp_name("STAMPWTAG_chem__AtomTable_O", ADJUST_STAMP(175));
register_stamp_name("STAMPWTAG_chem__CipPrioritizer_O", ADJUST_STAMP(179));
register_stamp_name("STAMPWTAG_adapt__IndexedObjectBag_O", ADJUST_STAMP(183));
register_stamp_name("STAMPWTAG_chem__VirtualSphere_O", ADJUST_STAMP(187));
register_stamp_name("STAMPWTAG_chem__TwisterDriver_O", ADJUST_STAMP(191));
register_stamp_name("STAMPWTAG_chem__RingFinder_O", ADJUST_STAMP(195));
register_stamp_name("STAMPWTAG_llvmo__FunctionCallee_O", ADJUST_STAMP(199));
register_stamp_name("STAMPWTAG_kinematics__Joint_O", ADJUST_STAMP(203));
register_stamp_name("STAMPWTAG_kinematics__JumpJoint_O", ADJUST_STAMP(207));
register_stamp_name("STAMPWTAG_kinematics__OriginJumpJoint_O", ADJUST_STAMP(211));
register_stamp_name("STAMPWTAG_kinematics__BondedJoint_O", ADJUST_STAMP(215));
register_stamp_name("STAMPWTAG_kinematics__RootBondedJoint_O", ADJUST_STAMP(219));
register_stamp_name("STAMPWTAG_kinematics__DelayedBondedJoint_O", ADJUST_STAMP(223));
register_stamp_name("STAMPWTAG_chem__SearchStatistics_O", ADJUST_STAMP(227));
register_stamp_name("STAMPWTAG_chem__PdbMonomerDatabase_O", ADJUST_STAMP(231));
register_stamp_name("STAMPWTAG_chem__Twister_O", ADJUST_STAMP(235));
register_stamp_name("STAMPWTAG_chem__MonomerCoordinates_O", ADJUST_STAMP(239));
register_stamp_name("STAMPWTAG_chem__FFParameter_O", ADJUST_STAMP(243));
register_stamp_name("STAMPWTAG_chem__FFVdw_O", ADJUST_STAMP(247));
register_stamp_name("STAMPWTAG_chem__FFStretch_O", ADJUST_STAMP(251));
register_stamp_name("STAMPWTAG_chem__FFPtor_O", ADJUST_STAMP(255));
register_stamp_name("STAMPWTAG_chem__FFItor_O", ADJUST_STAMP(259));
register_stamp_name("STAMPWTAG_chem__FFNonbond_O", ADJUST_STAMP(263));
register_stamp_name("STAMPWTAG_chem__FFAngle_O", ADJUST_STAMP(267));
register_stamp_name("STAMPWTAG_chem__Restraint_O", ADJUST_STAMP(271));
register_stamp_name("STAMPWTAG_chem__RestraintChiral_O", ADJUST_STAMP(275));
register_stamp_name("STAMPWTAG_chem__RestraintDistance_O", ADJUST_STAMP(279));
register_stamp_name("STAMPWTAG_chem__RestraintAngle_O", ADJUST_STAMP(283));
register_stamp_name("STAMPWTAG_chem__RestraintAnchor_O", ADJUST_STAMP(287));
register_stamp_name("STAMPWTAG_chem__RestraintFixedNonbond_O", ADJUST_STAMP(291));
register_stamp_name("STAMPWTAG_chem__RestraintDihedral_O", ADJUST_STAMP(295));
register_stamp_name("STAMPWTAG_chem__AtomIndexer_O", ADJUST_STAMP(299));
register_stamp_name("STAMPWTAG_geom__BoundingCuboid_O", ADJUST_STAMP(303));
register_stamp_name("STAMPWTAG_chem__StereoInformation_O", ADJUST_STAMP(307));
register_stamp_name("STAMPWTAG_chem__AddIonOctree_O", ADJUST_STAMP(311));
register_stamp_name("STAMPWTAG_chem__CDNode_O", ADJUST_STAMP(315));
register_stamp_name("STAMPWTAG_chem__OligomerPart_Base_O", ADJUST_STAMP(319));
register_stamp_name("STAMPWTAG_chem__OligomerPart_Link_O", ADJUST_STAMP(323));
register_stamp_name("STAMPWTAG_chem__OligomerPart_Monomer_O", ADJUST_STAMP(327));
register_stamp_name("STAMPWTAG_kinematics__BondId_O", ADJUST_STAMP(331));
register_stamp_name("STAMPWTAG_chem__CoordinateSystem_O", ADJUST_STAMP(335));
register_stamp_name("STAMPWTAG_chem__Bond_O", ADJUST_STAMP(339));
register_stamp_name("STAMPWTAG_chem__CandoDatabase_O", ADJUST_STAMP(343));
register_stamp_name("STAMPWTAG_chem__AbstractLargeSquareMatrix_O", ADJUST_STAMP(347));
register_stamp_name("STAMPWTAG_chem__SparseLargeSquareMatrix_O", ADJUST_STAMP(351));
register_stamp_name("STAMPWTAG_chem__FullLargeSquareMatrix_O", ADJUST_STAMP(355));
register_stamp_name("STAMPWTAG_chem__FFBaseDb_O", ADJUST_STAMP(359));
register_stamp_name("STAMPWTAG_chem__FFParameterBaseDb_O", ADJUST_STAMP(363));
register_stamp_name("STAMPWTAG_chem__FFItorDb_O", ADJUST_STAMP(367));
register_stamp_name("STAMPWTAG_chem__FFStretchDb_O", ADJUST_STAMP(371));
register_stamp_name("STAMPWTAG_chem__FFAngleDb_O", ADJUST_STAMP(375));
register_stamp_name("STAMPWTAG_chem__FFNonbondDb_O", ADJUST_STAMP(379));
register_stamp_name("STAMPWTAG_chem__FFPtorDb_O", ADJUST_STAMP(383));
register_stamp_name("STAMPWTAG_chem__FFVdwDb_O", ADJUST_STAMP(387));
register_stamp_name("STAMPWTAG_chem__FFTypesDb_O", ADJUST_STAMP(391));
register_stamp_name("STAMPWTAG_llvmo__LibraryBase_O", ADJUST_STAMP(395));
register_stamp_name("STAMPWTAG_llvmo__ObjectFile_O", ADJUST_STAMP(399));
register_stamp_name("STAMPWTAG_llvmo__LibraryFile_O", ADJUST_STAMP(403));
register_stamp_name("STAMPWTAG_chem__AGVertex_O", ADJUST_STAMP(407));
register_stamp_name("STAMPWTAG_chem__ForceField_O", ADJUST_STAMP(411));
register_stamp_name("STAMPWTAG_chem__AtomReferenceBase_O", ADJUST_STAMP(415));
register_stamp_name("STAMPWTAG_chem__AtomReference_O", ADJUST_STAMP(419));
register_stamp_name("STAMPWTAG_chem__ScoringFunction_O", ADJUST_STAMP(423));
register_stamp_name("STAMPWTAG_chem__EnergyFunction_O", ADJUST_STAMP(427));
register_stamp_name("STAMPWTAG_chem__SketchFunction_O", ADJUST_STAMP(431));
register_stamp_name("STAMPWTAG_chem__RigidBodyEnergyFunction_O", ADJUST_STAMP(435));
register_stamp_name("STAMPWTAG_chem__WildElementDict_O", ADJUST_STAMP(439));
register_stamp_name("STAMPWTAG_asttooling__QualType_O", ADJUST_STAMP(443));
register_stamp_name("STAMPWTAG_llvmo__DITypeRefArray_O", ADJUST_STAMP(447));
register_stamp_name("STAMPWTAG_geom__OVector3_O", ADJUST_STAMP(451));
register_stamp_name("STAMPWTAG_geom__OVector2_O", ADJUST_STAMP(455));
register_stamp_name("STAMPWTAG_chem__Structure_Old_ListEntry_O", ADJUST_STAMP(459));
register_stamp_name("STAMPWTAG_chem__FFTypeRule_O", ADJUST_STAMP(463));
register_stamp_name("STAMPWTAG_adapt__QDomNode_O", ADJUST_STAMP(467));
register_stamp_name("STAMPWTAG_mp__SharedMutex_O", ADJUST_STAMP(471));
register_stamp_name("STAMPWTAG_chem__ConstitutionAtom_O", ADJUST_STAMP(475));
register_stamp_name("STAMPWTAG_chem__ConstitutionVirtualAtom_O", ADJUST_STAMP(479));
register_stamp_name("STAMPWTAG_chem__Smirks_O", ADJUST_STAMP(483));
register_stamp_name("STAMPWTAG_chem__ReadAmberParameters_O", ADJUST_STAMP(487));
register_stamp_name("STAMPWTAG_chem__AGEdge_O", ADJUST_STAMP(491));
register_stamp_name("STAMPWTAG_chem__Entity_O", ADJUST_STAMP(495));
register_stamp_name("STAMPWTAG_chem__Stereoisomer_O", ADJUST_STAMP(499));
register_stamp_name("STAMPWTAG_chem__EntityNameSetBase_O", ADJUST_STAMP(503));
register_stamp_name("STAMPWTAG_chem__EntityNameSetWithCap_O", ADJUST_STAMP(507));
register_stamp_name("STAMPWTAG_chem__Mate_O", ADJUST_STAMP(511));
register_stamp_name("STAMPWTAG_chem__RingClosingMate_O", ADJUST_STAMP(515));
register_stamp_name("STAMPWTAG_chem__EntityNameSet_O", ADJUST_STAMP(519));
register_stamp_name("STAMPWTAG_chem__RepresentedEntityNameSet_O", ADJUST_STAMP(523));
register_stamp_name("STAMPWTAG_chem__MonomerPack_O", ADJUST_STAMP(527));
register_stamp_name("STAMPWTAG_chem__Constitution_O", ADJUST_STAMP(531));
register_stamp_name("STAMPWTAG_chem__Monomer_O", ADJUST_STAMP(535));
register_stamp_name("STAMPWTAG_chem__OctNode_O", ADJUST_STAMP(539));
register_stamp_name("STAMPWTAG_chem__Structure_Old_List_O", ADJUST_STAMP(543));
register_stamp_name("STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O", ADJUST_STAMP(547));
register_stamp_name("STAMPWTAG_chem__ReportBase_O", ADJUST_STAMP(551));
register_stamp_name("STAMPWTAG_chem__StepReport_O", ADJUST_STAMP(555));
register_stamp_name("STAMPWTAG_chem__MessageReport_O", ADJUST_STAMP(559));
register_stamp_name("STAMPWTAG_chem__ForceMatchReport_O", ADJUST_STAMP(563));
register_stamp_name("STAMPWTAG_chem__ChemDraw_O", ADJUST_STAMP(567));
register_stamp_name("STAMPWTAG_chem__ZMatrixInternal_O", ADJUST_STAMP(571));
register_stamp_name("STAMPWTAG_chem__ZMatrixBondInternal_O", ADJUST_STAMP(575));
register_stamp_name("STAMPWTAG_chem__ZMatrixDihedralInternal_O", ADJUST_STAMP(579));
register_stamp_name("STAMPWTAG_chem__ZMatrixAngleInternal_O", ADJUST_STAMP(583));
register_stamp_name("STAMPWTAG_chem__StereoisomerAtom_O", ADJUST_STAMP(587));
register_stamp_name("STAMPWTAG_chem__StereoisomerVirtualAtom_O", ADJUST_STAMP(591));
register_stamp_name("STAMPWTAG_chem__ZMatrix_O", ADJUST_STAMP(595));
register_stamp_name("STAMPWTAG_chem__Isoname_O", ADJUST_STAMP(599));
register_stamp_name("STAMPWTAG_chem__PathMessage_O", ADJUST_STAMP(603));
register_stamp_name("STAMPWTAG_kinematics__MonomerId_O", ADJUST_STAMP(607));
register_stamp_name("STAMPWTAG_kinematics__JointTemplate_O", ADJUST_STAMP(611));
register_stamp_name("STAMPWTAG_kinematics__BondedJointTemplate_O", ADJUST_STAMP(615));
register_stamp_name("STAMPWTAG_kinematics__DelayedBondedJointTemplate_O", ADJUST_STAMP(619));
register_stamp_name("STAMPWTAG_kinematics__RootBondedJointTemplate_O", ADJUST_STAMP(623));
register_stamp_name("STAMPWTAG_geom__Color_O", ADJUST_STAMP(627));
register_stamp_name("STAMPWTAG_chem__ConformationCollection_O", ADJUST_STAMP(631));
register_stamp_name("STAMPWTAG_chem__SuperposableConformationCollection_O", ADJUST_STAMP(635));
register_stamp_name("STAMPWTAG_asttooling__PresumedLoc_O", ADJUST_STAMP(639));
register_stamp_name("STAMPWTAG_chem__Coupling_O", ADJUST_STAMP(643));
register_stamp_name("STAMPWTAG_chem__RingCoupling_O", ADJUST_STAMP(647));
register_stamp_name("STAMPWTAG_chem__DirectionalCoupling_O", ADJUST_STAMP(651));
register_stamp_name("STAMPWTAG_adapt__ObjectSet_O", ADJUST_STAMP(655));
register_stamp_name("STAMPWTAG_chem__Oligomer_O", ADJUST_STAMP(659));
register_stamp_name("STAMPWTAG_chem__PdbMonomerConnectivity_O", ADJUST_STAMP(663));
register_stamp_name("STAMPWTAG_units__Dimension_O", ADJUST_STAMP(667));
register_stamp_name("STAMPWTAG_chem__ConformationExplorerEntry_O", ADJUST_STAMP(671));
register_stamp_name("STAMPWTAG_mp__ConditionVariable_O", ADJUST_STAMP(675));
register_stamp_name("STAMPWTAG_chem__PdbReader_O", ADJUST_STAMP(679));
register_stamp_name("STAMPWTAG_chem__SpanningLoop_O", ADJUST_STAMP(683));
register_stamp_name("STAMPWTAG_chem__ProperTorsion_O", ADJUST_STAMP(687));
register_stamp_name("STAMPWTAG_chem__ResidueList_O", ADJUST_STAMP(691));
register_stamp_name("STAMPWTAG_chem__SuperposeEngine_O", ADJUST_STAMP(695));
register_stamp_name("STAMPWTAG_chem__SuperposeSelectedAtoms_O", ADJUST_STAMP(699));
register_stamp_name("STAMPWTAG_chem__Command_O", ADJUST_STAMP(703));
register_stamp_name("STAMPWTAG_chem__StereoConfiguration_O", ADJUST_STAMP(707));
register_stamp_name("STAMPWTAG_kinematics__MonomerBaseNode_O", ADJUST_STAMP(711));
register_stamp_name("STAMPWTAG_kinematics__AggregateNode_O", ADJUST_STAMP(715));
register_stamp_name("STAMPWTAG_kinematics__ChainNode_O", ADJUST_STAMP(719));
register_stamp_name("STAMPWTAG_kinematics__MonomerNode_O", ADJUST_STAMP(723));
register_stamp_name("STAMPWTAG_kinematics__RingClosingMonomerNode_O", ADJUST_STAMP(727));
register_stamp_name("STAMPWTAG_chem__FFNonbondCrossTermTable_O", ADJUST_STAMP(731));
register_stamp_name("STAMPWTAG_chem__Plug_O", ADJUST_STAMP(735));
register_stamp_name("STAMPWTAG_chem__JumpPlug_O", ADJUST_STAMP(739));
register_stamp_name("STAMPWTAG_chem__PlugWithMates_O", ADJUST_STAMP(743));
register_stamp_name("STAMPWTAG_chem__InPlug_O", ADJUST_STAMP(747));
register_stamp_name("STAMPWTAG_chem__OutPlug_O", ADJUST_STAMP(751));
register_stamp_name("STAMPWTAG_chem__OriginPlug_O", ADJUST_STAMP(755));
register_stamp_name("STAMPWTAG_kinematics__Rotamer_O", ADJUST_STAMP(759));
register_stamp_name("STAMPWTAG_chem__MonomerContext_O", ADJUST_STAMP(763));
register_stamp_name("STAMPWTAG_chem__CDFragment_O", ADJUST_STAMP(767));
register_stamp_name("STAMPWTAG_units__Unit_O", ADJUST_STAMP(771));
register_stamp_name("STAMPWTAG_units__NamedUnit_O", ADJUST_STAMP(775));
register_stamp_name("STAMPWTAG_core__NativeVector_int_O", ADJUST_STAMP(779));
register_stamp_name("STAMPWTAG_llvmo__CodeBase_O", ADJUST_STAMP(783));
register_stamp_name("STAMPWTAG_llvmo__Code_O", ADJUST_STAMP(787));
register_stamp_name("STAMPWTAG_llvmo__Library_O", ADJUST_STAMP(791));
register_stamp_name("STAMPWTAG_chem__InfoDb_O", ADJUST_STAMP(795));
register_stamp_name("STAMPWTAG_chem__MinimizerLog_O", ADJUST_STAMP(799));
register_stamp_name("STAMPWTAG_chem__GenericOctree_O", ADJUST_STAMP(803));
register_stamp_name("STAMPWTAG_kinematics__AtomTree_O", ADJUST_STAMP(807));
register_stamp_name("STAMPWTAG_units__Quantity_O", ADJUST_STAMP(811));
register_stamp_name("STAMPWTAG_chem__ChemInfoMatch_O", ADJUST_STAMP(815));
register_stamp_name("STAMPWTAG_chem__ZMatrixEntry_O", ADJUST_STAMP(819));
register_stamp_name("STAMPWTAG_chem__SpecificContextSet_O", ADJUST_STAMP(823));
register_stamp_name("STAMPWTAG_chem__Angle_O", ADJUST_STAMP(827));
register_stamp_name("STAMPWTAG_chem__MacroModelFile_O", ADJUST_STAMP(831));
register_stamp_name("STAMPWTAG_chem__BondList_O", ADJUST_STAMP(835));
register_stamp_name("STAMPWTAG_chem__ConformationExplorer_O", ADJUST_STAMP(839));
register_stamp_name("STAMPWTAG_chem__ChemInfoGraph_O", ADJUST_STAMP(843));
register_stamp_name("STAMPWTAG_chem__CDText_O", ADJUST_STAMP(847));
register_stamp_name("STAMPWTAG_llvmo__DINodeArray_O", ADJUST_STAMP(851));
register_stamp_name("STAMPWTAG_chem__SpanningInfo_O", ADJUST_STAMP(855));
register_stamp_name("STAMPWTAG_kinematics__Checkpoint_O", ADJUST_STAMP(859));
register_stamp_name("STAMPWTAG_kinematics__CheckpointJoint_O", ADJUST_STAMP(863));
register_stamp_name("STAMPWTAG_kinematics__CheckpointOutPlugJoint_O", ADJUST_STAMP(867));
register_stamp_name("STAMPWTAG_chem__ConformationExplorerMatch_O", ADJUST_STAMP(871));
register_stamp_name("STAMPWTAG_chem__StereoisomerAtoms_O", ADJUST_STAMP(875));
register_stamp_name("STAMPWTAG_chem__Rotamer_O", ADJUST_STAMP(879));
register_stamp_name("STAMPWTAG_chem__ImproperTorsion_O", ADJUST_STAMP(883));
register_stamp_name("STAMPWTAG_adapt__SymbolList_O", ADJUST_STAMP(887));
register_stamp_name("STAMPWTAG_chem__FrameRecognizer_O", ADJUST_STAMP(891));
register_stamp_name("STAMPWTAG_chem__ConformationExplorerEntryStage_O", ADJUST_STAMP(895));
register_stamp_name("STAMPWTAG_chem__Trajectory_O", ADJUST_STAMP(899));
register_stamp_name("STAMPWTAG_chem__CalculatePosition_O", ADJUST_STAMP(903));
register_stamp_name("STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O", ADJUST_STAMP(907));
register_stamp_name("STAMPWTAG_chem__CalculatePositionUsingInternals_O", ADJUST_STAMP(911));
register_stamp_name("STAMPWTAG_chem__CalculatePositionAlongBond_O", ADJUST_STAMP(915));
register_stamp_name("STAMPWTAG_geom__OMatrix_O", ADJUST_STAMP(919));
register_stamp_name("STAMPWTAG_chem__ConformationCollectionEntry_O", ADJUST_STAMP(923));
register_stamp_name("STAMPWTAG_chem__ComplexRestraint_O", ADJUST_STAMP(927));
register_stamp_name("STAMPWTAG_chem__RestrainedExoCyclicAtom_O", ADJUST_STAMP(931));
register_stamp_name("STAMPWTAG_chem__RestrainedPiBond_O", ADJUST_STAMP(935));
register_stamp_name("STAMPWTAG_mp__Mutex_O", ADJUST_STAMP(939));
register_stamp_name("STAMPWTAG_mp__RecursiveMutex_O", ADJUST_STAMP(943));
register_stamp_name("STAMPWTAG_chem__CombinedForceField_O", ADJUST_STAMP(947));
register_stamp_name("STAMPWTAG_chem__CDBond_O", ADJUST_STAMP(951));
register_stamp_name("STAMPWTAG_chem__ConstitutionBond_O", ADJUST_STAMP(955));
register_stamp_name("STAMPWTAG_kinematics__ChiDihedral_O", ADJUST_STAMP(959));
register_stamp_name("STAMPWTAG_chem__ConstitutionAtoms_O", ADJUST_STAMP(963));
register_stamp_name("STAMPWTAG_kinematics__Conformation_O", ADJUST_STAMP(967));
register_stamp_name("STAMPWTAG_chem__MoleculeGraph_O", ADJUST_STAMP(971));
register_stamp_name("STAMPWTAG_chem__StructureComparer_O", ADJUST_STAMP(975));
register_stamp_name("STAMPWTAG_chem__BoundingBox_O", ADJUST_STAMP(979));
register_stamp_name("STAMPWTAG_chem__ChemInfoNode_O", ADJUST_STAMP(983));
register_stamp_name("STAMPWTAG_chem__BondMatcher_O", ADJUST_STAMP(987));
register_stamp_name("STAMPWTAG_chem__BondTest_O", ADJUST_STAMP(991));
register_stamp_name("STAMPWTAG_chem__BondLogical_O", ADJUST_STAMP(995));
register_stamp_name("STAMPWTAG_chem__BondMatchNode_O", ADJUST_STAMP(999));
register_stamp_name("STAMPWTAG_chem__AtomOrBondMatchNode_O", ADJUST_STAMP(1003));
register_stamp_name("STAMPWTAG_chem__Root_O", ADJUST_STAMP(1007));
register_stamp_name("STAMPWTAG_chem__SmartsRoot_O", ADJUST_STAMP(1011));
register_stamp_name("STAMPWTAG_chem__AntechamberRoot_O", ADJUST_STAMP(1015));
register_stamp_name("STAMPWTAG_chem__ResidueTest_O", ADJUST_STAMP(1019));
register_stamp_name("STAMPWTAG_chem__AntechamberFocusAtomMatch_O", ADJUST_STAMP(1023));
register_stamp_name("STAMPWTAG_chem__Logical_O", ADJUST_STAMP(1027));
register_stamp_name("STAMPWTAG_chem__AtomTest_O", ADJUST_STAMP(1031));
register_stamp_name("STAMPWTAG_chem__BondToAtomTest_O", ADJUST_STAMP(1035));
register_stamp_name("STAMPWTAG_chem__AntechamberBondToAtomTest_O", ADJUST_STAMP(1039));
register_stamp_name("STAMPWTAG_chem__BondListMatchNode_O", ADJUST_STAMP(1043));
register_stamp_name("STAMPWTAG_chem__Chain_O", ADJUST_STAMP(1047));
register_stamp_name("STAMPWTAG_chem__Branch_O", ADJUST_STAMP(1051));
register_stamp_name("STAMPWTAG_chem__RootMatchNode_O", ADJUST_STAMP(1055));
register_stamp_name("STAMPWTAG_chem__AfterMatchBondToAtomTest_O", ADJUST_STAMP(1059));
register_stamp_name("STAMPWTAG_chem__ElementsInfo_O", ADJUST_STAMP(1063));
register_stamp_name("STAMPWTAG_chem__Dimacs_O", ADJUST_STAMP(1067));
register_stamp_name("STAMPWTAG_chem__SpecificContext_O", ADJUST_STAMP(1071));
register_stamp_name("STAMPWTAG_chem__Minimizer_O", ADJUST_STAMP(1075));
register_stamp_name("STAMPWTAG_adapt__SymbolSet_O", ADJUST_STAMP(1079));
register_stamp_name("STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O", ADJUST_STAMP(1083));
register_stamp_name("STAMPWTAG_chem__Alias_O", ADJUST_STAMP(1087));
register_stamp_name("STAMPWTAG_chem__AtomIdToAtomMap_O", ADJUST_STAMP(1091));
register_stamp_name("STAMPWTAG_mp__Process_O", ADJUST_STAMP(1095));
register_stamp_name("STAMPWTAG_core__SingleDispatchMethod_O", ADJUST_STAMP(1099));
register_stamp_name("STAMPWTAG_core__Iterator_O", ADJUST_STAMP(1103));
register_stamp_name("STAMPWTAG_core__DirectoryIterator_O", ADJUST_STAMP(1107));
register_stamp_name("STAMPWTAG_chem__IterateRestraints_O", ADJUST_STAMP(1111));
register_stamp_name("STAMPWTAG_adapt__IterateCons_O", ADJUST_STAMP(1115));
register_stamp_name("STAMPWTAG_core__RecursiveDirectoryIterator_O", ADJUST_STAMP(1119));
register_stamp_name("STAMPWTAG_chem__IterateMatter_O", ADJUST_STAMP(1123));
register_stamp_name("STAMPWTAG_chem__IterateResidues_O", ADJUST_STAMP(1127));
register_stamp_name("STAMPWTAG_chem__IterateBonds_O", ADJUST_STAMP(1131));
register_stamp_name("STAMPWTAG_chem__IterateAtoms_O", ADJUST_STAMP(1135));
register_stamp_name("STAMPWTAG_core__Symbol_O", ADJUST_STAMP(1139));
register_stamp_name("STAMPWTAG_core__Null_O", ADJUST_STAMP(1143));
register_stamp_name("STAMPWTAG_core__SharpEqualWrapper_O", ADJUST_STAMP(1147));
register_stamp_name("STAMPWTAG_llvmo__ClaspJIT_O", ADJUST_STAMP(1151));
register_stamp_name("STAMPWTAG_core__Exposer_O", ADJUST_STAMP(1155));
register_stamp_name("STAMPWTAG_units__UnitsExposer_O", ADJUST_STAMP(1159));
register_stamp_name("STAMPWTAG_core__CoreExposer_O", ADJUST_STAMP(1163));
register_stamp_name("STAMPWTAG_geom__GeomExposer_O", ADJUST_STAMP(1167));
register_stamp_name("STAMPWTAG_adapt__AdaptExposer_O", ADJUST_STAMP(1171));
register_stamp_name("STAMPWTAG_kinematics__KinematicsExposer_O", ADJUST_STAMP(1175));
register_stamp_name("STAMPWTAG_chem__ChemExposer_O", ADJUST_STAMP(1179));
register_stamp_name("STAMPWTAG_asttooling__AsttoolingExposer_O", ADJUST_STAMP(1183));
register_stamp_name("STAMPWTAG_core__PosixTimeDuration_O", ADJUST_STAMP(1187));
register_stamp_name("STAMPWTAG_clasp_ffi__ForeignTypeSpec_O", ADJUST_STAMP(1191));
register_stamp_name("STAMPWTAG_core__SmallMap_O", ADJUST_STAMP(1195));
register_stamp_name("STAMPWTAG_core__Instance_O", ADJUST_STAMP(1197));
register_stamp_name("STAMPWTAG_clbind__ClassRep_O", ADJUST_STAMP(1201));
register_stamp_name("STAMPWTAG_core__DerivableCxxObject_O", ADJUST_STAMP(1204));
register_stamp_name("STAMPWTAG_mpip__Mpi_O", ADJUST_STAMP(1211));
register_stamp_name("STAMPWTAG_core__Sigset_O", ADJUST_STAMP(1215));
register_stamp_name("STAMPWTAG_core__Environment_O", ADJUST_STAMP(1219));
register_stamp_name("STAMPWTAG_core__GlueEnvironment_O", ADJUST_STAMP(1223));
register_stamp_name("STAMPWTAG_core__LexicalEnvironment_O", ADJUST_STAMP(1227));
register_stamp_name("STAMPWTAG_core__CompileTimeEnvironment_O", ADJUST_STAMP(1231));
register_stamp_name("STAMPWTAG_core__CatchEnvironment_O", ADJUST_STAMP(1235));
register_stamp_name("STAMPWTAG_core__SymbolMacroletEnvironment_O", ADJUST_STAMP(1239));
register_stamp_name("STAMPWTAG_core__FunctionContainerEnvironment_O", ADJUST_STAMP(1243));
register_stamp_name("STAMPWTAG_core__UnwindProtectEnvironment_O", ADJUST_STAMP(1247));
register_stamp_name("STAMPWTAG_core__MacroletEnvironment_O", ADJUST_STAMP(1251));
register_stamp_name("STAMPWTAG_core__RuntimeVisibleEnvironment_O", ADJUST_STAMP(1255));
register_stamp_name("STAMPWTAG_core__TagbodyEnvironment_O", ADJUST_STAMP(1259));
register_stamp_name("STAMPWTAG_core__BlockEnvironment_O", ADJUST_STAMP(1263));
register_stamp_name("STAMPWTAG_core__FunctionValueEnvironment_O", ADJUST_STAMP(1267));
register_stamp_name("STAMPWTAG_core__ValueEnvironment_O", ADJUST_STAMP(1271));
register_stamp_name("STAMPWTAG_core__ActivationFrame_O", ADJUST_STAMP(1275));
register_stamp_name("STAMPWTAG_core__ValueFrame_O", ADJUST_STAMP(1279));
register_stamp_name("STAMPWTAG_core__FunctionFrame_O", ADJUST_STAMP(1283));
register_stamp_name("STAMPWTAG_core__RandomState_O", ADJUST_STAMP(1287));
register_stamp_name("STAMPWTAG_core__EntryPointBase_O", ADJUST_STAMP(1291));
register_stamp_name("STAMPWTAG_core__GlobalEntryPointGenerator_O", ADJUST_STAMP(1295));
register_stamp_name("STAMPWTAG_core__LocalEntryPointGenerator_O", ADJUST_STAMP(1299));
register_stamp_name("STAMPWTAG_core__CodeEntryPoint_O", ADJUST_STAMP(1303));
register_stamp_name("STAMPWTAG_core__LocalEntryPoint_O", ADJUST_STAMP(1307));
register_stamp_name("STAMPWTAG_core__GlobalEntryPoint_O", ADJUST_STAMP(1311));
register_stamp_name("STAMPWTAG_core__HashTableBase_O", ADJUST_STAMP(1315));
register_stamp_name("STAMPWTAG_core__HashTable_O", ADJUST_STAMP(1319));
register_stamp_name("STAMPWTAG_core__HashTableEqualp_O", ADJUST_STAMP(1323));
register_stamp_name("STAMPWTAG_core__HashTableEq_O", ADJUST_STAMP(1327));
register_stamp_name("STAMPWTAG_core__HashTableEqual_O", ADJUST_STAMP(1331));
register_stamp_name("STAMPWTAG_core__HashTableCustom_O", ADJUST_STAMP(1335));
register_stamp_name("STAMPWTAG_core__HashTableEql_O", ADJUST_STAMP(1339));
register_stamp_name("STAMPWTAG_core__WeakKeyHashTable_O", ADJUST_STAMP(1343));
register_stamp_name("STAMPWTAG_core__FunctionDescription_O", ADJUST_STAMP(1347));
register_stamp_name("STAMPWTAG_llvmo__InsertPoint_O", ADJUST_STAMP(1351));
register_stamp_name("STAMPWTAG_core__Number_O", ADJUST_STAMP(1355));
register_stamp_name("STAMPWTAG_core__Real_O", ADJUST_STAMP(1359));
register_stamp_name("STAMPWTAG_core__Rational_O", ADJUST_STAMP(1363));
register_stamp_name("STAMPWTAG_core__Ratio_O", ADJUST_STAMP(1367));
register_stamp_name("STAMPWTAG_core__Integer_O", ADJUST_STAMP(1371));
register_stamp_name("STAMPWTAG_core__Bignum_O", ADJUST_STAMP(1375));
register_stamp_name("STAMPWTAG_core__Fixnum_dummy_O", ADJUST_STAMP(1379));
register_stamp_name("STAMPWTAG_core__Float_O", ADJUST_STAMP(1383));
register_stamp_name("STAMPWTAG_core__DoubleFloat_O", ADJUST_STAMP(1387));
register_stamp_name("STAMPWTAG_core__SingleFloat_dummy_O", ADJUST_STAMP(1391));
register_stamp_name("STAMPWTAG_core__LongFloat_O", ADJUST_STAMP(1395));
register_stamp_name("STAMPWTAG_core__ShortFloat_O", ADJUST_STAMP(1399));
register_stamp_name("STAMPWTAG_core__Complex_O", ADJUST_STAMP(1403));
register_stamp_name("STAMPWTAG_core__SourcePosInfo_O", ADJUST_STAMP(1407));
register_stamp_name("STAMPWTAG_core__Record_O", ADJUST_STAMP(1411));
register_stamp_name("STAMPWTAG_core__Frame_O", ADJUST_STAMP(1415));
register_stamp_name("STAMPWTAG_clbind__ClassRegistry_O", ADJUST_STAMP(1419));
register_stamp_name("STAMPWTAG_core__ClassHolder_O", ADJUST_STAMP(1423));
register_stamp_name("STAMPWTAG_core__WrappedPointer_O", ADJUST_STAMP(1426));
register_stamp_name("STAMPWTAG_core__SymbolToEnumConverter_O", ADJUST_STAMP(1431));
register_stamp_name("STAMPWTAG_llvmo__Attribute_O", ADJUST_STAMP(1435));
register_stamp_name("STAMPWTAG_core__ImmobileObject_O", ADJUST_STAMP(1439));
register_stamp_name("STAMPWTAG_core__Function_O", ADJUST_STAMP(1443));
register_stamp_name("STAMPWTAG_core__FuncallableInstance_O", ADJUST_STAMP(1445));
register_stamp_name("STAMPWTAG_core__Creator_O", ADJUST_STAMP(1451));
register_stamp_name("STAMPWTAG_core__FuncallableInstanceCreator_O", ADJUST_STAMP(1455));
register_stamp_name("STAMPWTAG_clbind__ConstructorCreator_O", ADJUST_STAMP(1459));
register_stamp_name("STAMPWTAG_clbind__DummyCreator_O", ADJUST_STAMP(1463));
register_stamp_name("STAMPWTAG_core__InstanceCreator_O", ADJUST_STAMP(1467));
register_stamp_name("STAMPWTAG_core__ClassRepCreator_O", ADJUST_STAMP(1471));
register_stamp_name("STAMPWTAG_core__DerivableCxxClassCreator_O", ADJUST_STAMP(1475));
register_stamp_name("STAMPWTAG_core__StandardClassCreator_O", ADJUST_STAMP(1479));
register_stamp_name("STAMPWTAG_core__SpecialForm_O", ADJUST_STAMP(1483));
register_stamp_name("STAMPWTAG_core__Closure_O", ADJUST_STAMP(1487));
register_stamp_name("STAMPWTAG_core__BuiltinClosure_O", ADJUST_STAMP(1491));
register_stamp_name("STAMPWTAG_core__TranslationFunctor_O", ADJUST_STAMP(1495));
register_stamp_name("STAMPWTAG_core__ClosureWithSlots_O", ADJUST_STAMP(1499));
register_stamp_name("STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O", ADJUST_STAMP(1503));
register_stamp_name("STAMPWTAG_core__WeakPointer_O", ADJUST_STAMP(1507));
register_stamp_name("STAMPWTAG_llvmo__DebugLoc_O", ADJUST_STAMP(1511));
register_stamp_name("STAMPWTAG_core__Array_O", ADJUST_STAMP(1515));
register_stamp_name("STAMPWTAG_core__MDArray_O", ADJUST_STAMP(1519));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_", ADJUST_STAMP(1523));
register_stamp_name("STAMPWTAG_core__MDArray_int16_t_O", ADJUST_STAMP(1527));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_", ADJUST_STAMP(1531));
register_stamp_name("STAMPWTAG_core__MDArray_int8_t_O", ADJUST_STAMP(1535));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_", ADJUST_STAMP(1539));
register_stamp_name("STAMPWTAG_core__MDArray_int32_t_O", ADJUST_STAMP(1543));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_", ADJUST_STAMP(1547));
register_stamp_name("STAMPWTAG_core__MDArray_byte4_t_O", ADJUST_STAMP(1551));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_", ADJUST_STAMP(1555));
register_stamp_name("STAMPWTAG_core__MDArray_float_O", ADJUST_STAMP(1559));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_", ADJUST_STAMP(1563));
register_stamp_name("STAMPWTAG_core__MDArray_size_t_O", ADJUST_STAMP(1567));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_", ADJUST_STAMP(1571));
register_stamp_name("STAMPWTAG_core__MDArray_byte8_t_O", ADJUST_STAMP(1575));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_", ADJUST_STAMP(1579));
register_stamp_name("STAMPWTAG_core__MDArray_int2_t_O", ADJUST_STAMP(1583));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_", ADJUST_STAMP(1587));
register_stamp_name("STAMPWTAG_core__MDArray_fixnum_O", ADJUST_STAMP(1591));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_", ADJUST_STAMP(1595));
register_stamp_name("STAMPWTAG_core__MDArrayBaseChar_O", ADJUST_STAMP(1599));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_", ADJUST_STAMP(1603));
register_stamp_name("STAMPWTAG_core__MDArray_byte64_t_O", ADJUST_STAMP(1607));
register_stamp_name("STAMPWTAG_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_", ADJUST_STAMP(1611));
register_stamp_name("STAMPWTAG_geom__MDArrayCoordinate_O", ADJUST_STAMP(1615));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_", ADJUST_STAMP(1619));
register_stamp_name("STAMPWTAG_core__MDArrayT_O", ADJUST_STAMP(1623));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_O", ADJUST_STAMP(1627));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1631));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_int8_t_O", ADJUST_STAMP(1635));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1639));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_byte32_t_O", ADJUST_STAMP(1643));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1647));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_int2_t_O", ADJUST_STAMP(1651));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1655));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_byte4_t_O", ADJUST_STAMP(1659));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1663));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_int32_t_O", ADJUST_STAMP(1667));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_", ADJUST_STAMP(1671));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_float_O", ADJUST_STAMP(1675));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1679));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_int16_t_O", ADJUST_STAMP(1683));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1687));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_size_t_O", ADJUST_STAMP(1691));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_", ADJUST_STAMP(1695));
register_stamp_name("STAMPWTAG_core__SimpleMDArrayCharacter_O", ADJUST_STAMP(1699));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1703));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_byte2_t_O", ADJUST_STAMP(1707));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1711));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_byte16_t_O", ADJUST_STAMP(1715));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_", ADJUST_STAMP(1719));
register_stamp_name("STAMPWTAG_core__SimpleMDArrayBaseChar_O", ADJUST_STAMP(1723));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1727));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_byte64_t_O", ADJUST_STAMP(1731));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_", ADJUST_STAMP(1735));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_double_O", ADJUST_STAMP(1739));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_", ADJUST_STAMP(1743));
register_stamp_name("STAMPWTAG_core__SimpleMDArrayT_O", ADJUST_STAMP(1747));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1751));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_int4_t_O", ADJUST_STAMP(1755));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_", ADJUST_STAMP(1759));
register_stamp_name("STAMPWTAG_geom__SimpleMDArrayCoordinate_O", ADJUST_STAMP(1763));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_", ADJUST_STAMP(1767));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_fixnum_O", ADJUST_STAMP(1771));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_", ADJUST_STAMP(1775));
register_stamp_name("STAMPWTAG_core__SimpleMDArrayBit_O", ADJUST_STAMP(1779));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1783));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_byte8_t_O", ADJUST_STAMP(1787));
register_stamp_name("STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_", ADJUST_STAMP(1791));
register_stamp_name("STAMPWTAG_core__SimpleMDArray_int64_t_O", ADJUST_STAMP(1795));
register_stamp_name("STAMPWTAG_core__ComplexVector_O", ADJUST_STAMP(1799));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_", ADJUST_STAMP(1803));
register_stamp_name("STAMPWTAG_core__ComplexVector_double_O", ADJUST_STAMP(1807));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_", ADJUST_STAMP(1811));
register_stamp_name("STAMPWTAG_core__ComplexVector_int8_t_O", ADJUST_STAMP(1815));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_", ADJUST_STAMP(1819));
register_stamp_name("STAMPWTAG_core__ComplexVector_T_O", ADJUST_STAMP(1823));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_", ADJUST_STAMP(1827));
register_stamp_name("STAMPWTAG_core__ComplexVector_int32_t_O", ADJUST_STAMP(1831));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_", ADJUST_STAMP(1835));
register_stamp_name("STAMPWTAG_core__ComplexVector_byte16_t_O", ADJUST_STAMP(1839));
register_stamp_name("STAMPWTAG_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_", ADJUST_STAMP(1843));
register_stamp_name("STAMPWTAG_geom__ComplexVectorCoordinate_O", ADJUST_STAMP(1847));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_", ADJUST_STAMP(1851));
register_stamp_name("STAMPWTAG_core__ComplexVector_byte4_t_O", ADJUST_STAMP(1855));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_", ADJUST_STAMP(1859));
register_stamp_name("STAMPWTAG_core__ComplexVector_byte64_t_O", ADJUST_STAMP(1863));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_", ADJUST_STAMP(1867));
register_stamp_name("STAMPWTAG_core__ComplexVector_int2_t_O", ADJUST_STAMP(1871));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_", ADJUST_STAMP(1875));
register_stamp_name("STAMPWTAG_core__ComplexVector_float_O", ADJUST_STAMP(1879));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_", ADJUST_STAMP(1883));
register_stamp_name("STAMPWTAG_core__ComplexVector_int16_t_O", ADJUST_STAMP(1887));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_", ADJUST_STAMP(1891));
register_stamp_name("STAMPWTAG_core__ComplexVector_int4_t_O", ADJUST_STAMP(1895));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_", ADJUST_STAMP(1899));
register_stamp_name("STAMPWTAG_core__ComplexVector_size_t_O", ADJUST_STAMP(1903));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_", ADJUST_STAMP(1907));
register_stamp_name("STAMPWTAG_core__ComplexVector_byte2_t_O", ADJUST_STAMP(1911));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_", ADJUST_STAMP(1915));
register_stamp_name("STAMPWTAG_core__ComplexVector_byte8_t_O", ADJUST_STAMP(1919));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_", ADJUST_STAMP(1923));
register_stamp_name("STAMPWTAG_core__ComplexVector_byte32_t_O", ADJUST_STAMP(1927));
register_stamp_name("STAMPWTAG_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_", ADJUST_STAMP(1931));
register_stamp_name("STAMPWTAG_core__BitVectorNs_O", ADJUST_STAMP(1935));
register_stamp_name("STAMPWTAG_core__StrNs_O", ADJUST_STAMP(1939));
register_stamp_name("STAMPWTAG_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_", ADJUST_STAMP(1943));
register_stamp_name("STAMPWTAG_core__Str8Ns_O", ADJUST_STAMP(1947));
register_stamp_name("STAMPWTAG_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_", ADJUST_STAMP(1951));
register_stamp_name("STAMPWTAG_core__StrWNs_O", ADJUST_STAMP(1955));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_", ADJUST_STAMP(1959));
register_stamp_name("STAMPWTAG_core__ComplexVector_fixnum_O", ADJUST_STAMP(1963));
register_stamp_name("STAMPWTAG_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_", ADJUST_STAMP(1967));
register_stamp_name("STAMPWTAG_core__ComplexVector_int64_t_O", ADJUST_STAMP(1971));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_", ADJUST_STAMP(1975));
register_stamp_name("STAMPWTAG_core__MDArray_int64_t_O", ADJUST_STAMP(1979));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_", ADJUST_STAMP(1983));
register_stamp_name("STAMPWTAG_core__MDArray_byte32_t_O", ADJUST_STAMP(1987));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_", ADJUST_STAMP(1991));
register_stamp_name("STAMPWTAG_core__MDArray_byte2_t_O", ADJUST_STAMP(1995));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_", ADJUST_STAMP(1999));
register_stamp_name("STAMPWTAG_core__MDArrayCharacter_O", ADJUST_STAMP(2003));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_", ADJUST_STAMP(2007));
register_stamp_name("STAMPWTAG_core__MDArrayBit_O", ADJUST_STAMP(2011));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_", ADJUST_STAMP(2015));
register_stamp_name("STAMPWTAG_core__MDArray_byte16_t_O", ADJUST_STAMP(2019));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_", ADJUST_STAMP(2023));
register_stamp_name("STAMPWTAG_core__MDArray_int4_t_O", ADJUST_STAMP(2027));
register_stamp_name("STAMPWTAG_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_", ADJUST_STAMP(2031));
register_stamp_name("STAMPWTAG_core__MDArray_double_O", ADJUST_STAMP(2035));
register_stamp_name("STAMPWTAG_core__AbstractSimpleVector_O", ADJUST_STAMP(2039));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_", ADJUST_STAMP(2043));
register_stamp_name("STAMPWTAG_core__SimpleVector_byte32_t_O", ADJUST_STAMP(2047));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_", ADJUST_STAMP(2051));
register_stamp_name("STAMPWTAG_core__SimpleVector_size_t_O", ADJUST_STAMP(2055));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_", ADJUST_STAMP(2059));
register_stamp_name("STAMPWTAG_core__SimpleVector_double_O", ADJUST_STAMP(2063));
register_stamp_name("STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_", ADJUST_STAMP(2067));
register_stamp_name("STAMPWTAG_core__SimpleVector_int2_t_O", ADJUST_STAMP(2071));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_", ADJUST_STAMP(2075));
register_stamp_name("STAMPWTAG_core__SimpleVector_int64_t_O", ADJUST_STAMP(2079));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_", ADJUST_STAMP(2083));
register_stamp_name("STAMPWTAG_core__SimpleVector_int8_t_O", ADJUST_STAMP(2087));
register_stamp_name("STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_", ADJUST_STAMP(2091));
register_stamp_name("STAMPWTAG_core__SimpleVector_byte4_t_O", ADJUST_STAMP(2095));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_", ADJUST_STAMP(2099));
register_stamp_name("STAMPWTAG_geom__SimpleVectorCoordinate_O", ADJUST_STAMP(2103));
register_stamp_name("STAMPWTAG_core__SimpleString_O", ADJUST_STAMP(2107));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_", ADJUST_STAMP(2111));
register_stamp_name("STAMPWTAG_core__SimpleBaseString_O", ADJUST_STAMP(2115));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleCharacterString_O_unsigned_int_core__SimpleString_O_", ADJUST_STAMP(2119));
register_stamp_name("STAMPWTAG_core__SimpleCharacterString_O", ADJUST_STAMP(2123));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_", ADJUST_STAMP(2127));
register_stamp_name("STAMPWTAG_core__SimpleVector_int16_t_O", ADJUST_STAMP(2131));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_", ADJUST_STAMP(2135));
register_stamp_name("STAMPWTAG_core__SimpleVector_byte16_t_O", ADJUST_STAMP(2139));
register_stamp_name("STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_", ADJUST_STAMP(2143));
register_stamp_name("STAMPWTAG_core__SimpleBitVector_O", ADJUST_STAMP(2147));
register_stamp_name("STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_", ADJUST_STAMP(2151));
register_stamp_name("STAMPWTAG_core__SimpleVector_int4_t_O", ADJUST_STAMP(2155));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_", ADJUST_STAMP(2159));
register_stamp_name("STAMPWTAG_core__SimpleVector_byte64_t_O", ADJUST_STAMP(2163));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_", ADJUST_STAMP(2167));
register_stamp_name("STAMPWTAG_core__SimpleVector_fixnum_O", ADJUST_STAMP(2171));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_", ADJUST_STAMP(2175));
register_stamp_name("STAMPWTAG_core__SimpleVector_float_O", ADJUST_STAMP(2179));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_", ADJUST_STAMP(2183));
register_stamp_name("STAMPWTAG_core__SimpleVector_O", ADJUST_STAMP(2187));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_", ADJUST_STAMP(2191));
register_stamp_name("STAMPWTAG_core__SimpleVector_byte8_t_O", ADJUST_STAMP(2195));
register_stamp_name("STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_", ADJUST_STAMP(2199));
register_stamp_name("STAMPWTAG_core__SimpleVector_byte2_t_O", ADJUST_STAMP(2203));
register_stamp_name("STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_", ADJUST_STAMP(2207));
register_stamp_name("STAMPWTAG_core__SimpleVector_int32_t_O", ADJUST_STAMP(2211));
register_stamp_name("STAMPWTAG_core__Character_dummy_O", ADJUST_STAMP(2215));
register_stamp_name("STAMPWTAG_llvmo__DataLayout_O", ADJUST_STAMP(2219));
register_stamp_name("STAMPWTAG_core__LoadTimeValues_O", ADJUST_STAMP(2223));
register_stamp_name("STAMPWTAG_core__Readtable_O", ADJUST_STAMP(2227));
register_stamp_name("STAMPWTAG_core__PosixTime_O", ADJUST_STAMP(2231));
register_stamp_name("STAMPWTAG_llvmo__StructLayout_O", ADJUST_STAMP(2235));
register_stamp_name("STAMPWTAG_core__ExternalObject_O", ADJUST_STAMP(2239));
register_stamp_name("STAMPWTAG_llvmo__Pass_O", ADJUST_STAMP(2243));
register_stamp_name("STAMPWTAG_llvmo__ModulePass_O", ADJUST_STAMP(2247));
register_stamp_name("STAMPWTAG_llvmo__ImmutablePass_O", ADJUST_STAMP(2251));
register_stamp_name("STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O", ADJUST_STAMP(2255));
register_stamp_name("STAMPWTAG_llvmo__FunctionPass_O", ADJUST_STAMP(2259));
register_stamp_name("STAMPWTAG_llvmo__MCSubtargetInfo_O", ADJUST_STAMP(2263));
register_stamp_name("STAMPWTAG_llvmo__TargetSubtargetInfo_O", ADJUST_STAMP(2267));
register_stamp_name("STAMPWTAG_llvmo__JITDylib_O", ADJUST_STAMP(2271));
register_stamp_name("STAMPWTAG_llvmo__DIContext_O", ADJUST_STAMP(2275));
register_stamp_name("STAMPWTAG_llvmo__IRBuilderBase_O", ADJUST_STAMP(2279));
register_stamp_name("STAMPWTAG_llvmo__IRBuilder_O", ADJUST_STAMP(2283));
register_stamp_name("STAMPWTAG_llvmo__APInt_O", ADJUST_STAMP(2287));
register_stamp_name("STAMPWTAG_llvmo__DIBuilder_O", ADJUST_STAMP(2291));
register_stamp_name("STAMPWTAG_llvmo__SectionedAddress_O", ADJUST_STAMP(2295));
register_stamp_name("STAMPWTAG_llvmo__EngineBuilder_O", ADJUST_STAMP(2299));
register_stamp_name("STAMPWTAG_llvmo__PassManagerBase_O", ADJUST_STAMP(2303));
register_stamp_name("STAMPWTAG_llvmo__PassManager_O", ADJUST_STAMP(2307));
register_stamp_name("STAMPWTAG_llvmo__FunctionPassManager_O", ADJUST_STAMP(2311));
register_stamp_name("STAMPWTAG_llvmo__Value_O", ADJUST_STAMP(2315));
register_stamp_name("STAMPWTAG_llvmo__User_O", ADJUST_STAMP(2319));
register_stamp_name("STAMPWTAG_llvmo__Instruction_O", ADJUST_STAMP(2323));
register_stamp_name("STAMPWTAG_llvmo__StoreInst_O", ADJUST_STAMP(2327));
register_stamp_name("STAMPWTAG_llvmo__UnreachableInst_O", ADJUST_STAMP(2331));
register_stamp_name("STAMPWTAG_llvmo__ResumeInst_O", ADJUST_STAMP(2335));
register_stamp_name("STAMPWTAG_llvmo__AtomicCmpXchgInst_O", ADJUST_STAMP(2339));
register_stamp_name("STAMPWTAG_llvmo__FenceInst_O", ADJUST_STAMP(2343));
register_stamp_name("STAMPWTAG_llvmo__CallBase_O", ADJUST_STAMP(2347));
register_stamp_name("STAMPWTAG_llvmo__CallInst_O", ADJUST_STAMP(2351));
register_stamp_name("STAMPWTAG_llvmo__InvokeInst_O", ADJUST_STAMP(2355));
register_stamp_name("STAMPWTAG_llvmo__BranchInst_O", ADJUST_STAMP(2359));
register_stamp_name("STAMPWTAG_llvmo__UnaryInstruction_O", ADJUST_STAMP(2363));
register_stamp_name("STAMPWTAG_llvmo__VAArgInst_O", ADJUST_STAMP(2367));
register_stamp_name("STAMPWTAG_llvmo__AllocaInst_O", ADJUST_STAMP(2371));
register_stamp_name("STAMPWTAG_llvmo__LoadInst_O", ADJUST_STAMP(2375));
register_stamp_name("STAMPWTAG_llvmo__SwitchInst_O", ADJUST_STAMP(2379));
register_stamp_name("STAMPWTAG_llvmo__AtomicRMWInst_O", ADJUST_STAMP(2383));
register_stamp_name("STAMPWTAG_llvmo__LandingPadInst_O", ADJUST_STAMP(2387));
register_stamp_name("STAMPWTAG_llvmo__ReturnInst_O", ADJUST_STAMP(2391));
register_stamp_name("STAMPWTAG_llvmo__PHINode_O", ADJUST_STAMP(2395));
register_stamp_name("STAMPWTAG_llvmo__IndirectBrInst_O", ADJUST_STAMP(2399));
register_stamp_name("STAMPWTAG_llvmo__Constant_O", ADJUST_STAMP(2403));
register_stamp_name("STAMPWTAG_llvmo__GlobalValue_O", ADJUST_STAMP(2407));
register_stamp_name("STAMPWTAG_llvmo__Function_O", ADJUST_STAMP(2411));
register_stamp_name("STAMPWTAG_llvmo__GlobalVariable_O", ADJUST_STAMP(2415));
register_stamp_name("STAMPWTAG_llvmo__BlockAddress_O", ADJUST_STAMP(2419));
register_stamp_name("STAMPWTAG_llvmo__ConstantStruct_O", ADJUST_STAMP(2423));
register_stamp_name("STAMPWTAG_llvmo__ConstantInt_O", ADJUST_STAMP(2427));
register_stamp_name("STAMPWTAG_llvmo__ConstantFP_O", ADJUST_STAMP(2431));
register_stamp_name("STAMPWTAG_llvmo__ConstantPointerNull_O", ADJUST_STAMP(2435));
register_stamp_name("STAMPWTAG_llvmo__ConstantDataSequential_O", ADJUST_STAMP(2439));
register_stamp_name("STAMPWTAG_llvmo__ConstantDataArray_O", ADJUST_STAMP(2443));
register_stamp_name("STAMPWTAG_llvmo__ConstantExpr_O", ADJUST_STAMP(2447));
register_stamp_name("STAMPWTAG_llvmo__UndefValue_O", ADJUST_STAMP(2451));
register_stamp_name("STAMPWTAG_llvmo__ConstantArray_O", ADJUST_STAMP(2455));
register_stamp_name("STAMPWTAG_llvmo__Argument_O", ADJUST_STAMP(2459));
register_stamp_name("STAMPWTAG_llvmo__BasicBlock_O", ADJUST_STAMP(2463));
register_stamp_name("STAMPWTAG_llvmo__MetadataAsValue_O", ADJUST_STAMP(2467));
register_stamp_name("STAMPWTAG_llvmo__ThreadSafeContext_O", ADJUST_STAMP(2471));
register_stamp_name("STAMPWTAG_llvmo__TargetMachine_O", ADJUST_STAMP(2475));
register_stamp_name("STAMPWTAG_llvmo__LLVMTargetMachine_O", ADJUST_STAMP(2479));
register_stamp_name("STAMPWTAG_llvmo__Triple_O", ADJUST_STAMP(2483));
register_stamp_name("STAMPWTAG_llvmo__LLVMContext_O", ADJUST_STAMP(2487));
register_stamp_name("STAMPWTAG_llvmo__PassManagerBuilder_O", ADJUST_STAMP(2491));
register_stamp_name("STAMPWTAG_llvmo__ExecutionEngine_O", ADJUST_STAMP(2495));
register_stamp_name("STAMPWTAG_llvmo__Type_O", ADJUST_STAMP(2499));
register_stamp_name("STAMPWTAG_llvmo__PointerType_O", ADJUST_STAMP(2503));
register_stamp_name("STAMPWTAG_llvmo__ArrayType_O", ADJUST_STAMP(2507));
register_stamp_name("STAMPWTAG_llvmo__FunctionType_O", ADJUST_STAMP(2511));
register_stamp_name("STAMPWTAG_llvmo__IntegerType_O", ADJUST_STAMP(2515));
register_stamp_name("STAMPWTAG_llvmo__VectorType_O", ADJUST_STAMP(2519));
register_stamp_name("STAMPWTAG_llvmo__StructType_O", ADJUST_STAMP(2523));
register_stamp_name("STAMPWTAG_llvmo__TargetPassConfig_O", ADJUST_STAMP(2527));
register_stamp_name("STAMPWTAG_llvmo__APFloat_O", ADJUST_STAMP(2531));
register_stamp_name("STAMPWTAG_llvmo__Metadata_O", ADJUST_STAMP(2535));
register_stamp_name("STAMPWTAG_llvmo__MDNode_O", ADJUST_STAMP(2539));
register_stamp_name("STAMPWTAG_llvmo__DILocation_O", ADJUST_STAMP(2543));
register_stamp_name("STAMPWTAG_llvmo__DINode_O", ADJUST_STAMP(2547));
register_stamp_name("STAMPWTAG_llvmo__DIVariable_O", ADJUST_STAMP(2551));
register_stamp_name("STAMPWTAG_llvmo__DILocalVariable_O", ADJUST_STAMP(2555));
register_stamp_name("STAMPWTAG_llvmo__DIScope_O", ADJUST_STAMP(2559));
register_stamp_name("STAMPWTAG_llvmo__DIFile_O", ADJUST_STAMP(2563));
register_stamp_name("STAMPWTAG_llvmo__DILocalScope_O", ADJUST_STAMP(2567));
register_stamp_name("STAMPWTAG_llvmo__DISubprogram_O", ADJUST_STAMP(2571));
register_stamp_name("STAMPWTAG_llvmo__DILexicalBlockBase_O", ADJUST_STAMP(2575));
register_stamp_name("STAMPWTAG_llvmo__DILexicalBlock_O", ADJUST_STAMP(2579));
register_stamp_name("STAMPWTAG_llvmo__DICompileUnit_O", ADJUST_STAMP(2583));
register_stamp_name("STAMPWTAG_llvmo__DIType_O", ADJUST_STAMP(2587));
register_stamp_name("STAMPWTAG_llvmo__DICompositeType_O", ADJUST_STAMP(2591));
register_stamp_name("STAMPWTAG_llvmo__DIDerivedType_O", ADJUST_STAMP(2595));
register_stamp_name("STAMPWTAG_llvmo__DISubroutineType_O", ADJUST_STAMP(2599));
register_stamp_name("STAMPWTAG_llvmo__DIBasicType_O", ADJUST_STAMP(2603));
register_stamp_name("STAMPWTAG_llvmo__DIExpression_O", ADJUST_STAMP(2607));
register_stamp_name("STAMPWTAG_llvmo__ValueAsMetadata_O", ADJUST_STAMP(2611));
register_stamp_name("STAMPWTAG_llvmo__MDString_O", ADJUST_STAMP(2615));
register_stamp_name("STAMPWTAG_core__Test_O", ADJUST_STAMP(2619));
register_stamp_name("STAMPWTAG_llvmo__NamedMDNode_O", ADJUST_STAMP(2623));
register_stamp_name("STAMPWTAG_llvmo__DWARFContext_O", ADJUST_STAMP(2627));
register_stamp_name("STAMPWTAG_llvmo__TargetOptions_O", ADJUST_STAMP(2631));
register_stamp_name("STAMPWTAG_llvmo__Module_O", ADJUST_STAMP(2635));
register_stamp_name("STAMPWTAG_llvmo__Target_O", ADJUST_STAMP(2639));
register_stamp_name("STAMPWTAG_llvmo__Linker_O", ADJUST_STAMP(2643));
register_stamp_name("STAMPWTAG_core__Rack_O", ADJUST_STAMP(2647));
register_stamp_name("STAMPWTAG_core__SmallMultimap_O", ADJUST_STAMP(2651));
register_stamp_name("STAMPWTAG_core__Scope_O", ADJUST_STAMP(2655));
register_stamp_name("STAMPWTAG_core__FileScope_O", ADJUST_STAMP(2659));
register_stamp_name("STAMPWTAG_core__Path_O", ADJUST_STAMP(2663));
register_stamp_name("STAMPWTAG_core__Pathname_O", ADJUST_STAMP(2667));
register_stamp_name("STAMPWTAG_core__LogicalPathname_O", ADJUST_STAMP(2671));
register_stamp_name("STAMPWTAG_core__Stream_O", ADJUST_STAMP(2675));
register_stamp_name("STAMPWTAG_core__AnsiStream_O", ADJUST_STAMP(2679));
register_stamp_name("STAMPWTAG_core__TwoWayStream_O", ADJUST_STAMP(2683));
register_stamp_name("STAMPWTAG_core__SynonymStream_O", ADJUST_STAMP(2687));
register_stamp_name("STAMPWTAG_core__StringStream_O", ADJUST_STAMP(2691));
register_stamp_name("STAMPWTAG_core__StringOutputStream_O", ADJUST_STAMP(2695));
register_stamp_name("STAMPWTAG_core__StringInputStream_O", ADJUST_STAMP(2699));
register_stamp_name("STAMPWTAG_core__EchoStream_O", ADJUST_STAMP(2703));
register_stamp_name("STAMPWTAG_core__ConcatenatedStream_O", ADJUST_STAMP(2707));
register_stamp_name("STAMPWTAG_core__FileStream_O", ADJUST_STAMP(2711));
register_stamp_name("STAMPWTAG_core__IOFileStream_O", ADJUST_STAMP(2715));
register_stamp_name("STAMPWTAG_core__IOStreamStream_O", ADJUST_STAMP(2719));
register_stamp_name("STAMPWTAG_core__BroadcastStream_O", ADJUST_STAMP(2723));
register_stamp_name("STAMPWTAG_core__Package_O", ADJUST_STAMP(2727));
register_stamp_name("STAMPWTAG_core__FileStatus_O", ADJUST_STAMP(2731));
register_stamp_name("STAMPWTAG_core__InvocationHistoryFrameIterator_O", ADJUST_STAMP(2735));
register_stamp_name("STAMPWTAG_core__DirectoryEntry_O", ADJUST_STAMP(2739));
register_stamp_name("STAMPWTAG_core__LightUserData_O", ADJUST_STAMP(2743));
register_stamp_name("STAMPWTAG_core__UserData_O", ADJUST_STAMP(2747));
register_stamp_name("STAMPWTAG_core__Cons_O", ADJUST_STAMP(2751));
register_stamp_name("STAMPWTAG_core__VaList_dummy_O", ADJUST_STAMP(2755));
register_stamp_name("STAMPWTAG_core__Lisp_O", ADJUST_STAMP(2759));
register_stamp_name("STAMPWTAG_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_", ADJUST_STAMP(2763));
register_stamp_name("STAMPWTAG_asttooling__AstVisitor_O", ADJUST_STAMP(2767));
register_stamp_name("STAMPWTAG_gctools__GCContainer", ADJUST_STAMP(2771));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__", ADJUST_STAMP(2775));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_", ADJUST_STAMP(2779));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__", ADJUST_STAMP(2783));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_", ADJUST_STAMP(2787));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__", ADJUST_STAMP(2791));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__", ADJUST_STAMP(2795));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_short_", ADJUST_STAMP(2799));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__", ADJUST_STAMP(2803));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_unsigned_long_", ADJUST_STAMP(2807));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___", ADJUST_STAMP(2811));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__", ADJUST_STAMP(2815));
register_stamp_name("STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_", ADJUST_STAMP(2819));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_", ADJUST_STAMP(2823));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___", ADJUST_STAMP(2827));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_", ADJUST_STAMP(2831));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__", ADJUST_STAMP(2835));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_", ADJUST_STAMP(2839));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___", ADJUST_STAMP(2843));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__", ADJUST_STAMP(2847));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_unsigned_char_", ADJUST_STAMP(2851));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___", ADJUST_STAMP(2855));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__", ADJUST_STAMP(2859));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___", ADJUST_STAMP(2863));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_", ADJUST_STAMP(2867));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__", ADJUST_STAMP(2871));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_", ADJUST_STAMP(2875));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__", ADJUST_STAMP(2879));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__", ADJUST_STAMP(2883));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__", ADJUST_STAMP(2887));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___", ADJUST_STAMP(2891));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__", ADJUST_STAMP(2895));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_", ADJUST_STAMP(2899));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_", ADJUST_STAMP(2903));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_", ADJUST_STAMP(2907));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___", ADJUST_STAMP(2911));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__", ADJUST_STAMP(2915));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_Vector3_", ADJUST_STAMP(2919));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_", ADJUST_STAMP(2923));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__", ADJUST_STAMP(2927));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___", ADJUST_STAMP(2931));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_", ADJUST_STAMP(2935));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__", ADJUST_STAMP(2939));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___", ADJUST_STAMP(2943));
register_stamp_name("STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__", ADJUST_STAMP(2947));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__", ADJUST_STAMP(2951));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__", ADJUST_STAMP(2955));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__", ADJUST_STAMP(2959));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__", ADJUST_STAMP(2963));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___", ADJUST_STAMP(2967));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___", ADJUST_STAMP(2971));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__", ADJUST_STAMP(2975));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___", ADJUST_STAMP(2979));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__", ADJUST_STAMP(2983));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__", ADJUST_STAMP(2987));
register_stamp_name("STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_", ADJUST_STAMP(2991));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__", ADJUST_STAMP(2995));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__", ADJUST_STAMP(2999));
register_stamp_name("STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_", ADJUST_STAMP(3003));
register_stamp_name("STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_", ADJUST_STAMP(3007));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__", ADJUST_STAMP(3011));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_int_", ADJUST_STAMP(3015));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___", ADJUST_STAMP(3019));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__", ADJUST_STAMP(3023));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__", ADJUST_STAMP(3027));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_float_", ADJUST_STAMP(3031));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__", ADJUST_STAMP(3035));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__", ADJUST_STAMP(3039));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_core__T_O___", ADJUST_STAMP(3043));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_", ADJUST_STAMP(3047));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___", ADJUST_STAMP(3051));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_unsigned_int_", ADJUST_STAMP(3055));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__", ADJUST_STAMP(3059));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__", ADJUST_STAMP(3063));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_", ADJUST_STAMP(3067));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__", ADJUST_STAMP(3071));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_double_", ADJUST_STAMP(3075));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__", ADJUST_STAMP(3079));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__", ADJUST_STAMP(3083));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___", ADJUST_STAMP(3087));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__", ADJUST_STAMP(3091));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_", ADJUST_STAMP(3095));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_", ADJUST_STAMP(3099));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_signed_char_", ADJUST_STAMP(3103));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_", ADJUST_STAMP(3107));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__", ADJUST_STAMP(3111));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___", ADJUST_STAMP(3115));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__", ADJUST_STAMP(3119));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__", ADJUST_STAMP(3123));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_", ADJUST_STAMP(3127));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_", ADJUST_STAMP(3131));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__", ADJUST_STAMP(3135));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__", ADJUST_STAMP(3139));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_", ADJUST_STAMP(3143));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__", ADJUST_STAMP(3147));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__", ADJUST_STAMP(3151));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___", ADJUST_STAMP(3155));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__", ADJUST_STAMP(3159));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_double_", ADJUST_STAMP(3163));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___", ADJUST_STAMP(3167));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___", ADJUST_STAMP(3171));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__", ADJUST_STAMP(3175));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__", ADJUST_STAMP(3179));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_", ADJUST_STAMP(3183));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__", ADJUST_STAMP(3187));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__", ADJUST_STAMP(3191));
register_stamp_name("STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_", ADJUST_STAMP(3195));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_", ADJUST_STAMP(3199));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_", ADJUST_STAMP(3203));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___", ADJUST_STAMP(3207));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___", ADJUST_STAMP(3211));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__", ADJUST_STAMP(3215));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__", ADJUST_STAMP(3219));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___", ADJUST_STAMP(3223));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_", ADJUST_STAMP(3227));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__", ADJUST_STAMP(3231));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_unsigned_long_", ADJUST_STAMP(3235));
register_stamp_name("STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_", ADJUST_STAMP(3239));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_", ADJUST_STAMP(3243));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___", ADJUST_STAMP(3247));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_", ADJUST_STAMP(3251));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__", ADJUST_STAMP(3255));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__", ADJUST_STAMP(3259));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_", ADJUST_STAMP(3263));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___", ADJUST_STAMP(3267));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_int_", ADJUST_STAMP(3271));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__", ADJUST_STAMP(3275));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_", ADJUST_STAMP(3279));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_", ADJUST_STAMP(3283));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_long_", ADJUST_STAMP(3287));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__", ADJUST_STAMP(3291));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_", ADJUST_STAMP(3295));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___", ADJUST_STAMP(3299));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__", ADJUST_STAMP(3303));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__", ADJUST_STAMP(3307));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_unsigned_int_", ADJUST_STAMP(3311));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_", ADJUST_STAMP(3315));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__", ADJUST_STAMP(3319));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__", ADJUST_STAMP(3323));
register_stamp_name("STAMPWTAG_gctools__GCArray_moveable_unsigned_short_", ADJUST_STAMP(3327));
register_stamp_name("STAMPWTAG_gctools__GCVector_moveable_float_", ADJUST_STAMP(3331));
register_stamp_name("STAMPWTAG_clang__FrontendAction", ADJUST_STAMP(3335));
register_stamp_name("STAMPWTAG_clang__ASTFrontendAction", ADJUST_STAMP(3339));
register_stamp_name("STAMPWTAG_clang__SyntaxOnlyAction", ADJUST_STAMP(3343));
register_stamp_name("STAMPWTAG_clang__tooling__ToolAction", ADJUST_STAMP(3347));
register_stamp_name("STAMPWTAG_clang__tooling__FrontendActionFactory", ADJUST_STAMP(3351));
register_stamp_name("STAMPWTAG_clang__ast_matchers__MatchFinder__MatchCallback", ADJUST_STAMP(3355));

#endif // defined(GC_ENUM_NAMES)
#if defined(GC_DYNAMIC_CAST)
// STAMPWTAG_chem__EnergyAngle_O
template <typename FP> struct Cast<chem::EnergyAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyAngle_O val -> 131
      return (kindVal == ISA_ADJUST_STAMP(131));
  };
};
// STAMPWTAG_core__SimpleVector_byte2_t_O
template <typename FP> struct Cast<core::SimpleVector_byte2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte2_t_O val -> 2203
      return (kindVal == ISA_ADJUST_STAMP(2203));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_float_
template <typename FP> struct Cast<gctools::GCVector_moveable<float>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<float> val -> 3331
      return (kindVal == ISA_ADJUST_STAMP(3331));
  };
};
// STAMPWTAG_core__SimpleMDArray_fixnum_O
template <typename FP> struct Cast<core::SimpleMDArray_fixnum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_fixnum_O val -> 1771
      return (kindVal == ISA_ADJUST_STAMP(1771));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_unsigned_short_
template <typename FP> struct Cast<gctools::GCArray_moveable<unsigned short>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<unsigned short> val -> 3327
      return (kindVal == ISA_ADJUST_STAMP(3327));
  };
};
// STAMPWTAG_core__SimpleMDArray_int32_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int32_t_O val -> 1667
      return (kindVal == ISA_ADJUST_STAMP(1667));
  };
};
// STAMPWTAG_core__Integer_O
template <typename FP> struct Cast<core::Integer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Integer_O low high --> 1371 1379 
      return ((ISA_ADJUST_STAMP(1371) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1379)));
  };
};
// STAMPWTAG_chem__OutPlug_O
template <typename FP> struct Cast<chem::OutPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OutPlug_O val -> 751
      return (kindVal == ISA_ADJUST_STAMP(751));
  };
};
// STAMPWTAG_mp__Process_O
template <typename FP> struct Cast<mp::Process_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::Process_O val -> 1095
      return (kindVal == ISA_ADJUST_STAMP(1095));
  };
};
// STAMPWTAG_core__LightUserData_O
template <typename FP> struct Cast<core::LightUserData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LightUserData_O low high --> 2743 2747 
      return ((ISA_ADJUST_STAMP(2743) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2747)));
  };
};
// STAMPWTAG_core__MDArrayT_O
template <typename FP> struct Cast<core::MDArrayT_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArrayT_O val -> 1623
      return (kindVal == ISA_ADJUST_STAMP(1623));
  };
};
// STAMPWTAG_core__DirectoryEntry_O
template <typename FP> struct Cast<core::DirectoryEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DirectoryEntry_O val -> 2739
      return (kindVal == ISA_ADJUST_STAMP(2739));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>> val -> 3323
      return (kindVal == ISA_ADJUST_STAMP(3323));
  };
};
// STAMPWTAG_llvmo__Linker_O
template <typename FP> struct Cast<llvmo::Linker_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Linker_O val -> 2643
      return (kindVal == ISA_ADJUST_STAMP(2643));
  };
};
// STAMPWTAG_chem__AtomIdToAtomMap_O
template <typename FP> struct Cast<chem::AtomIdToAtomMap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomIdToAtomMap_O val -> 1091
      return (kindVal == ISA_ADJUST_STAMP(1091));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>> val -> 3319
      return (kindVal == ISA_ADJUST_STAMP(3319));
  };
};
// STAMPWTAG_core__MDArray_float_O
template <typename FP> struct Cast<core::MDArray_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_float_O val -> 1559
      return (kindVal == ISA_ADJUST_STAMP(1559));
  };
};
// STAMPWTAG_chem__IterateMatter_O
template <typename FP> struct Cast<chem::IterateMatter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateMatter_O low high --> 1123 1135 
      return ((ISA_ADJUST_STAMP(1123) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1135)));
  };
};
// STAMPWTAG_chem__FFTypesDb_O
template <typename FP> struct Cast<chem::FFTypesDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFTypesDb_O val -> 391
      return (kindVal == ISA_ADJUST_STAMP(391));
  };
};
// STAMPWTAG_core__ComplexVector_float_O
template <typename FP> struct Cast<core::ComplexVector_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_float_O val -> 1879
      return (kindVal == ISA_ADJUST_STAMP(1879));
  };
};
// STAMPWTAG_core__StandardClassCreator_O
template <typename FP> struct Cast<core::StandardClassCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StandardClassCreator_O val -> 1479
      return (kindVal == ISA_ADJUST_STAMP(1479));
  };
};
// STAMPWTAG_chem__Alias_O
template <typename FP> struct Cast<chem::Alias_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Alias_O val -> 1087
      return (kindVal == ISA_ADJUST_STAMP(1087));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyStretch>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyStretch> val -> 3315
      return (kindVal == ISA_ADJUST_STAMP(3315));
  };
};
// STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O
template <typename FP> struct Cast<chem::MapOfMonomerNamesToAtomIndexers_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MapOfMonomerNamesToAtomIndexers_O val -> 1083
      return (kindVal == ISA_ADJUST_STAMP(1083));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_unsigned_int_
template <typename FP> struct Cast<gctools::GCVector_moveable<unsigned int>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<unsigned int> val -> 3311
      return (kindVal == ISA_ADJUST_STAMP(3311));
  };
};
// STAMPWTAG_adapt__SymbolSet_O
template <typename FP> struct Cast<adapt::SymbolSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::SymbolSet_O val -> 1079
      return (kindVal == ISA_ADJUST_STAMP(1079));
  };
};
// STAMPWTAG_chem__Minimizer_O
template <typename FP> struct Cast<chem::Minimizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Minimizer_O val -> 1075
      return (kindVal == ISA_ADJUST_STAMP(1075));
  };
};
// STAMPWTAG_chem__SpecificContext_O
template <typename FP> struct Cast<chem::SpecificContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SpecificContext_O val -> 1071
      return (kindVal == ISA_ADJUST_STAMP(1071));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>> val -> 3307
      return (kindVal == ISA_ADJUST_STAMP(3307));
  };
};
// STAMPWTAG_chem__Molecule_O
template <typename FP> struct Cast<chem::Molecule_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Molecule_O val -> 155
      return (kindVal == ISA_ADJUST_STAMP(155));
  };
};
// STAMPWTAG_core__InvocationHistoryFrameIterator_O
template <typename FP> struct Cast<core::InvocationHistoryFrameIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::InvocationHistoryFrameIterator_O val -> 2735
      return (kindVal == ISA_ADJUST_STAMP(2735));
  };
};
// STAMPWTAG_core__SimpleVector_size_t_O
template <typename FP> struct Cast<core::SimpleVector_size_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_size_t_O val -> 2055
      return (kindVal == ISA_ADJUST_STAMP(2055));
  };
};
// STAMPWTAG_kinematics__CheckpointOutPlugJoint_O
template <typename FP> struct Cast<kinematics::CheckpointOutPlugJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::CheckpointOutPlugJoint_O val -> 867
      return (kindVal == ISA_ADJUST_STAMP(867));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>> val -> 3303
      return (kindVal == ISA_ADJUST_STAMP(3303));
  };
};
// STAMPWTAG_chem__Dimacs_O
template <typename FP> struct Cast<chem::Dimacs_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Dimacs_O val -> 1067
      return (kindVal == ISA_ADJUST_STAMP(1067));
  };
};
// STAMPWTAG_llvmo__DIScope_O
template <typename FP> struct Cast<llvmo::DIScope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIScope_O low high --> 2559 2603 
      return ((ISA_ADJUST_STAMP(2559) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2603)));
  };
};
// STAMPWTAG_chem__FullLargeSquareMatrix_O
template <typename FP> struct Cast<chem::FullLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FullLargeSquareMatrix_O val -> 355
      return (kindVal == ISA_ADJUST_STAMP(355));
  };
};
// STAMPWTAG_core__FileStatus_O
template <typename FP> struct Cast<core::FileStatus_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FileStatus_O val -> 2731
      return (kindVal == ISA_ADJUST_STAMP(2731));
  };
};
// STAMPWTAG_chem__EnergySketchStretch_O
template <typename FP> struct Cast<chem::EnergySketchStretch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergySketchStretch_O val -> 127
      return (kindVal == ISA_ADJUST_STAMP(127));
  };
};
// STAMPWTAG_llvmo__IndirectBrInst_O
template <typename FP> struct Cast<llvmo::IndirectBrInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::IndirectBrInst_O val -> 2399
      return (kindVal == ISA_ADJUST_STAMP(2399));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>> val -> 3299
      return (kindVal == ISA_ADJUST_STAMP(3299));
  };
};
// STAMPWTAG_chem__OligomerPart_Monomer_O
template <typename FP> struct Cast<chem::OligomerPart_Monomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OligomerPart_Monomer_O val -> 327
      return (kindVal == ISA_ADJUST_STAMP(327));
  };
};
// STAMPWTAG_llvmo__ConstantArray_O
template <typename FP> struct Cast<llvmo::ConstantArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantArray_O val -> 2455
      return (kindVal == ISA_ADJUST_STAMP(2455));
  };
};
// STAMPWTAG_chem__ElementsInfo_O
template <typename FP> struct Cast<chem::ElementsInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ElementsInfo_O val -> 1063
      return (kindVal == ISA_ADJUST_STAMP(1063));
  };
};
// STAMPWTAG_llvmo__PHINode_O
template <typename FP> struct Cast<llvmo::PHINode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PHINode_O val -> 2395
      return (kindVal == ISA_ADJUST_STAMP(2395));
  };
};
// STAMPWTAG_chem__EnergyFixedNonbondRestraint_O
template <typename FP> struct Cast<chem::EnergyFixedNonbondRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyFixedNonbondRestraint_O val -> 123
      return (kindVal == ISA_ADJUST_STAMP(123));
  };
};
// STAMPWTAG_core__Package_O
template <typename FP> struct Cast<core::Package_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Package_O val -> 2727
      return (kindVal == ISA_ADJUST_STAMP(2727));
  };
};
// STAMPWTAG_chem__AtomTest_O
template <typename FP> struct Cast<chem::AtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomTest_O val -> 1031
      return (kindVal == ISA_ADJUST_STAMP(1031));
  };
};
// STAMPWTAG_core__Stream_O
template <typename FP> struct Cast<core::Stream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Stream_O low high --> 2675 2723 
      return ((ISA_ADJUST_STAMP(2675) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2723)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::RigidBodyAtomInfo> val -> 3295
      return (kindVal == ISA_ADJUST_STAMP(3295));
  };
};
// STAMPWTAG_chem__EnergyAnchorRestraint_O
template <typename FP> struct Cast<chem::EnergyAnchorRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyAnchorRestraint_O val -> 119
      return (kindVal == ISA_ADJUST_STAMP(119));
  };
};
// STAMPWTAG_chem__FFAngle_O
template <typename FP> struct Cast<chem::FFAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFAngle_O val -> 267
      return (kindVal == ISA_ADJUST_STAMP(267));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>> val -> 3291
      return (kindVal == ISA_ADJUST_STAMP(3291));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_long_
template <typename FP> struct Cast<gctools::GCArray_moveable<long>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<long> val -> 3287
      return (kindVal == ISA_ADJUST_STAMP(3287));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::ResidueOut>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::ResidueOut> val -> 3283
      return (kindVal == ISA_ADJUST_STAMP(3283));
  };
};
// STAMPWTAG_core__ShortFloat_O
template <typename FP> struct Cast<core::ShortFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ShortFloat_O val -> 1399
      return (kindVal == ISA_ADJUST_STAMP(1399));
  };
};
// STAMPWTAG_llvmo__MDString_O
template <typename FP> struct Cast<llvmo::MDString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MDString_O val -> 2615
      return (kindVal == ISA_ADJUST_STAMP(2615));
  };
};
// STAMPWTAG_core__AbstractSimpleVector_O
template <typename FP> struct Cast<core::AbstractSimpleVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::AbstractSimpleVector_O low high --> 2039 2211 
      return ((ISA_ADJUST_STAMP(2039) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2211)));
  };
};
// STAMPWTAG_core__SimpleMDArray_byte16_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte16_t_O val -> 1715
      return (kindVal == ISA_ADJUST_STAMP(1715));
  };
};
// STAMPWTAG_core__Pathname_O
template <typename FP> struct Cast<core::Pathname_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Pathname_O low high --> 2667 2671 
      return ((ISA_ADJUST_STAMP(2667) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2671)));
  };
};
// STAMPWTAG_core__Str8Ns_O
template <typename FP> struct Cast<core::Str8Ns_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Str8Ns_O val -> 1947
      return (kindVal == ISA_ADJUST_STAMP(1947));
  };
};
// STAMPWTAG_llvmo__UndefValue_O
template <typename FP> struct Cast<llvmo::UndefValue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::UndefValue_O val -> 2451
      return (kindVal == ISA_ADJUST_STAMP(2451));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::AuxArgument>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::AuxArgument> val -> 3279
      return (kindVal == ISA_ADJUST_STAMP(3279));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__
template <typename FP> struct Cast<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>> val -> 3275
      return (kindVal == ISA_ADJUST_STAMP(3275));
  };
};
// STAMPWTAG_chem__ChemInfoNode_O
template <typename FP> struct Cast<chem::ChemInfoNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemInfoNode_O low high --> 983 1059 
      return ((ISA_ADJUST_STAMP(983) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1059)));
  };
};
// STAMPWTAG_core__Path_O
template <typename FP> struct Cast<core::Path_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Path_O val -> 2663
      return (kindVal == ISA_ADJUST_STAMP(2663));
  };
};
// STAMPWTAG_chem__BoundingBox_O
template <typename FP> struct Cast<chem::BoundingBox_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BoundingBox_O val -> 979
      return (kindVal == ISA_ADJUST_STAMP(979));
  };
};
// STAMPWTAG_chem__StructureComparer_O
template <typename FP> struct Cast<chem::StructureComparer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StructureComparer_O val -> 975
      return (kindVal == ISA_ADJUST_STAMP(975));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_int_
template <typename FP> struct Cast<gctools::GCArray_moveable<int>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<int> val -> 3271
      return (kindVal == ISA_ADJUST_STAMP(3271));
  };
};
// STAMPWTAG_core__IOStreamStream_O
template <typename FP> struct Cast<core::IOStreamStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::IOStreamStream_O val -> 2719
      return (kindVal == ISA_ADJUST_STAMP(2719));
  };
};
// STAMPWTAG_core__Scope_O
template <typename FP> struct Cast<core::Scope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Scope_O low high --> 2655 2659 
      return ((ISA_ADJUST_STAMP(2655) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2659)));
  };
};
// STAMPWTAG_chem__BondLogical_O
template <typename FP> struct Cast<chem::BondLogical_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondLogical_O val -> 995
      return (kindVal == ISA_ADJUST_STAMP(995));
  };
};
// STAMPWTAG_chem__MoleculeGraph_O
template <typename FP> struct Cast<chem::MoleculeGraph_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MoleculeGraph_O val -> 971
      return (kindVal == ISA_ADJUST_STAMP(971));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>> val -> 3267
      return (kindVal == ISA_ADJUST_STAMP(3267));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyAtom>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyAtom> val -> 3263
      return (kindVal == ISA_ADJUST_STAMP(3263));
  };
};
// STAMPWTAG_core__ComplexVector_double_O
template <typename FP> struct Cast<core::ComplexVector_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_double_O val -> 1807
      return (kindVal == ISA_ADJUST_STAMP(1807));
  };
};
// STAMPWTAG_chem__Monomer_O
template <typename FP> struct Cast<chem::Monomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Monomer_O val -> 535
      return (kindVal == ISA_ADJUST_STAMP(535));
  };
};
// STAMPWTAG_kinematics__Conformation_O
template <typename FP> struct Cast<kinematics::Conformation_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::Conformation_O val -> 967
      return (kindVal == ISA_ADJUST_STAMP(967));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>> val -> 3259
      return (kindVal == ISA_ADJUST_STAMP(3259));
  };
};
// STAMPWTAG_chem__ConstitutionAtoms_O
template <typename FP> struct Cast<chem::ConstitutionAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConstitutionAtoms_O val -> 963
      return (kindVal == ISA_ADJUST_STAMP(963));
  };
};
// STAMPWTAG_core__SimpleMDArrayBit_O
template <typename FP> struct Cast<core::SimpleMDArrayBit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArrayBit_O val -> 1779
      return (kindVal == ISA_ADJUST_STAMP(1779));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>> val -> 3255
      return (kindVal == ISA_ADJUST_STAMP(3255));
  };
};
// STAMPWTAG_chem__Branch_O
template <typename FP> struct Cast<chem::Branch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Branch_O val -> 1051
      return (kindVal == ISA_ADJUST_STAMP(1051));
  };
};
// STAMPWTAG_kinematics__ChiDihedral_O
template <typename FP> struct Cast<kinematics::ChiDihedral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::ChiDihedral_O val -> 959
      return (kindVal == ISA_ADJUST_STAMP(959));
  };
};
// STAMPWTAG_core__ComplexVector_int2_t_O
template <typename FP> struct Cast<core::ComplexVector_int2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int2_t_O val -> 1871
      return (kindVal == ISA_ADJUST_STAMP(1871));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::AtomInfo>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::AtomInfo> val -> 3251
      return (kindVal == ISA_ADJUST_STAMP(3251));
  };
};
// STAMPWTAG_chem__ConstitutionBond_O
template <typename FP> struct Cast<chem::ConstitutionBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConstitutionBond_O val -> 955
      return (kindVal == ISA_ADJUST_STAMP(955));
  };
};
// STAMPWTAG_chem__CDBond_O
template <typename FP> struct Cast<chem::CDBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CDBond_O val -> 951
      return (kindVal == ISA_ADJUST_STAMP(951));
  };
};
// STAMPWTAG_chem__CombinedForceField_O
template <typename FP> struct Cast<chem::CombinedForceField_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CombinedForceField_O val -> 947
      return (kindVal == ISA_ADJUST_STAMP(947));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>> val -> 3247
      return (kindVal == ISA_ADJUST_STAMP(3247));
  };
};
// STAMPWTAG_mp__Mutex_O
template <typename FP> struct Cast<mp::Mutex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::Mutex_O low high --> 939 943 
      return ((ISA_ADJUST_STAMP(939) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(943)));
  };
};
// STAMPWTAG_core__RecursiveDirectoryIterator_O
template <typename FP> struct Cast<core::RecursiveDirectoryIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::RecursiveDirectoryIterator_O val -> 1119
      return (kindVal == ISA_ADJUST_STAMP(1119));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyNonbond>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyNonbond> val -> 3243
      return (kindVal == ISA_ADJUST_STAMP(3243));
  };
};
// STAMPWTAG_chem__RestraintDihedral_O
template <typename FP> struct Cast<chem::RestraintDihedral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintDihedral_O val -> 295
      return (kindVal == ISA_ADJUST_STAMP(295));
  };
};
// STAMPWTAG_chem__AntechamberRoot_O
template <typename FP> struct Cast<chem::AntechamberRoot_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AntechamberRoot_O val -> 1015
      return (kindVal == ISA_ADJUST_STAMP(1015));
  };
};
// STAMPWTAG_core__StringInputStream_O
template <typename FP> struct Cast<core::StringInputStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StringInputStream_O val -> 2699
      return (kindVal == ISA_ADJUST_STAMP(2699));
  };
};
// STAMPWTAG_core__FunctionFrame_O
template <typename FP> struct Cast<core::FunctionFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FunctionFrame_O val -> 1283
      return (kindVal == ISA_ADJUST_STAMP(1283));
  };
};
// STAMPWTAG_chem__IterateAtoms_O
template <typename FP> struct Cast<chem::IterateAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateAtoms_O val -> 1135
      return (kindVal == ISA_ADJUST_STAMP(1135));
  };
};
// STAMPWTAG_core__LongFloat_O
template <typename FP> struct Cast<core::LongFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LongFloat_O val -> 1395
      return (kindVal == ISA_ADJUST_STAMP(1395));
  };
};
// STAMPWTAG_core__ComplexVector_int4_t_O
template <typename FP> struct Cast<core::ComplexVector_int4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int4_t_O val -> 1895
      return (kindVal == ISA_ADJUST_STAMP(1895));
  };
};
// STAMPWTAG_chem__FFPtorDb_O
template <typename FP> struct Cast<chem::FFPtorDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFPtorDb_O val -> 383
      return (kindVal == ISA_ADJUST_STAMP(383));
  };
};
// STAMPWTAG_chem__ComplexRestraint_O
template <typename FP> struct Cast<chem::ComplexRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ComplexRestraint_O low high --> 927 935 
      return ((ISA_ADJUST_STAMP(927) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(935)));
  };
};
// STAMPWTAG_llvmo__LibraryFile_O
template <typename FP> struct Cast<llvmo::LibraryFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LibraryFile_O val -> 403
      return (kindVal == ISA_ADJUST_STAMP(403));
  };
};
// STAMPWTAG_core__ComplexVector_T_O
template <typename FP> struct Cast<core::ComplexVector_T_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_T_O val -> 1823
      return (kindVal == ISA_ADJUST_STAMP(1823));
  };
};
// STAMPWTAG_chem__RootMatchNode_O
template <typename FP> struct Cast<chem::RootMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RootMatchNode_O low high --> 1055 1059 
      return ((ISA_ADJUST_STAMP(1055) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1059)));
  };
};
// STAMPWTAG_core__ValueFrame_O
template <typename FP> struct Cast<core::ValueFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ValueFrame_O val -> 1279
      return (kindVal == ISA_ADJUST_STAMP(1279));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_unsigned_long_
template <typename FP> struct Cast<gctools::GCArray_moveable<unsigned long>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<unsigned long> low high --> 3235 3239 
      return ((ISA_ADJUST_STAMP(3235) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(3239)));
  };
};
// STAMPWTAG_core__SimpleMDArray_int4_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int4_t_O val -> 1755
      return (kindVal == ISA_ADJUST_STAMP(1755));
  };
};
// STAMPWTAG_core__SimpleVector_int32_t_O
template <typename FP> struct Cast<core::SimpleVector_int32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int32_t_O val -> 2211
      return (kindVal == ISA_ADJUST_STAMP(2211));
  };
};
// STAMPWTAG_core__Complex_O
template <typename FP> struct Cast<core::Complex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Complex_O val -> 1403
      return (kindVal == ISA_ADJUST_STAMP(1403));
  };
};
// STAMPWTAG_chem__ConformationCollectionEntry_O
template <typename FP> struct Cast<chem::ConformationCollectionEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationCollectionEntry_O val -> 923
      return (kindVal == ISA_ADJUST_STAMP(923));
  };
};
// STAMPWTAG_chem__RingClosingMate_O
template <typename FP> struct Cast<chem::RingClosingMate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RingClosingMate_O val -> 515
      return (kindVal == ISA_ADJUST_STAMP(515));
  };
};
// STAMPWTAG_geom__OMatrix_O
template <typename FP> struct Cast<geom::OMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::OMatrix_O val -> 919
      return (kindVal == ISA_ADJUST_STAMP(919));
  };
};
// STAMPWTAG_llvmo__ValueAsMetadata_O
template <typename FP> struct Cast<llvmo::ValueAsMetadata_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ValueAsMetadata_O val -> 2611
      return (kindVal == ISA_ADJUST_STAMP(2611));
  };
};
// STAMPWTAG_llvmo__ConstantExpr_O
template <typename FP> struct Cast<llvmo::ConstantExpr_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantExpr_O val -> 2447
      return (kindVal == ISA_ADJUST_STAMP(2447));
  };
};
// STAMPWTAG_chem__FFNonbondDb_O
template <typename FP> struct Cast<chem::FFNonbondDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFNonbondDb_O val -> 379
      return (kindVal == ISA_ADJUST_STAMP(379));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>> val -> 3231
      return (kindVal == ISA_ADJUST_STAMP(3231));
  };
};
// STAMPWTAG_llvmo__StructType_O
template <typename FP> struct Cast<llvmo::StructType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::StructType_O val -> 2523
      return (kindVal == ISA_ADJUST_STAMP(2523));
  };
};
// STAMPWTAG_chem__EnergyNonbond_O
template <typename FP> struct Cast<chem::EnergyNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyNonbond_O low high --> 111 115 
      return ((ISA_ADJUST_STAMP(111) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(115)));
  };
};
// STAMPWTAG_core__ComplexVector_int16_t_O
template <typename FP> struct Cast<core::ComplexVector_int16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int16_t_O val -> 1887
      return (kindVal == ISA_ADJUST_STAMP(1887));
  };
};
// STAMPWTAG_core__SimpleMDArray_float_O
template <typename FP> struct Cast<core::SimpleMDArray_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_float_O val -> 1675
      return (kindVal == ISA_ADJUST_STAMP(1675));
  };
};
// STAMPWTAG_chem__Residue_O
template <typename FP> struct Cast<chem::Residue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Residue_O val -> 151
      return (kindVal == ISA_ADJUST_STAMP(151));
  };
};
// STAMPWTAG_chem__CalculatePosition_O
template <typename FP> struct Cast<chem::CalculatePosition_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CalculatePosition_O low high --> 903 915 
      return ((ISA_ADJUST_STAMP(903) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(915)));
  };
};
// STAMPWTAG_chem__SuperposeSelectedAtoms_O
template <typename FP> struct Cast<chem::SuperposeSelectedAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SuperposeSelectedAtoms_O val -> 699
      return (kindVal == ISA_ADJUST_STAMP(699));
  };
};
// STAMPWTAG_llvmo__Target_O
template <typename FP> struct Cast<llvmo::Target_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Target_O val -> 2639
      return (kindVal == ISA_ADJUST_STAMP(2639));
  };
};
// STAMPWTAG_kinematics__MonomerNode_O
template <typename FP> struct Cast<kinematics::MonomerNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::MonomerNode_O low high --> 723 727 
      return ((ISA_ADJUST_STAMP(723) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(727)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm> val -> 3227
      return (kindVal == ISA_ADJUST_STAMP(3227));
  };
};
// STAMPWTAG_core__SimpleVector_byte32_t_O
template <typename FP> struct Cast<core::SimpleVector_byte32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte32_t_O val -> 2047
      return (kindVal == ISA_ADJUST_STAMP(2047));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>> val -> 3223
      return (kindVal == ISA_ADJUST_STAMP(3223));
  };
};
// STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O
template <typename FP> struct Cast<core::SingleDispatchGenericFunctionClosure_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleDispatchGenericFunctionClosure_O val -> 1503
      return (kindVal == ISA_ADJUST_STAMP(1503));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>> val -> 3219
      return (kindVal == ISA_ADJUST_STAMP(3219));
  };
};
// STAMPWTAG_llvmo__Module_O
template <typename FP> struct Cast<llvmo::Module_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Module_O val -> 2635
      return (kindVal == ISA_ADJUST_STAMP(2635));
  };
};
// STAMPWTAG_llvmo__DIExpression_O
template <typename FP> struct Cast<llvmo::DIExpression_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIExpression_O val -> 2607
      return (kindVal == ISA_ADJUST_STAMP(2607));
  };
};
// STAMPWTAG_core__SingleFloat_dummy_O
template <typename FP> struct Cast<core::SingleFloat_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleFloat_dummy_O val -> 1391
      return (kindVal == ISA_ADJUST_STAMP(1391));
  };
};
// STAMPWTAG_core__ValueEnvironment_O
template <typename FP> struct Cast<core::ValueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ValueEnvironment_O val -> 1271
      return (kindVal == ISA_ADJUST_STAMP(1271));
  };
};
// STAMPWTAG_chem__Trajectory_O
template <typename FP> struct Cast<chem::Trajectory_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Trajectory_O val -> 899
      return (kindVal == ISA_ADJUST_STAMP(899));
  };
};
// STAMPWTAG_llvmo__InvokeInst_O
template <typename FP> struct Cast<llvmo::InvokeInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::InvokeInst_O val -> 2355
      return (kindVal == ISA_ADJUST_STAMP(2355));
  };
};
// STAMPWTAG_chem__RestraintFixedNonbond_O
template <typename FP> struct Cast<chem::RestraintFixedNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintFixedNonbond_O val -> 291
      return (kindVal == ISA_ADJUST_STAMP(291));
  };
};
// STAMPWTAG_chem__FFNonbond_O
template <typename FP> struct Cast<chem::FFNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFNonbond_O val -> 263
      return (kindVal == ISA_ADJUST_STAMP(263));
  };
};
// STAMPWTAG_core__StrNs_O
template <typename FP> struct Cast<core::StrNs_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StrNs_O low high --> 1939 1955 
      return ((ISA_ADJUST_STAMP(1939) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1955)));
  };
};
// STAMPWTAG_chem__VirtualAtom_O
template <typename FP> struct Cast<chem::VirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::VirtualAtom_O val -> 147
      return (kindVal == ISA_ADJUST_STAMP(147));
  };
};
// STAMPWTAG_chem__OriginPlug_O
template <typename FP> struct Cast<chem::OriginPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OriginPlug_O val -> 755
      return (kindVal == ISA_ADJUST_STAMP(755));
  };
};
// STAMPWTAG_llvmo__FunctionPassManager_O
template <typename FP> struct Cast<llvmo::FunctionPassManager_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FunctionPassManager_O val -> 2311
      return (kindVal == ISA_ADJUST_STAMP(2311));
  };
};
// STAMPWTAG_core__DoubleFloat_O
template <typename FP> struct Cast<core::DoubleFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DoubleFloat_O val -> 1387
      return (kindVal == ISA_ADJUST_STAMP(1387));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>> val -> 3215
      return (kindVal == ISA_ADJUST_STAMP(3215));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>> val -> 3211
      return (kindVal == ISA_ADJUST_STAMP(3211));
  };
};
// STAMPWTAG_chem__ConformationExplorerEntryStage_O
template <typename FP> struct Cast<chem::ConformationExplorerEntryStage_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationExplorerEntryStage_O val -> 895
      return (kindVal == ISA_ADJUST_STAMP(895));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>> val -> 3207
      return (kindVal == ISA_ADJUST_STAMP(3207));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint> val -> 3203
      return (kindVal == ISA_ADJUST_STAMP(3203));
  };
};
// STAMPWTAG_chem__FrameRecognizer_O
template <typename FP> struct Cast<chem::FrameRecognizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FrameRecognizer_O val -> 891
      return (kindVal == ISA_ADJUST_STAMP(891));
  };
};
// STAMPWTAG_chem__CalculatePositionAlongBond_O
template <typename FP> struct Cast<chem::CalculatePositionAlongBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CalculatePositionAlongBond_O val -> 915
      return (kindVal == ISA_ADJUST_STAMP(915));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::SymbolStorage>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::SymbolStorage> val -> 3199
      return (kindVal == ISA_ADJUST_STAMP(3199));
  };
};
// STAMPWTAG_core__MDArray_int32_t_O
template <typename FP> struct Cast<core::MDArray_int32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int32_t_O val -> 1543
      return (kindVal == ISA_ADJUST_STAMP(1543));
  };
};
// STAMPWTAG_adapt__SymbolList_O
template <typename FP> struct Cast<adapt::SymbolList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::SymbolList_O val -> 887
      return (kindVal == ISA_ADJUST_STAMP(887));
  };
};
// STAMPWTAG_chem__CalculatePositionUsingInternals_O
template <typename FP> struct Cast<chem::CalculatePositionUsingInternals_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CalculatePositionUsingInternals_O val -> 911
      return (kindVal == ISA_ADJUST_STAMP(911));
  };
};
// STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O
template <typename FP> struct Cast<chem::EnergyPeriodicBoundaryConditionsNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyPeriodicBoundaryConditionsNonbond_O val -> 115
      return (kindVal == ISA_ADJUST_STAMP(115));
  };
};
// STAMPWTAG_asttooling__AsttoolingExposer_O
template <typename FP> struct Cast<asttooling::AsttoolingExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range asttooling::AsttoolingExposer_O val -> 1183
      return (kindVal == ISA_ADJUST_STAMP(1183));
  };
};
// STAMPWTAG_chem__EnergyDihedral_O
template <typename FP> struct Cast<chem::EnergyDihedral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyDihedral_O val -> 107
      return (kindVal == ISA_ADJUST_STAMP(107));
  };
};
// STAMPWTAG_core__SimpleMDArray_size_t_O
template <typename FP> struct Cast<core::SimpleMDArray_size_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_size_t_O val -> 1691
      return (kindVal == ISA_ADJUST_STAMP(1691));
  };
};
// STAMPWTAG_core__SmallMultimap_O
template <typename FP> struct Cast<core::SmallMultimap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SmallMultimap_O val -> 2651
      return (kindVal == ISA_ADJUST_STAMP(2651));
  };
};
// STAMPWTAG_core__Fixnum_dummy_O
template <typename FP> struct Cast<core::Fixnum_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Fixnum_dummy_O val -> 1379
      return (kindVal == ISA_ADJUST_STAMP(1379));
  };
};
// STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<4,1>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<4,1> val -> 3195
      return (kindVal == ISA_ADJUST_STAMP(3195));
  };
};
// STAMPWTAG_chem__ImproperTorsion_O
template <typename FP> struct Cast<chem::ImproperTorsion_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ImproperTorsion_O val -> 883
      return (kindVal == ISA_ADJUST_STAMP(883));
  };
};
// STAMPWTAG_chem__ZMatrixAngleInternal_O
template <typename FP> struct Cast<chem::ZMatrixAngleInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixAngleInternal_O val -> 583
      return (kindVal == ISA_ADJUST_STAMP(583));
  };
};
// STAMPWTAG_chem__Rotamer_O
template <typename FP> struct Cast<chem::Rotamer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Rotamer_O val -> 879
      return (kindVal == ISA_ADJUST_STAMP(879));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>> val -> 3191
      return (kindVal == ISA_ADJUST_STAMP(3191));
  };
};
// STAMPWTAG_core__WeakKeyHashTable_O
template <typename FP> struct Cast<core::WeakKeyHashTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::WeakKeyHashTable_O val -> 1343
      return (kindVal == ISA_ADJUST_STAMP(1343));
  };
};
// STAMPWTAG_core__Rack_O
template <typename FP> struct Cast<core::Rack_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Rack_O val -> 2647
      return (kindVal == ISA_ADJUST_STAMP(2647));
  };
};
// STAMPWTAG_core__MDArrayBaseChar_O
template <typename FP> struct Cast<core::MDArrayBaseChar_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArrayBaseChar_O val -> 1599
      return (kindVal == ISA_ADJUST_STAMP(1599));
  };
};
// STAMPWTAG_core__UserData_O
template <typename FP> struct Cast<core::UserData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::UserData_O val -> 2747
      return (kindVal == ISA_ADJUST_STAMP(2747));
  };
};
// STAMPWTAG_core__ExternalObject_O
template <typename FP> struct Cast<core::ExternalObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ExternalObject_O low high --> 2239 2643 
      return ((ISA_ADJUST_STAMP(2239) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2643)));
  };
};
// STAMPWTAG_llvmo__DINode_O
template <typename FP> struct Cast<llvmo::DINode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DINode_O low high --> 2547 2603 
      return ((ISA_ADJUST_STAMP(2547) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2603)));
  };
};
// STAMPWTAG_llvmo__GlobalVariable_O
template <typename FP> struct Cast<llvmo::GlobalVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::GlobalVariable_O val -> 2415
      return (kindVal == ISA_ADJUST_STAMP(2415));
  };
};
// STAMPWTAG_core__BroadcastStream_O
template <typename FP> struct Cast<core::BroadcastStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::BroadcastStream_O val -> 2723
      return (kindVal == ISA_ADJUST_STAMP(2723));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>> val -> 3187
      return (kindVal == ISA_ADJUST_STAMP(3187));
  };
};
// STAMPWTAG_chem__StereoisomerAtoms_O
template <typename FP> struct Cast<chem::StereoisomerAtoms_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoisomerAtoms_O val -> 875
      return (kindVal == ISA_ADJUST_STAMP(875));
  };
};
// STAMPWTAG_chem__ConformationExplorerMatch_O
template <typename FP> struct Cast<chem::ConformationExplorerMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationExplorerMatch_O val -> 871
      return (kindVal == ISA_ADJUST_STAMP(871));
  };
};
// STAMPWTAG_llvmo__Library_O
template <typename FP> struct Cast<llvmo::Library_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Library_O val -> 791
      return (kindVal == ISA_ADJUST_STAMP(791));
  };
};
// STAMPWTAG_chem__ChemExposer_O
template <typename FP> struct Cast<chem::ChemExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemExposer_O val -> 1179
      return (kindVal == ISA_ADJUST_STAMP(1179));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::RequiredArgument>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::RequiredArgument> val -> 3183
      return (kindVal == ISA_ADJUST_STAMP(3183));
  };
};
// STAMPWTAG_kinematics__Checkpoint_O
template <typename FP> struct Cast<kinematics::Checkpoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::Checkpoint_O low high --> 859 867 
      return ((ISA_ADJUST_STAMP(859) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(867)));
  };
};
// STAMPWTAG_chem__SpanningInfo_O
template <typename FP> struct Cast<chem::SpanningInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SpanningInfo_O val -> 855
      return (kindVal == ISA_ADJUST_STAMP(855));
  };
};
// STAMPWTAG_llvmo__DINodeArray_O
template <typename FP> struct Cast<llvmo::DINodeArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DINodeArray_O val -> 851
      return (kindVal == ISA_ADJUST_STAMP(851));
  };
};
// STAMPWTAG_llvmo__TargetOptions_O
template <typename FP> struct Cast<llvmo::TargetOptions_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetOptions_O val -> 2631
      return (kindVal == ISA_ADJUST_STAMP(2631));
  };
};
// STAMPWTAG_chem__CDText_O
template <typename FP> struct Cast<chem::CDText_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CDText_O val -> 847
      return (kindVal == ISA_ADJUST_STAMP(847));
  };
};
// STAMPWTAG_chem__BondTest_O
template <typename FP> struct Cast<chem::BondTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondTest_O val -> 991
      return (kindVal == ISA_ADJUST_STAMP(991));
  };
};
// STAMPWTAG_llvmo__DWARFContext_O
template <typename FP> struct Cast<llvmo::DWARFContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DWARFContext_O val -> 2627
      return (kindVal == ISA_ADJUST_STAMP(2627));
  };
};
// STAMPWTAG_adapt__IterateCons_O
template <typename FP> struct Cast<adapt::IterateCons_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::IterateCons_O val -> 1115
      return (kindVal == ISA_ADJUST_STAMP(1115));
  };
};
// STAMPWTAG_geom__SimpleVectorCoordinate_O
template <typename FP> struct Cast<geom::SimpleVectorCoordinate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::SimpleVectorCoordinate_O val -> 2103
      return (kindVal == ISA_ADJUST_STAMP(2103));
  };
};
// STAMPWTAG_chem__FFItor_O
template <typename FP> struct Cast<chem::FFItor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFItor_O val -> 259
      return (kindVal == ISA_ADJUST_STAMP(259));
  };
};
// STAMPWTAG_llvmo__NamedMDNode_O
template <typename FP> struct Cast<llvmo::NamedMDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::NamedMDNode_O val -> 2623
      return (kindVal == ISA_ADJUST_STAMP(2623));
  };
};
// STAMPWTAG_core__SimpleVector_byte16_t_O
template <typename FP> struct Cast<core::SimpleVector_byte16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte16_t_O val -> 2139
      return (kindVal == ISA_ADJUST_STAMP(2139));
  };
};
// STAMPWTAG_chem__ChemInfoGraph_O
template <typename FP> struct Cast<chem::ChemInfoGraph_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemInfoGraph_O val -> 843
      return (kindVal == ISA_ADJUST_STAMP(843));
  };
};
// STAMPWTAG_core__SimpleVector_byte64_t_O
template <typename FP> struct Cast<core::SimpleVector_byte64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte64_t_O val -> 2163
      return (kindVal == ISA_ADJUST_STAMP(2163));
  };
};
// STAMPWTAG_chem__EnergyPointToLineRestraint_O
template <typename FP> struct Cast<chem::EnergyPointToLineRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyPointToLineRestraint_O val -> 103
      return (kindVal == ISA_ADJUST_STAMP(103));
  };
};
// STAMPWTAG_core__SimpleBaseString_O
template <typename FP> struct Cast<core::SimpleBaseString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleBaseString_O val -> 2115
      return (kindVal == ISA_ADJUST_STAMP(2115));
  };
};
// STAMPWTAG_core__Test_O
template <typename FP> struct Cast<core::Test_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Test_O val -> 2619
      return (kindVal == ISA_ADJUST_STAMP(2619));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>> val -> 3179
      return (kindVal == ISA_ADJUST_STAMP(3179));
  };
};
// STAMPWTAG_llvmo__Metadata_O
template <typename FP> struct Cast<llvmo::Metadata_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Metadata_O low high --> 2535 2615 
      return ((ISA_ADJUST_STAMP(2535) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2615)));
  };
};
// STAMPWTAG_core__MDArray_O
template <typename FP> struct Cast<core::MDArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_O low high --> 1519 2035 
      return ((ISA_ADJUST_STAMP(1519) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2035)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>> val -> 3175
      return (kindVal == ISA_ADJUST_STAMP(3175));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>> val -> 3171
      return (kindVal == ISA_ADJUST_STAMP(3171));
  };
};
// STAMPWTAG_chem__RigidBodyEnergyFunction_O
template <typename FP> struct Cast<chem::RigidBodyEnergyFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RigidBodyEnergyFunction_O val -> 435
      return (kindVal == ISA_ADJUST_STAMP(435));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>> val -> 3167
      return (kindVal == ISA_ADJUST_STAMP(3167));
  };
};
// STAMPWTAG_kinematics__ChainNode_O
template <typename FP> struct Cast<kinematics::ChainNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::ChainNode_O val -> 719
      return (kindVal == ISA_ADJUST_STAMP(719));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_double_
template <typename FP> struct Cast<gctools::GCArray_moveable<double>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<double> val -> 3163
      return (kindVal == ISA_ADJUST_STAMP(3163));
  };
};
// STAMPWTAG_kinematics__CheckpointJoint_O
template <typename FP> struct Cast<kinematics::CheckpointJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::CheckpointJoint_O val -> 863
      return (kindVal == ISA_ADJUST_STAMP(863));
  };
};
// STAMPWTAG_llvmo__StructLayout_O
template <typename FP> struct Cast<llvmo::StructLayout_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::StructLayout_O val -> 2235
      return (kindVal == ISA_ADJUST_STAMP(2235));
  };
};
// STAMPWTAG_chem__Mate_O
template <typename FP> struct Cast<chem::Mate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Mate_O val -> 511
      return (kindVal == ISA_ADJUST_STAMP(511));
  };
};
// STAMPWTAG_core__SimpleMDArrayT_O
template <typename FP> struct Cast<core::SimpleMDArrayT_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArrayT_O val -> 1747
      return (kindVal == ISA_ADJUST_STAMP(1747));
  };
};
// STAMPWTAG_chem__ConformationExplorer_O
template <typename FP> struct Cast<chem::ConformationExplorer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationExplorer_O val -> 839
      return (kindVal == ISA_ADJUST_STAMP(839));
  };
};
// STAMPWTAG_chem__BondList_O
template <typename FP> struct Cast<chem::BondList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondList_O val -> 835
      return (kindVal == ISA_ADJUST_STAMP(835));
  };
};
// STAMPWTAG_core__ActivationFrame_O
template <typename FP> struct Cast<core::ActivationFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ActivationFrame_O low high --> 1275 1283 
      return ((ISA_ADJUST_STAMP(1275) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1283)));
  };
};
// STAMPWTAG_llvmo__LoadInst_O
template <typename FP> struct Cast<llvmo::LoadInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LoadInst_O val -> 2375
      return (kindVal == ISA_ADJUST_STAMP(2375));
  };
};
// STAMPWTAG_chem__MacroModelFile_O
template <typename FP> struct Cast<chem::MacroModelFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MacroModelFile_O val -> 831
      return (kindVal == ISA_ADJUST_STAMP(831));
  };
};
// STAMPWTAG_core__MDArray_byte2_t_O
template <typename FP> struct Cast<core::MDArray_byte2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte2_t_O val -> 1995
      return (kindVal == ISA_ADJUST_STAMP(1995));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>> val -> 3159
      return (kindVal == ISA_ADJUST_STAMP(3159));
  };
};
// STAMPWTAG_chem__Angle_O
template <typename FP> struct Cast<chem::Angle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Angle_O val -> 827
      return (kindVal == ISA_ADJUST_STAMP(827));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>> val -> 3155
      return (kindVal == ISA_ADJUST_STAMP(3155));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>> val -> 3151
      return (kindVal == ISA_ADJUST_STAMP(3151));
  };
};
// STAMPWTAG_core__LexicalEnvironment_O
template <typename FP> struct Cast<core::LexicalEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LexicalEnvironment_O low high --> 1227 1271 
      return ((ISA_ADJUST_STAMP(1227) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1271)));
  };
};
// STAMPWTAG_core__PosixTime_O
template <typename FP> struct Cast<core::PosixTime_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::PosixTime_O val -> 2231
      return (kindVal == ISA_ADJUST_STAMP(2231));
  };
};
// STAMPWTAG_llvmo__MetadataAsValue_O
template <typename FP> struct Cast<llvmo::MetadataAsValue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MetadataAsValue_O val -> 2467
      return (kindVal == ISA_ADJUST_STAMP(2467));
  };
};
// STAMPWTAG_kinematics__RotamerSet_O
template <typename FP> struct Cast<kinematics::RotamerSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RotamerSet_O val -> 63
      return (kindVal == ISA_ADJUST_STAMP(63));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>> val -> 3147
      return (kindVal == ISA_ADJUST_STAMP(3147));
  };
};
// STAMPWTAG_core__SimpleVector_int8_t_O
template <typename FP> struct Cast<core::SimpleVector_int8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int8_t_O val -> 2087
      return (kindVal == ISA_ADJUST_STAMP(2087));
  };
};
// STAMPWTAG_chem__SpecificContextSet_O
template <typename FP> struct Cast<chem::SpecificContextSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SpecificContextSet_O val -> 823
      return (kindVal == ISA_ADJUST_STAMP(823));
  };
};
// STAMPWTAG_llvmo__DIType_O
template <typename FP> struct Cast<llvmo::DIType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIType_O low high --> 2587 2603 
      return ((ISA_ADJUST_STAMP(2587) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2603)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::FixedNonbondRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::FixedNonbondRestraint> val -> 3143
      return (kindVal == ISA_ADJUST_STAMP(3143));
  };
};
// STAMPWTAG_chem__ZMatrixEntry_O
template <typename FP> struct Cast<chem::ZMatrixEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixEntry_O val -> 819
      return (kindVal == ISA_ADJUST_STAMP(819));
  };
};
// STAMPWTAG_core__Readtable_O
template <typename FP> struct Cast<core::Readtable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Readtable_O val -> 2227
      return (kindVal == ISA_ADJUST_STAMP(2227));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>> val -> 3139
      return (kindVal == ISA_ADJUST_STAMP(3139));
  };
};
// STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O
template <typename FP> struct Cast<chem::CalculatePositionRelativeToOrigin_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CalculatePositionRelativeToOrigin_O val -> 907
      return (kindVal == ISA_ADJUST_STAMP(907));
  };
};
// STAMPWTAG_chem__ChemInfoMatch_O
template <typename FP> struct Cast<chem::ChemInfoMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemInfoMatch_O val -> 815
      return (kindVal == ISA_ADJUST_STAMP(815));
  };
};
// STAMPWTAG_units__Quantity_O
template <typename FP> struct Cast<units::Quantity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::Quantity_O val -> 811
      return (kindVal == ISA_ADJUST_STAMP(811));
  };
};
// STAMPWTAG_kinematics__AtomTree_O
template <typename FP> struct Cast<kinematics::AtomTree_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::AtomTree_O val -> 807
      return (kindVal == ISA_ADJUST_STAMP(807));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>> val -> 3135
      return (kindVal == ISA_ADJUST_STAMP(3135));
  };
};
// STAMPWTAG_llvmo__MDNode_O
template <typename FP> struct Cast<llvmo::MDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MDNode_O low high --> 2539 2607 
      return ((ISA_ADJUST_STAMP(2539) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2607)));
  };
};
// STAMPWTAG_chem__GenericOctree_O
template <typename FP> struct Cast<chem::GenericOctree_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::GenericOctree_O val -> 803
      return (kindVal == ISA_ADJUST_STAMP(803));
  };
};
// STAMPWTAG_mp__RecursiveMutex_O
template <typename FP> struct Cast<mp::RecursiveMutex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::RecursiveMutex_O val -> 943
      return (kindVal == ISA_ADJUST_STAMP(943));
  };
};
// STAMPWTAG_chem__MinimizerLog_O
template <typename FP> struct Cast<chem::MinimizerLog_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MinimizerLog_O val -> 799
      return (kindVal == ISA_ADJUST_STAMP(799));
  };
};
// STAMPWTAG_core__SimpleVector_float_O
template <typename FP> struct Cast<core::SimpleVector_float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_float_O val -> 2179
      return (kindVal == ISA_ADJUST_STAMP(2179));
  };
};
// STAMPWTAG_chem__FFVdwDb_O
template <typename FP> struct Cast<chem::FFVdwDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFVdwDb_O val -> 387
      return (kindVal == ISA_ADJUST_STAMP(387));
  };
};
// STAMPWTAG_core__SimpleVector_int4_t_O
template <typename FP> struct Cast<core::SimpleVector_int4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int4_t_O val -> 2155
      return (kindVal == ISA_ADJUST_STAMP(2155));
  };
};
// STAMPWTAG_chem__FFPtor_O
template <typename FP> struct Cast<chem::FFPtor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFPtor_O val -> 255
      return (kindVal == ISA_ADJUST_STAMP(255));
  };
};
// STAMPWTAG_chem__InfoDb_O
template <typename FP> struct Cast<chem::InfoDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::InfoDb_O val -> 795
      return (kindVal == ISA_ADJUST_STAMP(795));
  };
};
// STAMPWTAG_core__LoadTimeValues_O
template <typename FP> struct Cast<core::LoadTimeValues_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LoadTimeValues_O val -> 2223
      return (kindVal == ISA_ADJUST_STAMP(2223));
  };
};
// STAMPWTAG_kinematics__OriginJumpJoint_O
template <typename FP> struct Cast<kinematics::OriginJumpJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::OriginJumpJoint_O val -> 211
      return (kindVal == ISA_ADJUST_STAMP(211));
  };
};
// STAMPWTAG_llvmo__CodeBase_O
template <typename FP> struct Cast<llvmo::CodeBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::CodeBase_O low high --> 783 791 
      return ((ISA_ADJUST_STAMP(783) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(791)));
  };
};
// STAMPWTAG_llvmo__DataLayout_O
template <typename FP> struct Cast<llvmo::DataLayout_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DataLayout_O val -> 2219
      return (kindVal == ISA_ADJUST_STAMP(2219));
  };
};
// STAMPWTAG_llvmo__BasicBlock_O
template <typename FP> struct Cast<llvmo::BasicBlock_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::BasicBlock_O val -> 2463
      return (kindVal == ISA_ADJUST_STAMP(2463));
  };
};
// STAMPWTAG_core__ComplexVector_byte64_t_O
template <typename FP> struct Cast<core::ComplexVector_byte64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte64_t_O val -> 1863
      return (kindVal == ISA_ADJUST_STAMP(1863));
  };
};
// STAMPWTAG_chem__AntechamberBondToAtomTest_O
template <typename FP> struct Cast<chem::AntechamberBondToAtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AntechamberBondToAtomTest_O val -> 1039
      return (kindVal == ISA_ADJUST_STAMP(1039));
  };
};
// STAMPWTAG_core__MDArray_byte32_t_O
template <typename FP> struct Cast<core::MDArray_byte32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte32_t_O val -> 1987
      return (kindVal == ISA_ADJUST_STAMP(1987));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::KeyValuePair>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::KeyValuePair> val -> 3131
      return (kindVal == ISA_ADJUST_STAMP(3131));
  };
};
// STAMPWTAG_core__Character_dummy_O
template <typename FP> struct Cast<core::Character_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Character_dummy_O val -> 2215
      return (kindVal == ISA_ADJUST_STAMP(2215));
  };
};
// STAMPWTAG_llvmo__Constant_O
template <typename FP> struct Cast<llvmo::Constant_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Constant_O low high --> 2403 2455 
      return ((ISA_ADJUST_STAMP(2403) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2455)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergySketchNonbond>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergySketchNonbond> val -> 3127
      return (kindVal == ISA_ADJUST_STAMP(3127));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>> val -> 3123
      return (kindVal == ISA_ADJUST_STAMP(3123));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>> val -> 3119
      return (kindVal == ISA_ADJUST_STAMP(3119));
  };
};
// STAMPWTAG_core__NativeVector_int_O
template <typename FP> struct Cast<core::NativeVector_int_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::NativeVector_int_O val -> 779
      return (kindVal == ISA_ADJUST_STAMP(779));
  };
};
// STAMPWTAG_llvmo__DIBasicType_O
template <typename FP> struct Cast<llvmo::DIBasicType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIBasicType_O val -> 2603
      return (kindVal == ISA_ADJUST_STAMP(2603));
  };
};
// STAMPWTAG_llvmo__APFloat_O
template <typename FP> struct Cast<llvmo::APFloat_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::APFloat_O val -> 2531
      return (kindVal == ISA_ADJUST_STAMP(2531));
  };
};
// STAMPWTAG_core__SimpleMDArrayCharacter_O
template <typename FP> struct Cast<core::SimpleMDArrayCharacter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArrayCharacter_O val -> 1699
      return (kindVal == ISA_ADJUST_STAMP(1699));
  };
};
// STAMPWTAG_core__SimpleCharacterString_O
template <typename FP> struct Cast<core::SimpleCharacterString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleCharacterString_O val -> 2123
      return (kindVal == ISA_ADJUST_STAMP(2123));
  };
};
// STAMPWTAG_kinematics__RootBondedJointTemplate_O
template <typename FP> struct Cast<kinematics::RootBondedJointTemplate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RootBondedJointTemplate_O val -> 623
      return (kindVal == ISA_ADJUST_STAMP(623));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>> val -> 3115
      return (kindVal == ISA_ADJUST_STAMP(3115));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>> val -> 3111
      return (kindVal == ISA_ADJUST_STAMP(3111));
  };
};
// STAMPWTAG_core__Array_O
template <typename FP> struct Cast<core::Array_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Array_O low high --> 1515 2211 
      return ((ISA_ADJUST_STAMP(1515) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2211)));
  };
};
// STAMPWTAG_llvmo__Argument_O
template <typename FP> struct Cast<llvmo::Argument_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Argument_O val -> 2459
      return (kindVal == ISA_ADJUST_STAMP(2459));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyOutOfZPlane> val -> 3107
      return (kindVal == ISA_ADJUST_STAMP(3107));
  };
};
// STAMPWTAG_units__Unit_O
template <typename FP> struct Cast<units::Unit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::Unit_O low high --> 771 775 
      return ((ISA_ADJUST_STAMP(771) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(775)));
  };
};
// STAMPWTAG_core__GlobalEntryPoint_O
template <typename FP> struct Cast<core::GlobalEntryPoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::GlobalEntryPoint_O val -> 1311
      return (kindVal == ISA_ADJUST_STAMP(1311));
  };
};
// STAMPWTAG_llvmo__TargetPassConfig_O
template <typename FP> struct Cast<llvmo::TargetPassConfig_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetPassConfig_O val -> 2527
      return (kindVal == ISA_ADJUST_STAMP(2527));
  };
};
// STAMPWTAG_chem__IterateBonds_O
template <typename FP> struct Cast<chem::IterateBonds_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateBonds_O val -> 1131
      return (kindVal == ISA_ADJUST_STAMP(1131));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_signed_char_
template <typename FP> struct Cast<gctools::GCArray_moveable<signed char>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<signed char> val -> 3103
      return (kindVal == ISA_ADJUST_STAMP(3103));
  };
};
// STAMPWTAG_chem__CDFragment_O
template <typename FP> struct Cast<chem::CDFragment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CDFragment_O val -> 767
      return (kindVal == ISA_ADJUST_STAMP(767));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergySketchStretch>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergySketchStretch> val -> 3099
      return (kindVal == ISA_ADJUST_STAMP(3099));
  };
};
// STAMPWTAG_core__GlueEnvironment_O
template <typename FP> struct Cast<core::GlueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::GlueEnvironment_O val -> 1223
      return (kindVal == ISA_ADJUST_STAMP(1223));
  };
};
// STAMPWTAG_llvmo__ReturnInst_O
template <typename FP> struct Cast<llvmo::ReturnInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ReturnInst_O val -> 2391
      return (kindVal == ISA_ADJUST_STAMP(2391));
  };
};
// STAMPWTAG_chem__MonomerContext_O
template <typename FP> struct Cast<chem::MonomerContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MonomerContext_O val -> 763
      return (kindVal == ISA_ADJUST_STAMP(763));
  };
};
// STAMPWTAG_kinematics__Rotamer_O
template <typename FP> struct Cast<kinematics::Rotamer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::Rotamer_O val -> 759
      return (kindVal == ISA_ADJUST_STAMP(759));
  };
};
// STAMPWTAG_core__MDArray_byte16_t_O
template <typename FP> struct Cast<core::MDArray_byte16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte16_t_O val -> 2019
      return (kindVal == ISA_ADJUST_STAMP(2019));
  };
};
// STAMPWTAG_chem__Plug_O
template <typename FP> struct Cast<chem::Plug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Plug_O low high --> 735 755 
      return ((ISA_ADJUST_STAMP(735) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(755)));
  };
};
// STAMPWTAG_chem__FFNonbondCrossTermTable_O
template <typename FP> struct Cast<chem::FFNonbondCrossTermTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFNonbondCrossTermTable_O val -> 731
      return (kindVal == ISA_ADJUST_STAMP(731));
  };
};
// STAMPWTAG_kinematics__MonomerBaseNode_O
template <typename FP> struct Cast<kinematics::MonomerBaseNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::MonomerBaseNode_O low high --> 711 727 
      return ((ISA_ADJUST_STAMP(711) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(727)));
  };
};
// STAMPWTAG_llvmo__Type_O
template <typename FP> struct Cast<llvmo::Type_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Type_O low high --> 2499 2523 
      return ((ISA_ADJUST_STAMP(2499) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2523)));
  };
};
// STAMPWTAG_chem__StereoConfiguration_O
template <typename FP> struct Cast<chem::StereoConfiguration_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoConfiguration_O val -> 707
      return (kindVal == ISA_ADJUST_STAMP(707));
  };
};
// STAMPWTAG_chem__Command_O
template <typename FP> struct Cast<chem::Command_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Command_O val -> 703
      return (kindVal == ISA_ADJUST_STAMP(703));
  };
};
// STAMPWTAG_core__FileScope_O
template <typename FP> struct Cast<core::FileScope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FileScope_O val -> 2659
      return (kindVal == ISA_ADJUST_STAMP(2659));
  };
};
// STAMPWTAG_core__SimpleMDArray_byte4_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte4_t_O val -> 1659
      return (kindVal == ISA_ADJUST_STAMP(1659));
  };
};
// STAMPWTAG_core__SimpleVector_int64_t_O
template <typename FP> struct Cast<core::SimpleVector_int64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int64_t_O val -> 2079
      return (kindVal == ISA_ADJUST_STAMP(2079));
  };
};
// STAMPWTAG_llvmo__ConstantDataSequential_O
template <typename FP> struct Cast<llvmo::ConstantDataSequential_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantDataSequential_O low high --> 2439 2443 
      return ((ISA_ADJUST_STAMP(2439) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2443)));
  };
};
// STAMPWTAG_chem__SuperposeEngine_O
template <typename FP> struct Cast<chem::SuperposeEngine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SuperposeEngine_O low high --> 695 699 
      return ((ISA_ADJUST_STAMP(695) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(699)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::AtomPdbRec>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::AtomPdbRec> val -> 3095
      return (kindVal == ISA_ADJUST_STAMP(3095));
  };
};
// STAMPWTAG_chem__EntityNameSet_O
template <typename FP> struct Cast<chem::EntityNameSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EntityNameSet_O low high --> 519 527 
      return ((ISA_ADJUST_STAMP(519) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(527)));
  };
};
// STAMPWTAG_chem__ResidueList_O
template <typename FP> struct Cast<chem::ResidueList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ResidueList_O val -> 691
      return (kindVal == ISA_ADJUST_STAMP(691));
  };
};
// STAMPWTAG_llvmo__DebugLoc_O
template <typename FP> struct Cast<llvmo::DebugLoc_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DebugLoc_O val -> 1511
      return (kindVal == ISA_ADJUST_STAMP(1511));
  };
};
// STAMPWTAG_core__WeakPointer_O
template <typename FP> struct Cast<core::WeakPointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::WeakPointer_O val -> 1507
      return (kindVal == ISA_ADJUST_STAMP(1507));
  };
};
// STAMPWTAG_core__IOFileStream_O
template <typename FP> struct Cast<core::IOFileStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::IOFileStream_O val -> 2715
      return (kindVal == ISA_ADJUST_STAMP(2715));
  };
};
// STAMPWTAG_chem__ConstitutionVirtualAtom_O
template <typename FP> struct Cast<chem::ConstitutionVirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConstitutionVirtualAtom_O val -> 479
      return (kindVal == ISA_ADJUST_STAMP(479));
  };
};
// STAMPWTAG_core__RuntimeVisibleEnvironment_O
template <typename FP> struct Cast<core::RuntimeVisibleEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::RuntimeVisibleEnvironment_O low high --> 1255 1271 
      return ((ISA_ADJUST_STAMP(1255) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1271)));
  };
};
// STAMPWTAG_chem__ProperTorsion_O
template <typename FP> struct Cast<chem::ProperTorsion_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ProperTorsion_O val -> 687
      return (kindVal == ISA_ADJUST_STAMP(687));
  };
};
// STAMPWTAG_chem__IterateResidues_O
template <typename FP> struct Cast<chem::IterateResidues_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateResidues_O val -> 1127
      return (kindVal == ISA_ADJUST_STAMP(1127));
  };
};
// STAMPWTAG_llvmo__Instruction_O
template <typename FP> struct Cast<llvmo::Instruction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Instruction_O low high --> 2323 2399 
      return ((ISA_ADJUST_STAMP(2323) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2399)));
  };
};
// STAMPWTAG_core__FileStream_O
template <typename FP> struct Cast<core::FileStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FileStream_O low high --> 2711 2719 
      return ((ISA_ADJUST_STAMP(2711) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2719)));
  };
};
// STAMPWTAG_core__MDArrayCharacter_O
template <typename FP> struct Cast<core::MDArrayCharacter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArrayCharacter_O val -> 2003
      return (kindVal == ISA_ADJUST_STAMP(2003));
  };
};
// STAMPWTAG_llvmo__LandingPadInst_O
template <typename FP> struct Cast<llvmo::LandingPadInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LandingPadInst_O val -> 2387
      return (kindVal == ISA_ADJUST_STAMP(2387));
  };
};
// STAMPWTAG_kinematics__KinematicsExposer_O
template <typename FP> struct Cast<kinematics::KinematicsExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::KinematicsExposer_O val -> 1175
      return (kindVal == ISA_ADJUST_STAMP(1175));
  };
};
// STAMPWTAG_core__Function_O
template <typename FP> struct Cast<core::Function_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Function_O low high --> 1443 1503 
      return ((ISA_ADJUST_STAMP(1443) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1503)));
  };
};
// STAMPWTAG_kinematics__BondedJoint_O
template <typename FP> struct Cast<kinematics::BondedJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BondedJoint_O low high --> 215 223 
      return ((ISA_ADJUST_STAMP(215) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(223)));
  };
};
// STAMPWTAG_core__SimpleMDArray_int2_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int2_t_O val -> 1651
      return (kindVal == ISA_ADJUST_STAMP(1651));
  };
};
// STAMPWTAG_core__ImmobileObject_O
template <typename FP> struct Cast<core::ImmobileObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ImmobileObject_O val -> 1439
      return (kindVal == ISA_ADJUST_STAMP(1439));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>> val -> 3091
      return (kindVal == ISA_ADJUST_STAMP(3091));
  };
};
// STAMPWTAG_chem__StereoisomerVirtualAtom_O
template <typename FP> struct Cast<chem::StereoisomerVirtualAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoisomerVirtualAtom_O val -> 591
      return (kindVal == ISA_ADJUST_STAMP(591));
  };
};
// STAMPWTAG_core__HashTableEql_O
template <typename FP> struct Cast<core::HashTableEql_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableEql_O val -> 1339
      return (kindVal == ISA_ADJUST_STAMP(1339));
  };
};
// STAMPWTAG_chem__SpanningLoop_O
template <typename FP> struct Cast<chem::SpanningLoop_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SpanningLoop_O val -> 683
      return (kindVal == ISA_ADJUST_STAMP(683));
  };
};
// STAMPWTAG_chem__PdbReader_O
template <typename FP> struct Cast<chem::PdbReader_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PdbReader_O val -> 679
      return (kindVal == ISA_ADJUST_STAMP(679));
  };
};
// STAMPWTAG_mp__ConditionVariable_O
template <typename FP> struct Cast<mp::ConditionVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::ConditionVariable_O val -> 675
      return (kindVal == ISA_ADJUST_STAMP(675));
  };
};
// STAMPWTAG_chem__ConformationExplorerEntry_O
template <typename FP> struct Cast<chem::ConformationExplorerEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationExplorerEntry_O val -> 671
      return (kindVal == ISA_ADJUST_STAMP(671));
  };
};
// STAMPWTAG_core__MDArray_byte8_t_O
template <typename FP> struct Cast<core::MDArray_byte8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte8_t_O val -> 1575
      return (kindVal == ISA_ADJUST_STAMP(1575));
  };
};
// STAMPWTAG_kinematics__BackboneDependentRotamerSet_O
template <typename FP> struct Cast<kinematics::BackboneDependentRotamerSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BackboneDependentRotamerSet_O val -> 59
      return (kindVal == ISA_ADJUST_STAMP(59));
  };
};
// STAMPWTAG_chem__BondListMatchNode_O
template <typename FP> struct Cast<chem::BondListMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondListMatchNode_O low high --> 1043 1051 
      return ((ISA_ADJUST_STAMP(1043) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1051)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>> val -> 3087
      return (kindVal == ISA_ADJUST_STAMP(3087));
  };
};
// STAMPWTAG_units__Dimension_O
template <typename FP> struct Cast<units::Dimension_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::Dimension_O val -> 667
      return (kindVal == ISA_ADJUST_STAMP(667));
  };
};
// STAMPWTAG_llvmo__AtomicRMWInst_O
template <typename FP> struct Cast<llvmo::AtomicRMWInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::AtomicRMWInst_O val -> 2383
      return (kindVal == ISA_ADJUST_STAMP(2383));
  };
};
// STAMPWTAG_chem__PdbMonomerConnectivity_O
template <typename FP> struct Cast<chem::PdbMonomerConnectivity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PdbMonomerConnectivity_O val -> 663
      return (kindVal == ISA_ADJUST_STAMP(663));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>> val -> 3083
      return (kindVal == ISA_ADJUST_STAMP(3083));
  };
};
// STAMPWTAG_llvmo__PassManager_O
template <typename FP> struct Cast<llvmo::PassManager_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PassManager_O val -> 2307
      return (kindVal == ISA_ADJUST_STAMP(2307));
  };
};
// STAMPWTAG_core__SimpleVector_O
template <typename FP> struct Cast<core::SimpleVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_O val -> 2187
      return (kindVal == ISA_ADJUST_STAMP(2187));
  };
};
// STAMPWTAG_chem__PlugWithMates_O
template <typename FP> struct Cast<chem::PlugWithMates_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PlugWithMates_O low high --> 743 751 
      return ((ISA_ADJUST_STAMP(743) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(751)));
  };
};
// STAMPWTAG_chem__Oligomer_O
template <typename FP> struct Cast<chem::Oligomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Oligomer_O val -> 659
      return (kindVal == ISA_ADJUST_STAMP(659));
  };
};
// STAMPWTAG_adapt__ObjectSet_O
template <typename FP> struct Cast<adapt::ObjectSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::ObjectSet_O val -> 655
      return (kindVal == ISA_ADJUST_STAMP(655));
  };
};
// STAMPWTAG_core__SimpleMDArray_int64_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int64_t_O val -> 1795
      return (kindVal == ISA_ADJUST_STAMP(1795));
  };
};
// STAMPWTAG_core__SimpleString_O
template <typename FP> struct Cast<core::SimpleString_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleString_O low high --> 2107 2123 
      return ((ISA_ADJUST_STAMP(2107) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2123)));
  };
};
// STAMPWTAG_llvmo__DIVariable_O
template <typename FP> struct Cast<llvmo::DIVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIVariable_O low high --> 2551 2555 
      return ((ISA_ADJUST_STAMP(2551) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2555)));
  };
};
// STAMPWTAG_core__FunctionValueEnvironment_O
template <typename FP> struct Cast<core::FunctionValueEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FunctionValueEnvironment_O val -> 1267
      return (kindVal == ISA_ADJUST_STAMP(1267));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>> val -> 3079
      return (kindVal == ISA_ADJUST_STAMP(3079));
  };
};
// STAMPWTAG_core__DerivableCxxClassCreator_O
template <typename FP> struct Cast<core::DerivableCxxClassCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DerivableCxxClassCreator_O val -> 1475
      return (kindVal == ISA_ADJUST_STAMP(1475));
  };
};
// STAMPWTAG_chem__Coupling_O
template <typename FP> struct Cast<chem::Coupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Coupling_O low high --> 643 651 
      return ((ISA_ADJUST_STAMP(643) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(651)));
  };
};
// STAMPWTAG_geom__ComplexVectorCoordinate_O
template <typename FP> struct Cast<geom::ComplexVectorCoordinate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::ComplexVectorCoordinate_O val -> 1847
      return (kindVal == ISA_ADJUST_STAMP(1847));
  };
};
// STAMPWTAG_asttooling__PresumedLoc_O
template <typename FP> struct Cast<asttooling::PresumedLoc_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range asttooling::PresumedLoc_O val -> 639
      return (kindVal == ISA_ADJUST_STAMP(639));
  };
};
// STAMPWTAG_core__ConcatenatedStream_O
template <typename FP> struct Cast<core::ConcatenatedStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ConcatenatedStream_O val -> 2707
      return (kindVal == ISA_ADJUST_STAMP(2707));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_double_
template <typename FP> struct Cast<gctools::GCVector_moveable<double>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<double> val -> 3075
      return (kindVal == ISA_ADJUST_STAMP(3075));
  };
};
// STAMPWTAG_core__MacroletEnvironment_O
template <typename FP> struct Cast<core::MacroletEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MacroletEnvironment_O val -> 1251
      return (kindVal == ISA_ADJUST_STAMP(1251));
  };
};
// STAMPWTAG_kinematics__DelayedBondedJoint_O
template <typename FP> struct Cast<kinematics::DelayedBondedJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::DelayedBondedJoint_O val -> 223
      return (kindVal == ISA_ADJUST_STAMP(223));
  };
};
// STAMPWTAG_core__Ratio_O
template <typename FP> struct Cast<core::Ratio_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Ratio_O val -> 1367
      return (kindVal == ISA_ADJUST_STAMP(1367));
  };
};
// STAMPWTAG_core__ComplexVector_byte2_t_O
template <typename FP> struct Cast<core::ComplexVector_byte2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte2_t_O val -> 1911
      return (kindVal == ISA_ADJUST_STAMP(1911));
  };
};
// STAMPWTAG_core__ClosureWithSlots_O
template <typename FP> struct Cast<core::ClosureWithSlots_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ClosureWithSlots_O val -> 1499
      return (kindVal == ISA_ADJUST_STAMP(1499));
  };
};
// STAMPWTAG_llvmo__ExecutionEngine_O
template <typename FP> struct Cast<llvmo::ExecutionEngine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ExecutionEngine_O val -> 2495
      return (kindVal == ISA_ADJUST_STAMP(2495));
  };
};
// STAMPWTAG_core__ClassRepCreator_O
template <typename FP> struct Cast<core::ClassRepCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ClassRepCreator_O val -> 1471
      return (kindVal == ISA_ADJUST_STAMP(1471));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>> val -> 3071
      return (kindVal == ISA_ADJUST_STAMP(3071));
  };
};
// STAMPWTAG_llvmo__Attribute_O
template <typename FP> struct Cast<llvmo::Attribute_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Attribute_O val -> 1435
      return (kindVal == ISA_ADJUST_STAMP(1435));
  };
};
// STAMPWTAG_core__DerivableCxxObject_O
template <typename FP> struct Cast<core::DerivableCxxObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DerivableCxxObject_O val -> 1204
      return (kindVal == ISA_ADJUST_STAMP(1204));
  };
};
// STAMPWTAG_llvmo__SwitchInst_O
template <typename FP> struct Cast<llvmo::SwitchInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::SwitchInst_O val -> 2379
      return (kindVal == ISA_ADJUST_STAMP(2379));
  };
};
// STAMPWTAG_core__SymbolToEnumConverter_O
template <typename FP> struct Cast<core::SymbolToEnumConverter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SymbolToEnumConverter_O val -> 1431
      return (kindVal == ISA_ADJUST_STAMP(1431));
  };
};
// STAMPWTAG_chem__RestrainedPiBond_O
template <typename FP> struct Cast<chem::RestrainedPiBond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestrainedPiBond_O val -> 935
      return (kindVal == ISA_ADJUST_STAMP(935));
  };
};
// STAMPWTAG_chem__ConformationCollection_O
template <typename FP> struct Cast<chem::ConformationCollection_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConformationCollection_O low high --> 631 635 
      return ((ISA_ADJUST_STAMP(631) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(635)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::RotamerAtom>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::RotamerAtom> val -> 3067
      return (kindVal == ISA_ADJUST_STAMP(3067));
  };
};
// STAMPWTAG_core__ComplexVector_int32_t_O
template <typename FP> struct Cast<core::ComplexVector_int32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int32_t_O val -> 1831
      return (kindVal == ISA_ADJUST_STAMP(1831));
  };
};
// STAMPWTAG_core__VaList_dummy_O
template <typename FP> struct Cast<core::VaList_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::VaList_dummy_O val -> 2755
      return (kindVal == ISA_ADJUST_STAMP(2755));
  };
};
// STAMPWTAG_geom__Color_O
template <typename FP> struct Cast<geom::Color_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::Color_O val -> 627
      return (kindVal == ISA_ADJUST_STAMP(627));
  };
};
// STAMPWTAG_kinematics__JointTemplate_O
template <typename FP> struct Cast<kinematics::JointTemplate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::JointTemplate_O low high --> 611 623 
      return ((ISA_ADJUST_STAMP(611) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(623)));
  };
};
// STAMPWTAG_core__LogicalPathname_O
template <typename FP> struct Cast<core::LogicalPathname_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LogicalPathname_O val -> 2671
      return (kindVal == ISA_ADJUST_STAMP(2671));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>> val -> 3063
      return (kindVal == ISA_ADJUST_STAMP(3063));
  };
};
// STAMPWTAG_core__WrappedPointer_O
template <typename FP> struct Cast<core::WrappedPointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::WrappedPointer_O val -> 1426
      return (kindVal == ISA_ADJUST_STAMP(1426));
  };
};
// STAMPWTAG_core__SimpleVector_double_O
template <typename FP> struct Cast<core::SimpleVector_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_double_O val -> 2063
      return (kindVal == ISA_ADJUST_STAMP(2063));
  };
};
// STAMPWTAG_core__SimpleMDArray_byte32_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte32_t_O val -> 1643
      return (kindVal == ISA_ADJUST_STAMP(1643));
  };
};
// STAMPWTAG_llvmo__LLVMTargetMachine_O
template <typename FP> struct Cast<llvmo::LLVMTargetMachine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LLVMTargetMachine_O val -> 2479
      return (kindVal == ISA_ADJUST_STAMP(2479));
  };
};
// STAMPWTAG_core__ClassHolder_O
template <typename FP> struct Cast<core::ClassHolder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ClassHolder_O val -> 1423
      return (kindVal == ISA_ADJUST_STAMP(1423));
  };
};
// STAMPWTAG_chem__SketchFunction_O
template <typename FP> struct Cast<chem::SketchFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SketchFunction_O val -> 431
      return (kindVal == ISA_ADJUST_STAMP(431));
  };
};
// STAMPWTAG_llvmo__UnaryInstruction_O
template <typename FP> struct Cast<llvmo::UnaryInstruction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::UnaryInstruction_O low high --> 2363 2375 
      return ((ISA_ADJUST_STAMP(2363) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2375)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>> val -> 3059
      return (kindVal == ISA_ADJUST_STAMP(3059));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_unsigned_int_
template <typename FP> struct Cast<gctools::GCArray_moveable<unsigned int>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<unsigned int> val -> 3055
      return (kindVal == ISA_ADJUST_STAMP(3055));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>> val -> 3051
      return (kindVal == ISA_ADJUST_STAMP(3051));
  };
};
// STAMPWTAG_kinematics__MonomerId_O
template <typename FP> struct Cast<kinematics::MonomerId_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::MonomerId_O val -> 607
      return (kindVal == ISA_ADJUST_STAMP(607));
  };
};
// STAMPWTAG_core__MDArray_size_t_O
template <typename FP> struct Cast<core::MDArray_size_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_size_t_O val -> 1567
      return (kindVal == ISA_ADJUST_STAMP(1567));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyDihedral>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyDihedral> val -> 3047
      return (kindVal == ISA_ADJUST_STAMP(3047));
  };
};
// STAMPWTAG_chem__PathMessage_O
template <typename FP> struct Cast<chem::PathMessage_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PathMessage_O val -> 603
      return (kindVal == ISA_ADJUST_STAMP(603));
  };
};
// STAMPWTAG_chem__BondMatchNode_O
template <typename FP> struct Cast<chem::BondMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondMatchNode_O low high --> 999 1039 
      return ((ISA_ADJUST_STAMP(999) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1039)));
  };
};
// STAMPWTAG_chem__EnergyRigidBodyNonbond_O
template <typename FP> struct Cast<chem::EnergyRigidBodyNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyRigidBodyNonbond_O val -> 83
      return (kindVal == ISA_ADJUST_STAMP(83));
  };
};
// STAMPWTAG_core__ComplexVector_O
template <typename FP> struct Cast<core::ComplexVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_O low high --> 1799 1971 
      return ((ISA_ADJUST_STAMP(1799) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1971)));
  };
};
// STAMPWTAG_chem__SparseLargeSquareMatrix_O
template <typename FP> struct Cast<chem::SparseLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SparseLargeSquareMatrix_O val -> 351
      return (kindVal == ISA_ADJUST_STAMP(351));
  };
};
// STAMPWTAG_clbind__ClassRegistry_O
template <typename FP> struct Cast<clbind::ClassRegistry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clbind::ClassRegistry_O val -> 1419
      return (kindVal == ISA_ADJUST_STAMP(1419));
  };
};
// STAMPWTAG_core__Frame_O
template <typename FP> struct Cast<core::Frame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Frame_O val -> 1415
      return (kindVal == ISA_ADJUST_STAMP(1415));
  };
};
// STAMPWTAG_asttooling__AstVisitor_O
template <typename FP> struct Cast<asttooling::AstVisitor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range asttooling::AstVisitor_O val -> 2767
      return (kindVal == ISA_ADJUST_STAMP(2767));
  };
};
// STAMPWTAG_chem__Isoname_O
template <typename FP> struct Cast<chem::Isoname_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Isoname_O val -> 599
      return (kindVal == ISA_ADJUST_STAMP(599));
  };
};
// STAMPWTAG_core__Record_O
template <typename FP> struct Cast<core::Record_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Record_O val -> 1411
      return (kindVal == ISA_ADJUST_STAMP(1411));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_core__T_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<core::T_O *>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::T_O *> val -> 3043
      return (kindVal == ISA_ADJUST_STAMP(3043));
  };
};
// STAMPWTAG_chem__Atom_O
template <typename FP> struct Cast<chem::Atom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Atom_O low high --> 143 147 
      return ((ISA_ADJUST_STAMP(143) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(147)));
  };
};
// STAMPWTAG_chem__ZMatrix_O
template <typename FP> struct Cast<chem::ZMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrix_O val -> 595
      return (kindVal == ISA_ADJUST_STAMP(595));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>> val -> 3039
      return (kindVal == ISA_ADJUST_STAMP(3039));
  };
};
// STAMPWTAG_chem__StereoisomerAtom_O
template <typename FP> struct Cast<chem::StereoisomerAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoisomerAtom_O low high --> 587 591 
      return ((ISA_ADJUST_STAMP(587) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(591)));
  };
};
// STAMPWTAG_core__SourcePosInfo_O
template <typename FP> struct Cast<core::SourcePosInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SourcePosInfo_O val -> 1407
      return (kindVal == ISA_ADJUST_STAMP(1407));
  };
};
// STAMPWTAG_llvmo__BranchInst_O
template <typename FP> struct Cast<llvmo::BranchInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::BranchInst_O val -> 2359
      return (kindVal == ISA_ADJUST_STAMP(2359));
  };
};
// STAMPWTAG_llvmo__AllocaInst_O
template <typename FP> struct Cast<llvmo::AllocaInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::AllocaInst_O val -> 2371
      return (kindVal == ISA_ADJUST_STAMP(2371));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>> val -> 3035
      return (kindVal == ISA_ADJUST_STAMP(3035));
  };
};
// STAMPWTAG_chem__ZMatrixInternal_O
template <typename FP> struct Cast<chem::ZMatrixInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixInternal_O low high --> 571 583 
      return ((ISA_ADJUST_STAMP(571) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(583)));
  };
};
// STAMPWTAG_core__HashTableCustom_O
template <typename FP> struct Cast<core::HashTableCustom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableCustom_O val -> 1335
      return (kindVal == ISA_ADJUST_STAMP(1335));
  };
};
// STAMPWTAG_core__ComplexVector_byte8_t_O
template <typename FP> struct Cast<core::ComplexVector_byte8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte8_t_O val -> 1919
      return (kindVal == ISA_ADJUST_STAMP(1919));
  };
};
// STAMPWTAG_core__HashTable_O
template <typename FP> struct Cast<core::HashTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTable_O low high --> 1319 1339 
      return ((ISA_ADJUST_STAMP(1319) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1339)));
  };
};
// STAMPWTAG_chem__ChemDraw_O
template <typename FP> struct Cast<chem::ChemDraw_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ChemDraw_O val -> 567
      return (kindVal == ISA_ADJUST_STAMP(567));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_float_
template <typename FP> struct Cast<gctools::GCArray_moveable<float>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<float> val -> 3031
      return (kindVal == ISA_ADJUST_STAMP(3031));
  };
};
// STAMPWTAG_chem__ReportBase_O
template <typename FP> struct Cast<chem::ReportBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ReportBase_O low high --> 551 563 
      return ((ISA_ADJUST_STAMP(551) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(563)));
  };
};
// STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O
template <typename FP> struct Cast<kinematics::BackboneDependentRotamerLibrary_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BackboneDependentRotamerLibrary_O val -> 547
      return (kindVal == ISA_ADJUST_STAMP(547));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>> val -> 3027
      return (kindVal == ISA_ADJUST_STAMP(3027));
  };
};
// STAMPWTAG_chem__EnergyChiralRestraint_O
template <typename FP> struct Cast<chem::EnergyChiralRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyChiralRestraint_O val -> 99
      return (kindVal == ISA_ADJUST_STAMP(99));
  };
};
// STAMPWTAG_chem__MonomerPack_O
template <typename FP> struct Cast<chem::MonomerPack_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MonomerPack_O val -> 527
      return (kindVal == ISA_ADJUST_STAMP(527));
  };
};
// STAMPWTAG_geom__MDArrayCoordinate_O
template <typename FP> struct Cast<geom::MDArrayCoordinate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::MDArrayCoordinate_O val -> 1615
      return (kindVal == ISA_ADJUST_STAMP(1615));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>> val -> 3023
      return (kindVal == ISA_ADJUST_STAMP(3023));
  };
};
// STAMPWTAG_chem__Structure_Old_List_O
template <typename FP> struct Cast<chem::Structure_Old_List_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Structure_Old_List_O val -> 543
      return (kindVal == ISA_ADJUST_STAMP(543));
  };
};
// STAMPWTAG_core__SimpleMDArrayBaseChar_O
template <typename FP> struct Cast<core::SimpleMDArrayBaseChar_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArrayBaseChar_O val -> 1723
      return (kindVal == ISA_ADJUST_STAMP(1723));
  };
};
// STAMPWTAG_chem__OctNode_O
template <typename FP> struct Cast<chem::OctNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OctNode_O val -> 539
      return (kindVal == ISA_ADJUST_STAMP(539));
  };
};
// STAMPWTAG_chem__Entity_O
template <typename FP> struct Cast<chem::Entity_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Entity_O low high --> 495 535 
      return ((ISA_ADJUST_STAMP(495) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(535)));
  };
};
// STAMPWTAG_chem__AGEdge_O
template <typename FP> struct Cast<chem::AGEdge_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AGEdge_O val -> 491
      return (kindVal == ISA_ADJUST_STAMP(491));
  };
};
// STAMPWTAG_chem__ReadAmberParameters_O
template <typename FP> struct Cast<chem::ReadAmberParameters_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ReadAmberParameters_O val -> 487
      return (kindVal == ISA_ADJUST_STAMP(487));
  };
};
// STAMPWTAG_llvmo__DILocation_O
template <typename FP> struct Cast<llvmo::DILocation_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILocation_O val -> 2543
      return (kindVal == ISA_ADJUST_STAMP(2543));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>> val -> 3019
      return (kindVal == ISA_ADJUST_STAMP(3019));
  };
};
// STAMPWTAG_core__SimpleMDArray_O
template <typename FP> struct Cast<core::SimpleMDArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_O low high --> 1627 1795 
      return ((ISA_ADJUST_STAMP(1627) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1795)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_int_
template <typename FP> struct Cast<gctools::GCVector_moveable<int>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<int> val -> 3015
      return (kindVal == ISA_ADJUST_STAMP(3015));
  };
};
// STAMPWTAG_chem__Smirks_O
template <typename FP> struct Cast<chem::Smirks_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Smirks_O val -> 483
      return (kindVal == ISA_ADJUST_STAMP(483));
  };
};
// STAMPWTAG_chem__EnergyDihedralRestraint_O
template <typename FP> struct Cast<chem::EnergyDihedralRestraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyDihedralRestraint_O val -> 95
      return (kindVal == ISA_ADJUST_STAMP(95));
  };
};
// STAMPWTAG_core__Number_O
template <typename FP> struct Cast<core::Number_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Number_O low high --> 1355 1403 
      return ((ISA_ADJUST_STAMP(1355) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1403)));
  };
};
// STAMPWTAG_core__T_O
template <typename FP> struct Cast<core::T_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::T_O low high --> 7 2755 
      return ((ISA_ADJUST_STAMP(7) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2755)));
  };
};
// STAMPWTAG_llvmo__DICompileUnit_O
template <typename FP> struct Cast<llvmo::DICompileUnit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DICompileUnit_O val -> 2583
      return (kindVal == ISA_ADJUST_STAMP(2583));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>> val -> 3011
      return (kindVal == ISA_ADJUST_STAMP(3011));
  };
};
// STAMPWTAG_llvmo__FunctionPass_O
template <typename FP> struct Cast<llvmo::FunctionPass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FunctionPass_O val -> 2259
      return (kindVal == ISA_ADJUST_STAMP(2259));
  };
};
// STAMPWTAG_core__SimpleVector_byte4_t_O
template <typename FP> struct Cast<core::SimpleVector_byte4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte4_t_O val -> 2095
      return (kindVal == ISA_ADJUST_STAMP(2095));
  };
};
// STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<2,1>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<2,1> val -> 3007
      return (kindVal == ISA_ADJUST_STAMP(3007));
  };
};
// STAMPWTAG_chem__ConstitutionAtom_O
template <typename FP> struct Cast<chem::ConstitutionAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ConstitutionAtom_O low high --> 475 479 
      return ((ISA_ADJUST_STAMP(475) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(479)));
  };
};
// STAMPWTAG_llvmo__CallBase_O
template <typename FP> struct Cast<llvmo::CallBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::CallBase_O low high --> 2347 2355 
      return ((ISA_ADJUST_STAMP(2347) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2355)));
  };
};
// STAMPWTAG_core__CompileTimeEnvironment_O
template <typename FP> struct Cast<core::CompileTimeEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CompileTimeEnvironment_O low high --> 1231 1251 
      return ((ISA_ADJUST_STAMP(1231) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1251)));
  };
};
// STAMPWTAG_mp__SharedMutex_O
template <typename FP> struct Cast<mp::SharedMutex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mp::SharedMutex_O val -> 471
      return (kindVal == ISA_ADJUST_STAMP(471));
  };
};
// STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<1,0>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<1,0> val -> 3003
      return (kindVal == ISA_ADJUST_STAMP(3003));
  };
};
// STAMPWTAG_adapt__QDomNode_O
template <typename FP> struct Cast<adapt::QDomNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::QDomNode_O val -> 467
      return (kindVal == ISA_ADJUST_STAMP(467));
  };
};
// STAMPWTAG_core__InstanceCreator_O
template <typename FP> struct Cast<core::InstanceCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::InstanceCreator_O val -> 1467
      return (kindVal == ISA_ADJUST_STAMP(1467));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>> val -> 2999
      return (kindVal == ISA_ADJUST_STAMP(2999));
  };
};
// STAMPWTAG_chem__BondToAtomTest_O
template <typename FP> struct Cast<chem::BondToAtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondToAtomTest_O val -> 1035
      return (kindVal == ISA_ADJUST_STAMP(1035));
  };
};
// STAMPWTAG_chem__FFAngleDb_O
template <typename FP> struct Cast<chem::FFAngleDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFAngleDb_O val -> 375
      return (kindVal == ISA_ADJUST_STAMP(375));
  };
};
// STAMPWTAG_chem__FFTypeRule_O
template <typename FP> struct Cast<chem::FFTypeRule_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFTypeRule_O val -> 463
      return (kindVal == ISA_ADJUST_STAMP(463));
  };
};
// STAMPWTAG_llvmo__InsertPoint_O
template <typename FP> struct Cast<llvmo::InsertPoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::InsertPoint_O val -> 1351
      return (kindVal == ISA_ADJUST_STAMP(1351));
  };
};
// STAMPWTAG_core__FunctionDescription_O
template <typename FP> struct Cast<core::FunctionDescription_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FunctionDescription_O val -> 1347
      return (kindVal == ISA_ADJUST_STAMP(1347));
  };
};
// STAMPWTAG_core__StrWNs_O
template <typename FP> struct Cast<core::StrWNs_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StrWNs_O val -> 1955
      return (kindVal == ISA_ADJUST_STAMP(1955));
  };
};
// STAMPWTAG_chem__Structure_Old_ListEntry_O
template <typename FP> struct Cast<chem::Structure_Old_ListEntry_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Structure_Old_ListEntry_O val -> 459
      return (kindVal == ISA_ADJUST_STAMP(459));
  };
};
// STAMPWTAG_chem__EnergyRigidBodyStaple_O
template <typename FP> struct Cast<chem::EnergyRigidBodyStaple_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyRigidBodyStaple_O val -> 79
      return (kindVal == ISA_ADJUST_STAMP(79));
  };
};
// STAMPWTAG_core__EchoStream_O
template <typename FP> struct Cast<core::EchoStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::EchoStream_O val -> 2703
      return (kindVal == ISA_ADJUST_STAMP(2703));
  };
};
// STAMPWTAG_core__HashTableBase_O
template <typename FP> struct Cast<core::HashTableBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableBase_O low high --> 1315 1343 
      return ((ISA_ADJUST_STAMP(1315) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1343)));
  };
};
// STAMPWTAG_core__MDArrayBit_O
template <typename FP> struct Cast<core::MDArrayBit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArrayBit_O val -> 2011
      return (kindVal == ISA_ADJUST_STAMP(2011));
  };
};
// STAMPWTAG_core__ComplexVector_byte16_t_O
template <typename FP> struct Cast<core::ComplexVector_byte16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte16_t_O val -> 1839
      return (kindVal == ISA_ADJUST_STAMP(1839));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>> val -> 2995
      return (kindVal == ISA_ADJUST_STAMP(2995));
  };
};
// STAMPWTAG_chem__FFStretchDb_O
template <typename FP> struct Cast<chem::FFStretchDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFStretchDb_O val -> 371
      return (kindVal == ISA_ADJUST_STAMP(371));
  };
};
// STAMPWTAG_geom__OVector2_O
template <typename FP> struct Cast<geom::OVector2_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::OVector2_O val -> 455
      return (kindVal == ISA_ADJUST_STAMP(455));
  };
};
// STAMPWTAG_llvmo__DILocalScope_O
template <typename FP> struct Cast<llvmo::DILocalScope_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILocalScope_O low high --> 2567 2579 
      return ((ISA_ADJUST_STAMP(2567) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2579)));
  };
};
// STAMPWTAG_geom__OVector3_O
template <typename FP> struct Cast<geom::OVector3_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::OVector3_O val -> 451
      return (kindVal == ISA_ADJUST_STAMP(451));
  };
};
// STAMPWTAG_core__LocalEntryPoint_O
template <typename FP> struct Cast<core::LocalEntryPoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LocalEntryPoint_O val -> 1307
      return (kindVal == ISA_ADJUST_STAMP(1307));
  };
};
// STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<2,0>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<2,0> val -> 2991
      return (kindVal == ISA_ADJUST_STAMP(2991));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>> val -> 2987
      return (kindVal == ISA_ADJUST_STAMP(2987));
  };
};
// STAMPWTAG_llvmo__DILexicalBlock_O
template <typename FP> struct Cast<llvmo::DILexicalBlock_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILexicalBlock_O val -> 2579
      return (kindVal == ISA_ADJUST_STAMP(2579));
  };
};
// STAMPWTAG_llvmo__DITypeRefArray_O
template <typename FP> struct Cast<llvmo::DITypeRefArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DITypeRefArray_O val -> 447
      return (kindVal == ISA_ADJUST_STAMP(447));
  };
};
// STAMPWTAG_chem__RestraintAnchor_O
template <typename FP> struct Cast<chem::RestraintAnchor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintAnchor_O val -> 287
      return (kindVal == ISA_ADJUST_STAMP(287));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>> val -> 2983
      return (kindVal == ISA_ADJUST_STAMP(2983));
  };
};
// STAMPWTAG_chem__InPlug_O
template <typename FP> struct Cast<chem::InPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::InPlug_O val -> 747
      return (kindVal == ISA_ADJUST_STAMP(747));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>> val -> 2979
      return (kindVal == ISA_ADJUST_STAMP(2979));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>> val -> 2975
      return (kindVal == ISA_ADJUST_STAMP(2975));
  };
};
// STAMPWTAG_llvmo__ModulePass_O
template <typename FP> struct Cast<llvmo::ModulePass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ModulePass_O low high --> 2247 2255 
      return ((ISA_ADJUST_STAMP(2247) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2255)));
  };
};
// STAMPWTAG_chem__DirectionalCoupling_O
template <typename FP> struct Cast<chem::DirectionalCoupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::DirectionalCoupling_O val -> 651
      return (kindVal == ISA_ADJUST_STAMP(651));
  };
};
// STAMPWTAG_llvmo__DILocalVariable_O
template <typename FP> struct Cast<llvmo::DILocalVariable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILocalVariable_O val -> 2555
      return (kindVal == ISA_ADJUST_STAMP(2555));
  };
};
// STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O
template <typename FP> struct Cast<llvmo::TargetLibraryInfoWrapperPass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetLibraryInfoWrapperPass_O val -> 2255
      return (kindVal == ISA_ADJUST_STAMP(2255));
  };
};
// STAMPWTAG_asttooling__QualType_O
template <typename FP> struct Cast<asttooling::QualType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range asttooling::QualType_O val -> 443
      return (kindVal == ISA_ADJUST_STAMP(443));
  };
};
// STAMPWTAG_llvmo__User_O
template <typename FP> struct Cast<llvmo::User_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::User_O low high --> 2319 2455 
      return ((ISA_ADJUST_STAMP(2319) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2455)));
  };
};
// STAMPWTAG_core__MDArray_int16_t_O
template <typename FP> struct Cast<core::MDArray_int16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int16_t_O val -> 1527
      return (kindVal == ISA_ADJUST_STAMP(1527));
  };
};
// STAMPWTAG_chem__ZMatrixDihedralInternal_O
template <typename FP> struct Cast<chem::ZMatrixDihedralInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixDihedralInternal_O val -> 579
      return (kindVal == ISA_ADJUST_STAMP(579));
  };
};
// STAMPWTAG_chem__ForceMatchReport_O
template <typename FP> struct Cast<chem::ForceMatchReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ForceMatchReport_O val -> 563
      return (kindVal == ISA_ADJUST_STAMP(563));
  };
};
// STAMPWTAG_llvmo__FenceInst_O
template <typename FP> struct Cast<llvmo::FenceInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FenceInst_O val -> 2343
      return (kindVal == ISA_ADJUST_STAMP(2343));
  };
};
// STAMPWTAG_chem__WildElementDict_O
template <typename FP> struct Cast<chem::WildElementDict_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::WildElementDict_O val -> 439
      return (kindVal == ISA_ADJUST_STAMP(439));
  };
};
// STAMPWTAG_chem__Chain_O
template <typename FP> struct Cast<chem::Chain_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Chain_O val -> 1047
      return (kindVal == ISA_ADJUST_STAMP(1047));
  };
};
// STAMPWTAG_llvmo__AtomicCmpXchgInst_O
template <typename FP> struct Cast<llvmo::AtomicCmpXchgInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::AtomicCmpXchgInst_O val -> 2339
      return (kindVal == ISA_ADJUST_STAMP(2339));
  };
};
// STAMPWTAG_core__ComplexVector_int8_t_O
template <typename FP> struct Cast<core::ComplexVector_int8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int8_t_O val -> 1815
      return (kindVal == ISA_ADJUST_STAMP(1815));
  };
};
// STAMPWTAG_core__SimpleMDArray_double_O
template <typename FP> struct Cast<core::SimpleMDArray_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_double_O val -> 1739
      return (kindVal == ISA_ADJUST_STAMP(1739));
  };
};
// STAMPWTAG_chem__ScoringFunction_O
template <typename FP> struct Cast<chem::ScoringFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ScoringFunction_O low high --> 423 435 
      return ((ISA_ADJUST_STAMP(423) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(435)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>> val -> 2971
      return (kindVal == ISA_ADJUST_STAMP(2971));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>> val -> 2967
      return (kindVal == ISA_ADJUST_STAMP(2967));
  };
};
// STAMPWTAG_llvmo__ConstantPointerNull_O
template <typename FP> struct Cast<llvmo::ConstantPointerNull_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantPointerNull_O val -> 2435
      return (kindVal == ISA_ADJUST_STAMP(2435));
  };
};
// STAMPWTAG_llvmo__VectorType_O
template <typename FP> struct Cast<llvmo::VectorType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::VectorType_O val -> 2519
      return (kindVal == ISA_ADJUST_STAMP(2519));
  };
};
// STAMPWTAG_core__EntryPointBase_O
template <typename FP> struct Cast<core::EntryPointBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::EntryPointBase_O low high --> 1291 1311 
      return ((ISA_ADJUST_STAMP(1291) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1311)));
  };
};
// STAMPWTAG_chem__FFStretch_O
template <typename FP> struct Cast<chem::FFStretch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFStretch_O val -> 251
      return (kindVal == ISA_ADJUST_STAMP(251));
  };
};
// STAMPWTAG_chem__IterateRestraints_O
template <typename FP> struct Cast<chem::IterateRestraints_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::IterateRestraints_O val -> 1111
      return (kindVal == ISA_ADJUST_STAMP(1111));
  };
};
// STAMPWTAG_chem__EnergySketchNonbond_O
template <typename FP> struct Cast<chem::EnergySketchNonbond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergySketchNonbond_O val -> 91
      return (kindVal == ISA_ADJUST_STAMP(91));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>> val -> 2963
      return (kindVal == ISA_ADJUST_STAMP(2963));
  };
};
// STAMPWTAG_core__RandomState_O
template <typename FP> struct Cast<core::RandomState_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::RandomState_O val -> 1287
      return (kindVal == ISA_ADJUST_STAMP(1287));
  };
};
// STAMPWTAG_core__SimpleVector_int2_t_O
template <typename FP> struct Cast<core::SimpleVector_int2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int2_t_O val -> 2071
      return (kindVal == ISA_ADJUST_STAMP(2071));
  };
};
// STAMPWTAG_chem__AtomReferenceBase_O
template <typename FP> struct Cast<chem::AtomReferenceBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomReferenceBase_O low high --> 415 419 
      return ((ISA_ADJUST_STAMP(415) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(419)));
  };
};
// STAMPWTAG_core__MDArray_byte64_t_O
template <typename FP> struct Cast<core::MDArray_byte64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte64_t_O val -> 1607
      return (kindVal == ISA_ADJUST_STAMP(1607));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>> val -> 2959
      return (kindVal == ISA_ADJUST_STAMP(2959));
  };
};
// STAMPWTAG_chem__ForceField_O
template <typename FP> struct Cast<chem::ForceField_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ForceField_O val -> 411
      return (kindVal == ISA_ADJUST_STAMP(411));
  };
};
// STAMPWTAG_core__SimpleVector_fixnum_O
template <typename FP> struct Cast<core::SimpleVector_fixnum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_fixnum_O val -> 2171
      return (kindVal == ISA_ADJUST_STAMP(2171));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>> val -> 2955
      return (kindVal == ISA_ADJUST_STAMP(2955));
  };
};
// STAMPWTAG_core__AnsiStream_O
template <typename FP> struct Cast<core::AnsiStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::AnsiStream_O low high --> 2679 2723 
      return ((ISA_ADJUST_STAMP(2679) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2723)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>> val -> 2951
      return (kindVal == ISA_ADJUST_STAMP(2951));
  };
};
// STAMPWTAG_core__BuiltinClosure_O
template <typename FP> struct Cast<core::BuiltinClosure_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::BuiltinClosure_O low high --> 1491 1495 
      return ((ISA_ADJUST_STAMP(1491) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1495)));
  };
};
// STAMPWTAG_core__Environment_O
template <typename FP> struct Cast<core::Environment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Environment_O low high --> 1219 1283 
      return ((ISA_ADJUST_STAMP(1219) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1283)));
  };
};
// STAMPWTAG_chem__AGVertex_O
template <typename FP> struct Cast<chem::AGVertex_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AGVertex_O val -> 407
      return (kindVal == ISA_ADJUST_STAMP(407));
  };
};
// STAMPWTAG_core__UnwindProtectEnvironment_O
template <typename FP> struct Cast<core::UnwindProtectEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::UnwindProtectEnvironment_O val -> 1247
      return (kindVal == ISA_ADJUST_STAMP(1247));
  };
};
// STAMPWTAG_clasp_ffi__ForeignData_O
template <typename FP> struct Cast<clasp_ffi::ForeignData_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clasp_ffi::ForeignData_O val -> 31
      return (kindVal == ISA_ADJUST_STAMP(31));
  };
};
// STAMPWTAG_llvmo__CallInst_O
template <typename FP> struct Cast<llvmo::CallInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::CallInst_O val -> 2351
      return (kindVal == ISA_ADJUST_STAMP(2351));
  };
};
// STAMPWTAG_chem__AfterMatchBondToAtomTest_O
template <typename FP> struct Cast<chem::AfterMatchBondToAtomTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AfterMatchBondToAtomTest_O val -> 1059
      return (kindVal == ISA_ADJUST_STAMP(1059));
  };
};
// STAMPWTAG_chem__OligomerPart_Link_O
template <typename FP> struct Cast<chem::OligomerPart_Link_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OligomerPart_Link_O val -> 323
      return (kindVal == ISA_ADJUST_STAMP(323));
  };
};
// STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__
template <typename FP> struct Cast<gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>> val -> 2947
      return (kindVal == ISA_ADJUST_STAMP(2947));
  };
};
// STAMPWTAG_adapt__AdaptExposer_O
template <typename FP> struct Cast<adapt::AdaptExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::AdaptExposer_O val -> 1171
      return (kindVal == ISA_ADJUST_STAMP(1171));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>> val -> 2943
      return (kindVal == ISA_ADJUST_STAMP(2943));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>> val -> 2939
      return (kindVal == ISA_ADJUST_STAMP(2939));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::HybridizationInfo>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::HybridizationInfo> val -> 2935
      return (kindVal == ISA_ADJUST_STAMP(2935));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>> val -> 2931
      return (kindVal == ISA_ADJUST_STAMP(2931));
  };
};
// STAMPWTAG_core__StringStream_O
template <typename FP> struct Cast<core::StringStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StringStream_O low high --> 2691 2699 
      return ((ISA_ADJUST_STAMP(2691) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2699)));
  };
};
// STAMPWTAG_llvmo__LibraryBase_O
template <typename FP> struct Cast<llvmo::LibraryBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LibraryBase_O low high --> 395 403 
      return ((ISA_ADJUST_STAMP(395) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(403)));
  };
};
// STAMPWTAG_core__Sigset_O
template <typename FP> struct Cast<core::Sigset_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Sigset_O val -> 1215
      return (kindVal == ISA_ADJUST_STAMP(1215));
  };
};
// STAMPWTAG_llvmo__IntegerType_O
template <typename FP> struct Cast<llvmo::IntegerType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::IntegerType_O val -> 2515
      return (kindVal == ISA_ADJUST_STAMP(2515));
  };
};
// STAMPWTAG_core__MDArray_int64_t_O
template <typename FP> struct Cast<core::MDArray_int64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int64_t_O val -> 1979
      return (kindVal == ISA_ADJUST_STAMP(1979));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>> val -> 2927
      return (kindVal == ISA_ADJUST_STAMP(2927));
  };
};
// STAMPWTAG_llvmo__PassManagerBuilder_O
template <typename FP> struct Cast<llvmo::PassManagerBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PassManagerBuilder_O val -> 2491
      return (kindVal == ISA_ADJUST_STAMP(2491));
  };
};
// STAMPWTAG_core__MDArray_int8_t_O
template <typename FP> struct Cast<core::MDArray_int8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int8_t_O val -> 1535
      return (kindVal == ISA_ADJUST_STAMP(1535));
  };
};
// STAMPWTAG_chem__ZMatrixBondInternal_O
template <typename FP> struct Cast<chem::ZMatrixBondInternal_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ZMatrixBondInternal_O val -> 575
      return (kindVal == ISA_ADJUST_STAMP(575));
  };
};
// STAMPWTAG_llvmo__ConstantFP_O
template <typename FP> struct Cast<llvmo::ConstantFP_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantFP_O val -> 2431
      return (kindVal == ISA_ADJUST_STAMP(2431));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyAnchorRestraint> val -> 2923
      return (kindVal == ISA_ADJUST_STAMP(2923));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_Vector3_
template <typename FP> struct Cast<gctools::GCArray_moveable<Vector3>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<Vector3> val -> 2919
      return (kindVal == ISA_ADJUST_STAMP(2919));
  };
};
// STAMPWTAG_core__Cons_O
template <typename FP> struct Cast<core::Cons_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Cons_O val -> 2751
      return (kindVal == ISA_ADJUST_STAMP(2751));
  };
};
// STAMPWTAG_chem__Constitution_O
template <typename FP> struct Cast<chem::Constitution_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Constitution_O val -> 531
      return (kindVal == ISA_ADJUST_STAMP(531));
  };
};
// STAMPWTAG_llvmo__LLVMContext_O
template <typename FP> struct Cast<llvmo::LLVMContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::LLVMContext_O val -> 2487
      return (kindVal == ISA_ADJUST_STAMP(2487));
  };
};
// STAMPWTAG_chem__EntityNameSetBase_O
template <typename FP> struct Cast<chem::EntityNameSetBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EntityNameSetBase_O low high --> 503 527 
      return ((ISA_ADJUST_STAMP(503) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(527)));
  };
};
// STAMPWTAG_core__MDArray_int4_t_O
template <typename FP> struct Cast<core::MDArray_int4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int4_t_O val -> 2027
      return (kindVal == ISA_ADJUST_STAMP(2027));
  };
};
// STAMPWTAG_chem__FFBaseDb_O
template <typename FP> struct Cast<chem::FFBaseDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFBaseDb_O low high --> 359 391 
      return ((ISA_ADJUST_STAMP(359) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(391)));
  };
};
// STAMPWTAG_chem__AbstractLargeSquareMatrix_O
template <typename FP> struct Cast<chem::AbstractLargeSquareMatrix_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AbstractLargeSquareMatrix_O low high --> 347 355 
      return ((ISA_ADJUST_STAMP(347) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(355)));
  };
};
// STAMPWTAG_core__General_O
template <typename FP> struct Cast<core::General_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::General_O low high --> 15 2747 
      return ((ISA_ADJUST_STAMP(15) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2747)));
  };
};
// STAMPWTAG_llvmo__ObjectFile_O
template <typename FP> struct Cast<llvmo::ObjectFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ObjectFile_O val -> 399
      return (kindVal == ISA_ADJUST_STAMP(399));
  };
};
// STAMPWTAG_core__Closure_O
template <typename FP> struct Cast<core::Closure_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Closure_O low high --> 1487 1503 
      return ((ISA_ADJUST_STAMP(1487) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1503)));
  };
};
// STAMPWTAG_core__ComplexVector_size_t_O
template <typename FP> struct Cast<core::ComplexVector_size_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_size_t_O val -> 1903
      return (kindVal == ISA_ADJUST_STAMP(1903));
  };
};
// STAMPWTAG_chem__RestraintAngle_O
template <typename FP> struct Cast<chem::RestraintAngle_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintAngle_O val -> 283
      return (kindVal == ISA_ADJUST_STAMP(283));
  };
};
// STAMPWTAG_chem__CandoDatabase_O
template <typename FP> struct Cast<chem::CandoDatabase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CandoDatabase_O val -> 343
      return (kindVal == ISA_ADJUST_STAMP(343));
  };
};
// STAMPWTAG_core__BlockEnvironment_O
template <typename FP> struct Cast<core::BlockEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::BlockEnvironment_O val -> 1263
      return (kindVal == ISA_ADJUST_STAMP(1263));
  };
};
// STAMPWTAG_mpip__Mpi_O
template <typename FP> struct Cast<mpip::Mpi_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range mpip::Mpi_O val -> 1211
      return (kindVal == ISA_ADJUST_STAMP(1211));
  };
};
// STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_
template <typename FP> struct Cast<gctools::GCArraySignedLength_moveable<unsigned long>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArraySignedLength_moveable<unsigned long> val -> 3239
      return (kindVal == ISA_ADJUST_STAMP(3239));
  };
};
// STAMPWTAG_llvmo__ConstantDataArray_O
template <typename FP> struct Cast<llvmo::ConstantDataArray_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantDataArray_O val -> 2443
      return (kindVal == ISA_ADJUST_STAMP(2443));
  };
};
// STAMPWTAG_core__Instance_O
template <typename FP> struct Cast<core::Instance_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Instance_O low high --> 1197 1204 
      if ((ISA_ADJUST_STAMP(1197) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1204))) return true;
      return (dynamic_cast<core::Instance_O*>(client)!=NULL);
  };
};
// STAMPWTAG_chem__MessageReport_O
template <typename FP> struct Cast<chem::MessageReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MessageReport_O val -> 559
      return (kindVal == ISA_ADJUST_STAMP(559));
  };
};
// STAMPWTAG_core__SmallMap_O
template <typename FP> struct Cast<core::SmallMap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SmallMap_O val -> 1195
      return (kindVal == ISA_ADJUST_STAMP(1195));
  };
};
// STAMPWTAG_clasp_ffi__ForeignTypeSpec_O
template <typename FP> struct Cast<clasp_ffi::ForeignTypeSpec_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clasp_ffi::ForeignTypeSpec_O val -> 1191
      return (kindVal == ISA_ADJUST_STAMP(1191));
  };
};
// STAMPWTAG_core__Unused_dummy_O
template <typename FP> struct Cast<core::Unused_dummy_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Unused_dummy_O val -> 11
      return (kindVal == ISA_ADJUST_STAMP(11));
  };
};
// STAMPWTAG_core__PosixTimeDuration_O
template <typename FP> struct Cast<core::PosixTimeDuration_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::PosixTimeDuration_O val -> 1187
      return (kindVal == ISA_ADJUST_STAMP(1187));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>> val -> 2915
      return (kindVal == ISA_ADJUST_STAMP(2915));
  };
};
// STAMPWTAG_chem__EnergyOutOfZPlane_O
template <typename FP> struct Cast<chem::EnergyOutOfZPlane_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyOutOfZPlane_O val -> 87
      return (kindVal == ISA_ADJUST_STAMP(87));
  };
};
// STAMPWTAG_core__HashTableEqual_O
template <typename FP> struct Cast<core::HashTableEqual_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableEqual_O val -> 1331
      return (kindVal == ISA_ADJUST_STAMP(1331));
  };
};
// STAMPWTAG_llvmo__Triple_O
template <typename FP> struct Cast<llvmo::Triple_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Triple_O val -> 2483
      return (kindVal == ISA_ADJUST_STAMP(2483));
  };
};
// STAMPWTAG_core__SimpleMDArray_byte64_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte64_t_O val -> 1731
      return (kindVal == ISA_ADJUST_STAMP(1731));
  };
};
// STAMPWTAG_geom__GeomExposer_O
template <typename FP> struct Cast<geom::GeomExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::GeomExposer_O val -> 1167
      return (kindVal == ISA_ADJUST_STAMP(1167));
  };
};
// STAMPWTAG_core__CoreExposer_O
template <typename FP> struct Cast<core::CoreExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CoreExposer_O val -> 1163
      return (kindVal == ISA_ADJUST_STAMP(1163));
  };
};
// STAMPWTAG_chem__EnergyRigidBodyComponent_O
template <typename FP> struct Cast<chem::EnergyRigidBodyComponent_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyRigidBodyComponent_O low high --> 75 83 
      return ((ISA_ADJUST_STAMP(75) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(83)));
  };
};
// STAMPWTAG_core__BitVectorNs_O
template <typename FP> struct Cast<core::BitVectorNs_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::BitVectorNs_O val -> 1935
      return (kindVal == ISA_ADJUST_STAMP(1935));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>> val -> 2911
      return (kindVal == ISA_ADJUST_STAMP(2911));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::KeyEntry>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::KeyEntry> val -> 2907
      return (kindVal == ISA_ADJUST_STAMP(2907));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::KeywordArgument>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::KeywordArgument> val -> 2903
      return (kindVal == ISA_ADJUST_STAMP(2903));
  };
};
// STAMPWTAG_kinematics__AggregateNode_O
template <typename FP> struct Cast<kinematics::AggregateNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::AggregateNode_O val -> 715
      return (kindVal == ISA_ADJUST_STAMP(715));
  };
};
// STAMPWTAG_llvmo__TargetMachine_O
template <typename FP> struct Cast<llvmo::TargetMachine_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetMachine_O low high --> 2475 2479 
      return ((ISA_ADJUST_STAMP(2475) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2479)));
  };
};
// STAMPWTAG_llvmo__ThreadSafeContext_O
template <typename FP> struct Cast<llvmo::ThreadSafeContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ThreadSafeContext_O val -> 2471
      return (kindVal == ISA_ADJUST_STAMP(2471));
  };
};
// STAMPWTAG_llvmo__Value_O
template <typename FP> struct Cast<llvmo::Value_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Value_O low high --> 2315 2467 
      return ((ISA_ADJUST_STAMP(2315) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2467)));
  };
};
// STAMPWTAG_chem__Bond_O
template <typename FP> struct Cast<chem::Bond_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Bond_O val -> 339
      return (kindVal == ISA_ADJUST_STAMP(339));
  };
};
// STAMPWTAG_chem__SuperposableConformationCollection_O
template <typename FP> struct Cast<chem::SuperposableConformationCollection_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SuperposableConformationCollection_O val -> 635
      return (kindVal == ISA_ADJUST_STAMP(635));
  };
};
// STAMPWTAG_units__UnitsExposer_O
template <typename FP> struct Cast<units::UnitsExposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::UnitsExposer_O val -> 1159
      return (kindVal == ISA_ADJUST_STAMP(1159));
  };
};
// STAMPWTAG_chem__CoordinateSystem_O
template <typename FP> struct Cast<chem::CoordinateSystem_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CoordinateSystem_O val -> 335
      return (kindVal == ISA_ADJUST_STAMP(335));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::OptionalArgument>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::OptionalArgument> val -> 2899
      return (kindVal == ISA_ADJUST_STAMP(2899));
  };
};
// STAMPWTAG_chem__AtomReference_O
template <typename FP> struct Cast<chem::AtomReference_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomReference_O val -> 419
      return (kindVal == ISA_ADJUST_STAMP(419));
  };
};
// STAMPWTAG_clbind__ClassRep_O
template <typename FP> struct Cast<clbind::ClassRep_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clbind::ClassRep_O val -> 1201
      return (kindVal == ISA_ADJUST_STAMP(1201));
  };
};
// STAMPWTAG_llvmo__ConstantInt_O
template <typename FP> struct Cast<llvmo::ConstantInt_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantInt_O val -> 2427
      return (kindVal == ISA_ADJUST_STAMP(2427));
  };
};
// STAMPWTAG_core__SimpleMDArray_int16_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int16_t_O val -> 1683
      return (kindVal == ISA_ADJUST_STAMP(1683));
  };
};
// STAMPWTAG_chem__Logical_O
template <typename FP> struct Cast<chem::Logical_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Logical_O val -> 1027
      return (kindVal == ISA_ADJUST_STAMP(1027));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>> val -> 2895
      return (kindVal == ISA_ADJUST_STAMP(2895));
  };
};
// STAMPWTAG_kinematics__BondId_O
template <typename FP> struct Cast<kinematics::BondId_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BondId_O val -> 331
      return (kindVal == ISA_ADJUST_STAMP(331));
  };
};
// STAMPWTAG_llvmo__PassManagerBase_O
template <typename FP> struct Cast<llvmo::PassManagerBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PassManagerBase_O low high --> 2303 2311 
      return ((ISA_ADJUST_STAMP(2303) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2311)));
  };
};
// STAMPWTAG_core__Exposer_O
template <typename FP> struct Cast<core::Exposer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Exposer_O low high --> 1155 1183 
      return ((ISA_ADJUST_STAMP(1155) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1183)));
  };
};
// STAMPWTAG_llvmo__ConstantStruct_O
template <typename FP> struct Cast<llvmo::ConstantStruct_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ConstantStruct_O val -> 2423
      return (kindVal == ISA_ADJUST_STAMP(2423));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>> val -> 2891
      return (kindVal == ISA_ADJUST_STAMP(2891));
  };
};
// STAMPWTAG_core__DirectoryIterator_O
template <typename FP> struct Cast<core::DirectoryIterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::DirectoryIterator_O val -> 1107
      return (kindVal == ISA_ADJUST_STAMP(1107));
  };
};
// STAMPWTAG_chem__JumpPlug_O
template <typename FP> struct Cast<chem::JumpPlug_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::JumpPlug_O val -> 739
      return (kindVal == ISA_ADJUST_STAMP(739));
  };
};
// STAMPWTAG_llvmo__DISubroutineType_O
template <typename FP> struct Cast<llvmo::DISubroutineType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DISubroutineType_O val -> 2599
      return (kindVal == ISA_ADJUST_STAMP(2599));
  };
};
// STAMPWTAG_kinematics__JumpJoint_O
template <typename FP> struct Cast<kinematics::JumpJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::JumpJoint_O low high --> 207 211 
      return ((ISA_ADJUST_STAMP(207) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(211)));
  };
};
// STAMPWTAG_core__SimpleBitVector_O
template <typename FP> struct Cast<core::SimpleBitVector_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleBitVector_O val -> 2147
      return (kindVal == ISA_ADJUST_STAMP(2147));
  };
};
// STAMPWTAG_core__FunctionContainerEnvironment_O
template <typename FP> struct Cast<core::FunctionContainerEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FunctionContainerEnvironment_O val -> 1243
      return (kindVal == ISA_ADJUST_STAMP(1243));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>> val -> 2887
      return (kindVal == ISA_ADJUST_STAMP(2887));
  };
};
// STAMPWTAG_chem__OligomerPart_Base_O
template <typename FP> struct Cast<chem::OligomerPart_Base_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::OligomerPart_Base_O low high --> 319 327 
      return ((ISA_ADJUST_STAMP(319) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(327)));
  };
};
// STAMPWTAG_chem__CDNode_O
template <typename FP> struct Cast<chem::CDNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CDNode_O val -> 315
      return (kindVal == ISA_ADJUST_STAMP(315));
  };
};
// STAMPWTAG_llvmo__ResumeInst_O
template <typename FP> struct Cast<llvmo::ResumeInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ResumeInst_O val -> 2335
      return (kindVal == ISA_ADJUST_STAMP(2335));
  };
};
// STAMPWTAG_llvmo__Function_O
template <typename FP> struct Cast<llvmo::Function_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Function_O val -> 2411
      return (kindVal == ISA_ADJUST_STAMP(2411));
  };
};
// STAMPWTAG_chem__AddIonOctree_O
template <typename FP> struct Cast<chem::AddIonOctree_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AddIonOctree_O val -> 311
      return (kindVal == ISA_ADJUST_STAMP(311));
  };
};
// STAMPWTAG_chem__StereoInformation_O
template <typename FP> struct Cast<chem::StereoInformation_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StereoInformation_O val -> 307
      return (kindVal == ISA_ADJUST_STAMP(307));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>> val -> 2883
      return (kindVal == ISA_ADJUST_STAMP(2883));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>> val -> 2879
      return (kindVal == ISA_ADJUST_STAMP(2879));
  };
};
// STAMPWTAG_geom__BoundingCuboid_O
template <typename FP> struct Cast<geom::BoundingCuboid_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::BoundingCuboid_O val -> 303
      return (kindVal == ISA_ADJUST_STAMP(303));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyAngle>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyAngle> val -> 2875
      return (kindVal == ISA_ADJUST_STAMP(2875));
  };
};
// STAMPWTAG_chem__AtomIndexer_O
template <typename FP> struct Cast<chem::AtomIndexer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomIndexer_O val -> 299
      return (kindVal == ISA_ADJUST_STAMP(299));
  };
};
// STAMPWTAG_chem__Restraint_O
template <typename FP> struct Cast<chem::Restraint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Restraint_O low high --> 271 295 
      return ((ISA_ADJUST_STAMP(271) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(295)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>> val -> 2871
      return (kindVal == ISA_ADJUST_STAMP(2871));
  };
};
// STAMPWTAG_llvmo__IRBuilder_O
template <typename FP> struct Cast<llvmo::IRBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::IRBuilder_O val -> 2283
      return (kindVal == ISA_ADJUST_STAMP(2283));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyRigidBodyStaple> val -> 2867
      return (kindVal == ISA_ADJUST_STAMP(2867));
  };
};
// STAMPWTAG_llvmo__ClaspJIT_O
template <typename FP> struct Cast<llvmo::ClaspJIT_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ClaspJIT_O val -> 1151
      return (kindVal == ISA_ADJUST_STAMP(1151));
  };
};
// STAMPWTAG_chem__FFParameter_O
template <typename FP> struct Cast<chem::FFParameter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFParameter_O low high --> 243 267 
      return ((ISA_ADJUST_STAMP(243) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(267)));
  };
};
// STAMPWTAG_core__SimpleVector_byte8_t_O
template <typename FP> struct Cast<core::SimpleVector_byte8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_byte8_t_O val -> 2195
      return (kindVal == ISA_ADJUST_STAMP(2195));
  };
};
// STAMPWTAG_llvmo__DILexicalBlockBase_O
template <typename FP> struct Cast<llvmo::DILexicalBlockBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DILexicalBlockBase_O low high --> 2575 2579 
      return ((ISA_ADJUST_STAMP(2575) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2579)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>> val -> 2863
      return (kindVal == ISA_ADJUST_STAMP(2863));
  };
};
// STAMPWTAG_core__ComplexVector_fixnum_O
template <typename FP> struct Cast<core::ComplexVector_fixnum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_fixnum_O val -> 1963
      return (kindVal == ISA_ADJUST_STAMP(1963));
  };
};
// STAMPWTAG_chem__RepresentedEntityNameSet_O
template <typename FP> struct Cast<chem::RepresentedEntityNameSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RepresentedEntityNameSet_O val -> 523
      return (kindVal == ISA_ADJUST_STAMP(523));
  };
};
// STAMPWTAG_chem__MonomerCoordinates_O
template <typename FP> struct Cast<chem::MonomerCoordinates_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::MonomerCoordinates_O val -> 239
      return (kindVal == ISA_ADJUST_STAMP(239));
  };
};
// STAMPWTAG_chem__EnergyFunction_O
template <typename FP> struct Cast<chem::EnergyFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyFunction_O val -> 427
      return (kindVal == ISA_ADJUST_STAMP(427));
  };
};
// STAMPWTAG_llvmo__VAArgInst_O
template <typename FP> struct Cast<llvmo::VAArgInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::VAArgInst_O val -> 2367
      return (kindVal == ISA_ADJUST_STAMP(2367));
  };
};
// STAMPWTAG_chem__Twister_O
template <typename FP> struct Cast<chem::Twister_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Twister_O val -> 235
      return (kindVal == ISA_ADJUST_STAMP(235));
  };
};
// STAMPWTAG_core__MDArray_fixnum_O
template <typename FP> struct Cast<core::MDArray_fixnum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_fixnum_O val -> 1591
      return (kindVal == ISA_ADJUST_STAMP(1591));
  };
};
// STAMPWTAG_core__SharpEqualWrapper_O
template <typename FP> struct Cast<core::SharpEqualWrapper_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SharpEqualWrapper_O val -> 1147
      return (kindVal == ISA_ADJUST_STAMP(1147));
  };
};
// STAMPWTAG_geom__SimpleMDArrayCoordinate_O
template <typename FP> struct Cast<geom::SimpleMDArrayCoordinate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range geom::SimpleMDArrayCoordinate_O val -> 1763
      return (kindVal == ISA_ADJUST_STAMP(1763));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::Vec0<int>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::Vec0<int>> val -> 2859
      return (kindVal == ISA_ADJUST_STAMP(2859));
  };
};
// STAMPWTAG_llvmo__DIFile_O
template <typename FP> struct Cast<llvmo::DIFile_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIFile_O val -> 2563
      return (kindVal == ISA_ADJUST_STAMP(2563));
  };
};
// STAMPWTAG_chem__AntechamberFocusAtomMatch_O
template <typename FP> struct Cast<chem::AntechamberFocusAtomMatch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AntechamberFocusAtomMatch_O val -> 1023
      return (kindVal == ISA_ADJUST_STAMP(1023));
  };
};
// STAMPWTAG_chem__PdbMonomerDatabase_O
template <typename FP> struct Cast<chem::PdbMonomerDatabase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PdbMonomerDatabase_O val -> 231
      return (kindVal == ISA_ADJUST_STAMP(231));
  };
};
// STAMPWTAG_chem__Aggregate_O
template <typename FP> struct Cast<chem::Aggregate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Aggregate_O val -> 139
      return (kindVal == ISA_ADJUST_STAMP(139));
  };
};
// STAMPWTAG_core__SimpleMDArray_int8_t_O
template <typename FP> struct Cast<core::SimpleMDArray_int8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_int8_t_O val -> 1635
      return (kindVal == ISA_ADJUST_STAMP(1635));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>> val -> 2855
      return (kindVal == ISA_ADJUST_STAMP(2855));
  };
};
// STAMPWTAG_chem__SearchStatistics_O
template <typename FP> struct Cast<chem::SearchStatistics_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SearchStatistics_O val -> 227
      return (kindVal == ISA_ADJUST_STAMP(227));
  };
};
// STAMPWTAG_llvmo__EngineBuilder_O
template <typename FP> struct Cast<llvmo::EngineBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::EngineBuilder_O val -> 2299
      return (kindVal == ISA_ADJUST_STAMP(2299));
  };
};
// STAMPWTAG_kinematics__Joint_O
template <typename FP> struct Cast<kinematics::Joint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::Joint_O low high --> 203 223 
      return ((ISA_ADJUST_STAMP(203) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(223)));
  };
};
// STAMPWTAG_llvmo__SectionedAddress_O
template <typename FP> struct Cast<llvmo::SectionedAddress_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::SectionedAddress_O val -> 2295
      return (kindVal == ISA_ADJUST_STAMP(2295));
  };
};
// STAMPWTAG_core__TagbodyEnvironment_O
template <typename FP> struct Cast<core::TagbodyEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::TagbodyEnvironment_O val -> 1259
      return (kindVal == ISA_ADJUST_STAMP(1259));
  };
};
// STAMPWTAG_core__SpecialForm_O
template <typename FP> struct Cast<core::SpecialForm_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SpecialForm_O val -> 1483
      return (kindVal == ISA_ADJUST_STAMP(1483));
  };
};
// STAMPWTAG_chem__EnergyStretch_O
template <typename FP> struct Cast<chem::EnergyStretch_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyStretch_O val -> 71
      return (kindVal == ISA_ADJUST_STAMP(71));
  };
};
// STAMPWTAG_llvmo__FunctionCallee_O
template <typename FP> struct Cast<llvmo::FunctionCallee_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FunctionCallee_O val -> 199
      return (kindVal == ISA_ADJUST_STAMP(199));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_unsigned_char_
template <typename FP> struct Cast<gctools::GCArray_moveable<unsigned char>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<unsigned char> val -> 2851
      return (kindVal == ISA_ADJUST_STAMP(2851));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>> val -> 2847
      return (kindVal == ISA_ADJUST_STAMP(2847));
  };
};
// STAMPWTAG_llvmo__DIBuilder_O
template <typename FP> struct Cast<llvmo::DIBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIBuilder_O val -> 2291
      return (kindVal == ISA_ADJUST_STAMP(2291));
  };
};
// STAMPWTAG_llvmo__APInt_O
template <typename FP> struct Cast<llvmo::APInt_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::APInt_O val -> 2287
      return (kindVal == ISA_ADJUST_STAMP(2287));
  };
};
// STAMPWTAG_core__Symbol_O
template <typename FP> struct Cast<core::Symbol_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Symbol_O low high --> 1139 1143 
      return ((ISA_ADJUST_STAMP(1139) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1143)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>> val -> 2843
      return (kindVal == ISA_ADJUST_STAMP(2843));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyDihedralRestraint> val -> 2839
      return (kindVal == ISA_ADJUST_STAMP(2839));
  };
};
// STAMPWTAG_chem__AtomOrBondMatchNode_O
template <typename FP> struct Cast<chem::AtomOrBondMatchNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomOrBondMatchNode_O low high --> 1003 1031 
      return ((ISA_ADJUST_STAMP(1003) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1031)));
  };
};
// STAMPWTAG_core__MDArray_byte4_t_O
template <typename FP> struct Cast<core::MDArray_byte4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_byte4_t_O val -> 1551
      return (kindVal == ISA_ADJUST_STAMP(1551));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>> val -> 2835
      return (kindVal == ISA_ADJUST_STAMP(2835));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::FFNonbondCrossTerm>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::FFNonbondCrossTerm> val -> 2831
      return (kindVal == ISA_ADJUST_STAMP(2831));
  };
};
// STAMPWTAG_core__Iterator_O
template <typename FP> struct Cast<core::Iterator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Iterator_O low high --> 1103 1135 
      return ((ISA_ADJUST_STAMP(1103) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1135)));
  };
};
// STAMPWTAG_chem__FFItorDb_O
template <typename FP> struct Cast<chem::FFItorDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFItorDb_O val -> 367
      return (kindVal == ISA_ADJUST_STAMP(367));
  };
};
// STAMPWTAG_llvmo__IRBuilderBase_O
template <typename FP> struct Cast<llvmo::IRBuilderBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::IRBuilderBase_O low high --> 2279 2283 
      return ((ISA_ADJUST_STAMP(2279) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2283)));
  };
};
// STAMPWTAG_core__Null_O
template <typename FP> struct Cast<core::Null_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Null_O val -> 1143
      return (kindVal == ISA_ADJUST_STAMP(1143));
  };
};
// STAMPWTAG_chem__RingFinder_O
template <typename FP> struct Cast<chem::RingFinder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RingFinder_O val -> 195
      return (kindVal == ISA_ADJUST_STAMP(195));
  };
};
// STAMPWTAG_core__SingleDispatchMethod_O
template <typename FP> struct Cast<core::SingleDispatchMethod_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SingleDispatchMethod_O val -> 1099
      return (kindVal == ISA_ADJUST_STAMP(1099));
  };
};
// STAMPWTAG_core__CxxObject_O
template <typename FP> struct Cast<core::CxxObject_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CxxObject_O low high --> 35 1095 
      return ((ISA_ADJUST_STAMP(35) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1095)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>> val -> 2827
      return (kindVal == ISA_ADJUST_STAMP(2827));
  };
};
// STAMPWTAG_llvmo__FunctionType_O
template <typename FP> struct Cast<llvmo::FunctionType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::FunctionType_O val -> 2511
      return (kindVal == ISA_ADJUST_STAMP(2511));
  };
};
// STAMPWTAG_clbind__DummyCreator_O
template <typename FP> struct Cast<clbind::DummyCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clbind::DummyCreator_O val -> 1463
      return (kindVal == ISA_ADJUST_STAMP(1463));
  };
};
// STAMPWTAG_llvmo__DIContext_O
template <typename FP> struct Cast<llvmo::DIContext_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIContext_O val -> 2275
      return (kindVal == ISA_ADJUST_STAMP(2275));
  };
};
// STAMPWTAG_llvmo__JITDylib_O
template <typename FP> struct Cast<llvmo::JITDylib_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::JITDylib_O val -> 2271
      return (kindVal == ISA_ADJUST_STAMP(2271));
  };
};
// STAMPWTAG_core__Pointer_O
template <typename FP> struct Cast<core::Pointer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Pointer_O low high --> 27 31 
      return ((ISA_ADJUST_STAMP(27) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(31)));
  };
};
// STAMPWTAG_llvmo__UnreachableInst_O
template <typename FP> struct Cast<llvmo::UnreachableInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::UnreachableInst_O val -> 2331
      return (kindVal == ISA_ADJUST_STAMP(2331));
  };
};
// STAMPWTAG_core__ComplexVector_int64_t_O
template <typename FP> struct Cast<core::ComplexVector_int64_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_int64_t_O val -> 1971
      return (kindVal == ISA_ADJUST_STAMP(1971));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_
template <typename FP> struct Cast<gctools::GCVector_moveable<core::SymbolClassHolderPair>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<core::SymbolClassHolderPair> val -> 2823
      return (kindVal == ISA_ADJUST_STAMP(2823));
  };
};
// STAMPWTAG_chem__FFParameterBaseDb_O
template <typename FP> struct Cast<chem::FFParameterBaseDb_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFParameterBaseDb_O low high --> 363 383 
      return ((ISA_ADJUST_STAMP(363) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(383)));
  };
};
// STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_
template <typename FP> struct Cast<gctools::GCBitUnitArray_moveable<4,0>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCBitUnitArray_moveable<4,0> val -> 2819
      return (kindVal == ISA_ADJUST_STAMP(2819));
  };
};
// STAMPWTAG_core__Float_O
template <typename FP> struct Cast<core::Float_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Float_O low high --> 1383 1399 
      return ((ISA_ADJUST_STAMP(1383) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1399)));
  };
};
// STAMPWTAG_chem__ResidueTest_O
template <typename FP> struct Cast<chem::ResidueTest_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::ResidueTest_O val -> 1019
      return (kindVal == ISA_ADJUST_STAMP(1019));
  };
};
// STAMPWTAG_chem__RestraintDistance_O
template <typename FP> struct Cast<chem::RestraintDistance_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintDistance_O val -> 279
      return (kindVal == ISA_ADJUST_STAMP(279));
  };
};
// STAMPWTAG_chem__SmartsRoot_O
template <typename FP> struct Cast<chem::SmartsRoot_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::SmartsRoot_O val -> 1011
      return (kindVal == ISA_ADJUST_STAMP(1011));
  };
};
// STAMPWTAG_clbind__ConstructorCreator_O
template <typename FP> struct Cast<clbind::ConstructorCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range clbind::ConstructorCreator_O val -> 1459
      return (kindVal == ISA_ADJUST_STAMP(1459));
  };
};
// STAMPWTAG_llvmo__DIDerivedType_O
template <typename FP> struct Cast<llvmo::DIDerivedType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DIDerivedType_O val -> 2595
      return (kindVal == ISA_ADJUST_STAMP(2595));
  };
};
// STAMPWTAG_chem__TwisterDriver_O
template <typename FP> struct Cast<chem::TwisterDriver_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::TwisterDriver_O val -> 191
      return (kindVal == ISA_ADJUST_STAMP(191));
  };
};
// STAMPWTAG_core__TranslationFunctor_O
template <typename FP> struct Cast<core::TranslationFunctor_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::TranslationFunctor_O val -> 1495
      return (kindVal == ISA_ADJUST_STAMP(1495));
  };
};
// STAMPWTAG_llvmo__Code_O
template <typename FP> struct Cast<llvmo::Code_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Code_O val -> 787
      return (kindVal == ISA_ADJUST_STAMP(787));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>> val -> 2815
      return (kindVal == ISA_ADJUST_STAMP(2815));
  };
};
// STAMPWTAG_units__NamedUnit_O
template <typename FP> struct Cast<units::NamedUnit_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range units::NamedUnit_O val -> 775
      return (kindVal == ISA_ADJUST_STAMP(775));
  };
};
// STAMPWTAG_core__MDArray_double_O
template <typename FP> struct Cast<core::MDArray_double_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_double_O val -> 2035
      return (kindVal == ISA_ADJUST_STAMP(2035));
  };
};
// STAMPWTAG_llvmo__StoreInst_O
template <typename FP> struct Cast<llvmo::StoreInst_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::StoreInst_O val -> 2327
      return (kindVal == ISA_ADJUST_STAMP(2327));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>> val -> 2811
      return (kindVal == ISA_ADJUST_STAMP(2811));
  };
};
// STAMPWTAG_core__CodeEntryPoint_O
template <typename FP> struct Cast<core::CodeEntryPoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CodeEntryPoint_O low high --> 1303 1311 
      return ((ISA_ADJUST_STAMP(1303) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1311)));
  };
};
// STAMPWTAG_core__SimpleMDArray_byte8_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte8_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte8_t_O val -> 1787
      return (kindVal == ISA_ADJUST_STAMP(1787));
  };
};
// STAMPWTAG_chem__VirtualSphere_O
template <typename FP> struct Cast<chem::VirtualSphere_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::VirtualSphere_O val -> 187
      return (kindVal == ISA_ADJUST_STAMP(187));
  };
};
// STAMPWTAG_core__Rational_O
template <typename FP> struct Cast<core::Rational_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Rational_O low high --> 1363 1379 
      return ((ISA_ADJUST_STAMP(1363) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1379)));
  };
};
// STAMPWTAG_adapt__IndexedObjectBag_O
template <typename FP> struct Cast<adapt::IndexedObjectBag_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range adapt::IndexedObjectBag_O val -> 183
      return (kindVal == ISA_ADJUST_STAMP(183));
  };
};
// STAMPWTAG_chem__CipPrioritizer_O
template <typename FP> struct Cast<chem::CipPrioritizer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::CipPrioritizer_O val -> 179
      return (kindVal == ISA_ADJUST_STAMP(179));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_unsigned_long_
template <typename FP> struct Cast<gctools::GCVector_moveable<unsigned long>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<unsigned long> val -> 2807
      return (kindVal == ISA_ADJUST_STAMP(2807));
  };
};
// STAMPWTAG_chem__AtomTable_O
template <typename FP> struct Cast<chem::AtomTable_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::AtomTable_O val -> 175
      return (kindVal == ISA_ADJUST_STAMP(175));
  };
};
// STAMPWTAG_core__Real_O
template <typename FP> struct Cast<core::Real_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Real_O low high --> 1359 1399 
      return ((ISA_ADJUST_STAMP(1359) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1399)));
  };
};
// STAMPWTAG_core__FuncallableInstanceCreator_O
template <typename FP> struct Cast<core::FuncallableInstanceCreator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FuncallableInstanceCreator_O val -> 1455
      return (kindVal == ISA_ADJUST_STAMP(1455));
  };
};
// STAMPWTAG_chem__Topology_O
template <typename FP> struct Cast<chem::Topology_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Topology_O val -> 171
      return (kindVal == ISA_ADJUST_STAMP(171));
  };
};
// STAMPWTAG_core__StringOutputStream_O
template <typename FP> struct Cast<core::StringOutputStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::StringOutputStream_O val -> 2695
      return (kindVal == ISA_ADJUST_STAMP(2695));
  };
};
// STAMPWTAG_chem__EntityNameSetWithCap_O
template <typename FP> struct Cast<chem::EntityNameSetWithCap_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EntityNameSetWithCap_O low high --> 507 515 
      return ((ISA_ADJUST_STAMP(507) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(515)));
  };
};
// STAMPWTAG_chem__BondMatcher_O
template <typename FP> struct Cast<chem::BondMatcher_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::BondMatcher_O low high --> 987 995 
      return ((ISA_ADJUST_STAMP(987) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(995)));
  };
};
// STAMPWTAG_llvmo__AttributeSet_O
template <typename FP> struct Cast<llvmo::AttributeSet_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::AttributeSet_O val -> 23
      return (kindVal == ISA_ADJUST_STAMP(23));
  };
};
// STAMPWTAG_llvmo__MDBuilder_O
template <typename FP> struct Cast<llvmo::MDBuilder_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MDBuilder_O val -> 167
      return (kindVal == ISA_ADJUST_STAMP(167));
  };
};
// STAMPWTAG_llvmo__DISubprogram_O
template <typename FP> struct Cast<llvmo::DISubprogram_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DISubprogram_O val -> 2571
      return (kindVal == ISA_ADJUST_STAMP(2571));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>> val -> 2803
      return (kindVal == ISA_ADJUST_STAMP(2803));
  };
};
// STAMPWTAG_chem__TrajectoryFrame_O
template <typename FP> struct Cast<chem::TrajectoryFrame_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::TrajectoryFrame_O val -> 163
      return (kindVal == ISA_ADJUST_STAMP(163));
  };
};
// STAMPWTAG_core__Creator_O
template <typename FP> struct Cast<core::Creator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Creator_O low high --> 1451 1479 
      return ((ISA_ADJUST_STAMP(1451) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1479)));
  };
};
// STAMPWTAG_llvmo__ArrayType_O
template <typename FP> struct Cast<llvmo::ArrayType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ArrayType_O val -> 2507
      return (kindVal == ISA_ADJUST_STAMP(2507));
  };
};
// STAMPWTAG_chem__PdbWriter_O
template <typename FP> struct Cast<chem::PdbWriter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::PdbWriter_O val -> 159
      return (kindVal == ISA_ADJUST_STAMP(159));
  };
};
// STAMPWTAG_chem__Stereoisomer_O
template <typename FP> struct Cast<chem::Stereoisomer_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Stereoisomer_O val -> 499
      return (kindVal == ISA_ADJUST_STAMP(499));
  };
};
// STAMPWTAG_llvmo__MCSubtargetInfo_O
template <typename FP> struct Cast<llvmo::MCSubtargetInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::MCSubtargetInfo_O low high --> 2263 2267 
      return ((ISA_ADJUST_STAMP(2263) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2267)));
  };
};
// STAMPWTAG_core__SimpleMDArray_byte2_t_O
template <typename FP> struct Cast<core::SimpleMDArray_byte2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleMDArray_byte2_t_O val -> 1707
      return (kindVal == ISA_ADJUST_STAMP(1707));
  };
};
// STAMPWTAG_llvmo__BlockAddress_O
template <typename FP> struct Cast<llvmo::BlockAddress_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::BlockAddress_O val -> 2419
      return (kindVal == ISA_ADJUST_STAMP(2419));
  };
};
// STAMPWTAG_llvmo__DICompositeType_O
template <typename FP> struct Cast<llvmo::DICompositeType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::DICompositeType_O val -> 2591
      return (kindVal == ISA_ADJUST_STAMP(2591));
  };
};
// STAMPWTAG_gctools__GCArray_moveable_short_
template <typename FP> struct Cast<gctools::GCArray_moveable<short>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCArray_moveable<short> val -> 2799
      return (kindVal == ISA_ADJUST_STAMP(2799));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>> val -> 2795
      return (kindVal == ISA_ADJUST_STAMP(2795));
  };
};
// STAMPWTAG_chem__Matter_O
template <typename FP> struct Cast<chem::Matter_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Matter_O low high --> 135 155 
      return ((ISA_ADJUST_STAMP(135) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(155)));
  };
};
// STAMPWTAG_core__HashTableEq_O
template <typename FP> struct Cast<core::HashTableEq_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableEq_O val -> 1327
      return (kindVal == ISA_ADJUST_STAMP(1327));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>> val -> 2791
      return (kindVal == ISA_ADJUST_STAMP(2791));
  };
};
// STAMPWTAG_chem__RestraintChiral_O
template <typename FP> struct Cast<chem::RestraintChiral_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestraintChiral_O val -> 275
      return (kindVal == ISA_ADJUST_STAMP(275));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::EnergyChiralRestraint>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::EnergyChiralRestraint> val -> 2787
      return (kindVal == ISA_ADJUST_STAMP(2787));
  };
};
// STAMPWTAG_chem__EnergyComponent_O
template <typename FP> struct Cast<chem::EnergyComponent_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::EnergyComponent_O low high --> 67 131 
      return ((ISA_ADJUST_STAMP(67) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(131)));
  };
};
// STAMPWTAG_kinematics__DelayedBondedJointTemplate_O
template <typename FP> struct Cast<kinematics::DelayedBondedJointTemplate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::DelayedBondedJointTemplate_O val -> 619
      return (kindVal == ISA_ADJUST_STAMP(619));
  };
};
// STAMPWTAG_core__HashTableEqualp_O
template <typename FP> struct Cast<core::HashTableEqualp_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::HashTableEqualp_O val -> 1323
      return (kindVal == ISA_ADJUST_STAMP(1323));
  };
};
// STAMPWTAG_core__LambdaListHandler_O
template <typename FP> struct Cast<core::LambdaListHandler_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LambdaListHandler_O val -> 19
      return (kindVal == ISA_ADJUST_STAMP(19));
  };
};
// STAMPWTAG_kinematics__RotamerSetBase_O
template <typename FP> struct Cast<kinematics::RotamerSetBase_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RotamerSetBase_O low high --> 55 63 
      return ((ISA_ADJUST_STAMP(55) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(63)));
  };
};
// STAMPWTAG_core__SymbolMacroletEnvironment_O
template <typename FP> struct Cast<core::SymbolMacroletEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SymbolMacroletEnvironment_O val -> 1239
      return (kindVal == ISA_ADJUST_STAMP(1239));
  };
};
// STAMPWTAG_chem__RestrainedExoCyclicAtom_O
template <typename FP> struct Cast<chem::RestrainedExoCyclicAtom_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RestrainedExoCyclicAtom_O val -> 931
      return (kindVal == ISA_ADJUST_STAMP(931));
  };
};
// STAMPWTAG_llvmo__ImmutablePass_O
template <typename FP> struct Cast<llvmo::ImmutablePass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::ImmutablePass_O low high --> 2251 2255 
      return ((ISA_ADJUST_STAMP(2251) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2255)));
  };
};
// STAMPWTAG_core__FuncallableInstance_O
template <typename FP> struct Cast<core::FuncallableInstance_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::FuncallableInstance_O val -> 1445
      return (kindVal == ISA_ADJUST_STAMP(1445));
  };
};
// STAMPWTAG_chem__RingCoupling_O
template <typename FP> struct Cast<chem::RingCoupling_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::RingCoupling_O val -> 647
      return (kindVal == ISA_ADJUST_STAMP(647));
  };
};
// STAMPWTAG_kinematics__FoldTree_O
template <typename FP> struct Cast<kinematics::FoldTree_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::FoldTree_O val -> 51
      return (kindVal == ISA_ADJUST_STAMP(51));
  };
};
// STAMPWTAG_chem__NumericalFunction_O
template <typename FP> struct Cast<chem::NumericalFunction_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::NumericalFunction_O val -> 47
      return (kindVal == ISA_ADJUST_STAMP(47));
  };
};
// STAMPWTAG_core__SynonymStream_O
template <typename FP> struct Cast<core::SynonymStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SynonymStream_O val -> 2687
      return (kindVal == ISA_ADJUST_STAMP(2687));
  };
};
// STAMPWTAG_core__MDArray_int2_t_O
template <typename FP> struct Cast<core::MDArray_int2_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::MDArray_int2_t_O val -> 1583
      return (kindVal == ISA_ADJUST_STAMP(1583));
  };
};
// STAMPWTAG_kinematics__ChiList_O
template <typename FP> struct Cast<kinematics::ChiList_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::ChiList_O val -> 43
      return (kindVal == ISA_ADJUST_STAMP(43));
  };
};
// STAMPWTAG_core__SimpleVector_int16_t_O
template <typename FP> struct Cast<core::SimpleVector_int16_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::SimpleVector_int16_t_O val -> 2131
      return (kindVal == ISA_ADJUST_STAMP(2131));
  };
};
// STAMPWTAG_llvmo__Pass_O
template <typename FP> struct Cast<llvmo::Pass_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::Pass_O low high --> 2243 2259 
      return ((ISA_ADJUST_STAMP(2243) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2259)));
  };
};
// STAMPWTAG_chem__StepReport_O
template <typename FP> struct Cast<chem::StepReport_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::StepReport_O val -> 555
      return (kindVal == ISA_ADJUST_STAMP(555));
  };
};
// STAMPWTAG_kinematics__BondedJointTemplate_O
template <typename FP> struct Cast<kinematics::BondedJointTemplate_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::BondedJointTemplate_O low high --> 615 623 
      return ((ISA_ADJUST_STAMP(615) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(623)));
  };
};
// STAMPWTAG_core__Lisp_O
template <typename FP> struct Cast<core::Lisp_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Lisp_O val -> 2759
      return (kindVal == ISA_ADJUST_STAMP(2759));
  };
};
// STAMPWTAG_chem__FFVdw_O
template <typename FP> struct Cast<chem::FFVdw_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::FFVdw_O val -> 247
      return (kindVal == ISA_ADJUST_STAMP(247));
  };
};
// STAMPWTAG_core__ComplexVector_byte4_t_O
template <typename FP> struct Cast<core::ComplexVector_byte4_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte4_t_O val -> 1855
      return (kindVal == ISA_ADJUST_STAMP(1855));
  };
};
// STAMPWTAG_asttooling__SourceLocation_O
template <typename FP> struct Cast<asttooling::SourceLocation_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range asttooling::SourceLocation_O val -> 39
      return (kindVal == ISA_ADJUST_STAMP(39));
  };
};
// STAMPWTAG_core__CatchEnvironment_O
template <typename FP> struct Cast<core::CatchEnvironment_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::CatchEnvironment_O val -> 1235
      return (kindVal == ISA_ADJUST_STAMP(1235));
  };
};
// STAMPWTAG_kinematics__RingClosingMonomerNode_O
template <typename FP> struct Cast<kinematics::RingClosingMonomerNode_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RingClosingMonomerNode_O val -> 727
      return (kindVal == ISA_ADJUST_STAMP(727));
  };
};
// STAMPWTAG_llvmo__TargetSubtargetInfo_O
template <typename FP> struct Cast<llvmo::TargetSubtargetInfo_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::TargetSubtargetInfo_O val -> 2267
      return (kindVal == ISA_ADJUST_STAMP(2267));
  };
};
// STAMPWTAG_chem__Root_O
template <typename FP> struct Cast<chem::Root_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range chem::Root_O low high --> 1007 1015 
      return ((ISA_ADJUST_STAMP(1007) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(1015)));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>> val -> 2783
      return (kindVal == ISA_ADJUST_STAMP(2783));
  };
};
// STAMPWTAG_core__Bignum_O
template <typename FP> struct Cast<core::Bignum_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::Bignum_O val -> 1375
      return (kindVal == ISA_ADJUST_STAMP(1375));
  };
};
// STAMPWTAG_kinematics__RootBondedJoint_O
template <typename FP> struct Cast<kinematics::RootBondedJoint_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range kinematics::RootBondedJoint_O val -> 219
      return (kindVal == ISA_ADJUST_STAMP(219));
  };
};
// STAMPWTAG_core__LocalEntryPointGenerator_O
template <typename FP> struct Cast<core::LocalEntryPointGenerator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::LocalEntryPointGenerator_O val -> 1299
      return (kindVal == ISA_ADJUST_STAMP(1299));
  };
};
// STAMPWTAG_core__GlobalEntryPointGenerator_O
template <typename FP> struct Cast<core::GlobalEntryPointGenerator_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::GlobalEntryPointGenerator_O val -> 1295
      return (kindVal == ISA_ADJUST_STAMP(1295));
  };
};
// STAMPWTAG_core__ComplexVector_byte32_t_O
template <typename FP> struct Cast<core::ComplexVector_byte32_t_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::ComplexVector_byte32_t_O val -> 1927
      return (kindVal == ISA_ADJUST_STAMP(1927));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_
template <typename FP> struct Cast<gctools::GCVector_moveable<chem::AtomicInfo>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<chem::AtomicInfo> val -> 2779
      return (kindVal == ISA_ADJUST_STAMP(2779));
  };
};
// STAMPWTAG_llvmo__GlobalValue_O
template <typename FP> struct Cast<llvmo::GlobalValue_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::GlobalValue_O low high --> 2407 2415 
      return ((ISA_ADJUST_STAMP(2407) <= kindVal) && (kindVal <= ISA_ADJUST_STAMP(2415)));
  };
};
// STAMPWTAG_llvmo__PointerType_O
template <typename FP> struct Cast<llvmo::PointerType_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range llvmo::PointerType_O val -> 2503
      return (kindVal == ISA_ADJUST_STAMP(2503));
  };
};
// STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__
template <typename FP> struct Cast<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>> val -> 2775
      return (kindVal == ISA_ADJUST_STAMP(2775));
  };
};
// STAMPWTAG_core__TwoWayStream_O
template <typename FP> struct Cast<core::TwoWayStream_O*,FP> {
  inline static bool isA(FP client) {
      gctools::Header_s* header = reinterpret_cast<gctools::Header_s*>(GeneralPtrToHeaderPtr(client));
      int kindVal = header->shifted_stamp();
    // IsA-stamp-range core::TwoWayStream_O val -> 2683
      return (kindVal == ISA_ADJUST_STAMP(2683));
  };
};
#endif // defined(GC_DYNAMIC_CAST)
#if defined(GC_TYPEQ)
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyAngle_O,TYPEQ_ADJUST_STAMP(131));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte2_t_O,TYPEQ_ADJUST_STAMP(2203));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_fixnum_O,TYPEQ_ADJUST_STAMP(1771));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int32_t_O,TYPEQ_ADJUST_STAMP(1667));
      ADD_RANGE_TYPEQ_TEST(core::Integer_O,core::Fixnum_dummy_O,TYPEQ_ADJUST_STAMP(1371),TYPEQ_ADJUST_STAMP(1379));
      ADD_SINGLE_TYPEQ_TEST(chem::OutPlug_O,TYPEQ_ADJUST_STAMP(751));
      ADD_SINGLE_TYPEQ_TEST(mp::Process_O,TYPEQ_ADJUST_STAMP(1095));
      ADD_RANGE_TYPEQ_TEST(core::LightUserData_O,core::UserData_O,TYPEQ_ADJUST_STAMP(2743),TYPEQ_ADJUST_STAMP(2747));
      ADD_SINGLE_TYPEQ_TEST(core::MDArrayT_O,TYPEQ_ADJUST_STAMP(1623));
      ADD_SINGLE_TYPEQ_TEST(core::DirectoryEntry_O,TYPEQ_ADJUST_STAMP(2739));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Linker_O,TYPEQ_ADJUST_STAMP(2643));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomIdToAtomMap_O,TYPEQ_ADJUST_STAMP(1091));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_float_O,TYPEQ_ADJUST_STAMP(1559));
      ADD_RANGE_TYPEQ_TEST(chem::IterateMatter_O,chem::IterateAtoms_O,TYPEQ_ADJUST_STAMP(1123),TYPEQ_ADJUST_STAMP(1135));
      ADD_SINGLE_TYPEQ_TEST(chem::FFTypesDb_O,TYPEQ_ADJUST_STAMP(391));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_float_O,TYPEQ_ADJUST_STAMP(1879));
      ADD_SINGLE_TYPEQ_TEST(core::StandardClassCreator_O,TYPEQ_ADJUST_STAMP(1479));
      ADD_SINGLE_TYPEQ_TEST(chem::Alias_O,TYPEQ_ADJUST_STAMP(1087));
      ADD_SINGLE_TYPEQ_TEST(chem::MapOfMonomerNamesToAtomIndexers_O,TYPEQ_ADJUST_STAMP(1083));
      ADD_SINGLE_TYPEQ_TEST(adapt::SymbolSet_O,TYPEQ_ADJUST_STAMP(1079));
      ADD_SINGLE_TYPEQ_TEST(chem::Minimizer_O,TYPEQ_ADJUST_STAMP(1075));
      ADD_SINGLE_TYPEQ_TEST(chem::SpecificContext_O,TYPEQ_ADJUST_STAMP(1071));
      ADD_SINGLE_TYPEQ_TEST(chem::Molecule_O,TYPEQ_ADJUST_STAMP(155));
      ADD_SINGLE_TYPEQ_TEST(core::InvocationHistoryFrameIterator_O,TYPEQ_ADJUST_STAMP(2735));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_size_t_O,TYPEQ_ADJUST_STAMP(2055));
      ADD_SINGLE_TYPEQ_TEST(kinematics::CheckpointOutPlugJoint_O,TYPEQ_ADJUST_STAMP(867));
      ADD_SINGLE_TYPEQ_TEST(chem::Dimacs_O,TYPEQ_ADJUST_STAMP(1067));
      ADD_RANGE_TYPEQ_TEST(llvmo::DIScope_O,llvmo::DIBasicType_O,TYPEQ_ADJUST_STAMP(2559),TYPEQ_ADJUST_STAMP(2603));
      ADD_SINGLE_TYPEQ_TEST(chem::FullLargeSquareMatrix_O,TYPEQ_ADJUST_STAMP(355));
      ADD_SINGLE_TYPEQ_TEST(core::FileStatus_O,TYPEQ_ADJUST_STAMP(2731));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergySketchStretch_O,TYPEQ_ADJUST_STAMP(127));
      ADD_SINGLE_TYPEQ_TEST(llvmo::IndirectBrInst_O,TYPEQ_ADJUST_STAMP(2399));
      ADD_SINGLE_TYPEQ_TEST(chem::OligomerPart_Monomer_O,TYPEQ_ADJUST_STAMP(327));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantArray_O,TYPEQ_ADJUST_STAMP(2455));
      ADD_SINGLE_TYPEQ_TEST(chem::ElementsInfo_O,TYPEQ_ADJUST_STAMP(1063));
      ADD_SINGLE_TYPEQ_TEST(llvmo::PHINode_O,TYPEQ_ADJUST_STAMP(2395));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyFixedNonbondRestraint_O,TYPEQ_ADJUST_STAMP(123));
      ADD_SINGLE_TYPEQ_TEST(core::Package_O,TYPEQ_ADJUST_STAMP(2727));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomTest_O,TYPEQ_ADJUST_STAMP(1031));
      ADD_RANGE_TYPEQ_TEST(core::Stream_O,core::BroadcastStream_O,TYPEQ_ADJUST_STAMP(2675),TYPEQ_ADJUST_STAMP(2723));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyAnchorRestraint_O,TYPEQ_ADJUST_STAMP(119));
      ADD_SINGLE_TYPEQ_TEST(chem::FFAngle_O,TYPEQ_ADJUST_STAMP(267));
      ADD_SINGLE_TYPEQ_TEST(core::ShortFloat_O,TYPEQ_ADJUST_STAMP(1399));
      ADD_SINGLE_TYPEQ_TEST(llvmo::MDString_O,TYPEQ_ADJUST_STAMP(2615));
      ADD_RANGE_TYPEQ_TEST(core::AbstractSimpleVector_O,core::SimpleVector_int32_t_O,TYPEQ_ADJUST_STAMP(2039),TYPEQ_ADJUST_STAMP(2211));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte16_t_O,TYPEQ_ADJUST_STAMP(1715));
      ADD_RANGE_TYPEQ_TEST(core::Pathname_O,core::LogicalPathname_O,TYPEQ_ADJUST_STAMP(2667),TYPEQ_ADJUST_STAMP(2671));
      ADD_SINGLE_TYPEQ_TEST(core::Str8Ns_O,TYPEQ_ADJUST_STAMP(1947));
      ADD_SINGLE_TYPEQ_TEST(llvmo::UndefValue_O,TYPEQ_ADJUST_STAMP(2451));
      ADD_RANGE_TYPEQ_TEST(chem::ChemInfoNode_O,chem::AfterMatchBondToAtomTest_O,TYPEQ_ADJUST_STAMP(983),TYPEQ_ADJUST_STAMP(1059));
      ADD_SINGLE_TYPEQ_TEST(core::Path_O,TYPEQ_ADJUST_STAMP(2663));
      ADD_SINGLE_TYPEQ_TEST(chem::BoundingBox_O,TYPEQ_ADJUST_STAMP(979));
      ADD_SINGLE_TYPEQ_TEST(chem::StructureComparer_O,TYPEQ_ADJUST_STAMP(975));
      ADD_SINGLE_TYPEQ_TEST(core::IOStreamStream_O,TYPEQ_ADJUST_STAMP(2719));
      ADD_RANGE_TYPEQ_TEST(core::Scope_O,core::FileScope_O,TYPEQ_ADJUST_STAMP(2655),TYPEQ_ADJUST_STAMP(2659));
      ADD_SINGLE_TYPEQ_TEST(chem::BondLogical_O,TYPEQ_ADJUST_STAMP(995));
      ADD_SINGLE_TYPEQ_TEST(chem::MoleculeGraph_O,TYPEQ_ADJUST_STAMP(971));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_double_O,TYPEQ_ADJUST_STAMP(1807));
      ADD_SINGLE_TYPEQ_TEST(chem::Monomer_O,TYPEQ_ADJUST_STAMP(535));
      ADD_SINGLE_TYPEQ_TEST(kinematics::Conformation_O,TYPEQ_ADJUST_STAMP(967));
      ADD_SINGLE_TYPEQ_TEST(chem::ConstitutionAtoms_O,TYPEQ_ADJUST_STAMP(963));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArrayBit_O,TYPEQ_ADJUST_STAMP(1779));
      ADD_SINGLE_TYPEQ_TEST(chem::Branch_O,TYPEQ_ADJUST_STAMP(1051));
      ADD_SINGLE_TYPEQ_TEST(kinematics::ChiDihedral_O,TYPEQ_ADJUST_STAMP(959));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int2_t_O,TYPEQ_ADJUST_STAMP(1871));
      ADD_SINGLE_TYPEQ_TEST(chem::ConstitutionBond_O,TYPEQ_ADJUST_STAMP(955));
      ADD_SINGLE_TYPEQ_TEST(chem::CDBond_O,TYPEQ_ADJUST_STAMP(951));
      ADD_SINGLE_TYPEQ_TEST(chem::CombinedForceField_O,TYPEQ_ADJUST_STAMP(947));
      ADD_RANGE_TYPEQ_TEST(mp::Mutex_O,mp::RecursiveMutex_O,TYPEQ_ADJUST_STAMP(939),TYPEQ_ADJUST_STAMP(943));
      ADD_SINGLE_TYPEQ_TEST(core::RecursiveDirectoryIterator_O,TYPEQ_ADJUST_STAMP(1119));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintDihedral_O,TYPEQ_ADJUST_STAMP(295));
      ADD_SINGLE_TYPEQ_TEST(chem::AntechamberRoot_O,TYPEQ_ADJUST_STAMP(1015));
      ADD_SINGLE_TYPEQ_TEST(core::StringInputStream_O,TYPEQ_ADJUST_STAMP(2699));
      ADD_SINGLE_TYPEQ_TEST(core::FunctionFrame_O,TYPEQ_ADJUST_STAMP(1283));
      ADD_SINGLE_TYPEQ_TEST(chem::IterateAtoms_O,TYPEQ_ADJUST_STAMP(1135));
      ADD_SINGLE_TYPEQ_TEST(core::LongFloat_O,TYPEQ_ADJUST_STAMP(1395));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int4_t_O,TYPEQ_ADJUST_STAMP(1895));
      ADD_SINGLE_TYPEQ_TEST(chem::FFPtorDb_O,TYPEQ_ADJUST_STAMP(383));
      ADD_RANGE_TYPEQ_TEST(chem::ComplexRestraint_O,chem::RestrainedPiBond_O,TYPEQ_ADJUST_STAMP(927),TYPEQ_ADJUST_STAMP(935));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LibraryFile_O,TYPEQ_ADJUST_STAMP(403));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_T_O,TYPEQ_ADJUST_STAMP(1823));
      ADD_RANGE_TYPEQ_TEST(chem::RootMatchNode_O,chem::AfterMatchBondToAtomTest_O,TYPEQ_ADJUST_STAMP(1055),TYPEQ_ADJUST_STAMP(1059));
      ADD_SINGLE_TYPEQ_TEST(core::ValueFrame_O,TYPEQ_ADJUST_STAMP(1279));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int4_t_O,TYPEQ_ADJUST_STAMP(1755));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int32_t_O,TYPEQ_ADJUST_STAMP(2211));
      ADD_SINGLE_TYPEQ_TEST(core::Complex_O,TYPEQ_ADJUST_STAMP(1403));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationCollectionEntry_O,TYPEQ_ADJUST_STAMP(923));
      ADD_SINGLE_TYPEQ_TEST(chem::RingClosingMate_O,TYPEQ_ADJUST_STAMP(515));
      ADD_SINGLE_TYPEQ_TEST(geom::OMatrix_O,TYPEQ_ADJUST_STAMP(919));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ValueAsMetadata_O,TYPEQ_ADJUST_STAMP(2611));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantExpr_O,TYPEQ_ADJUST_STAMP(2447));
      ADD_SINGLE_TYPEQ_TEST(chem::FFNonbondDb_O,TYPEQ_ADJUST_STAMP(379));
      ADD_SINGLE_TYPEQ_TEST(llvmo::StructType_O,TYPEQ_ADJUST_STAMP(2523));
      ADD_RANGE_TYPEQ_TEST(chem::EnergyNonbond_O,chem::EnergyPeriodicBoundaryConditionsNonbond_O,TYPEQ_ADJUST_STAMP(111),TYPEQ_ADJUST_STAMP(115));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int16_t_O,TYPEQ_ADJUST_STAMP(1887));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_float_O,TYPEQ_ADJUST_STAMP(1675));
      ADD_SINGLE_TYPEQ_TEST(chem::Residue_O,TYPEQ_ADJUST_STAMP(151));
      ADD_RANGE_TYPEQ_TEST(chem::CalculatePosition_O,chem::CalculatePositionAlongBond_O,TYPEQ_ADJUST_STAMP(903),TYPEQ_ADJUST_STAMP(915));
      ADD_SINGLE_TYPEQ_TEST(chem::SuperposeSelectedAtoms_O,TYPEQ_ADJUST_STAMP(699));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Target_O,TYPEQ_ADJUST_STAMP(2639));
      ADD_RANGE_TYPEQ_TEST(kinematics::MonomerNode_O,kinematics::RingClosingMonomerNode_O,TYPEQ_ADJUST_STAMP(723),TYPEQ_ADJUST_STAMP(727));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte32_t_O,TYPEQ_ADJUST_STAMP(2047));
      ADD_SINGLE_TYPEQ_TEST(core::SingleDispatchGenericFunctionClosure_O,TYPEQ_ADJUST_STAMP(1503));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Module_O,TYPEQ_ADJUST_STAMP(2635));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIExpression_O,TYPEQ_ADJUST_STAMP(2607));
      ADD_SINGLE_TYPEQ_TEST(core::SingleFloat_dummy_O,TYPEQ_ADJUST_STAMP(1391));
      ADD_SINGLE_TYPEQ_TEST(core::ValueEnvironment_O,TYPEQ_ADJUST_STAMP(1271));
      ADD_SINGLE_TYPEQ_TEST(chem::Trajectory_O,TYPEQ_ADJUST_STAMP(899));
      ADD_SINGLE_TYPEQ_TEST(llvmo::InvokeInst_O,TYPEQ_ADJUST_STAMP(2355));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintFixedNonbond_O,TYPEQ_ADJUST_STAMP(291));
      ADD_SINGLE_TYPEQ_TEST(chem::FFNonbond_O,TYPEQ_ADJUST_STAMP(263));
      ADD_RANGE_TYPEQ_TEST(core::StrNs_O,core::StrWNs_O,TYPEQ_ADJUST_STAMP(1939),TYPEQ_ADJUST_STAMP(1955));
      ADD_SINGLE_TYPEQ_TEST(chem::VirtualAtom_O,TYPEQ_ADJUST_STAMP(147));
      ADD_SINGLE_TYPEQ_TEST(chem::OriginPlug_O,TYPEQ_ADJUST_STAMP(755));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FunctionPassManager_O,TYPEQ_ADJUST_STAMP(2311));
      ADD_SINGLE_TYPEQ_TEST(core::DoubleFloat_O,TYPEQ_ADJUST_STAMP(1387));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationExplorerEntryStage_O,TYPEQ_ADJUST_STAMP(895));
      ADD_SINGLE_TYPEQ_TEST(chem::FrameRecognizer_O,TYPEQ_ADJUST_STAMP(891));
      ADD_SINGLE_TYPEQ_TEST(chem::CalculatePositionAlongBond_O,TYPEQ_ADJUST_STAMP(915));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int32_t_O,TYPEQ_ADJUST_STAMP(1543));
      ADD_SINGLE_TYPEQ_TEST(adapt::SymbolList_O,TYPEQ_ADJUST_STAMP(887));
      ADD_SINGLE_TYPEQ_TEST(chem::CalculatePositionUsingInternals_O,TYPEQ_ADJUST_STAMP(911));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyPeriodicBoundaryConditionsNonbond_O,TYPEQ_ADJUST_STAMP(115));
      ADD_SINGLE_TYPEQ_TEST(asttooling::AsttoolingExposer_O,TYPEQ_ADJUST_STAMP(1183));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyDihedral_O,TYPEQ_ADJUST_STAMP(107));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_size_t_O,TYPEQ_ADJUST_STAMP(1691));
      ADD_SINGLE_TYPEQ_TEST(core::SmallMultimap_O,TYPEQ_ADJUST_STAMP(2651));
      ADD_SINGLE_TYPEQ_TEST(core::Fixnum_dummy_O,TYPEQ_ADJUST_STAMP(1379));
      ADD_SINGLE_TYPEQ_TEST(chem::ImproperTorsion_O,TYPEQ_ADJUST_STAMP(883));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrixAngleInternal_O,TYPEQ_ADJUST_STAMP(583));
      ADD_SINGLE_TYPEQ_TEST(chem::Rotamer_O,TYPEQ_ADJUST_STAMP(879));
      ADD_SINGLE_TYPEQ_TEST(core::WeakKeyHashTable_O,TYPEQ_ADJUST_STAMP(1343));
      ADD_SINGLE_TYPEQ_TEST(core::Rack_O,TYPEQ_ADJUST_STAMP(2647));
      ADD_SINGLE_TYPEQ_TEST(core::MDArrayBaseChar_O,TYPEQ_ADJUST_STAMP(1599));
      ADD_SINGLE_TYPEQ_TEST(core::UserData_O,TYPEQ_ADJUST_STAMP(2747));
      ADD_RANGE_TYPEQ_TEST(core::ExternalObject_O,llvmo::Linker_O,TYPEQ_ADJUST_STAMP(2239),TYPEQ_ADJUST_STAMP(2643));
      ADD_RANGE_TYPEQ_TEST(llvmo::DINode_O,llvmo::DIBasicType_O,TYPEQ_ADJUST_STAMP(2547),TYPEQ_ADJUST_STAMP(2603));
      ADD_SINGLE_TYPEQ_TEST(llvmo::GlobalVariable_O,TYPEQ_ADJUST_STAMP(2415));
      ADD_SINGLE_TYPEQ_TEST(core::BroadcastStream_O,TYPEQ_ADJUST_STAMP(2723));
      ADD_SINGLE_TYPEQ_TEST(chem::StereoisomerAtoms_O,TYPEQ_ADJUST_STAMP(875));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationExplorerMatch_O,TYPEQ_ADJUST_STAMP(871));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Library_O,TYPEQ_ADJUST_STAMP(791));
      ADD_SINGLE_TYPEQ_TEST(chem::ChemExposer_O,TYPEQ_ADJUST_STAMP(1179));
      ADD_RANGE_TYPEQ_TEST(kinematics::Checkpoint_O,kinematics::CheckpointOutPlugJoint_O,TYPEQ_ADJUST_STAMP(859),TYPEQ_ADJUST_STAMP(867));
      ADD_SINGLE_TYPEQ_TEST(chem::SpanningInfo_O,TYPEQ_ADJUST_STAMP(855));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DINodeArray_O,TYPEQ_ADJUST_STAMP(851));
      ADD_SINGLE_TYPEQ_TEST(llvmo::TargetOptions_O,TYPEQ_ADJUST_STAMP(2631));
      ADD_SINGLE_TYPEQ_TEST(chem::CDText_O,TYPEQ_ADJUST_STAMP(847));
      ADD_SINGLE_TYPEQ_TEST(chem::BondTest_O,TYPEQ_ADJUST_STAMP(991));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DWARFContext_O,TYPEQ_ADJUST_STAMP(2627));
      ADD_SINGLE_TYPEQ_TEST(adapt::IterateCons_O,TYPEQ_ADJUST_STAMP(1115));
      ADD_SINGLE_TYPEQ_TEST(geom::SimpleVectorCoordinate_O,TYPEQ_ADJUST_STAMP(2103));
      ADD_SINGLE_TYPEQ_TEST(chem::FFItor_O,TYPEQ_ADJUST_STAMP(259));
      ADD_SINGLE_TYPEQ_TEST(llvmo::NamedMDNode_O,TYPEQ_ADJUST_STAMP(2623));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte16_t_O,TYPEQ_ADJUST_STAMP(2139));
      ADD_SINGLE_TYPEQ_TEST(chem::ChemInfoGraph_O,TYPEQ_ADJUST_STAMP(843));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte64_t_O,TYPEQ_ADJUST_STAMP(2163));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyPointToLineRestraint_O,TYPEQ_ADJUST_STAMP(103));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleBaseString_O,TYPEQ_ADJUST_STAMP(2115));
      ADD_SINGLE_TYPEQ_TEST(core::Test_O,TYPEQ_ADJUST_STAMP(2619));
      ADD_RANGE_TYPEQ_TEST(llvmo::Metadata_O,llvmo::MDString_O,TYPEQ_ADJUST_STAMP(2535),TYPEQ_ADJUST_STAMP(2615));
      ADD_RANGE_TYPEQ_TEST(core::MDArray_O,core::MDArray_double_O,TYPEQ_ADJUST_STAMP(1519),TYPEQ_ADJUST_STAMP(2035));
      ADD_SINGLE_TYPEQ_TEST(chem::RigidBodyEnergyFunction_O,TYPEQ_ADJUST_STAMP(435));
      ADD_SINGLE_TYPEQ_TEST(kinematics::ChainNode_O,TYPEQ_ADJUST_STAMP(719));
      ADD_SINGLE_TYPEQ_TEST(kinematics::CheckpointJoint_O,TYPEQ_ADJUST_STAMP(863));
      ADD_SINGLE_TYPEQ_TEST(llvmo::StructLayout_O,TYPEQ_ADJUST_STAMP(2235));
      ADD_SINGLE_TYPEQ_TEST(chem::Mate_O,TYPEQ_ADJUST_STAMP(511));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArrayT_O,TYPEQ_ADJUST_STAMP(1747));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationExplorer_O,TYPEQ_ADJUST_STAMP(839));
      ADD_SINGLE_TYPEQ_TEST(chem::BondList_O,TYPEQ_ADJUST_STAMP(835));
      ADD_RANGE_TYPEQ_TEST(core::ActivationFrame_O,core::FunctionFrame_O,TYPEQ_ADJUST_STAMP(1275),TYPEQ_ADJUST_STAMP(1283));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LoadInst_O,TYPEQ_ADJUST_STAMP(2375));
      ADD_SINGLE_TYPEQ_TEST(chem::MacroModelFile_O,TYPEQ_ADJUST_STAMP(831));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte2_t_O,TYPEQ_ADJUST_STAMP(1995));
      ADD_SINGLE_TYPEQ_TEST(chem::Angle_O,TYPEQ_ADJUST_STAMP(827));
      ADD_RANGE_TYPEQ_TEST(core::LexicalEnvironment_O,core::ValueEnvironment_O,TYPEQ_ADJUST_STAMP(1227),TYPEQ_ADJUST_STAMP(1271));
      ADD_SINGLE_TYPEQ_TEST(core::PosixTime_O,TYPEQ_ADJUST_STAMP(2231));
      ADD_SINGLE_TYPEQ_TEST(llvmo::MetadataAsValue_O,TYPEQ_ADJUST_STAMP(2467));
      ADD_SINGLE_TYPEQ_TEST(kinematics::RotamerSet_O,TYPEQ_ADJUST_STAMP(63));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int8_t_O,TYPEQ_ADJUST_STAMP(2087));
      ADD_SINGLE_TYPEQ_TEST(chem::SpecificContextSet_O,TYPEQ_ADJUST_STAMP(823));
      ADD_RANGE_TYPEQ_TEST(llvmo::DIType_O,llvmo::DIBasicType_O,TYPEQ_ADJUST_STAMP(2587),TYPEQ_ADJUST_STAMP(2603));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrixEntry_O,TYPEQ_ADJUST_STAMP(819));
      ADD_SINGLE_TYPEQ_TEST(core::Readtable_O,TYPEQ_ADJUST_STAMP(2227));
      ADD_SINGLE_TYPEQ_TEST(chem::CalculatePositionRelativeToOrigin_O,TYPEQ_ADJUST_STAMP(907));
      ADD_SINGLE_TYPEQ_TEST(chem::ChemInfoMatch_O,TYPEQ_ADJUST_STAMP(815));
      ADD_SINGLE_TYPEQ_TEST(units::Quantity_O,TYPEQ_ADJUST_STAMP(811));
      ADD_SINGLE_TYPEQ_TEST(kinematics::AtomTree_O,TYPEQ_ADJUST_STAMP(807));
      ADD_RANGE_TYPEQ_TEST(llvmo::MDNode_O,llvmo::DIExpression_O,TYPEQ_ADJUST_STAMP(2539),TYPEQ_ADJUST_STAMP(2607));
      ADD_SINGLE_TYPEQ_TEST(chem::GenericOctree_O,TYPEQ_ADJUST_STAMP(803));
      ADD_SINGLE_TYPEQ_TEST(mp::RecursiveMutex_O,TYPEQ_ADJUST_STAMP(943));
      ADD_SINGLE_TYPEQ_TEST(chem::MinimizerLog_O,TYPEQ_ADJUST_STAMP(799));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_float_O,TYPEQ_ADJUST_STAMP(2179));
      ADD_SINGLE_TYPEQ_TEST(chem::FFVdwDb_O,TYPEQ_ADJUST_STAMP(387));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int4_t_O,TYPEQ_ADJUST_STAMP(2155));
      ADD_SINGLE_TYPEQ_TEST(chem::FFPtor_O,TYPEQ_ADJUST_STAMP(255));
      ADD_SINGLE_TYPEQ_TEST(chem::InfoDb_O,TYPEQ_ADJUST_STAMP(795));
      ADD_SINGLE_TYPEQ_TEST(core::LoadTimeValues_O,TYPEQ_ADJUST_STAMP(2223));
      ADD_SINGLE_TYPEQ_TEST(kinematics::OriginJumpJoint_O,TYPEQ_ADJUST_STAMP(211));
      ADD_RANGE_TYPEQ_TEST(llvmo::CodeBase_O,llvmo::Library_O,TYPEQ_ADJUST_STAMP(783),TYPEQ_ADJUST_STAMP(791));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DataLayout_O,TYPEQ_ADJUST_STAMP(2219));
      ADD_SINGLE_TYPEQ_TEST(llvmo::BasicBlock_O,TYPEQ_ADJUST_STAMP(2463));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte64_t_O,TYPEQ_ADJUST_STAMP(1863));
      ADD_SINGLE_TYPEQ_TEST(chem::AntechamberBondToAtomTest_O,TYPEQ_ADJUST_STAMP(1039));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte32_t_O,TYPEQ_ADJUST_STAMP(1987));
      ADD_SINGLE_TYPEQ_TEST(core::Character_dummy_O,TYPEQ_ADJUST_STAMP(2215));
      ADD_RANGE_TYPEQ_TEST(llvmo::Constant_O,llvmo::ConstantArray_O,TYPEQ_ADJUST_STAMP(2403),TYPEQ_ADJUST_STAMP(2455));
      ADD_SINGLE_TYPEQ_TEST(core::NativeVector_int_O,TYPEQ_ADJUST_STAMP(779));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIBasicType_O,TYPEQ_ADJUST_STAMP(2603));
      ADD_SINGLE_TYPEQ_TEST(llvmo::APFloat_O,TYPEQ_ADJUST_STAMP(2531));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArrayCharacter_O,TYPEQ_ADJUST_STAMP(1699));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleCharacterString_O,TYPEQ_ADJUST_STAMP(2123));
      ADD_SINGLE_TYPEQ_TEST(kinematics::RootBondedJointTemplate_O,TYPEQ_ADJUST_STAMP(623));
      ADD_RANGE_TYPEQ_TEST(core::Array_O,core::SimpleVector_int32_t_O,TYPEQ_ADJUST_STAMP(1515),TYPEQ_ADJUST_STAMP(2211));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Argument_O,TYPEQ_ADJUST_STAMP(2459));
      ADD_RANGE_TYPEQ_TEST(units::Unit_O,units::NamedUnit_O,TYPEQ_ADJUST_STAMP(771),TYPEQ_ADJUST_STAMP(775));
      ADD_SINGLE_TYPEQ_TEST(core::GlobalEntryPoint_O,TYPEQ_ADJUST_STAMP(1311));
      ADD_SINGLE_TYPEQ_TEST(llvmo::TargetPassConfig_O,TYPEQ_ADJUST_STAMP(2527));
      ADD_SINGLE_TYPEQ_TEST(chem::IterateBonds_O,TYPEQ_ADJUST_STAMP(1131));
      ADD_SINGLE_TYPEQ_TEST(chem::CDFragment_O,TYPEQ_ADJUST_STAMP(767));
      ADD_SINGLE_TYPEQ_TEST(core::GlueEnvironment_O,TYPEQ_ADJUST_STAMP(1223));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ReturnInst_O,TYPEQ_ADJUST_STAMP(2391));
      ADD_SINGLE_TYPEQ_TEST(chem::MonomerContext_O,TYPEQ_ADJUST_STAMP(763));
      ADD_SINGLE_TYPEQ_TEST(kinematics::Rotamer_O,TYPEQ_ADJUST_STAMP(759));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte16_t_O,TYPEQ_ADJUST_STAMP(2019));
      ADD_RANGE_TYPEQ_TEST(chem::Plug_O,chem::OriginPlug_O,TYPEQ_ADJUST_STAMP(735),TYPEQ_ADJUST_STAMP(755));
      ADD_SINGLE_TYPEQ_TEST(chem::FFNonbondCrossTermTable_O,TYPEQ_ADJUST_STAMP(731));
      ADD_RANGE_TYPEQ_TEST(kinematics::MonomerBaseNode_O,kinematics::RingClosingMonomerNode_O,TYPEQ_ADJUST_STAMP(711),TYPEQ_ADJUST_STAMP(727));
      ADD_RANGE_TYPEQ_TEST(llvmo::Type_O,llvmo::StructType_O,TYPEQ_ADJUST_STAMP(2499),TYPEQ_ADJUST_STAMP(2523));
      ADD_SINGLE_TYPEQ_TEST(chem::StereoConfiguration_O,TYPEQ_ADJUST_STAMP(707));
      ADD_SINGLE_TYPEQ_TEST(chem::Command_O,TYPEQ_ADJUST_STAMP(703));
      ADD_SINGLE_TYPEQ_TEST(core::FileScope_O,TYPEQ_ADJUST_STAMP(2659));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte4_t_O,TYPEQ_ADJUST_STAMP(1659));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int64_t_O,TYPEQ_ADJUST_STAMP(2079));
      ADD_RANGE_TYPEQ_TEST(llvmo::ConstantDataSequential_O,llvmo::ConstantDataArray_O,TYPEQ_ADJUST_STAMP(2439),TYPEQ_ADJUST_STAMP(2443));
      ADD_RANGE_TYPEQ_TEST(chem::SuperposeEngine_O,chem::SuperposeSelectedAtoms_O,TYPEQ_ADJUST_STAMP(695),TYPEQ_ADJUST_STAMP(699));
      ADD_RANGE_TYPEQ_TEST(chem::EntityNameSet_O,chem::MonomerPack_O,TYPEQ_ADJUST_STAMP(519),TYPEQ_ADJUST_STAMP(527));
      ADD_SINGLE_TYPEQ_TEST(chem::ResidueList_O,TYPEQ_ADJUST_STAMP(691));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DebugLoc_O,TYPEQ_ADJUST_STAMP(1511));
      ADD_SINGLE_TYPEQ_TEST(core::WeakPointer_O,TYPEQ_ADJUST_STAMP(1507));
      ADD_SINGLE_TYPEQ_TEST(core::IOFileStream_O,TYPEQ_ADJUST_STAMP(2715));
      ADD_SINGLE_TYPEQ_TEST(chem::ConstitutionVirtualAtom_O,TYPEQ_ADJUST_STAMP(479));
      ADD_RANGE_TYPEQ_TEST(core::RuntimeVisibleEnvironment_O,core::ValueEnvironment_O,TYPEQ_ADJUST_STAMP(1255),TYPEQ_ADJUST_STAMP(1271));
      ADD_SINGLE_TYPEQ_TEST(chem::ProperTorsion_O,TYPEQ_ADJUST_STAMP(687));
      ADD_SINGLE_TYPEQ_TEST(chem::IterateResidues_O,TYPEQ_ADJUST_STAMP(1127));
      ADD_RANGE_TYPEQ_TEST(llvmo::Instruction_O,llvmo::IndirectBrInst_O,TYPEQ_ADJUST_STAMP(2323),TYPEQ_ADJUST_STAMP(2399));
      ADD_RANGE_TYPEQ_TEST(core::FileStream_O,core::IOStreamStream_O,TYPEQ_ADJUST_STAMP(2711),TYPEQ_ADJUST_STAMP(2719));
      ADD_SINGLE_TYPEQ_TEST(core::MDArrayCharacter_O,TYPEQ_ADJUST_STAMP(2003));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LandingPadInst_O,TYPEQ_ADJUST_STAMP(2387));
      ADD_SINGLE_TYPEQ_TEST(kinematics::KinematicsExposer_O,TYPEQ_ADJUST_STAMP(1175));
      ADD_RANGE_TYPEQ_TEST(core::Function_O,core::SingleDispatchGenericFunctionClosure_O,TYPEQ_ADJUST_STAMP(1443),TYPEQ_ADJUST_STAMP(1503));
      ADD_RANGE_TYPEQ_TEST(kinematics::BondedJoint_O,kinematics::DelayedBondedJoint_O,TYPEQ_ADJUST_STAMP(215),TYPEQ_ADJUST_STAMP(223));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int2_t_O,TYPEQ_ADJUST_STAMP(1651));
      ADD_SINGLE_TYPEQ_TEST(core::ImmobileObject_O,TYPEQ_ADJUST_STAMP(1439));
      ADD_SINGLE_TYPEQ_TEST(chem::StereoisomerVirtualAtom_O,TYPEQ_ADJUST_STAMP(591));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableEql_O,TYPEQ_ADJUST_STAMP(1339));
      ADD_SINGLE_TYPEQ_TEST(chem::SpanningLoop_O,TYPEQ_ADJUST_STAMP(683));
      ADD_SINGLE_TYPEQ_TEST(chem::PdbReader_O,TYPEQ_ADJUST_STAMP(679));
      ADD_SINGLE_TYPEQ_TEST(mp::ConditionVariable_O,TYPEQ_ADJUST_STAMP(675));
      ADD_SINGLE_TYPEQ_TEST(chem::ConformationExplorerEntry_O,TYPEQ_ADJUST_STAMP(671));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte8_t_O,TYPEQ_ADJUST_STAMP(1575));
      ADD_SINGLE_TYPEQ_TEST(kinematics::BackboneDependentRotamerSet_O,TYPEQ_ADJUST_STAMP(59));
      ADD_RANGE_TYPEQ_TEST(chem::BondListMatchNode_O,chem::Branch_O,TYPEQ_ADJUST_STAMP(1043),TYPEQ_ADJUST_STAMP(1051));
      ADD_SINGLE_TYPEQ_TEST(units::Dimension_O,TYPEQ_ADJUST_STAMP(667));
      ADD_SINGLE_TYPEQ_TEST(llvmo::AtomicRMWInst_O,TYPEQ_ADJUST_STAMP(2383));
      ADD_SINGLE_TYPEQ_TEST(chem::PdbMonomerConnectivity_O,TYPEQ_ADJUST_STAMP(663));
      ADD_SINGLE_TYPEQ_TEST(llvmo::PassManager_O,TYPEQ_ADJUST_STAMP(2307));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_O,TYPEQ_ADJUST_STAMP(2187));
      ADD_RANGE_TYPEQ_TEST(chem::PlugWithMates_O,chem::OutPlug_O,TYPEQ_ADJUST_STAMP(743),TYPEQ_ADJUST_STAMP(751));
      ADD_SINGLE_TYPEQ_TEST(chem::Oligomer_O,TYPEQ_ADJUST_STAMP(659));
      ADD_SINGLE_TYPEQ_TEST(adapt::ObjectSet_O,TYPEQ_ADJUST_STAMP(655));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int64_t_O,TYPEQ_ADJUST_STAMP(1795));
      ADD_RANGE_TYPEQ_TEST(core::SimpleString_O,core::SimpleCharacterString_O,TYPEQ_ADJUST_STAMP(2107),TYPEQ_ADJUST_STAMP(2123));
      ADD_RANGE_TYPEQ_TEST(llvmo::DIVariable_O,llvmo::DILocalVariable_O,TYPEQ_ADJUST_STAMP(2551),TYPEQ_ADJUST_STAMP(2555));
      ADD_SINGLE_TYPEQ_TEST(core::FunctionValueEnvironment_O,TYPEQ_ADJUST_STAMP(1267));
      ADD_SINGLE_TYPEQ_TEST(core::DerivableCxxClassCreator_O,TYPEQ_ADJUST_STAMP(1475));
      ADD_RANGE_TYPEQ_TEST(chem::Coupling_O,chem::DirectionalCoupling_O,TYPEQ_ADJUST_STAMP(643),TYPEQ_ADJUST_STAMP(651));
      ADD_SINGLE_TYPEQ_TEST(geom::ComplexVectorCoordinate_O,TYPEQ_ADJUST_STAMP(1847));
      ADD_SINGLE_TYPEQ_TEST(asttooling::PresumedLoc_O,TYPEQ_ADJUST_STAMP(639));
      ADD_SINGLE_TYPEQ_TEST(core::ConcatenatedStream_O,TYPEQ_ADJUST_STAMP(2707));
      ADD_SINGLE_TYPEQ_TEST(core::MacroletEnvironment_O,TYPEQ_ADJUST_STAMP(1251));
      ADD_SINGLE_TYPEQ_TEST(kinematics::DelayedBondedJoint_O,TYPEQ_ADJUST_STAMP(223));
      ADD_SINGLE_TYPEQ_TEST(core::Ratio_O,TYPEQ_ADJUST_STAMP(1367));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte2_t_O,TYPEQ_ADJUST_STAMP(1911));
      ADD_SINGLE_TYPEQ_TEST(core::ClosureWithSlots_O,TYPEQ_ADJUST_STAMP(1499));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ExecutionEngine_O,TYPEQ_ADJUST_STAMP(2495));
      ADD_SINGLE_TYPEQ_TEST(core::ClassRepCreator_O,TYPEQ_ADJUST_STAMP(1471));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Attribute_O,TYPEQ_ADJUST_STAMP(1435));
      ADD_SINGLE_TYPEQ_TEST(core::DerivableCxxObject_O,TYPEQ_ADJUST_STAMP(1204));
      ADD_SINGLE_TYPEQ_TEST(llvmo::SwitchInst_O,TYPEQ_ADJUST_STAMP(2379));
      ADD_SINGLE_TYPEQ_TEST(core::SymbolToEnumConverter_O,TYPEQ_ADJUST_STAMP(1431));
      ADD_SINGLE_TYPEQ_TEST(chem::RestrainedPiBond_O,TYPEQ_ADJUST_STAMP(935));
      ADD_RANGE_TYPEQ_TEST(chem::ConformationCollection_O,chem::SuperposableConformationCollection_O,TYPEQ_ADJUST_STAMP(631),TYPEQ_ADJUST_STAMP(635));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int32_t_O,TYPEQ_ADJUST_STAMP(1831));
      ADD_SINGLE_TYPEQ_TEST(core::VaList_dummy_O,TYPEQ_ADJUST_STAMP(2755));
      ADD_SINGLE_TYPEQ_TEST(geom::Color_O,TYPEQ_ADJUST_STAMP(627));
      ADD_RANGE_TYPEQ_TEST(kinematics::JointTemplate_O,kinematics::RootBondedJointTemplate_O,TYPEQ_ADJUST_STAMP(611),TYPEQ_ADJUST_STAMP(623));
      ADD_SINGLE_TYPEQ_TEST(core::LogicalPathname_O,TYPEQ_ADJUST_STAMP(2671));
      ADD_SINGLE_TYPEQ_TEST(core::WrappedPointer_O,TYPEQ_ADJUST_STAMP(1426));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_double_O,TYPEQ_ADJUST_STAMP(2063));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte32_t_O,TYPEQ_ADJUST_STAMP(1643));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LLVMTargetMachine_O,TYPEQ_ADJUST_STAMP(2479));
      ADD_SINGLE_TYPEQ_TEST(core::ClassHolder_O,TYPEQ_ADJUST_STAMP(1423));
      ADD_SINGLE_TYPEQ_TEST(chem::SketchFunction_O,TYPEQ_ADJUST_STAMP(431));
      ADD_RANGE_TYPEQ_TEST(llvmo::UnaryInstruction_O,llvmo::LoadInst_O,TYPEQ_ADJUST_STAMP(2363),TYPEQ_ADJUST_STAMP(2375));
      ADD_SINGLE_TYPEQ_TEST(kinematics::MonomerId_O,TYPEQ_ADJUST_STAMP(607));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_size_t_O,TYPEQ_ADJUST_STAMP(1567));
      ADD_SINGLE_TYPEQ_TEST(chem::PathMessage_O,TYPEQ_ADJUST_STAMP(603));
      ADD_RANGE_TYPEQ_TEST(chem::BondMatchNode_O,chem::AntechamberBondToAtomTest_O,TYPEQ_ADJUST_STAMP(999),TYPEQ_ADJUST_STAMP(1039));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyRigidBodyNonbond_O,TYPEQ_ADJUST_STAMP(83));
      ADD_RANGE_TYPEQ_TEST(core::ComplexVector_O,core::ComplexVector_int64_t_O,TYPEQ_ADJUST_STAMP(1799),TYPEQ_ADJUST_STAMP(1971));
      ADD_SINGLE_TYPEQ_TEST(chem::SparseLargeSquareMatrix_O,TYPEQ_ADJUST_STAMP(351));
      ADD_SINGLE_TYPEQ_TEST(clbind::ClassRegistry_O,TYPEQ_ADJUST_STAMP(1419));
      ADD_SINGLE_TYPEQ_TEST(core::Frame_O,TYPEQ_ADJUST_STAMP(1415));
      ADD_SINGLE_TYPEQ_TEST(asttooling::AstVisitor_O,TYPEQ_ADJUST_STAMP(2767));
      ADD_SINGLE_TYPEQ_TEST(chem::Isoname_O,TYPEQ_ADJUST_STAMP(599));
      ADD_SINGLE_TYPEQ_TEST(core::Record_O,TYPEQ_ADJUST_STAMP(1411));
      ADD_RANGE_TYPEQ_TEST(chem::Atom_O,chem::VirtualAtom_O,TYPEQ_ADJUST_STAMP(143),TYPEQ_ADJUST_STAMP(147));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrix_O,TYPEQ_ADJUST_STAMP(595));
      ADD_RANGE_TYPEQ_TEST(chem::StereoisomerAtom_O,chem::StereoisomerVirtualAtom_O,TYPEQ_ADJUST_STAMP(587),TYPEQ_ADJUST_STAMP(591));
      ADD_SINGLE_TYPEQ_TEST(core::SourcePosInfo_O,TYPEQ_ADJUST_STAMP(1407));
      ADD_SINGLE_TYPEQ_TEST(llvmo::BranchInst_O,TYPEQ_ADJUST_STAMP(2359));
      ADD_SINGLE_TYPEQ_TEST(llvmo::AllocaInst_O,TYPEQ_ADJUST_STAMP(2371));
      ADD_RANGE_TYPEQ_TEST(chem::ZMatrixInternal_O,chem::ZMatrixAngleInternal_O,TYPEQ_ADJUST_STAMP(571),TYPEQ_ADJUST_STAMP(583));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableCustom_O,TYPEQ_ADJUST_STAMP(1335));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte8_t_O,TYPEQ_ADJUST_STAMP(1919));
      ADD_RANGE_TYPEQ_TEST(core::HashTable_O,core::HashTableEql_O,TYPEQ_ADJUST_STAMP(1319),TYPEQ_ADJUST_STAMP(1339));
      ADD_SINGLE_TYPEQ_TEST(chem::ChemDraw_O,TYPEQ_ADJUST_STAMP(567));
      ADD_RANGE_TYPEQ_TEST(chem::ReportBase_O,chem::ForceMatchReport_O,TYPEQ_ADJUST_STAMP(551),TYPEQ_ADJUST_STAMP(563));
      ADD_SINGLE_TYPEQ_TEST(kinematics::BackboneDependentRotamerLibrary_O,TYPEQ_ADJUST_STAMP(547));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyChiralRestraint_O,TYPEQ_ADJUST_STAMP(99));
      ADD_SINGLE_TYPEQ_TEST(chem::MonomerPack_O,TYPEQ_ADJUST_STAMP(527));
      ADD_SINGLE_TYPEQ_TEST(geom::MDArrayCoordinate_O,TYPEQ_ADJUST_STAMP(1615));
      ADD_SINGLE_TYPEQ_TEST(chem::Structure_Old_List_O,TYPEQ_ADJUST_STAMP(543));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArrayBaseChar_O,TYPEQ_ADJUST_STAMP(1723));
      ADD_SINGLE_TYPEQ_TEST(chem::OctNode_O,TYPEQ_ADJUST_STAMP(539));
      ADD_RANGE_TYPEQ_TEST(chem::Entity_O,chem::Monomer_O,TYPEQ_ADJUST_STAMP(495),TYPEQ_ADJUST_STAMP(535));
      ADD_SINGLE_TYPEQ_TEST(chem::AGEdge_O,TYPEQ_ADJUST_STAMP(491));
      ADD_SINGLE_TYPEQ_TEST(chem::ReadAmberParameters_O,TYPEQ_ADJUST_STAMP(487));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DILocation_O,TYPEQ_ADJUST_STAMP(2543));
      ADD_RANGE_TYPEQ_TEST(core::SimpleMDArray_O,core::SimpleMDArray_int64_t_O,TYPEQ_ADJUST_STAMP(1627),TYPEQ_ADJUST_STAMP(1795));
      ADD_SINGLE_TYPEQ_TEST(chem::Smirks_O,TYPEQ_ADJUST_STAMP(483));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyDihedralRestraint_O,TYPEQ_ADJUST_STAMP(95));
      ADD_RANGE_TYPEQ_TEST(core::Number_O,core::Complex_O,TYPEQ_ADJUST_STAMP(1355),TYPEQ_ADJUST_STAMP(1403));
      ADD_RANGE_TYPEQ_TEST(core::T_O,core::VaList_dummy_O,TYPEQ_ADJUST_STAMP(7),TYPEQ_ADJUST_STAMP(2755));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DICompileUnit_O,TYPEQ_ADJUST_STAMP(2583));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FunctionPass_O,TYPEQ_ADJUST_STAMP(2259));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte4_t_O,TYPEQ_ADJUST_STAMP(2095));
      ADD_RANGE_TYPEQ_TEST(chem::ConstitutionAtom_O,chem::ConstitutionVirtualAtom_O,TYPEQ_ADJUST_STAMP(475),TYPEQ_ADJUST_STAMP(479));
      ADD_RANGE_TYPEQ_TEST(llvmo::CallBase_O,llvmo::InvokeInst_O,TYPEQ_ADJUST_STAMP(2347),TYPEQ_ADJUST_STAMP(2355));
      ADD_RANGE_TYPEQ_TEST(core::CompileTimeEnvironment_O,core::MacroletEnvironment_O,TYPEQ_ADJUST_STAMP(1231),TYPEQ_ADJUST_STAMP(1251));
      ADD_SINGLE_TYPEQ_TEST(mp::SharedMutex_O,TYPEQ_ADJUST_STAMP(471));
      ADD_SINGLE_TYPEQ_TEST(adapt::QDomNode_O,TYPEQ_ADJUST_STAMP(467));
      ADD_SINGLE_TYPEQ_TEST(core::InstanceCreator_O,TYPEQ_ADJUST_STAMP(1467));
      ADD_SINGLE_TYPEQ_TEST(chem::BondToAtomTest_O,TYPEQ_ADJUST_STAMP(1035));
      ADD_SINGLE_TYPEQ_TEST(chem::FFAngleDb_O,TYPEQ_ADJUST_STAMP(375));
      ADD_SINGLE_TYPEQ_TEST(chem::FFTypeRule_O,TYPEQ_ADJUST_STAMP(463));
      ADD_SINGLE_TYPEQ_TEST(llvmo::InsertPoint_O,TYPEQ_ADJUST_STAMP(1351));
      ADD_SINGLE_TYPEQ_TEST(core::FunctionDescription_O,TYPEQ_ADJUST_STAMP(1347));
      ADD_SINGLE_TYPEQ_TEST(core::StrWNs_O,TYPEQ_ADJUST_STAMP(1955));
      ADD_SINGLE_TYPEQ_TEST(chem::Structure_Old_ListEntry_O,TYPEQ_ADJUST_STAMP(459));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyRigidBodyStaple_O,TYPEQ_ADJUST_STAMP(79));
      ADD_SINGLE_TYPEQ_TEST(core::EchoStream_O,TYPEQ_ADJUST_STAMP(2703));
      ADD_RANGE_TYPEQ_TEST(core::HashTableBase_O,core::WeakKeyHashTable_O,TYPEQ_ADJUST_STAMP(1315),TYPEQ_ADJUST_STAMP(1343));
      ADD_SINGLE_TYPEQ_TEST(core::MDArrayBit_O,TYPEQ_ADJUST_STAMP(2011));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte16_t_O,TYPEQ_ADJUST_STAMP(1839));
      ADD_SINGLE_TYPEQ_TEST(chem::FFStretchDb_O,TYPEQ_ADJUST_STAMP(371));
      ADD_SINGLE_TYPEQ_TEST(geom::OVector2_O,TYPEQ_ADJUST_STAMP(455));
      ADD_RANGE_TYPEQ_TEST(llvmo::DILocalScope_O,llvmo::DILexicalBlock_O,TYPEQ_ADJUST_STAMP(2567),TYPEQ_ADJUST_STAMP(2579));
      ADD_SINGLE_TYPEQ_TEST(geom::OVector3_O,TYPEQ_ADJUST_STAMP(451));
      ADD_SINGLE_TYPEQ_TEST(core::LocalEntryPoint_O,TYPEQ_ADJUST_STAMP(1307));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DILexicalBlock_O,TYPEQ_ADJUST_STAMP(2579));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DITypeRefArray_O,TYPEQ_ADJUST_STAMP(447));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintAnchor_O,TYPEQ_ADJUST_STAMP(287));
      ADD_SINGLE_TYPEQ_TEST(chem::InPlug_O,TYPEQ_ADJUST_STAMP(747));
      ADD_RANGE_TYPEQ_TEST(llvmo::ModulePass_O,llvmo::TargetLibraryInfoWrapperPass_O,TYPEQ_ADJUST_STAMP(2247),TYPEQ_ADJUST_STAMP(2255));
      ADD_SINGLE_TYPEQ_TEST(chem::DirectionalCoupling_O,TYPEQ_ADJUST_STAMP(651));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DILocalVariable_O,TYPEQ_ADJUST_STAMP(2555));
      ADD_SINGLE_TYPEQ_TEST(llvmo::TargetLibraryInfoWrapperPass_O,TYPEQ_ADJUST_STAMP(2255));
      ADD_SINGLE_TYPEQ_TEST(asttooling::QualType_O,TYPEQ_ADJUST_STAMP(443));
      ADD_RANGE_TYPEQ_TEST(llvmo::User_O,llvmo::ConstantArray_O,TYPEQ_ADJUST_STAMP(2319),TYPEQ_ADJUST_STAMP(2455));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int16_t_O,TYPEQ_ADJUST_STAMP(1527));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrixDihedralInternal_O,TYPEQ_ADJUST_STAMP(579));
      ADD_SINGLE_TYPEQ_TEST(chem::ForceMatchReport_O,TYPEQ_ADJUST_STAMP(563));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FenceInst_O,TYPEQ_ADJUST_STAMP(2343));
      ADD_SINGLE_TYPEQ_TEST(chem::WildElementDict_O,TYPEQ_ADJUST_STAMP(439));
      ADD_SINGLE_TYPEQ_TEST(chem::Chain_O,TYPEQ_ADJUST_STAMP(1047));
      ADD_SINGLE_TYPEQ_TEST(llvmo::AtomicCmpXchgInst_O,TYPEQ_ADJUST_STAMP(2339));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int8_t_O,TYPEQ_ADJUST_STAMP(1815));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_double_O,TYPEQ_ADJUST_STAMP(1739));
      ADD_RANGE_TYPEQ_TEST(chem::ScoringFunction_O,chem::RigidBodyEnergyFunction_O,TYPEQ_ADJUST_STAMP(423),TYPEQ_ADJUST_STAMP(435));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantPointerNull_O,TYPEQ_ADJUST_STAMP(2435));
      ADD_SINGLE_TYPEQ_TEST(llvmo::VectorType_O,TYPEQ_ADJUST_STAMP(2519));
      ADD_RANGE_TYPEQ_TEST(core::EntryPointBase_O,core::GlobalEntryPoint_O,TYPEQ_ADJUST_STAMP(1291),TYPEQ_ADJUST_STAMP(1311));
      ADD_SINGLE_TYPEQ_TEST(chem::FFStretch_O,TYPEQ_ADJUST_STAMP(251));
      ADD_SINGLE_TYPEQ_TEST(chem::IterateRestraints_O,TYPEQ_ADJUST_STAMP(1111));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergySketchNonbond_O,TYPEQ_ADJUST_STAMP(91));
      ADD_SINGLE_TYPEQ_TEST(core::RandomState_O,TYPEQ_ADJUST_STAMP(1287));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int2_t_O,TYPEQ_ADJUST_STAMP(2071));
      ADD_RANGE_TYPEQ_TEST(chem::AtomReferenceBase_O,chem::AtomReference_O,TYPEQ_ADJUST_STAMP(415),TYPEQ_ADJUST_STAMP(419));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte64_t_O,TYPEQ_ADJUST_STAMP(1607));
      ADD_SINGLE_TYPEQ_TEST(chem::ForceField_O,TYPEQ_ADJUST_STAMP(411));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_fixnum_O,TYPEQ_ADJUST_STAMP(2171));
      ADD_RANGE_TYPEQ_TEST(core::AnsiStream_O,core::BroadcastStream_O,TYPEQ_ADJUST_STAMP(2679),TYPEQ_ADJUST_STAMP(2723));
      ADD_RANGE_TYPEQ_TEST(core::BuiltinClosure_O,core::TranslationFunctor_O,TYPEQ_ADJUST_STAMP(1491),TYPEQ_ADJUST_STAMP(1495));
      ADD_RANGE_TYPEQ_TEST(core::Environment_O,core::FunctionFrame_O,TYPEQ_ADJUST_STAMP(1219),TYPEQ_ADJUST_STAMP(1283));
      ADD_SINGLE_TYPEQ_TEST(chem::AGVertex_O,TYPEQ_ADJUST_STAMP(407));
      ADD_SINGLE_TYPEQ_TEST(core::UnwindProtectEnvironment_O,TYPEQ_ADJUST_STAMP(1247));
      ADD_SINGLE_TYPEQ_TEST(clasp_ffi::ForeignData_O,TYPEQ_ADJUST_STAMP(31));
      ADD_SINGLE_TYPEQ_TEST(llvmo::CallInst_O,TYPEQ_ADJUST_STAMP(2351));
      ADD_SINGLE_TYPEQ_TEST(chem::AfterMatchBondToAtomTest_O,TYPEQ_ADJUST_STAMP(1059));
      ADD_SINGLE_TYPEQ_TEST(chem::OligomerPart_Link_O,TYPEQ_ADJUST_STAMP(323));
      ADD_SINGLE_TYPEQ_TEST(adapt::AdaptExposer_O,TYPEQ_ADJUST_STAMP(1171));
      ADD_RANGE_TYPEQ_TEST(core::StringStream_O,core::StringInputStream_O,TYPEQ_ADJUST_STAMP(2691),TYPEQ_ADJUST_STAMP(2699));
      ADD_RANGE_TYPEQ_TEST(llvmo::LibraryBase_O,llvmo::LibraryFile_O,TYPEQ_ADJUST_STAMP(395),TYPEQ_ADJUST_STAMP(403));
      ADD_SINGLE_TYPEQ_TEST(core::Sigset_O,TYPEQ_ADJUST_STAMP(1215));
      ADD_SINGLE_TYPEQ_TEST(llvmo::IntegerType_O,TYPEQ_ADJUST_STAMP(2515));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int64_t_O,TYPEQ_ADJUST_STAMP(1979));
      ADD_SINGLE_TYPEQ_TEST(llvmo::PassManagerBuilder_O,TYPEQ_ADJUST_STAMP(2491));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int8_t_O,TYPEQ_ADJUST_STAMP(1535));
      ADD_SINGLE_TYPEQ_TEST(chem::ZMatrixBondInternal_O,TYPEQ_ADJUST_STAMP(575));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantFP_O,TYPEQ_ADJUST_STAMP(2431));
      ADD_SINGLE_TYPEQ_TEST(core::Cons_O,TYPEQ_ADJUST_STAMP(2751));
      ADD_SINGLE_TYPEQ_TEST(chem::Constitution_O,TYPEQ_ADJUST_STAMP(531));
      ADD_SINGLE_TYPEQ_TEST(llvmo::LLVMContext_O,TYPEQ_ADJUST_STAMP(2487));
      ADD_RANGE_TYPEQ_TEST(chem::EntityNameSetBase_O,chem::MonomerPack_O,TYPEQ_ADJUST_STAMP(503),TYPEQ_ADJUST_STAMP(527));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int4_t_O,TYPEQ_ADJUST_STAMP(2027));
      ADD_RANGE_TYPEQ_TEST(chem::FFBaseDb_O,chem::FFTypesDb_O,TYPEQ_ADJUST_STAMP(359),TYPEQ_ADJUST_STAMP(391));
      ADD_RANGE_TYPEQ_TEST(chem::AbstractLargeSquareMatrix_O,chem::FullLargeSquareMatrix_O,TYPEQ_ADJUST_STAMP(347),TYPEQ_ADJUST_STAMP(355));
      ADD_RANGE_TYPEQ_TEST(core::General_O,core::UserData_O,TYPEQ_ADJUST_STAMP(15),TYPEQ_ADJUST_STAMP(2747));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ObjectFile_O,TYPEQ_ADJUST_STAMP(399));
      ADD_RANGE_TYPEQ_TEST(core::Closure_O,core::SingleDispatchGenericFunctionClosure_O,TYPEQ_ADJUST_STAMP(1487),TYPEQ_ADJUST_STAMP(1503));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_size_t_O,TYPEQ_ADJUST_STAMP(1903));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintAngle_O,TYPEQ_ADJUST_STAMP(283));
      ADD_SINGLE_TYPEQ_TEST(chem::CandoDatabase_O,TYPEQ_ADJUST_STAMP(343));
      ADD_SINGLE_TYPEQ_TEST(core::BlockEnvironment_O,TYPEQ_ADJUST_STAMP(1263));
      ADD_SINGLE_TYPEQ_TEST(mpip::Mpi_O,TYPEQ_ADJUST_STAMP(1211));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantDataArray_O,TYPEQ_ADJUST_STAMP(2443));
      ADD_RANGE_TYPEQ_TEST_INSTANCE(core::Instance_O,core::DerivableCxxObject_O,TYPEQ_ADJUST_STAMP(1197),TYPEQ_ADJUST_STAMP(1204));
      ADD_SINGLE_TYPEQ_TEST(chem::MessageReport_O,TYPEQ_ADJUST_STAMP(559));
      ADD_SINGLE_TYPEQ_TEST(core::SmallMap_O,TYPEQ_ADJUST_STAMP(1195));
      ADD_SINGLE_TYPEQ_TEST(clasp_ffi::ForeignTypeSpec_O,TYPEQ_ADJUST_STAMP(1191));
      ADD_SINGLE_TYPEQ_TEST(core::Unused_dummy_O,TYPEQ_ADJUST_STAMP(11));
      ADD_SINGLE_TYPEQ_TEST(core::PosixTimeDuration_O,TYPEQ_ADJUST_STAMP(1187));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyOutOfZPlane_O,TYPEQ_ADJUST_STAMP(87));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableEqual_O,TYPEQ_ADJUST_STAMP(1331));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Triple_O,TYPEQ_ADJUST_STAMP(2483));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte64_t_O,TYPEQ_ADJUST_STAMP(1731));
      ADD_SINGLE_TYPEQ_TEST(geom::GeomExposer_O,TYPEQ_ADJUST_STAMP(1167));
      ADD_SINGLE_TYPEQ_TEST(core::CoreExposer_O,TYPEQ_ADJUST_STAMP(1163));
      ADD_RANGE_TYPEQ_TEST(chem::EnergyRigidBodyComponent_O,chem::EnergyRigidBodyNonbond_O,TYPEQ_ADJUST_STAMP(75),TYPEQ_ADJUST_STAMP(83));
      ADD_SINGLE_TYPEQ_TEST(core::BitVectorNs_O,TYPEQ_ADJUST_STAMP(1935));
      ADD_SINGLE_TYPEQ_TEST(kinematics::AggregateNode_O,TYPEQ_ADJUST_STAMP(715));
      ADD_RANGE_TYPEQ_TEST(llvmo::TargetMachine_O,llvmo::LLVMTargetMachine_O,TYPEQ_ADJUST_STAMP(2475),TYPEQ_ADJUST_STAMP(2479));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ThreadSafeContext_O,TYPEQ_ADJUST_STAMP(2471));
      ADD_RANGE_TYPEQ_TEST(llvmo::Value_O,llvmo::MetadataAsValue_O,TYPEQ_ADJUST_STAMP(2315),TYPEQ_ADJUST_STAMP(2467));
      ADD_SINGLE_TYPEQ_TEST(chem::Bond_O,TYPEQ_ADJUST_STAMP(339));
      ADD_SINGLE_TYPEQ_TEST(chem::SuperposableConformationCollection_O,TYPEQ_ADJUST_STAMP(635));
      ADD_SINGLE_TYPEQ_TEST(units::UnitsExposer_O,TYPEQ_ADJUST_STAMP(1159));
      ADD_SINGLE_TYPEQ_TEST(chem::CoordinateSystem_O,TYPEQ_ADJUST_STAMP(335));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomReference_O,TYPEQ_ADJUST_STAMP(419));
      ADD_SINGLE_TYPEQ_TEST(clbind::ClassRep_O,TYPEQ_ADJUST_STAMP(1201));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantInt_O,TYPEQ_ADJUST_STAMP(2427));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int16_t_O,TYPEQ_ADJUST_STAMP(1683));
      ADD_SINGLE_TYPEQ_TEST(chem::Logical_O,TYPEQ_ADJUST_STAMP(1027));
      ADD_SINGLE_TYPEQ_TEST(kinematics::BondId_O,TYPEQ_ADJUST_STAMP(331));
      ADD_RANGE_TYPEQ_TEST(llvmo::PassManagerBase_O,llvmo::FunctionPassManager_O,TYPEQ_ADJUST_STAMP(2303),TYPEQ_ADJUST_STAMP(2311));
      ADD_RANGE_TYPEQ_TEST(core::Exposer_O,asttooling::AsttoolingExposer_O,TYPEQ_ADJUST_STAMP(1155),TYPEQ_ADJUST_STAMP(1183));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ConstantStruct_O,TYPEQ_ADJUST_STAMP(2423));
      ADD_SINGLE_TYPEQ_TEST(core::DirectoryIterator_O,TYPEQ_ADJUST_STAMP(1107));
      ADD_SINGLE_TYPEQ_TEST(chem::JumpPlug_O,TYPEQ_ADJUST_STAMP(739));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DISubroutineType_O,TYPEQ_ADJUST_STAMP(2599));
      ADD_RANGE_TYPEQ_TEST(kinematics::JumpJoint_O,kinematics::OriginJumpJoint_O,TYPEQ_ADJUST_STAMP(207),TYPEQ_ADJUST_STAMP(211));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleBitVector_O,TYPEQ_ADJUST_STAMP(2147));
      ADD_SINGLE_TYPEQ_TEST(core::FunctionContainerEnvironment_O,TYPEQ_ADJUST_STAMP(1243));
      ADD_RANGE_TYPEQ_TEST(chem::OligomerPart_Base_O,chem::OligomerPart_Monomer_O,TYPEQ_ADJUST_STAMP(319),TYPEQ_ADJUST_STAMP(327));
      ADD_SINGLE_TYPEQ_TEST(chem::CDNode_O,TYPEQ_ADJUST_STAMP(315));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ResumeInst_O,TYPEQ_ADJUST_STAMP(2335));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Function_O,TYPEQ_ADJUST_STAMP(2411));
      ADD_SINGLE_TYPEQ_TEST(chem::AddIonOctree_O,TYPEQ_ADJUST_STAMP(311));
      ADD_SINGLE_TYPEQ_TEST(chem::StereoInformation_O,TYPEQ_ADJUST_STAMP(307));
      ADD_SINGLE_TYPEQ_TEST(geom::BoundingCuboid_O,TYPEQ_ADJUST_STAMP(303));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomIndexer_O,TYPEQ_ADJUST_STAMP(299));
      ADD_RANGE_TYPEQ_TEST(chem::Restraint_O,chem::RestraintDihedral_O,TYPEQ_ADJUST_STAMP(271),TYPEQ_ADJUST_STAMP(295));
      ADD_SINGLE_TYPEQ_TEST(llvmo::IRBuilder_O,TYPEQ_ADJUST_STAMP(2283));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ClaspJIT_O,TYPEQ_ADJUST_STAMP(1151));
      ADD_RANGE_TYPEQ_TEST(chem::FFParameter_O,chem::FFAngle_O,TYPEQ_ADJUST_STAMP(243),TYPEQ_ADJUST_STAMP(267));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_byte8_t_O,TYPEQ_ADJUST_STAMP(2195));
      ADD_RANGE_TYPEQ_TEST(llvmo::DILexicalBlockBase_O,llvmo::DILexicalBlock_O,TYPEQ_ADJUST_STAMP(2575),TYPEQ_ADJUST_STAMP(2579));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_fixnum_O,TYPEQ_ADJUST_STAMP(1963));
      ADD_SINGLE_TYPEQ_TEST(chem::RepresentedEntityNameSet_O,TYPEQ_ADJUST_STAMP(523));
      ADD_SINGLE_TYPEQ_TEST(chem::MonomerCoordinates_O,TYPEQ_ADJUST_STAMP(239));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyFunction_O,TYPEQ_ADJUST_STAMP(427));
      ADD_SINGLE_TYPEQ_TEST(llvmo::VAArgInst_O,TYPEQ_ADJUST_STAMP(2367));
      ADD_SINGLE_TYPEQ_TEST(chem::Twister_O,TYPEQ_ADJUST_STAMP(235));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_fixnum_O,TYPEQ_ADJUST_STAMP(1591));
      ADD_SINGLE_TYPEQ_TEST(core::SharpEqualWrapper_O,TYPEQ_ADJUST_STAMP(1147));
      ADD_SINGLE_TYPEQ_TEST(geom::SimpleMDArrayCoordinate_O,TYPEQ_ADJUST_STAMP(1763));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIFile_O,TYPEQ_ADJUST_STAMP(2563));
      ADD_SINGLE_TYPEQ_TEST(chem::AntechamberFocusAtomMatch_O,TYPEQ_ADJUST_STAMP(1023));
      ADD_SINGLE_TYPEQ_TEST(chem::PdbMonomerDatabase_O,TYPEQ_ADJUST_STAMP(231));
      ADD_SINGLE_TYPEQ_TEST(chem::Aggregate_O,TYPEQ_ADJUST_STAMP(139));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_int8_t_O,TYPEQ_ADJUST_STAMP(1635));
      ADD_SINGLE_TYPEQ_TEST(chem::SearchStatistics_O,TYPEQ_ADJUST_STAMP(227));
      ADD_SINGLE_TYPEQ_TEST(llvmo::EngineBuilder_O,TYPEQ_ADJUST_STAMP(2299));
      ADD_RANGE_TYPEQ_TEST(kinematics::Joint_O,kinematics::DelayedBondedJoint_O,TYPEQ_ADJUST_STAMP(203),TYPEQ_ADJUST_STAMP(223));
      ADD_SINGLE_TYPEQ_TEST(llvmo::SectionedAddress_O,TYPEQ_ADJUST_STAMP(2295));
      ADD_SINGLE_TYPEQ_TEST(core::TagbodyEnvironment_O,TYPEQ_ADJUST_STAMP(1259));
      ADD_SINGLE_TYPEQ_TEST(core::SpecialForm_O,TYPEQ_ADJUST_STAMP(1483));
      ADD_SINGLE_TYPEQ_TEST(chem::EnergyStretch_O,TYPEQ_ADJUST_STAMP(71));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FunctionCallee_O,TYPEQ_ADJUST_STAMP(199));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIBuilder_O,TYPEQ_ADJUST_STAMP(2291));
      ADD_SINGLE_TYPEQ_TEST(llvmo::APInt_O,TYPEQ_ADJUST_STAMP(2287));
      ADD_RANGE_TYPEQ_TEST(core::Symbol_O,core::Null_O,TYPEQ_ADJUST_STAMP(1139),TYPEQ_ADJUST_STAMP(1143));
      ADD_RANGE_TYPEQ_TEST(chem::AtomOrBondMatchNode_O,chem::AtomTest_O,TYPEQ_ADJUST_STAMP(1003),TYPEQ_ADJUST_STAMP(1031));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_byte4_t_O,TYPEQ_ADJUST_STAMP(1551));
      ADD_RANGE_TYPEQ_TEST(core::Iterator_O,chem::IterateAtoms_O,TYPEQ_ADJUST_STAMP(1103),TYPEQ_ADJUST_STAMP(1135));
      ADD_SINGLE_TYPEQ_TEST(chem::FFItorDb_O,TYPEQ_ADJUST_STAMP(367));
      ADD_RANGE_TYPEQ_TEST(llvmo::IRBuilderBase_O,llvmo::IRBuilder_O,TYPEQ_ADJUST_STAMP(2279),TYPEQ_ADJUST_STAMP(2283));
      ADD_SINGLE_TYPEQ_TEST(core::Null_O,TYPEQ_ADJUST_STAMP(1143));
      ADD_SINGLE_TYPEQ_TEST(chem::RingFinder_O,TYPEQ_ADJUST_STAMP(195));
      ADD_SINGLE_TYPEQ_TEST(core::SingleDispatchMethod_O,TYPEQ_ADJUST_STAMP(1099));
      ADD_RANGE_TYPEQ_TEST(core::CxxObject_O,mp::Process_O,TYPEQ_ADJUST_STAMP(35),TYPEQ_ADJUST_STAMP(1095));
      ADD_SINGLE_TYPEQ_TEST(llvmo::FunctionType_O,TYPEQ_ADJUST_STAMP(2511));
      ADD_SINGLE_TYPEQ_TEST(clbind::DummyCreator_O,TYPEQ_ADJUST_STAMP(1463));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIContext_O,TYPEQ_ADJUST_STAMP(2275));
      ADD_SINGLE_TYPEQ_TEST(llvmo::JITDylib_O,TYPEQ_ADJUST_STAMP(2271));
      ADD_RANGE_TYPEQ_TEST(core::Pointer_O,clasp_ffi::ForeignData_O,TYPEQ_ADJUST_STAMP(27),TYPEQ_ADJUST_STAMP(31));
      ADD_SINGLE_TYPEQ_TEST(llvmo::UnreachableInst_O,TYPEQ_ADJUST_STAMP(2331));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_int64_t_O,TYPEQ_ADJUST_STAMP(1971));
      ADD_RANGE_TYPEQ_TEST(chem::FFParameterBaseDb_O,chem::FFPtorDb_O,TYPEQ_ADJUST_STAMP(363),TYPEQ_ADJUST_STAMP(383));
      ADD_RANGE_TYPEQ_TEST(core::Float_O,core::ShortFloat_O,TYPEQ_ADJUST_STAMP(1383),TYPEQ_ADJUST_STAMP(1399));
      ADD_SINGLE_TYPEQ_TEST(chem::ResidueTest_O,TYPEQ_ADJUST_STAMP(1019));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintDistance_O,TYPEQ_ADJUST_STAMP(279));
      ADD_SINGLE_TYPEQ_TEST(chem::SmartsRoot_O,TYPEQ_ADJUST_STAMP(1011));
      ADD_SINGLE_TYPEQ_TEST(clbind::ConstructorCreator_O,TYPEQ_ADJUST_STAMP(1459));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DIDerivedType_O,TYPEQ_ADJUST_STAMP(2595));
      ADD_SINGLE_TYPEQ_TEST(chem::TwisterDriver_O,TYPEQ_ADJUST_STAMP(191));
      ADD_SINGLE_TYPEQ_TEST(core::TranslationFunctor_O,TYPEQ_ADJUST_STAMP(1495));
      ADD_SINGLE_TYPEQ_TEST(llvmo::Code_O,TYPEQ_ADJUST_STAMP(787));
      ADD_SINGLE_TYPEQ_TEST(units::NamedUnit_O,TYPEQ_ADJUST_STAMP(775));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_double_O,TYPEQ_ADJUST_STAMP(2035));
      ADD_SINGLE_TYPEQ_TEST(llvmo::StoreInst_O,TYPEQ_ADJUST_STAMP(2327));
      ADD_RANGE_TYPEQ_TEST(core::CodeEntryPoint_O,core::GlobalEntryPoint_O,TYPEQ_ADJUST_STAMP(1303),TYPEQ_ADJUST_STAMP(1311));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte8_t_O,TYPEQ_ADJUST_STAMP(1787));
      ADD_SINGLE_TYPEQ_TEST(chem::VirtualSphere_O,TYPEQ_ADJUST_STAMP(187));
      ADD_RANGE_TYPEQ_TEST(core::Rational_O,core::Fixnum_dummy_O,TYPEQ_ADJUST_STAMP(1363),TYPEQ_ADJUST_STAMP(1379));
      ADD_SINGLE_TYPEQ_TEST(adapt::IndexedObjectBag_O,TYPEQ_ADJUST_STAMP(183));
      ADD_SINGLE_TYPEQ_TEST(chem::CipPrioritizer_O,TYPEQ_ADJUST_STAMP(179));
      ADD_SINGLE_TYPEQ_TEST(chem::AtomTable_O,TYPEQ_ADJUST_STAMP(175));
      ADD_RANGE_TYPEQ_TEST(core::Real_O,core::ShortFloat_O,TYPEQ_ADJUST_STAMP(1359),TYPEQ_ADJUST_STAMP(1399));
      ADD_SINGLE_TYPEQ_TEST(core::FuncallableInstanceCreator_O,TYPEQ_ADJUST_STAMP(1455));
      ADD_SINGLE_TYPEQ_TEST(chem::Topology_O,TYPEQ_ADJUST_STAMP(171));
      ADD_SINGLE_TYPEQ_TEST(core::StringOutputStream_O,TYPEQ_ADJUST_STAMP(2695));
      ADD_RANGE_TYPEQ_TEST(chem::EntityNameSetWithCap_O,chem::RingClosingMate_O,TYPEQ_ADJUST_STAMP(507),TYPEQ_ADJUST_STAMP(515));
      ADD_RANGE_TYPEQ_TEST(chem::BondMatcher_O,chem::BondLogical_O,TYPEQ_ADJUST_STAMP(987),TYPEQ_ADJUST_STAMP(995));
      ADD_SINGLE_TYPEQ_TEST(llvmo::AttributeSet_O,TYPEQ_ADJUST_STAMP(23));
      ADD_SINGLE_TYPEQ_TEST(llvmo::MDBuilder_O,TYPEQ_ADJUST_STAMP(167));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DISubprogram_O,TYPEQ_ADJUST_STAMP(2571));
      ADD_SINGLE_TYPEQ_TEST(chem::TrajectoryFrame_O,TYPEQ_ADJUST_STAMP(163));
      ADD_RANGE_TYPEQ_TEST(core::Creator_O,core::StandardClassCreator_O,TYPEQ_ADJUST_STAMP(1451),TYPEQ_ADJUST_STAMP(1479));
      ADD_SINGLE_TYPEQ_TEST(llvmo::ArrayType_O,TYPEQ_ADJUST_STAMP(2507));
      ADD_SINGLE_TYPEQ_TEST(chem::PdbWriter_O,TYPEQ_ADJUST_STAMP(159));
      ADD_SINGLE_TYPEQ_TEST(chem::Stereoisomer_O,TYPEQ_ADJUST_STAMP(499));
      ADD_RANGE_TYPEQ_TEST(llvmo::MCSubtargetInfo_O,llvmo::TargetSubtargetInfo_O,TYPEQ_ADJUST_STAMP(2263),TYPEQ_ADJUST_STAMP(2267));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleMDArray_byte2_t_O,TYPEQ_ADJUST_STAMP(1707));
      ADD_SINGLE_TYPEQ_TEST(llvmo::BlockAddress_O,TYPEQ_ADJUST_STAMP(2419));
      ADD_SINGLE_TYPEQ_TEST(llvmo::DICompositeType_O,TYPEQ_ADJUST_STAMP(2591));
      ADD_RANGE_TYPEQ_TEST(chem::Matter_O,chem::Molecule_O,TYPEQ_ADJUST_STAMP(135),TYPEQ_ADJUST_STAMP(155));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableEq_O,TYPEQ_ADJUST_STAMP(1327));
      ADD_SINGLE_TYPEQ_TEST(chem::RestraintChiral_O,TYPEQ_ADJUST_STAMP(275));
      ADD_RANGE_TYPEQ_TEST(chem::EnergyComponent_O,chem::EnergyAngle_O,TYPEQ_ADJUST_STAMP(67),TYPEQ_ADJUST_STAMP(131));
      ADD_SINGLE_TYPEQ_TEST(kinematics::DelayedBondedJointTemplate_O,TYPEQ_ADJUST_STAMP(619));
      ADD_SINGLE_TYPEQ_TEST(core::HashTableEqualp_O,TYPEQ_ADJUST_STAMP(1323));
      ADD_SINGLE_TYPEQ_TEST(core::LambdaListHandler_O,TYPEQ_ADJUST_STAMP(19));
      ADD_RANGE_TYPEQ_TEST(kinematics::RotamerSetBase_O,kinematics::RotamerSet_O,TYPEQ_ADJUST_STAMP(55),TYPEQ_ADJUST_STAMP(63));
      ADD_SINGLE_TYPEQ_TEST(core::SymbolMacroletEnvironment_O,TYPEQ_ADJUST_STAMP(1239));
      ADD_SINGLE_TYPEQ_TEST(chem::RestrainedExoCyclicAtom_O,TYPEQ_ADJUST_STAMP(931));
      ADD_RANGE_TYPEQ_TEST(llvmo::ImmutablePass_O,llvmo::TargetLibraryInfoWrapperPass_O,TYPEQ_ADJUST_STAMP(2251),TYPEQ_ADJUST_STAMP(2255));
      ADD_SINGLE_TYPEQ_TEST(core::FuncallableInstance_O,TYPEQ_ADJUST_STAMP(1445));
      ADD_SINGLE_TYPEQ_TEST(chem::RingCoupling_O,TYPEQ_ADJUST_STAMP(647));
      ADD_SINGLE_TYPEQ_TEST(kinematics::FoldTree_O,TYPEQ_ADJUST_STAMP(51));
      ADD_SINGLE_TYPEQ_TEST(chem::NumericalFunction_O,TYPEQ_ADJUST_STAMP(47));
      ADD_SINGLE_TYPEQ_TEST(core::SynonymStream_O,TYPEQ_ADJUST_STAMP(2687));
      ADD_SINGLE_TYPEQ_TEST(core::MDArray_int2_t_O,TYPEQ_ADJUST_STAMP(1583));
      ADD_SINGLE_TYPEQ_TEST(kinematics::ChiList_O,TYPEQ_ADJUST_STAMP(43));
      ADD_SINGLE_TYPEQ_TEST(core::SimpleVector_int16_t_O,TYPEQ_ADJUST_STAMP(2131));
      ADD_RANGE_TYPEQ_TEST(llvmo::Pass_O,llvmo::FunctionPass_O,TYPEQ_ADJUST_STAMP(2243),TYPEQ_ADJUST_STAMP(2259));
      ADD_SINGLE_TYPEQ_TEST(chem::StepReport_O,TYPEQ_ADJUST_STAMP(555));
      ADD_RANGE_TYPEQ_TEST(kinematics::BondedJointTemplate_O,kinematics::RootBondedJointTemplate_O,TYPEQ_ADJUST_STAMP(615),TYPEQ_ADJUST_STAMP(623));
      ADD_SINGLE_TYPEQ_TEST(chem::FFVdw_O,TYPEQ_ADJUST_STAMP(247));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte4_t_O,TYPEQ_ADJUST_STAMP(1855));
      ADD_SINGLE_TYPEQ_TEST(asttooling::SourceLocation_O,TYPEQ_ADJUST_STAMP(39));
      ADD_SINGLE_TYPEQ_TEST(core::CatchEnvironment_O,TYPEQ_ADJUST_STAMP(1235));
      ADD_SINGLE_TYPEQ_TEST(kinematics::RingClosingMonomerNode_O,TYPEQ_ADJUST_STAMP(727));
      ADD_SINGLE_TYPEQ_TEST(llvmo::TargetSubtargetInfo_O,TYPEQ_ADJUST_STAMP(2267));
      ADD_RANGE_TYPEQ_TEST(chem::Root_O,chem::AntechamberRoot_O,TYPEQ_ADJUST_STAMP(1007),TYPEQ_ADJUST_STAMP(1015));
      ADD_SINGLE_TYPEQ_TEST(core::Bignum_O,TYPEQ_ADJUST_STAMP(1375));
      ADD_SINGLE_TYPEQ_TEST(kinematics::RootBondedJoint_O,TYPEQ_ADJUST_STAMP(219));
      ADD_SINGLE_TYPEQ_TEST(core::LocalEntryPointGenerator_O,TYPEQ_ADJUST_STAMP(1299));
      ADD_SINGLE_TYPEQ_TEST(core::GlobalEntryPointGenerator_O,TYPEQ_ADJUST_STAMP(1295));
      ADD_SINGLE_TYPEQ_TEST(core::ComplexVector_byte32_t_O,TYPEQ_ADJUST_STAMP(1927));
      ADD_RANGE_TYPEQ_TEST(llvmo::GlobalValue_O,llvmo::GlobalVariable_O,TYPEQ_ADJUST_STAMP(2407),TYPEQ_ADJUST_STAMP(2415));
      ADD_SINGLE_TYPEQ_TEST(llvmo::PointerType_O,TYPEQ_ADJUST_STAMP(2503));
      ADD_SINGLE_TYPEQ_TEST(core::TwoWayStream_O,TYPEQ_ADJUST_STAMP(2683));
#endif // defined(GC_TYPEQ)
#if defined(DO_CLASS)
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyAngle_O),STAMPWTAG_chem__EnergyAngle_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),STAMPWTAG_core__SimpleVector_byte2_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),STAMPWTAG_core__SimpleMDArray_fixnum_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),STAMPWTAG_core__SimpleMDArray_int32_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Integer_O),STAMPWTAG_core__Integer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::OutPlug_O),STAMPWTAG_chem__OutPlug_O);
DO_CLASS(SAFE_TYPE_MACRO(mp::Process_O),STAMPWTAG_mp__Process_O);
DO_CLASS(SAFE_TYPE_MACRO(core::LightUserData_O),STAMPWTAG_core__LightUserData_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArrayT_O),STAMPWTAG_core__MDArrayT_O);
DO_CLASS(SAFE_TYPE_MACRO(core::DirectoryEntry_O),STAMPWTAG_core__DirectoryEntry_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Linker_O),STAMPWTAG_llvmo__Linker_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AtomIdToAtomMap_O),STAMPWTAG_chem__AtomIdToAtomMap_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_float_O),STAMPWTAG_core__MDArray_float_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::IterateMatter_O),STAMPWTAG_chem__IterateMatter_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFTypesDb_O),STAMPWTAG_chem__FFTypesDb_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_float_O),STAMPWTAG_core__ComplexVector_float_O);
DO_CLASS(SAFE_TYPE_MACRO(core::StandardClassCreator_O),STAMPWTAG_core__StandardClassCreator_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Alias_O),STAMPWTAG_chem__Alias_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::MapOfMonomerNamesToAtomIndexers_O),STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O);
DO_CLASS(SAFE_TYPE_MACRO(adapt::SymbolSet_O),STAMPWTAG_adapt__SymbolSet_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Minimizer_O),STAMPWTAG_chem__Minimizer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SpecificContext_O),STAMPWTAG_chem__SpecificContext_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Molecule_O),STAMPWTAG_chem__Molecule_O);
DO_CLASS(SAFE_TYPE_MACRO(core::InvocationHistoryFrameIterator_O),STAMPWTAG_core__InvocationHistoryFrameIterator_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),STAMPWTAG_core__SimpleVector_size_t_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::CheckpointOutPlugJoint_O),STAMPWTAG_kinematics__CheckpointOutPlugJoint_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Dimacs_O),STAMPWTAG_chem__Dimacs_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIScope_O),STAMPWTAG_llvmo__DIScope_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FullLargeSquareMatrix_O),STAMPWTAG_chem__FullLargeSquareMatrix_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FileStatus_O),STAMPWTAG_core__FileStatus_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),STAMPWTAG_chem__EnergySketchStretch_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::IndirectBrInst_O),STAMPWTAG_llvmo__IndirectBrInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),STAMPWTAG_chem__OligomerPart_Monomer_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ConstantArray_O),STAMPWTAG_llvmo__ConstantArray_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ElementsInfo_O),STAMPWTAG_chem__ElementsInfo_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::PHINode_O),STAMPWTAG_llvmo__PHINode_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),STAMPWTAG_chem__EnergyFixedNonbondRestraint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Package_O),STAMPWTAG_core__Package_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AtomTest_O),STAMPWTAG_chem__AtomTest_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Stream_O),STAMPWTAG_core__Stream_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),STAMPWTAG_chem__EnergyAnchorRestraint_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFAngle_O),STAMPWTAG_chem__FFAngle_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ShortFloat_O),STAMPWTAG_core__ShortFloat_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::MDString_O),STAMPWTAG_llvmo__MDString_O);
DO_CLASS(SAFE_TYPE_MACRO(core::AbstractSimpleVector_O),STAMPWTAG_core__AbstractSimpleVector_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),STAMPWTAG_core__SimpleMDArray_byte16_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Pathname_O),STAMPWTAG_core__Pathname_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Str8Ns_O),STAMPWTAG_core__Str8Ns_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::UndefValue_O),STAMPWTAG_llvmo__UndefValue_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ChemInfoNode_O),STAMPWTAG_chem__ChemInfoNode_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Path_O),STAMPWTAG_core__Path_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::BoundingBox_O),STAMPWTAG_chem__BoundingBox_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::StructureComparer_O),STAMPWTAG_chem__StructureComparer_O);
DO_CLASS(SAFE_TYPE_MACRO(core::IOStreamStream_O),STAMPWTAG_core__IOStreamStream_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Scope_O),STAMPWTAG_core__Scope_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::BondLogical_O),STAMPWTAG_chem__BondLogical_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::MoleculeGraph_O),STAMPWTAG_chem__MoleculeGraph_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_double_O),STAMPWTAG_core__ComplexVector_double_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Monomer_O),STAMPWTAG_chem__Monomer_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::Conformation_O),STAMPWTAG_kinematics__Conformation_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConstitutionAtoms_O),STAMPWTAG_chem__ConstitutionAtoms_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),STAMPWTAG_core__SimpleMDArrayBit_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Branch_O),STAMPWTAG_chem__Branch_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),STAMPWTAG_kinematics__ChiDihedral_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),STAMPWTAG_core__ComplexVector_int2_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConstitutionBond_O),STAMPWTAG_chem__ConstitutionBond_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CDBond_O),STAMPWTAG_chem__CDBond_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CombinedForceField_O),STAMPWTAG_chem__CombinedForceField_O);
DO_CLASS(SAFE_TYPE_MACRO(mp::Mutex_O),STAMPWTAG_mp__Mutex_O);
DO_CLASS(SAFE_TYPE_MACRO(core::RecursiveDirectoryIterator_O),STAMPWTAG_core__RecursiveDirectoryIterator_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),STAMPWTAG_chem__RestraintDihedral_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),STAMPWTAG_chem__AntechamberRoot_O);
DO_CLASS(SAFE_TYPE_MACRO(core::StringInputStream_O),STAMPWTAG_core__StringInputStream_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FunctionFrame_O),STAMPWTAG_core__FunctionFrame_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::IterateAtoms_O),STAMPWTAG_chem__IterateAtoms_O);
DO_CLASS(SAFE_TYPE_MACRO(core::LongFloat_O),STAMPWTAG_core__LongFloat_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),STAMPWTAG_core__ComplexVector_int4_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFPtorDb_O),STAMPWTAG_chem__FFPtorDb_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ComplexRestraint_O),STAMPWTAG_chem__ComplexRestraint_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::LibraryFile_O),STAMPWTAG_llvmo__LibraryFile_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_T_O),STAMPWTAG_core__ComplexVector_T_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RootMatchNode_O),STAMPWTAG_chem__RootMatchNode_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ValueFrame_O),STAMPWTAG_core__ValueFrame_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),STAMPWTAG_core__SimpleMDArray_int4_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),STAMPWTAG_core__SimpleVector_int32_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Complex_O),STAMPWTAG_core__Complex_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConformationCollectionEntry_O),STAMPWTAG_chem__ConformationCollectionEntry_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RingClosingMate_O),STAMPWTAG_chem__RingClosingMate_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::OMatrix_O),STAMPWTAG_geom__OMatrix_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ValueAsMetadata_O),STAMPWTAG_llvmo__ValueAsMetadata_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ConstantExpr_O),STAMPWTAG_llvmo__ConstantExpr_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),STAMPWTAG_chem__FFNonbondDb_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::StructType_O),STAMPWTAG_llvmo__StructType_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),STAMPWTAG_chem__EnergyNonbond_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),STAMPWTAG_core__ComplexVector_int16_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),STAMPWTAG_core__SimpleMDArray_float_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Residue_O),STAMPWTAG_chem__Residue_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CalculatePosition_O),STAMPWTAG_chem__CalculatePosition_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),STAMPWTAG_chem__SuperposeSelectedAtoms_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Target_O),STAMPWTAG_llvmo__Target_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),STAMPWTAG_kinematics__MonomerNode_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),STAMPWTAG_core__SimpleVector_byte32_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SingleDispatchGenericFunctionClosure_O),STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Module_O),STAMPWTAG_llvmo__Module_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIExpression_O),STAMPWTAG_llvmo__DIExpression_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SingleFloat_dummy_O),STAMPWTAG_core__SingleFloat_dummy_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ValueEnvironment_O),STAMPWTAG_core__ValueEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Trajectory_O),STAMPWTAG_chem__Trajectory_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::InvokeInst_O),STAMPWTAG_llvmo__InvokeInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RestraintFixedNonbond_O),STAMPWTAG_chem__RestraintFixedNonbond_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFNonbond_O),STAMPWTAG_chem__FFNonbond_O);
DO_CLASS(SAFE_TYPE_MACRO(core::StrNs_O),STAMPWTAG_core__StrNs_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::VirtualAtom_O),STAMPWTAG_chem__VirtualAtom_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::OriginPlug_O),STAMPWTAG_chem__OriginPlug_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::FunctionPassManager_O),STAMPWTAG_llvmo__FunctionPassManager_O);
DO_CLASS(SAFE_TYPE_MACRO(core::DoubleFloat_O),STAMPWTAG_core__DoubleFloat_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),STAMPWTAG_chem__ConformationExplorerEntryStage_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),STAMPWTAG_chem__FrameRecognizer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CalculatePositionAlongBond_O),STAMPWTAG_chem__CalculatePositionAlongBond_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),STAMPWTAG_core__MDArray_int32_t_O);
DO_CLASS(SAFE_TYPE_MACRO(adapt::SymbolList_O),STAMPWTAG_adapt__SymbolList_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),STAMPWTAG_chem__CalculatePositionUsingInternals_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O);
DO_CLASS(SAFE_TYPE_MACRO(asttooling::AsttoolingExposer_O),STAMPWTAG_asttooling__AsttoolingExposer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),STAMPWTAG_chem__EnergyDihedral_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),STAMPWTAG_core__SimpleMDArray_size_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SmallMultimap_O),STAMPWTAG_core__SmallMultimap_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Fixnum_dummy_O),STAMPWTAG_core__Fixnum_dummy_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),STAMPWTAG_chem__ImproperTorsion_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),STAMPWTAG_chem__ZMatrixAngleInternal_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Rotamer_O),STAMPWTAG_chem__Rotamer_O);
DO_CLASS(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),STAMPWTAG_core__WeakKeyHashTable_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Rack_O),STAMPWTAG_core__Rack_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),STAMPWTAG_core__MDArrayBaseChar_O);
DO_CLASS(SAFE_TYPE_MACRO(core::UserData_O),STAMPWTAG_core__UserData_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ExternalObject_O),STAMPWTAG_core__ExternalObject_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DINode_O),STAMPWTAG_llvmo__DINode_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::GlobalVariable_O),STAMPWTAG_llvmo__GlobalVariable_O);
DO_CLASS(SAFE_TYPE_MACRO(core::BroadcastStream_O),STAMPWTAG_core__BroadcastStream_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::StereoisomerAtoms_O),STAMPWTAG_chem__StereoisomerAtoms_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),STAMPWTAG_chem__ConformationExplorerMatch_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Library_O),STAMPWTAG_llvmo__Library_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ChemExposer_O),STAMPWTAG_chem__ChemExposer_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::Checkpoint_O),STAMPWTAG_kinematics__Checkpoint_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SpanningInfo_O),STAMPWTAG_chem__SpanningInfo_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DINodeArray_O),STAMPWTAG_llvmo__DINodeArray_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::TargetOptions_O),STAMPWTAG_llvmo__TargetOptions_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CDText_O),STAMPWTAG_chem__CDText_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::BondTest_O),STAMPWTAG_chem__BondTest_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DWARFContext_O),STAMPWTAG_llvmo__DWARFContext_O);
DO_CLASS(SAFE_TYPE_MACRO(adapt::IterateCons_O),STAMPWTAG_adapt__IterateCons_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),STAMPWTAG_geom__SimpleVectorCoordinate_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFItor_O),STAMPWTAG_chem__FFItor_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::NamedMDNode_O),STAMPWTAG_llvmo__NamedMDNode_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),STAMPWTAG_core__SimpleVector_byte16_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),STAMPWTAG_chem__ChemInfoGraph_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),STAMPWTAG_core__SimpleVector_byte64_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),STAMPWTAG_chem__EnergyPointToLineRestraint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleBaseString_O),STAMPWTAG_core__SimpleBaseString_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Test_O),STAMPWTAG_core__Test_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Metadata_O),STAMPWTAG_llvmo__Metadata_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_O),STAMPWTAG_core__MDArray_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),STAMPWTAG_chem__RigidBodyEnergyFunction_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::ChainNode_O),STAMPWTAG_kinematics__ChainNode_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::CheckpointJoint_O),STAMPWTAG_kinematics__CheckpointJoint_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::StructLayout_O),STAMPWTAG_llvmo__StructLayout_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Mate_O),STAMPWTAG_chem__Mate_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),STAMPWTAG_core__SimpleMDArrayT_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),STAMPWTAG_chem__ConformationExplorer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::BondList_O),STAMPWTAG_chem__BondList_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ActivationFrame_O),STAMPWTAG_core__ActivationFrame_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::LoadInst_O),STAMPWTAG_llvmo__LoadInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::MacroModelFile_O),STAMPWTAG_chem__MacroModelFile_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),STAMPWTAG_core__MDArray_byte2_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Angle_O),STAMPWTAG_chem__Angle_O);
DO_CLASS(SAFE_TYPE_MACRO(core::LexicalEnvironment_O),STAMPWTAG_core__LexicalEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(core::PosixTime_O),STAMPWTAG_core__PosixTime_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::MetadataAsValue_O),STAMPWTAG_llvmo__MetadataAsValue_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::RotamerSet_O),STAMPWTAG_kinematics__RotamerSet_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),STAMPWTAG_core__SimpleVector_int8_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SpecificContextSet_O),STAMPWTAG_chem__SpecificContextSet_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIType_O),STAMPWTAG_llvmo__DIType_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),STAMPWTAG_chem__ZMatrixEntry_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Readtable_O),STAMPWTAG_core__Readtable_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CalculatePositionRelativeToOrigin_O),STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),STAMPWTAG_chem__ChemInfoMatch_O);
DO_CLASS(SAFE_TYPE_MACRO(units::Quantity_O),STAMPWTAG_units__Quantity_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::AtomTree_O),STAMPWTAG_kinematics__AtomTree_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::MDNode_O),STAMPWTAG_llvmo__MDNode_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::GenericOctree_O),STAMPWTAG_chem__GenericOctree_O);
DO_CLASS(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),STAMPWTAG_mp__RecursiveMutex_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::MinimizerLog_O),STAMPWTAG_chem__MinimizerLog_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_float_O),STAMPWTAG_core__SimpleVector_float_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFVdwDb_O),STAMPWTAG_chem__FFVdwDb_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),STAMPWTAG_core__SimpleVector_int4_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFPtor_O),STAMPWTAG_chem__FFPtor_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::InfoDb_O),STAMPWTAG_chem__InfoDb_O);
DO_CLASS(SAFE_TYPE_MACRO(core::LoadTimeValues_O),STAMPWTAG_core__LoadTimeValues_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),STAMPWTAG_kinematics__OriginJumpJoint_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::CodeBase_O),STAMPWTAG_llvmo__CodeBase_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DataLayout_O),STAMPWTAG_llvmo__DataLayout_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::BasicBlock_O),STAMPWTAG_llvmo__BasicBlock_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),STAMPWTAG_core__ComplexVector_byte64_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),STAMPWTAG_chem__AntechamberBondToAtomTest_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),STAMPWTAG_core__MDArray_byte32_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Character_dummy_O),STAMPWTAG_core__Character_dummy_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Constant_O),STAMPWTAG_llvmo__Constant_O);
DO_CLASS(SAFE_TYPE_MACRO(core::NativeVector_int_O),STAMPWTAG_core__NativeVector_int_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIBasicType_O),STAMPWTAG_llvmo__DIBasicType_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::APFloat_O),STAMPWTAG_llvmo__APFloat_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),STAMPWTAG_core__SimpleMDArrayCharacter_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),STAMPWTAG_core__SimpleCharacterString_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),STAMPWTAG_kinematics__RootBondedJointTemplate_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Array_O),STAMPWTAG_core__Array_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Argument_O),STAMPWTAG_llvmo__Argument_O);
DO_CLASS(SAFE_TYPE_MACRO(units::Unit_O),STAMPWTAG_units__Unit_O);
DO_CLASS(SAFE_TYPE_MACRO(core::GlobalEntryPoint_O),STAMPWTAG_core__GlobalEntryPoint_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::TargetPassConfig_O),STAMPWTAG_llvmo__TargetPassConfig_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::IterateBonds_O),STAMPWTAG_chem__IterateBonds_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CDFragment_O),STAMPWTAG_chem__CDFragment_O);
DO_CLASS(SAFE_TYPE_MACRO(core::GlueEnvironment_O),STAMPWTAG_core__GlueEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ReturnInst_O),STAMPWTAG_llvmo__ReturnInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::MonomerContext_O),STAMPWTAG_chem__MonomerContext_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::Rotamer_O),STAMPWTAG_kinematics__Rotamer_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),STAMPWTAG_core__MDArray_byte16_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Plug_O),STAMPWTAG_chem__Plug_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFNonbondCrossTermTable_O),STAMPWTAG_chem__FFNonbondCrossTermTable_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::MonomerBaseNode_O),STAMPWTAG_kinematics__MonomerBaseNode_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Type_O),STAMPWTAG_llvmo__Type_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::StereoConfiguration_O),STAMPWTAG_chem__StereoConfiguration_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Command_O),STAMPWTAG_chem__Command_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FileScope_O),STAMPWTAG_core__FileScope_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),STAMPWTAG_core__SimpleMDArray_byte4_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),STAMPWTAG_core__SimpleVector_int64_t_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ConstantDataSequential_O),STAMPWTAG_llvmo__ConstantDataSequential_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),STAMPWTAG_chem__SuperposeEngine_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EntityNameSet_O),STAMPWTAG_chem__EntityNameSet_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ResidueList_O),STAMPWTAG_chem__ResidueList_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DebugLoc_O),STAMPWTAG_llvmo__DebugLoc_O);
DO_CLASS(SAFE_TYPE_MACRO(core::WeakPointer_O),STAMPWTAG_core__WeakPointer_O);
DO_CLASS(SAFE_TYPE_MACRO(core::IOFileStream_O),STAMPWTAG_core__IOFileStream_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),STAMPWTAG_chem__ConstitutionVirtualAtom_O);
DO_CLASS(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),STAMPWTAG_core__RuntimeVisibleEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ProperTorsion_O),STAMPWTAG_chem__ProperTorsion_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::IterateResidues_O),STAMPWTAG_chem__IterateResidues_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Instruction_O),STAMPWTAG_llvmo__Instruction_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FileStream_O),STAMPWTAG_core__FileStream_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),STAMPWTAG_core__MDArrayCharacter_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::LandingPadInst_O),STAMPWTAG_llvmo__LandingPadInst_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::KinematicsExposer_O),STAMPWTAG_kinematics__KinematicsExposer_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Function_O),STAMPWTAG_core__Function_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),STAMPWTAG_kinematics__BondedJoint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),STAMPWTAG_core__SimpleMDArray_int2_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ImmobileObject_O),STAMPWTAG_core__ImmobileObject_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),STAMPWTAG_chem__StereoisomerVirtualAtom_O);
DO_CLASS(SAFE_TYPE_MACRO(core::HashTableEql_O),STAMPWTAG_core__HashTableEql_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SpanningLoop_O),STAMPWTAG_chem__SpanningLoop_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::PdbReader_O),STAMPWTAG_chem__PdbReader_O);
DO_CLASS(SAFE_TYPE_MACRO(mp::ConditionVariable_O),STAMPWTAG_mp__ConditionVariable_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),STAMPWTAG_chem__ConformationExplorerEntry_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),STAMPWTAG_core__MDArray_byte8_t_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerSet_O),STAMPWTAG_kinematics__BackboneDependentRotamerSet_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::BondListMatchNode_O),STAMPWTAG_chem__BondListMatchNode_O);
DO_CLASS(SAFE_TYPE_MACRO(units::Dimension_O),STAMPWTAG_units__Dimension_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::AtomicRMWInst_O),STAMPWTAG_llvmo__AtomicRMWInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::PdbMonomerConnectivity_O),STAMPWTAG_chem__PdbMonomerConnectivity_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::PassManager_O),STAMPWTAG_llvmo__PassManager_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_O),STAMPWTAG_core__SimpleVector_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::PlugWithMates_O),STAMPWTAG_chem__PlugWithMates_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Oligomer_O),STAMPWTAG_chem__Oligomer_O);
DO_CLASS(SAFE_TYPE_MACRO(adapt::ObjectSet_O),STAMPWTAG_adapt__ObjectSet_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),STAMPWTAG_core__SimpleMDArray_int64_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleString_O),STAMPWTAG_core__SimpleString_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIVariable_O),STAMPWTAG_llvmo__DIVariable_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),STAMPWTAG_core__FunctionValueEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(core::DerivableCxxClassCreator_O),STAMPWTAG_core__DerivableCxxClassCreator_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Coupling_O),STAMPWTAG_chem__Coupling_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),STAMPWTAG_geom__ComplexVectorCoordinate_O);
DO_CLASS(SAFE_TYPE_MACRO(asttooling::PresumedLoc_O),STAMPWTAG_asttooling__PresumedLoc_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),STAMPWTAG_core__ConcatenatedStream_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MacroletEnvironment_O),STAMPWTAG_core__MacroletEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),STAMPWTAG_kinematics__DelayedBondedJoint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Ratio_O),STAMPWTAG_core__Ratio_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),STAMPWTAG_core__ComplexVector_byte2_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),STAMPWTAG_core__ClosureWithSlots_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ExecutionEngine_O),STAMPWTAG_llvmo__ExecutionEngine_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ClassRepCreator_O),STAMPWTAG_core__ClassRepCreator_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Attribute_O),STAMPWTAG_llvmo__Attribute_O);
DO_CLASS(SAFE_TYPE_MACRO(core::DerivableCxxObject_O),STAMPWTAG_core__DerivableCxxObject_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::SwitchInst_O),STAMPWTAG_llvmo__SwitchInst_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),STAMPWTAG_core__SymbolToEnumConverter_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RestrainedPiBond_O),STAMPWTAG_chem__RestrainedPiBond_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConformationCollection_O),STAMPWTAG_chem__ConformationCollection_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),STAMPWTAG_core__ComplexVector_int32_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::VaList_dummy_O),STAMPWTAG_core__VaList_dummy_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::Color_O),STAMPWTAG_geom__Color_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),STAMPWTAG_kinematics__JointTemplate_O);
DO_CLASS(SAFE_TYPE_MACRO(core::LogicalPathname_O),STAMPWTAG_core__LogicalPathname_O);
DO_CLASS(SAFE_TYPE_MACRO(core::WrappedPointer_O),STAMPWTAG_core__WrappedPointer_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_double_O),STAMPWTAG_core__SimpleVector_double_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),STAMPWTAG_core__SimpleMDArray_byte32_t_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::LLVMTargetMachine_O),STAMPWTAG_llvmo__LLVMTargetMachine_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ClassHolder_O),STAMPWTAG_core__ClassHolder_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SketchFunction_O),STAMPWTAG_chem__SketchFunction_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::UnaryInstruction_O),STAMPWTAG_llvmo__UnaryInstruction_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::MonomerId_O),STAMPWTAG_kinematics__MonomerId_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_size_t_O),STAMPWTAG_core__MDArray_size_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::PathMessage_O),STAMPWTAG_chem__PathMessage_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::BondMatchNode_O),STAMPWTAG_chem__BondMatchNode_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),STAMPWTAG_chem__EnergyRigidBodyNonbond_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_O),STAMPWTAG_core__ComplexVector_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),STAMPWTAG_chem__SparseLargeSquareMatrix_O);
DO_CLASS(SAFE_TYPE_MACRO(clbind::ClassRegistry_O),STAMPWTAG_clbind__ClassRegistry_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Frame_O),STAMPWTAG_core__Frame_O);
DO_CLASS(SAFE_TYPE_MACRO(asttooling::AstVisitor_O),STAMPWTAG_asttooling__AstVisitor_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Isoname_O),STAMPWTAG_chem__Isoname_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Record_O),STAMPWTAG_core__Record_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Atom_O),STAMPWTAG_chem__Atom_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ZMatrix_O),STAMPWTAG_chem__ZMatrix_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),STAMPWTAG_chem__StereoisomerAtom_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SourcePosInfo_O),STAMPWTAG_core__SourcePosInfo_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::BranchInst_O),STAMPWTAG_llvmo__BranchInst_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::AllocaInst_O),STAMPWTAG_llvmo__AllocaInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),STAMPWTAG_chem__ZMatrixInternal_O);
DO_CLASS(SAFE_TYPE_MACRO(core::HashTableCustom_O),STAMPWTAG_core__HashTableCustom_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),STAMPWTAG_core__ComplexVector_byte8_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::HashTable_O),STAMPWTAG_core__HashTable_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ChemDraw_O),STAMPWTAG_chem__ChemDraw_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ReportBase_O),STAMPWTAG_chem__ReportBase_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),STAMPWTAG_chem__EnergyChiralRestraint_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::MonomerPack_O),STAMPWTAG_chem__MonomerPack_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),STAMPWTAG_geom__MDArrayCoordinate_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),STAMPWTAG_chem__Structure_Old_List_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),STAMPWTAG_core__SimpleMDArrayBaseChar_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::OctNode_O),STAMPWTAG_chem__OctNode_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Entity_O),STAMPWTAG_chem__Entity_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AGEdge_O),STAMPWTAG_chem__AGEdge_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ReadAmberParameters_O),STAMPWTAG_chem__ReadAmberParameters_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DILocation_O),STAMPWTAG_llvmo__DILocation_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_O),STAMPWTAG_core__SimpleMDArray_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Smirks_O),STAMPWTAG_chem__Smirks_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),STAMPWTAG_chem__EnergyDihedralRestraint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Number_O),STAMPWTAG_core__Number_O);
DO_CLASS(SAFE_TYPE_MACRO(core::T_O),STAMPWTAG_core__T_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DICompileUnit_O),STAMPWTAG_llvmo__DICompileUnit_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::FunctionPass_O),STAMPWTAG_llvmo__FunctionPass_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),STAMPWTAG_core__SimpleVector_byte4_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),STAMPWTAG_chem__ConstitutionAtom_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::CallBase_O),STAMPWTAG_llvmo__CallBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::CompileTimeEnvironment_O),STAMPWTAG_core__CompileTimeEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(mp::SharedMutex_O),STAMPWTAG_mp__SharedMutex_O);
DO_CLASS(SAFE_TYPE_MACRO(adapt::QDomNode_O),STAMPWTAG_adapt__QDomNode_O);
DO_CLASS(SAFE_TYPE_MACRO(core::InstanceCreator_O),STAMPWTAG_core__InstanceCreator_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),STAMPWTAG_chem__BondToAtomTest_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFAngleDb_O),STAMPWTAG_chem__FFAngleDb_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFTypeRule_O),STAMPWTAG_chem__FFTypeRule_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::InsertPoint_O),STAMPWTAG_llvmo__InsertPoint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FunctionDescription_O),STAMPWTAG_core__FunctionDescription_O);
DO_CLASS(SAFE_TYPE_MACRO(core::StrWNs_O),STAMPWTAG_core__StrWNs_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),STAMPWTAG_chem__Structure_Old_ListEntry_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),STAMPWTAG_chem__EnergyRigidBodyStaple_O);
DO_CLASS(SAFE_TYPE_MACRO(core::EchoStream_O),STAMPWTAG_core__EchoStream_O);
DO_CLASS(SAFE_TYPE_MACRO(core::HashTableBase_O),STAMPWTAG_core__HashTableBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArrayBit_O),STAMPWTAG_core__MDArrayBit_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),STAMPWTAG_core__ComplexVector_byte16_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFStretchDb_O),STAMPWTAG_chem__FFStretchDb_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::OVector2_O),STAMPWTAG_geom__OVector2_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DILocalScope_O),STAMPWTAG_llvmo__DILocalScope_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::OVector3_O),STAMPWTAG_geom__OVector3_O);
DO_CLASS(SAFE_TYPE_MACRO(core::LocalEntryPoint_O),STAMPWTAG_core__LocalEntryPoint_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DILexicalBlock_O),STAMPWTAG_llvmo__DILexicalBlock_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DITypeRefArray_O),STAMPWTAG_llvmo__DITypeRefArray_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RestraintAnchor_O),STAMPWTAG_chem__RestraintAnchor_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::InPlug_O),STAMPWTAG_chem__InPlug_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ModulePass_O),STAMPWTAG_llvmo__ModulePass_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),STAMPWTAG_chem__DirectionalCoupling_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DILocalVariable_O),STAMPWTAG_llvmo__DILocalVariable_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::TargetLibraryInfoWrapperPass_O),STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O);
DO_CLASS(SAFE_TYPE_MACRO(asttooling::QualType_O),STAMPWTAG_asttooling__QualType_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::User_O),STAMPWTAG_llvmo__User_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),STAMPWTAG_core__MDArray_int16_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),STAMPWTAG_chem__ZMatrixDihedralInternal_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),STAMPWTAG_chem__ForceMatchReport_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::FenceInst_O),STAMPWTAG_llvmo__FenceInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::WildElementDict_O),STAMPWTAG_chem__WildElementDict_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Chain_O),STAMPWTAG_chem__Chain_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::AtomicCmpXchgInst_O),STAMPWTAG_llvmo__AtomicCmpXchgInst_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),STAMPWTAG_core__ComplexVector_int8_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),STAMPWTAG_core__SimpleMDArray_double_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ScoringFunction_O),STAMPWTAG_chem__ScoringFunction_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ConstantPointerNull_O),STAMPWTAG_llvmo__ConstantPointerNull_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::VectorType_O),STAMPWTAG_llvmo__VectorType_O);
DO_CLASS(SAFE_TYPE_MACRO(core::EntryPointBase_O),STAMPWTAG_core__EntryPointBase_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFStretch_O),STAMPWTAG_chem__FFStretch_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::IterateRestraints_O),STAMPWTAG_chem__IterateRestraints_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),STAMPWTAG_chem__EnergySketchNonbond_O);
DO_CLASS(SAFE_TYPE_MACRO(core::RandomState_O),STAMPWTAG_core__RandomState_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),STAMPWTAG_core__SimpleVector_int2_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AtomReferenceBase_O),STAMPWTAG_chem__AtomReferenceBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),STAMPWTAG_core__MDArray_byte64_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ForceField_O),STAMPWTAG_chem__ForceField_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),STAMPWTAG_core__SimpleVector_fixnum_O);
DO_CLASS(SAFE_TYPE_MACRO(core::AnsiStream_O),STAMPWTAG_core__AnsiStream_O);
DO_CLASS(SAFE_TYPE_MACRO(core::BuiltinClosure_O),STAMPWTAG_core__BuiltinClosure_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Environment_O),STAMPWTAG_core__Environment_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AGVertex_O),STAMPWTAG_chem__AGVertex_O);
DO_CLASS(SAFE_TYPE_MACRO(core::UnwindProtectEnvironment_O),STAMPWTAG_core__UnwindProtectEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(clasp_ffi::ForeignData_O),STAMPWTAG_clasp_ffi__ForeignData_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::CallInst_O),STAMPWTAG_llvmo__CallInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),STAMPWTAG_chem__AfterMatchBondToAtomTest_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::OligomerPart_Link_O),STAMPWTAG_chem__OligomerPart_Link_O);
DO_CLASS(SAFE_TYPE_MACRO(adapt::AdaptExposer_O),STAMPWTAG_adapt__AdaptExposer_O);
DO_CLASS(SAFE_TYPE_MACRO(core::StringStream_O),STAMPWTAG_core__StringStream_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::LibraryBase_O),STAMPWTAG_llvmo__LibraryBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Sigset_O),STAMPWTAG_core__Sigset_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::IntegerType_O),STAMPWTAG_llvmo__IntegerType_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),STAMPWTAG_core__MDArray_int64_t_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::PassManagerBuilder_O),STAMPWTAG_llvmo__PassManagerBuilder_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),STAMPWTAG_core__MDArray_int8_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),STAMPWTAG_chem__ZMatrixBondInternal_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ConstantFP_O),STAMPWTAG_llvmo__ConstantFP_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Cons_O),STAMPWTAG_core__Cons_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Constitution_O),STAMPWTAG_chem__Constitution_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::LLVMContext_O),STAMPWTAG_llvmo__LLVMContext_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EntityNameSetBase_O),STAMPWTAG_chem__EntityNameSetBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),STAMPWTAG_core__MDArray_int4_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFBaseDb_O),STAMPWTAG_chem__FFBaseDb_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AbstractLargeSquareMatrix_O),STAMPWTAG_chem__AbstractLargeSquareMatrix_O);
DO_CLASS(SAFE_TYPE_MACRO(core::General_O),STAMPWTAG_core__General_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),STAMPWTAG_llvmo__ObjectFile_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Closure_O),STAMPWTAG_core__Closure_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),STAMPWTAG_core__ComplexVector_size_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RestraintAngle_O),STAMPWTAG_chem__RestraintAngle_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CandoDatabase_O),STAMPWTAG_chem__CandoDatabase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::BlockEnvironment_O),STAMPWTAG_core__BlockEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(mpip::Mpi_O),STAMPWTAG_mpip__Mpi_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ConstantDataArray_O),STAMPWTAG_llvmo__ConstantDataArray_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Instance_O),STAMPWTAG_core__Instance_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::MessageReport_O),STAMPWTAG_chem__MessageReport_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SmallMap_O),STAMPWTAG_core__SmallMap_O);
DO_CLASS(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),STAMPWTAG_clasp_ffi__ForeignTypeSpec_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Unused_dummy_O),STAMPWTAG_core__Unused_dummy_O);
DO_CLASS(SAFE_TYPE_MACRO(core::PosixTimeDuration_O),STAMPWTAG_core__PosixTimeDuration_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),STAMPWTAG_chem__EnergyOutOfZPlane_O);
DO_CLASS(SAFE_TYPE_MACRO(core::HashTableEqual_O),STAMPWTAG_core__HashTableEqual_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Triple_O),STAMPWTAG_llvmo__Triple_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),STAMPWTAG_core__SimpleMDArray_byte64_t_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::GeomExposer_O),STAMPWTAG_geom__GeomExposer_O);
DO_CLASS(SAFE_TYPE_MACRO(core::CoreExposer_O),STAMPWTAG_core__CoreExposer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),STAMPWTAG_chem__EnergyRigidBodyComponent_O);
DO_CLASS(SAFE_TYPE_MACRO(core::BitVectorNs_O),STAMPWTAG_core__BitVectorNs_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::AggregateNode_O),STAMPWTAG_kinematics__AggregateNode_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::TargetMachine_O),STAMPWTAG_llvmo__TargetMachine_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ThreadSafeContext_O),STAMPWTAG_llvmo__ThreadSafeContext_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Value_O),STAMPWTAG_llvmo__Value_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Bond_O),STAMPWTAG_chem__Bond_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),STAMPWTAG_chem__SuperposableConformationCollection_O);
DO_CLASS(SAFE_TYPE_MACRO(units::UnitsExposer_O),STAMPWTAG_units__UnitsExposer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CoordinateSystem_O),STAMPWTAG_chem__CoordinateSystem_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AtomReference_O),STAMPWTAG_chem__AtomReference_O);
DO_CLASS(SAFE_TYPE_MACRO(clbind::ClassRep_O),STAMPWTAG_clbind__ClassRep_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ConstantInt_O),STAMPWTAG_llvmo__ConstantInt_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),STAMPWTAG_core__SimpleMDArray_int16_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Logical_O),STAMPWTAG_chem__Logical_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::BondId_O),STAMPWTAG_kinematics__BondId_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::PassManagerBase_O),STAMPWTAG_llvmo__PassManagerBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Exposer_O),STAMPWTAG_core__Exposer_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ConstantStruct_O),STAMPWTAG_llvmo__ConstantStruct_O);
DO_CLASS(SAFE_TYPE_MACRO(core::DirectoryIterator_O),STAMPWTAG_core__DirectoryIterator_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::JumpPlug_O),STAMPWTAG_chem__JumpPlug_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DISubroutineType_O),STAMPWTAG_llvmo__DISubroutineType_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),STAMPWTAG_kinematics__JumpJoint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleBitVector_O),STAMPWTAG_core__SimpleBitVector_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),STAMPWTAG_core__FunctionContainerEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::OligomerPart_Base_O),STAMPWTAG_chem__OligomerPart_Base_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CDNode_O),STAMPWTAG_chem__CDNode_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ResumeInst_O),STAMPWTAG_llvmo__ResumeInst_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Function_O),STAMPWTAG_llvmo__Function_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AddIonOctree_O),STAMPWTAG_chem__AddIonOctree_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::StereoInformation_O),STAMPWTAG_chem__StereoInformation_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::BoundingCuboid_O),STAMPWTAG_geom__BoundingCuboid_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AtomIndexer_O),STAMPWTAG_chem__AtomIndexer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Restraint_O),STAMPWTAG_chem__Restraint_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::IRBuilder_O),STAMPWTAG_llvmo__IRBuilder_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),STAMPWTAG_llvmo__ClaspJIT_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFParameter_O),STAMPWTAG_chem__FFParameter_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),STAMPWTAG_core__SimpleVector_byte8_t_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DILexicalBlockBase_O),STAMPWTAG_llvmo__DILexicalBlockBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),STAMPWTAG_core__ComplexVector_fixnum_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),STAMPWTAG_chem__RepresentedEntityNameSet_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),STAMPWTAG_chem__MonomerCoordinates_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyFunction_O),STAMPWTAG_chem__EnergyFunction_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::VAArgInst_O),STAMPWTAG_llvmo__VAArgInst_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Twister_O),STAMPWTAG_chem__Twister_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),STAMPWTAG_core__MDArray_fixnum_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SharpEqualWrapper_O),STAMPWTAG_core__SharpEqualWrapper_O);
DO_CLASS(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),STAMPWTAG_geom__SimpleMDArrayCoordinate_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIFile_O),STAMPWTAG_llvmo__DIFile_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),STAMPWTAG_chem__AntechamberFocusAtomMatch_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::PdbMonomerDatabase_O),STAMPWTAG_chem__PdbMonomerDatabase_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Aggregate_O),STAMPWTAG_chem__Aggregate_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),STAMPWTAG_core__SimpleMDArray_int8_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SearchStatistics_O),STAMPWTAG_chem__SearchStatistics_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::EngineBuilder_O),STAMPWTAG_llvmo__EngineBuilder_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::Joint_O),STAMPWTAG_kinematics__Joint_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::SectionedAddress_O),STAMPWTAG_llvmo__SectionedAddress_O);
DO_CLASS(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),STAMPWTAG_core__TagbodyEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SpecialForm_O),STAMPWTAG_core__SpecialForm_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyStretch_O),STAMPWTAG_chem__EnergyStretch_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::FunctionCallee_O),STAMPWTAG_llvmo__FunctionCallee_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIBuilder_O),STAMPWTAG_llvmo__DIBuilder_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::APInt_O),STAMPWTAG_llvmo__APInt_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Symbol_O),STAMPWTAG_core__Symbol_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AtomOrBondMatchNode_O),STAMPWTAG_chem__AtomOrBondMatchNode_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),STAMPWTAG_core__MDArray_byte4_t_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Iterator_O),STAMPWTAG_core__Iterator_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFItorDb_O),STAMPWTAG_chem__FFItorDb_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::IRBuilderBase_O),STAMPWTAG_llvmo__IRBuilderBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Null_O),STAMPWTAG_core__Null_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RingFinder_O),STAMPWTAG_chem__RingFinder_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),STAMPWTAG_core__SingleDispatchMethod_O);
DO_CLASS(SAFE_TYPE_MACRO(core::CxxObject_O),STAMPWTAG_core__CxxObject_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::FunctionType_O),STAMPWTAG_llvmo__FunctionType_O);
DO_CLASS(SAFE_TYPE_MACRO(clbind::DummyCreator_O),STAMPWTAG_clbind__DummyCreator_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIContext_O),STAMPWTAG_llvmo__DIContext_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::JITDylib_O),STAMPWTAG_llvmo__JITDylib_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Pointer_O),STAMPWTAG_core__Pointer_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::UnreachableInst_O),STAMPWTAG_llvmo__UnreachableInst_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),STAMPWTAG_core__ComplexVector_int64_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFParameterBaseDb_O),STAMPWTAG_chem__FFParameterBaseDb_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Float_O),STAMPWTAG_core__Float_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::ResidueTest_O),STAMPWTAG_chem__ResidueTest_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RestraintDistance_O),STAMPWTAG_chem__RestraintDistance_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::SmartsRoot_O),STAMPWTAG_chem__SmartsRoot_O);
DO_CLASS(SAFE_TYPE_MACRO(clbind::ConstructorCreator_O),STAMPWTAG_clbind__ConstructorCreator_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DIDerivedType_O),STAMPWTAG_llvmo__DIDerivedType_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::TwisterDriver_O),STAMPWTAG_chem__TwisterDriver_O);
DO_CLASS(SAFE_TYPE_MACRO(core::TranslationFunctor_O),STAMPWTAG_core__TranslationFunctor_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Code_O),STAMPWTAG_llvmo__Code_O);
DO_CLASS(SAFE_TYPE_MACRO(units::NamedUnit_O),STAMPWTAG_units__NamedUnit_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_double_O),STAMPWTAG_core__MDArray_double_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::StoreInst_O),STAMPWTAG_llvmo__StoreInst_O);
DO_CLASS(SAFE_TYPE_MACRO(core::CodeEntryPoint_O),STAMPWTAG_core__CodeEntryPoint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),STAMPWTAG_core__SimpleMDArray_byte8_t_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::VirtualSphere_O),STAMPWTAG_chem__VirtualSphere_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Rational_O),STAMPWTAG_core__Rational_O);
DO_CLASS(SAFE_TYPE_MACRO(adapt::IndexedObjectBag_O),STAMPWTAG_adapt__IndexedObjectBag_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::CipPrioritizer_O),STAMPWTAG_chem__CipPrioritizer_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::AtomTable_O),STAMPWTAG_chem__AtomTable_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Real_O),STAMPWTAG_core__Real_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FuncallableInstanceCreator_O),STAMPWTAG_core__FuncallableInstanceCreator_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Topology_O),STAMPWTAG_chem__Topology_O);
DO_CLASS(SAFE_TYPE_MACRO(core::StringOutputStream_O),STAMPWTAG_core__StringOutputStream_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EntityNameSetWithCap_O),STAMPWTAG_chem__EntityNameSetWithCap_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::BondMatcher_O),STAMPWTAG_chem__BondMatcher_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::AttributeSet_O),STAMPWTAG_llvmo__AttributeSet_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::MDBuilder_O),STAMPWTAG_llvmo__MDBuilder_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DISubprogram_O),STAMPWTAG_llvmo__DISubprogram_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::TrajectoryFrame_O),STAMPWTAG_chem__TrajectoryFrame_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Creator_O),STAMPWTAG_core__Creator_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ArrayType_O),STAMPWTAG_llvmo__ArrayType_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::PdbWriter_O),STAMPWTAG_chem__PdbWriter_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Stereoisomer_O),STAMPWTAG_chem__Stereoisomer_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::MCSubtargetInfo_O),STAMPWTAG_llvmo__MCSubtargetInfo_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),STAMPWTAG_core__SimpleMDArray_byte2_t_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::BlockAddress_O),STAMPWTAG_llvmo__BlockAddress_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::DICompositeType_O),STAMPWTAG_llvmo__DICompositeType_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Matter_O),STAMPWTAG_chem__Matter_O);
DO_CLASS(SAFE_TYPE_MACRO(core::HashTableEq_O),STAMPWTAG_core__HashTableEq_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RestraintChiral_O),STAMPWTAG_chem__RestraintChiral_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::EnergyComponent_O),STAMPWTAG_chem__EnergyComponent_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),STAMPWTAG_kinematics__DelayedBondedJointTemplate_O);
DO_CLASS(SAFE_TYPE_MACRO(core::HashTableEqualp_O),STAMPWTAG_core__HashTableEqualp_O);
DO_CLASS(SAFE_TYPE_MACRO(core::LambdaListHandler_O),STAMPWTAG_core__LambdaListHandler_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::RotamerSetBase_O),STAMPWTAG_kinematics__RotamerSetBase_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SymbolMacroletEnvironment_O),STAMPWTAG_core__SymbolMacroletEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RestrainedExoCyclicAtom_O),STAMPWTAG_chem__RestrainedExoCyclicAtom_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::ImmutablePass_O),STAMPWTAG_llvmo__ImmutablePass_O);
DO_CLASS(SAFE_TYPE_MACRO(core::FuncallableInstance_O),STAMPWTAG_core__FuncallableInstance_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::RingCoupling_O),STAMPWTAG_chem__RingCoupling_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::FoldTree_O),STAMPWTAG_kinematics__FoldTree_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::NumericalFunction_O),STAMPWTAG_chem__NumericalFunction_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SynonymStream_O),STAMPWTAG_core__SynonymStream_O);
DO_CLASS(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),STAMPWTAG_core__MDArray_int2_t_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::ChiList_O),STAMPWTAG_kinematics__ChiList_O);
DO_CLASS(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),STAMPWTAG_core__SimpleVector_int16_t_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::Pass_O),STAMPWTAG_llvmo__Pass_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::StepReport_O),STAMPWTAG_chem__StepReport_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),STAMPWTAG_kinematics__BondedJointTemplate_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::FFVdw_O),STAMPWTAG_chem__FFVdw_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),STAMPWTAG_core__ComplexVector_byte4_t_O);
DO_CLASS(SAFE_TYPE_MACRO(asttooling::SourceLocation_O),STAMPWTAG_asttooling__SourceLocation_O);
DO_CLASS(SAFE_TYPE_MACRO(core::CatchEnvironment_O),STAMPWTAG_core__CatchEnvironment_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),STAMPWTAG_kinematics__RingClosingMonomerNode_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::TargetSubtargetInfo_O),STAMPWTAG_llvmo__TargetSubtargetInfo_O);
DO_CLASS(SAFE_TYPE_MACRO(chem::Root_O),STAMPWTAG_chem__Root_O);
DO_CLASS(SAFE_TYPE_MACRO(core::Bignum_O),STAMPWTAG_core__Bignum_O);
DO_CLASS(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),STAMPWTAG_kinematics__RootBondedJoint_O);
DO_CLASS(SAFE_TYPE_MACRO(core::LocalEntryPointGenerator_O),STAMPWTAG_core__LocalEntryPointGenerator_O);
DO_CLASS(SAFE_TYPE_MACRO(core::GlobalEntryPointGenerator_O),STAMPWTAG_core__GlobalEntryPointGenerator_O);
DO_CLASS(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),STAMPWTAG_core__ComplexVector_byte32_t_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::GlobalValue_O),STAMPWTAG_llvmo__GlobalValue_O);
DO_CLASS(SAFE_TYPE_MACRO(llvmo::PointerType_O),STAMPWTAG_llvmo__PointerType_O);
DO_CLASS(SAFE_TYPE_MACRO(core::TwoWayStream_O),STAMPWTAG_core__TwoWayStream_O);
#endif // defined(DO_CLASS)
#if defined(GC_STAMP_SELECTORS)
template <> class gctools::GCStamp<chem::EnergyAngle_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyAngle_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte2_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_byte2_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<float>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_float_ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_fixnum_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_fixnum_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<unsigned short>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_unsigned_short_ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int32_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_int32_t_O ;
};
template <> class gctools::GCStamp<core::Integer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Integer_O ;
};
template <> class gctools::GCStamp<chem::OutPlug_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__OutPlug_O ;
};
template <> class gctools::GCStamp<mp::Process_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_mp__Process_O ;
};
template <> class gctools::GCStamp<core::LightUserData_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__LightUserData_O ;
};
template <> class gctools::GCStamp<core::MDArrayT_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArrayT_O ;
};
template <> class gctools::GCStamp<core::DirectoryEntry_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__DirectoryEntry_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__ ;
};
template <> class gctools::GCStamp<llvmo::Linker_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Linker_O ;
};
template <> class gctools::GCStamp<chem::AtomIdToAtomMap_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AtomIdToAtomMap_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__ ;
};
template <> class gctools::GCStamp<core::MDArray_float_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_float_O ;
};
template <> class gctools::GCStamp<chem::IterateMatter_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__IterateMatter_O ;
};
template <> class gctools::GCStamp<chem::FFTypesDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFTypesDb_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_float_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_float_O ;
};
template <> class gctools::GCStamp<core::StandardClassCreator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__StandardClassCreator_O ;
};
template <> class gctools::GCStamp<chem::Alias_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Alias_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyStretch>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_ ;
};
template <> class gctools::GCStamp<chem::MapOfMonomerNamesToAtomIndexers_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<unsigned int>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_unsigned_int_ ;
};
template <> class gctools::GCStamp<adapt::SymbolSet_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_adapt__SymbolSet_O ;
};
template <> class gctools::GCStamp<chem::Minimizer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Minimizer_O ;
};
template <> class gctools::GCStamp<chem::SpecificContext_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SpecificContext_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__ ;
};
template <> class gctools::GCStamp<chem::Molecule_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Molecule_O ;
};
template <> class gctools::GCStamp<core::InvocationHistoryFrameIterator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__InvocationHistoryFrameIterator_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_size_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_size_t_O ;
};
template <> class gctools::GCStamp<kinematics::CheckpointOutPlugJoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__CheckpointOutPlugJoint_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__ ;
};
template <> class gctools::GCStamp<chem::Dimacs_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Dimacs_O ;
};
template <> class gctools::GCStamp<llvmo::DIScope_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIScope_O ;
};
template <> class gctools::GCStamp<chem::FullLargeSquareMatrix_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FullLargeSquareMatrix_O ;
};
template <> class gctools::GCStamp<core::FileStatus_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FileStatus_O ;
};
template <> class gctools::GCStamp<chem::EnergySketchStretch_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergySketchStretch_O ;
};
template <> class gctools::GCStamp<llvmo::IndirectBrInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__IndirectBrInst_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___ ;
};
template <> class gctools::GCStamp<chem::OligomerPart_Monomer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__OligomerPart_Monomer_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantArray_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ConstantArray_O ;
};
template <> class gctools::GCStamp<chem::ElementsInfo_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ElementsInfo_O ;
};
template <> class gctools::GCStamp<llvmo::PHINode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__PHINode_O ;
};
template <> class gctools::GCStamp<chem::EnergyFixedNonbondRestraint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyFixedNonbondRestraint_O ;
};
template <> class gctools::GCStamp<core::Package_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Package_O ;
};
template <> class gctools::GCStamp<chem::AtomTest_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AtomTest_O ;
};
template <> class gctools::GCStamp<core::Stream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Stream_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_ ;
};
template <> class gctools::GCStamp<chem::EnergyAnchorRestraint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyAnchorRestraint_O ;
};
template <> class gctools::GCStamp<chem::FFAngle_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFAngle_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__ ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<long>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_long_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::ResidueOut>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_ ;
};
template <> class gctools::GCStamp<core::ShortFloat_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ShortFloat_O ;
};
template <> class gctools::GCStamp<llvmo::MDString_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__MDString_O ;
};
template <> class gctools::GCStamp<core::AbstractSimpleVector_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__AbstractSimpleVector_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte16_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_byte16_t_O ;
};
template <> class gctools::GCStamp<core::Pathname_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Pathname_O ;
};
template <> class gctools::GCStamp<core::Str8Ns_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Str8Ns_O ;
};
template <> class gctools::GCStamp<llvmo::UndefValue_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__UndefValue_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::AuxArgument>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_ ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__ ;
};
template <> class gctools::GCStamp<chem::ChemInfoNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ChemInfoNode_O ;
};
template <> class gctools::GCStamp<core::Path_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Path_O ;
};
template <> class gctools::GCStamp<chem::BoundingBox_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__BoundingBox_O ;
};
template <> class gctools::GCStamp<chem::StructureComparer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__StructureComparer_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<int>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_int_ ;
};
template <> class gctools::GCStamp<core::IOStreamStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__IOStreamStream_O ;
};
template <> class gctools::GCStamp<core::Scope_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Scope_O ;
};
template <> class gctools::GCStamp<chem::BondLogical_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__BondLogical_O ;
};
template <> class gctools::GCStamp<chem::MoleculeGraph_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__MoleculeGraph_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyAtom>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_ ;
};
template <> class gctools::GCStamp<core::ComplexVector_double_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_double_O ;
};
template <> class gctools::GCStamp<chem::Monomer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Monomer_O ;
};
template <> class gctools::GCStamp<kinematics::Conformation_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__Conformation_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__ ;
};
template <> class gctools::GCStamp<chem::ConstitutionAtoms_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConstitutionAtoms_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArrayBit_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArrayBit_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__ ;
};
template <> class gctools::GCStamp<chem::Branch_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Branch_O ;
};
template <> class gctools::GCStamp<kinematics::ChiDihedral_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__ChiDihedral_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int2_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_int2_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::AtomInfo>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_ ;
};
template <> class gctools::GCStamp<chem::ConstitutionBond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConstitutionBond_O ;
};
template <> class gctools::GCStamp<chem::CDBond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CDBond_O ;
};
template <> class gctools::GCStamp<chem::CombinedForceField_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CombinedForceField_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___ ;
};
template <> class gctools::GCStamp<mp::Mutex_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_mp__Mutex_O ;
};
template <> class gctools::GCStamp<core::RecursiveDirectoryIterator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__RecursiveDirectoryIterator_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyNonbond>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_ ;
};
template <> class gctools::GCStamp<chem::RestraintDihedral_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RestraintDihedral_O ;
};
template <> class gctools::GCStamp<chem::AntechamberRoot_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AntechamberRoot_O ;
};
template <> class gctools::GCStamp<core::StringInputStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__StringInputStream_O ;
};
template <> class gctools::GCStamp<core::FunctionFrame_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FunctionFrame_O ;
};
template <> class gctools::GCStamp<chem::IterateAtoms_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__IterateAtoms_O ;
};
template <> class gctools::GCStamp<core::LongFloat_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__LongFloat_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int4_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_int4_t_O ;
};
template <> class gctools::GCStamp<chem::FFPtorDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFPtorDb_O ;
};
template <> class gctools::GCStamp<chem::ComplexRestraint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ComplexRestraint_O ;
};
template <> class gctools::GCStamp<llvmo::LibraryFile_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__LibraryFile_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_T_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_T_O ;
};
template <> class gctools::GCStamp<chem::RootMatchNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RootMatchNode_O ;
};
template <> class gctools::GCStamp<core::ValueFrame_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ValueFrame_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<unsigned long>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_unsigned_long_ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int4_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_int4_t_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int32_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_int32_t_O ;
};
template <> class gctools::GCStamp<core::Complex_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Complex_O ;
};
template <> class gctools::GCStamp<chem::ConformationCollectionEntry_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConformationCollectionEntry_O ;
};
template <> class gctools::GCStamp<chem::RingClosingMate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RingClosingMate_O ;
};
template <> class gctools::GCStamp<geom::OMatrix_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__OMatrix_O ;
};
template <> class gctools::GCStamp<llvmo::ValueAsMetadata_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ValueAsMetadata_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantExpr_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ConstantExpr_O ;
};
template <> class gctools::GCStamp<chem::FFNonbondDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFNonbondDb_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__ ;
};
template <> class gctools::GCStamp<llvmo::StructType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__StructType_O ;
};
template <> class gctools::GCStamp<chem::EnergyNonbond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyNonbond_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int16_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_int16_t_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_float_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_float_O ;
};
template <> class gctools::GCStamp<chem::Residue_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Residue_O ;
};
template <> class gctools::GCStamp<chem::CalculatePosition_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CalculatePosition_O ;
};
template <> class gctools::GCStamp<chem::SuperposeSelectedAtoms_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SuperposeSelectedAtoms_O ;
};
template <> class gctools::GCStamp<llvmo::Target_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Target_O ;
};
template <> class gctools::GCStamp<kinematics::MonomerNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__MonomerNode_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_ ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte32_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_byte32_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___ ;
};
template <> class gctools::GCStamp<core::SingleDispatchGenericFunctionClosure_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__ ;
};
template <> class gctools::GCStamp<llvmo::Module_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Module_O ;
};
template <> class gctools::GCStamp<llvmo::DIExpression_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIExpression_O ;
};
template <> class gctools::GCStamp<core::SingleFloat_dummy_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SingleFloat_dummy_O ;
};
template <> class gctools::GCStamp<core::ValueEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ValueEnvironment_O ;
};
template <> class gctools::GCStamp<chem::Trajectory_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Trajectory_O ;
};
template <> class gctools::GCStamp<llvmo::InvokeInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__InvokeInst_O ;
};
template <> class gctools::GCStamp<chem::RestraintFixedNonbond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RestraintFixedNonbond_O ;
};
template <> class gctools::GCStamp<chem::FFNonbond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFNonbond_O ;
};
template <> class gctools::GCStamp<core::StrNs_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__StrNs_O ;
};
template <> class gctools::GCStamp<chem::VirtualAtom_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__VirtualAtom_O ;
};
template <> class gctools::GCStamp<chem::OriginPlug_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__OriginPlug_O ;
};
template <> class gctools::GCStamp<llvmo::FunctionPassManager_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__FunctionPassManager_O ;
};
template <> class gctools::GCStamp<core::DoubleFloat_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__DoubleFloat_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___ ;
};
template <> class gctools::GCStamp<chem::ConformationExplorerEntryStage_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConformationExplorerEntryStage_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_ ;
};
template <> class gctools::GCStamp<chem::FrameRecognizer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FrameRecognizer_O ;
};
template <> class gctools::GCStamp<chem::CalculatePositionAlongBond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CalculatePositionAlongBond_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::SymbolStorage>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_ ;
};
template <> class gctools::GCStamp<core::MDArray_int32_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_int32_t_O ;
};
template <> class gctools::GCStamp<adapt::SymbolList_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_adapt__SymbolList_O ;
};
template <> class gctools::GCStamp<chem::CalculatePositionUsingInternals_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CalculatePositionUsingInternals_O ;
};
template <> class gctools::GCStamp<chem::EnergyPeriodicBoundaryConditionsNonbond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O ;
};
template <> class gctools::GCStamp<asttooling::AsttoolingExposer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_asttooling__AsttoolingExposer_O ;
};
template <> class gctools::GCStamp<chem::EnergyDihedral_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyDihedral_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_size_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_size_t_O ;
};
template <> class gctools::GCStamp<core::SmallMultimap_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SmallMultimap_O ;
};
template <> class gctools::GCStamp<core::Fixnum_dummy_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Fixnum_dummy_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<4,1>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_ ;
};
template <> class gctools::GCStamp<chem::ImproperTorsion_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ImproperTorsion_O ;
};
template <> class gctools::GCStamp<chem::ZMatrixAngleInternal_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ZMatrixAngleInternal_O ;
};
template <> class gctools::GCStamp<chem::Rotamer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Rotamer_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__ ;
};
template <> class gctools::GCStamp<core::WeakKeyHashTable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__WeakKeyHashTable_O ;
};
template <> class gctools::GCStamp<core::Rack_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Rack_O ;
};
template <> class gctools::GCStamp<core::MDArrayBaseChar_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArrayBaseChar_O ;
};
template <> class gctools::GCStamp<core::UserData_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__UserData_O ;
};
template <> class gctools::GCStamp<core::ExternalObject_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ExternalObject_O ;
};
template <> class gctools::GCStamp<llvmo::DINode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DINode_O ;
};
template <> class gctools::GCStamp<llvmo::GlobalVariable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__GlobalVariable_O ;
};
template <> class gctools::GCStamp<core::BroadcastStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__BroadcastStream_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__ ;
};
template <> class gctools::GCStamp<chem::StereoisomerAtoms_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__StereoisomerAtoms_O ;
};
template <> class gctools::GCStamp<chem::ConformationExplorerMatch_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConformationExplorerMatch_O ;
};
template <> class gctools::GCStamp<llvmo::Library_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Library_O ;
};
template <> class gctools::GCStamp<chem::ChemExposer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ChemExposer_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::RequiredArgument>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_ ;
};
template <> class gctools::GCStamp<kinematics::Checkpoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__Checkpoint_O ;
};
template <> class gctools::GCStamp<chem::SpanningInfo_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SpanningInfo_O ;
};
template <> class gctools::GCStamp<llvmo::DINodeArray_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DINodeArray_O ;
};
template <> class gctools::GCStamp<llvmo::TargetOptions_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__TargetOptions_O ;
};
template <> class gctools::GCStamp<chem::CDText_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CDText_O ;
};
template <> class gctools::GCStamp<chem::BondTest_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__BondTest_O ;
};
template <> class gctools::GCStamp<llvmo::DWARFContext_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DWARFContext_O ;
};
template <> class gctools::GCStamp<adapt::IterateCons_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_adapt__IterateCons_O ;
};
template <> class gctools::GCStamp<geom::SimpleVectorCoordinate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__SimpleVectorCoordinate_O ;
};
template <> class gctools::GCStamp<chem::FFItor_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFItor_O ;
};
template <> class gctools::GCStamp<llvmo::NamedMDNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__NamedMDNode_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte16_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_byte16_t_O ;
};
template <> class gctools::GCStamp<chem::ChemInfoGraph_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ChemInfoGraph_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte64_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_byte64_t_O ;
};
template <> class gctools::GCStamp<chem::EnergyPointToLineRestraint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyPointToLineRestraint_O ;
};
template <> class gctools::GCStamp<core::SimpleBaseString_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleBaseString_O ;
};
template <> class gctools::GCStamp<core::Test_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Test_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__ ;
};
template <> class gctools::GCStamp<llvmo::Metadata_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Metadata_O ;
};
template <> class gctools::GCStamp<core::MDArray_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___ ;
};
template <> class gctools::GCStamp<chem::RigidBodyEnergyFunction_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RigidBodyEnergyFunction_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___ ;
};
template <> class gctools::GCStamp<kinematics::ChainNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__ChainNode_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<double>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_double_ ;
};
template <> class gctools::GCStamp<kinematics::CheckpointJoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__CheckpointJoint_O ;
};
template <> class gctools::GCStamp<llvmo::StructLayout_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__StructLayout_O ;
};
template <> class gctools::GCStamp<chem::Mate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Mate_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArrayT_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArrayT_O ;
};
template <> class gctools::GCStamp<chem::ConformationExplorer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConformationExplorer_O ;
};
template <> class gctools::GCStamp<chem::BondList_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__BondList_O ;
};
template <> class gctools::GCStamp<core::ActivationFrame_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ActivationFrame_O ;
};
template <> class gctools::GCStamp<llvmo::LoadInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__LoadInst_O ;
};
template <> class gctools::GCStamp<chem::MacroModelFile_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__MacroModelFile_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte2_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_byte2_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__ ;
};
template <> class gctools::GCStamp<chem::Angle_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Angle_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__ ;
};
template <> class gctools::GCStamp<core::LexicalEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__LexicalEnvironment_O ;
};
template <> class gctools::GCStamp<core::PosixTime_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__PosixTime_O ;
};
template <> class gctools::GCStamp<llvmo::MetadataAsValue_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__MetadataAsValue_O ;
};
template <> class gctools::GCStamp<kinematics::RotamerSet_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__RotamerSet_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__ ;
};
template <> class gctools::GCStamp<core::SimpleVector_int8_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_int8_t_O ;
};
template <> class gctools::GCStamp<chem::SpecificContextSet_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SpecificContextSet_O ;
};
template <> class gctools::GCStamp<llvmo::DIType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIType_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::FixedNonbondRestraint>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_ ;
};
template <> class gctools::GCStamp<chem::ZMatrixEntry_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ZMatrixEntry_O ;
};
template <> class gctools::GCStamp<core::Readtable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Readtable_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__ ;
};
template <> class gctools::GCStamp<chem::CalculatePositionRelativeToOrigin_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O ;
};
template <> class gctools::GCStamp<chem::ChemInfoMatch_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ChemInfoMatch_O ;
};
template <> class gctools::GCStamp<units::Quantity_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_units__Quantity_O ;
};
template <> class gctools::GCStamp<kinematics::AtomTree_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__AtomTree_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__ ;
};
template <> class gctools::GCStamp<llvmo::MDNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__MDNode_O ;
};
template <> class gctools::GCStamp<chem::GenericOctree_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__GenericOctree_O ;
};
template <> class gctools::GCStamp<mp::RecursiveMutex_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_mp__RecursiveMutex_O ;
};
template <> class gctools::GCStamp<chem::MinimizerLog_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__MinimizerLog_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_float_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_float_O ;
};
template <> class gctools::GCStamp<chem::FFVdwDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFVdwDb_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int4_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_int4_t_O ;
};
template <> class gctools::GCStamp<chem::FFPtor_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFPtor_O ;
};
template <> class gctools::GCStamp<chem::InfoDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__InfoDb_O ;
};
template <> class gctools::GCStamp<core::LoadTimeValues_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__LoadTimeValues_O ;
};
template <> class gctools::GCStamp<kinematics::OriginJumpJoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__OriginJumpJoint_O ;
};
template <> class gctools::GCStamp<llvmo::CodeBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__CodeBase_O ;
};
template <> class gctools::GCStamp<llvmo::DataLayout_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DataLayout_O ;
};
template <> class gctools::GCStamp<llvmo::BasicBlock_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__BasicBlock_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte64_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_byte64_t_O ;
};
template <> class gctools::GCStamp<chem::AntechamberBondToAtomTest_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AntechamberBondToAtomTest_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte32_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_byte32_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::KeyValuePair>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_ ;
};
template <> class gctools::GCStamp<core::Character_dummy_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Character_dummy_O ;
};
template <> class gctools::GCStamp<llvmo::Constant_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Constant_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergySketchNonbond>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__ ;
};
template <> class gctools::GCStamp<core::NativeVector_int_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__NativeVector_int_O ;
};
template <> class gctools::GCStamp<llvmo::DIBasicType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIBasicType_O ;
};
template <> class gctools::GCStamp<llvmo::APFloat_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__APFloat_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArrayCharacter_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArrayCharacter_O ;
};
template <> class gctools::GCStamp<core::SimpleCharacterString_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleCharacterString_O ;
};
template <> class gctools::GCStamp<kinematics::RootBondedJointTemplate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__RootBondedJointTemplate_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__ ;
};
template <> class gctools::GCStamp<core::Array_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Array_O ;
};
template <> class gctools::GCStamp<llvmo::Argument_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Argument_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_ ;
};
template <> class gctools::GCStamp<units::Unit_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_units__Unit_O ;
};
template <> class gctools::GCStamp<core::GlobalEntryPoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__GlobalEntryPoint_O ;
};
template <> class gctools::GCStamp<llvmo::TargetPassConfig_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__TargetPassConfig_O ;
};
template <> class gctools::GCStamp<chem::IterateBonds_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__IterateBonds_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<signed char>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_signed_char_ ;
};
template <> class gctools::GCStamp<chem::CDFragment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CDFragment_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergySketchStretch>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_ ;
};
template <> class gctools::GCStamp<core::GlueEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__GlueEnvironment_O ;
};
template <> class gctools::GCStamp<llvmo::ReturnInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ReturnInst_O ;
};
template <> class gctools::GCStamp<chem::MonomerContext_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__MonomerContext_O ;
};
template <> class gctools::GCStamp<kinematics::Rotamer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__Rotamer_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte16_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_byte16_t_O ;
};
template <> class gctools::GCStamp<chem::Plug_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Plug_O ;
};
template <> class gctools::GCStamp<chem::FFNonbondCrossTermTable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFNonbondCrossTermTable_O ;
};
template <> class gctools::GCStamp<kinematics::MonomerBaseNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__MonomerBaseNode_O ;
};
template <> class gctools::GCStamp<llvmo::Type_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Type_O ;
};
template <> class gctools::GCStamp<chem::StereoConfiguration_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__StereoConfiguration_O ;
};
template <> class gctools::GCStamp<chem::Command_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Command_O ;
};
template <> class gctools::GCStamp<core::FileScope_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FileScope_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte4_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_byte4_t_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int64_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_int64_t_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantDataSequential_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ConstantDataSequential_O ;
};
template <> class gctools::GCStamp<chem::SuperposeEngine_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SuperposeEngine_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::AtomPdbRec>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_ ;
};
template <> class gctools::GCStamp<chem::EntityNameSet_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EntityNameSet_O ;
};
template <> class gctools::GCStamp<chem::ResidueList_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ResidueList_O ;
};
template <> class gctools::GCStamp<llvmo::DebugLoc_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DebugLoc_O ;
};
template <> class gctools::GCStamp<core::WeakPointer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__WeakPointer_O ;
};
template <> class gctools::GCStamp<core::IOFileStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__IOFileStream_O ;
};
template <> class gctools::GCStamp<chem::ConstitutionVirtualAtom_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConstitutionVirtualAtom_O ;
};
template <> class gctools::GCStamp<core::RuntimeVisibleEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__RuntimeVisibleEnvironment_O ;
};
template <> class gctools::GCStamp<chem::ProperTorsion_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ProperTorsion_O ;
};
template <> class gctools::GCStamp<chem::IterateResidues_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__IterateResidues_O ;
};
template <> class gctools::GCStamp<llvmo::Instruction_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Instruction_O ;
};
template <> class gctools::GCStamp<core::FileStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FileStream_O ;
};
template <> class gctools::GCStamp<core::MDArrayCharacter_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArrayCharacter_O ;
};
template <> class gctools::GCStamp<llvmo::LandingPadInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__LandingPadInst_O ;
};
template <> class gctools::GCStamp<kinematics::KinematicsExposer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__KinematicsExposer_O ;
};
template <> class gctools::GCStamp<core::Function_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Function_O ;
};
template <> class gctools::GCStamp<kinematics::BondedJoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__BondedJoint_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int2_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_int2_t_O ;
};
template <> class gctools::GCStamp<core::ImmobileObject_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ImmobileObject_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__ ;
};
template <> class gctools::GCStamp<chem::StereoisomerVirtualAtom_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__StereoisomerVirtualAtom_O ;
};
template <> class gctools::GCStamp<core::HashTableEql_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__HashTableEql_O ;
};
template <> class gctools::GCStamp<chem::SpanningLoop_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SpanningLoop_O ;
};
template <> class gctools::GCStamp<chem::PdbReader_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__PdbReader_O ;
};
template <> class gctools::GCStamp<mp::ConditionVariable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_mp__ConditionVariable_O ;
};
template <> class gctools::GCStamp<chem::ConformationExplorerEntry_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConformationExplorerEntry_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte8_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_byte8_t_O ;
};
template <> class gctools::GCStamp<kinematics::BackboneDependentRotamerSet_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__BackboneDependentRotamerSet_O ;
};
template <> class gctools::GCStamp<chem::BondListMatchNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__BondListMatchNode_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___ ;
};
template <> class gctools::GCStamp<units::Dimension_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_units__Dimension_O ;
};
template <> class gctools::GCStamp<llvmo::AtomicRMWInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__AtomicRMWInst_O ;
};
template <> class gctools::GCStamp<chem::PdbMonomerConnectivity_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__PdbMonomerConnectivity_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__ ;
};
template <> class gctools::GCStamp<llvmo::PassManager_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__PassManager_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_O ;
};
template <> class gctools::GCStamp<chem::PlugWithMates_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__PlugWithMates_O ;
};
template <> class gctools::GCStamp<chem::Oligomer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Oligomer_O ;
};
template <> class gctools::GCStamp<adapt::ObjectSet_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_adapt__ObjectSet_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int64_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_int64_t_O ;
};
template <> class gctools::GCStamp<core::SimpleString_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleString_O ;
};
template <> class gctools::GCStamp<llvmo::DIVariable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIVariable_O ;
};
template <> class gctools::GCStamp<core::FunctionValueEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FunctionValueEnvironment_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__ ;
};
template <> class gctools::GCStamp<core::DerivableCxxClassCreator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__DerivableCxxClassCreator_O ;
};
template <> class gctools::GCStamp<chem::Coupling_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Coupling_O ;
};
template <> class gctools::GCStamp<geom::ComplexVectorCoordinate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__ComplexVectorCoordinate_O ;
};
template <> class gctools::GCStamp<asttooling::PresumedLoc_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_asttooling__PresumedLoc_O ;
};
template <> class gctools::GCStamp<core::ConcatenatedStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ConcatenatedStream_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<double>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_double_ ;
};
template <> class gctools::GCStamp<core::MacroletEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MacroletEnvironment_O ;
};
template <> class gctools::GCStamp<kinematics::DelayedBondedJoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__DelayedBondedJoint_O ;
};
template <> class gctools::GCStamp<core::Ratio_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Ratio_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte2_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_byte2_t_O ;
};
template <> class gctools::GCStamp<core::ClosureWithSlots_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ClosureWithSlots_O ;
};
template <> class gctools::GCStamp<llvmo::ExecutionEngine_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ExecutionEngine_O ;
};
template <> class gctools::GCStamp<core::ClassRepCreator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ClassRepCreator_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__ ;
};
template <> class gctools::GCStamp<llvmo::Attribute_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Attribute_O ;
};
template <> class gctools::GCStamp<core::DerivableCxxObject_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__DerivableCxxObject_O ;
};
template <> class gctools::GCStamp<llvmo::SwitchInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__SwitchInst_O ;
};
template <> class gctools::GCStamp<core::SymbolToEnumConverter_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SymbolToEnumConverter_O ;
};
template <> class gctools::GCStamp<chem::RestrainedPiBond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RestrainedPiBond_O ;
};
template <> class gctools::GCStamp<chem::ConformationCollection_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConformationCollection_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::RotamerAtom>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_ ;
};
template <> class gctools::GCStamp<core::ComplexVector_int32_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_int32_t_O ;
};
template <> class gctools::GCStamp<core::VaList_dummy_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__VaList_dummy_O ;
};
template <> class gctools::GCStamp<geom::Color_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__Color_O ;
};
template <> class gctools::GCStamp<kinematics::JointTemplate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__JointTemplate_O ;
};
template <> class gctools::GCStamp<core::LogicalPathname_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__LogicalPathname_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__ ;
};
template <> class gctools::GCStamp<core::WrappedPointer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__WrappedPointer_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_double_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_double_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte32_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_byte32_t_O ;
};
template <> class gctools::GCStamp<llvmo::LLVMTargetMachine_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__LLVMTargetMachine_O ;
};
template <> class gctools::GCStamp<core::ClassHolder_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ClassHolder_O ;
};
template <> class gctools::GCStamp<chem::SketchFunction_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SketchFunction_O ;
};
template <> class gctools::GCStamp<llvmo::UnaryInstruction_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__UnaryInstruction_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__ ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<unsigned int>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_unsigned_int_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___ ;
};
template <> class gctools::GCStamp<kinematics::MonomerId_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__MonomerId_O ;
};
template <> class gctools::GCStamp<core::MDArray_size_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_size_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyDihedral>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_ ;
};
template <> class gctools::GCStamp<chem::PathMessage_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__PathMessage_O ;
};
template <> class gctools::GCStamp<chem::BondMatchNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__BondMatchNode_O ;
};
template <> class gctools::GCStamp<chem::EnergyRigidBodyNonbond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyRigidBodyNonbond_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_O ;
};
template <> class gctools::GCStamp<chem::SparseLargeSquareMatrix_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SparseLargeSquareMatrix_O ;
};
template <> class gctools::GCStamp<clbind::ClassRegistry_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_clbind__ClassRegistry_O ;
};
template <> class gctools::GCStamp<core::Frame_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Frame_O ;
};
template <> class gctools::GCStamp<asttooling::AstVisitor_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_asttooling__AstVisitor_O ;
};
template <> class gctools::GCStamp<chem::Isoname_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Isoname_O ;
};
template <> class gctools::GCStamp<core::Record_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Record_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::T_O *>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_core__T_O___ ;
};
template <> class gctools::GCStamp<chem::Atom_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Atom_O ;
};
template <> class gctools::GCStamp<chem::ZMatrix_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ZMatrix_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__ ;
};
template <> class gctools::GCStamp<chem::StereoisomerAtom_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__StereoisomerAtom_O ;
};
template <> class gctools::GCStamp<core::SourcePosInfo_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SourcePosInfo_O ;
};
template <> class gctools::GCStamp<llvmo::BranchInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__BranchInst_O ;
};
template <> class gctools::GCStamp<llvmo::AllocaInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__AllocaInst_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__ ;
};
template <> class gctools::GCStamp<chem::ZMatrixInternal_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ZMatrixInternal_O ;
};
template <> class gctools::GCStamp<core::HashTableCustom_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__HashTableCustom_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte8_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_byte8_t_O ;
};
template <> class gctools::GCStamp<core::HashTable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__HashTable_O ;
};
template <> class gctools::GCStamp<chem::ChemDraw_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ChemDraw_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<float>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_float_ ;
};
template <> class gctools::GCStamp<chem::ReportBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ReportBase_O ;
};
template <> class gctools::GCStamp<kinematics::BackboneDependentRotamerLibrary_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__ ;
};
template <> class gctools::GCStamp<chem::EnergyChiralRestraint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyChiralRestraint_O ;
};
template <> class gctools::GCStamp<chem::MonomerPack_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__MonomerPack_O ;
};
template <> class gctools::GCStamp<geom::MDArrayCoordinate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__MDArrayCoordinate_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__ ;
};
template <> class gctools::GCStamp<chem::Structure_Old_List_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Structure_Old_List_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArrayBaseChar_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArrayBaseChar_O ;
};
template <> class gctools::GCStamp<chem::OctNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__OctNode_O ;
};
template <> class gctools::GCStamp<chem::Entity_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Entity_O ;
};
template <> class gctools::GCStamp<chem::AGEdge_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AGEdge_O ;
};
template <> class gctools::GCStamp<chem::ReadAmberParameters_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ReadAmberParameters_O ;
};
template <> class gctools::GCStamp<llvmo::DILocation_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DILocation_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___ ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<int>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_int_ ;
};
template <> class gctools::GCStamp<chem::Smirks_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Smirks_O ;
};
template <> class gctools::GCStamp<chem::EnergyDihedralRestraint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyDihedralRestraint_O ;
};
template <> class gctools::GCStamp<core::Number_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Number_O ;
};
template <> class gctools::GCStamp<core::T_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__T_O ;
};
template <> class gctools::GCStamp<llvmo::DICompileUnit_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DICompileUnit_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__ ;
};
template <> class gctools::GCStamp<llvmo::FunctionPass_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__FunctionPass_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte4_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_byte4_t_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<2,1>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_ ;
};
template <> class gctools::GCStamp<chem::ConstitutionAtom_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ConstitutionAtom_O ;
};
template <> class gctools::GCStamp<llvmo::CallBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__CallBase_O ;
};
template <> class gctools::GCStamp<core::CompileTimeEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__CompileTimeEnvironment_O ;
};
template <> class gctools::GCStamp<mp::SharedMutex_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_mp__SharedMutex_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<1,0>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_ ;
};
template <> class gctools::GCStamp<adapt::QDomNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_adapt__QDomNode_O ;
};
template <> class gctools::GCStamp<core::InstanceCreator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__InstanceCreator_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__ ;
};
template <> class gctools::GCStamp<chem::BondToAtomTest_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__BondToAtomTest_O ;
};
template <> class gctools::GCStamp<chem::FFAngleDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFAngleDb_O ;
};
template <> class gctools::GCStamp<chem::FFTypeRule_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFTypeRule_O ;
};
template <> class gctools::GCStamp<llvmo::InsertPoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__InsertPoint_O ;
};
template <> class gctools::GCStamp<core::FunctionDescription_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FunctionDescription_O ;
};
template <> class gctools::GCStamp<core::StrWNs_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__StrWNs_O ;
};
template <> class gctools::GCStamp<chem::Structure_Old_ListEntry_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Structure_Old_ListEntry_O ;
};
template <> class gctools::GCStamp<chem::EnergyRigidBodyStaple_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyRigidBodyStaple_O ;
};
template <> class gctools::GCStamp<core::EchoStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__EchoStream_O ;
};
template <> class gctools::GCStamp<core::HashTableBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__HashTableBase_O ;
};
template <> class gctools::GCStamp<core::MDArrayBit_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArrayBit_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte16_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_byte16_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__ ;
};
template <> class gctools::GCStamp<chem::FFStretchDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFStretchDb_O ;
};
template <> class gctools::GCStamp<geom::OVector2_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__OVector2_O ;
};
template <> class gctools::GCStamp<llvmo::DILocalScope_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DILocalScope_O ;
};
template <> class gctools::GCStamp<geom::OVector3_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__OVector3_O ;
};
template <> class gctools::GCStamp<core::LocalEntryPoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__LocalEntryPoint_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<2,0>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__ ;
};
template <> class gctools::GCStamp<llvmo::DILexicalBlock_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DILexicalBlock_O ;
};
template <> class gctools::GCStamp<llvmo::DITypeRefArray_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DITypeRefArray_O ;
};
template <> class gctools::GCStamp<chem::RestraintAnchor_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RestraintAnchor_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__ ;
};
template <> class gctools::GCStamp<chem::InPlug_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__InPlug_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__ ;
};
template <> class gctools::GCStamp<llvmo::ModulePass_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ModulePass_O ;
};
template <> class gctools::GCStamp<chem::DirectionalCoupling_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__DirectionalCoupling_O ;
};
template <> class gctools::GCStamp<llvmo::DILocalVariable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DILocalVariable_O ;
};
template <> class gctools::GCStamp<llvmo::TargetLibraryInfoWrapperPass_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O ;
};
template <> class gctools::GCStamp<asttooling::QualType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_asttooling__QualType_O ;
};
template <> class gctools::GCStamp<llvmo::User_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__User_O ;
};
template <> class gctools::GCStamp<core::MDArray_int16_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_int16_t_O ;
};
template <> class gctools::GCStamp<chem::ZMatrixDihedralInternal_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ZMatrixDihedralInternal_O ;
};
template <> class gctools::GCStamp<chem::ForceMatchReport_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ForceMatchReport_O ;
};
template <> class gctools::GCStamp<llvmo::FenceInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__FenceInst_O ;
};
template <> class gctools::GCStamp<chem::WildElementDict_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__WildElementDict_O ;
};
template <> class gctools::GCStamp<chem::Chain_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Chain_O ;
};
template <> class gctools::GCStamp<llvmo::AtomicCmpXchgInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__AtomicCmpXchgInst_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int8_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_int8_t_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_double_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_double_O ;
};
template <> class gctools::GCStamp<chem::ScoringFunction_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ScoringFunction_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___ ;
};
template <> class gctools::GCStamp<llvmo::ConstantPointerNull_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ConstantPointerNull_O ;
};
template <> class gctools::GCStamp<llvmo::VectorType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__VectorType_O ;
};
template <> class gctools::GCStamp<core::EntryPointBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__EntryPointBase_O ;
};
template <> class gctools::GCStamp<chem::FFStretch_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFStretch_O ;
};
template <> class gctools::GCStamp<chem::IterateRestraints_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__IterateRestraints_O ;
};
template <> class gctools::GCStamp<chem::EnergySketchNonbond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergySketchNonbond_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__ ;
};
template <> class gctools::GCStamp<core::RandomState_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__RandomState_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int2_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_int2_t_O ;
};
template <> class gctools::GCStamp<chem::AtomReferenceBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AtomReferenceBase_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte64_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_byte64_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__ ;
};
template <> class gctools::GCStamp<chem::ForceField_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ForceField_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_fixnum_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_fixnum_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__ ;
};
template <> class gctools::GCStamp<core::AnsiStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__AnsiStream_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__ ;
};
template <> class gctools::GCStamp<core::BuiltinClosure_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__BuiltinClosure_O ;
};
template <> class gctools::GCStamp<core::Environment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Environment_O ;
};
template <> class gctools::GCStamp<chem::AGVertex_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AGVertex_O ;
};
template <> class gctools::GCStamp<core::UnwindProtectEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__UnwindProtectEnvironment_O ;
};
template <> class gctools::GCStamp<clasp_ffi::ForeignData_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_clasp_ffi__ForeignData_O ;
};
template <> class gctools::GCStamp<llvmo::CallInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__CallInst_O ;
};
template <> class gctools::GCStamp<chem::AfterMatchBondToAtomTest_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AfterMatchBondToAtomTest_O ;
};
template <> class gctools::GCStamp<chem::OligomerPart_Link_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__OligomerPart_Link_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__ ;
};
template <> class gctools::GCStamp<adapt::AdaptExposer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_adapt__AdaptExposer_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::HybridizationInfo>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___ ;
};
template <> class gctools::GCStamp<core::StringStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__StringStream_O ;
};
template <> class gctools::GCStamp<llvmo::LibraryBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__LibraryBase_O ;
};
template <> class gctools::GCStamp<core::Sigset_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Sigset_O ;
};
template <> class gctools::GCStamp<llvmo::IntegerType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__IntegerType_O ;
};
template <> class gctools::GCStamp<core::MDArray_int64_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_int64_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__ ;
};
template <> class gctools::GCStamp<llvmo::PassManagerBuilder_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__PassManagerBuilder_O ;
};
template <> class gctools::GCStamp<core::MDArray_int8_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_int8_t_O ;
};
template <> class gctools::GCStamp<chem::ZMatrixBondInternal_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ZMatrixBondInternal_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantFP_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ConstantFP_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_ ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<Vector3>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_Vector3_ ;
};
template <> class gctools::GCStamp<core::Cons_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Cons_O ;
};
template <> class gctools::GCStamp<chem::Constitution_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Constitution_O ;
};
template <> class gctools::GCStamp<llvmo::LLVMContext_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__LLVMContext_O ;
};
template <> class gctools::GCStamp<chem::EntityNameSetBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EntityNameSetBase_O ;
};
template <> class gctools::GCStamp<core::MDArray_int4_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_int4_t_O ;
};
template <> class gctools::GCStamp<chem::FFBaseDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFBaseDb_O ;
};
template <> class gctools::GCStamp<chem::AbstractLargeSquareMatrix_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AbstractLargeSquareMatrix_O ;
};
template <> class gctools::GCStamp<core::General_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__General_O ;
};
template <> class gctools::GCStamp<llvmo::ObjectFile_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ObjectFile_O ;
};
template <> class gctools::GCStamp<core::Closure_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Closure_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_size_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_size_t_O ;
};
template <> class gctools::GCStamp<chem::RestraintAngle_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RestraintAngle_O ;
};
template <> class gctools::GCStamp<chem::CandoDatabase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CandoDatabase_O ;
};
template <> class gctools::GCStamp<core::BlockEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__BlockEnvironment_O ;
};
template <> class gctools::GCStamp<mpip::Mpi_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_mpip__Mpi_O ;
};
template <> class gctools::GCStamp<gctools::GCArraySignedLength_moveable<unsigned long>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_ ;
};
template <> class gctools::GCStamp<llvmo::ConstantDataArray_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ConstantDataArray_O ;
};
template <> class gctools::GCStamp<core::Instance_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Instance_O ;
};
template <> class gctools::GCStamp<chem::MessageReport_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__MessageReport_O ;
};
template <> class gctools::GCStamp<core::SmallMap_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SmallMap_O ;
};
template <> class gctools::GCStamp<clasp_ffi::ForeignTypeSpec_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_clasp_ffi__ForeignTypeSpec_O ;
};
template <> class gctools::GCStamp<core::Unused_dummy_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Unused_dummy_O ;
};
template <> class gctools::GCStamp<core::PosixTimeDuration_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__PosixTimeDuration_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__ ;
};
template <> class gctools::GCStamp<chem::EnergyOutOfZPlane_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyOutOfZPlane_O ;
};
template <> class gctools::GCStamp<core::HashTableEqual_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__HashTableEqual_O ;
};
template <> class gctools::GCStamp<llvmo::Triple_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Triple_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte64_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_byte64_t_O ;
};
template <> class gctools::GCStamp<geom::GeomExposer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__GeomExposer_O ;
};
template <> class gctools::GCStamp<core::CoreExposer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__CoreExposer_O ;
};
template <> class gctools::GCStamp<chem::EnergyRigidBodyComponent_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyRigidBodyComponent_O ;
};
template <> class gctools::GCStamp<core::BitVectorNs_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__BitVectorNs_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::KeyEntry>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::KeywordArgument>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_ ;
};
template <> class gctools::GCStamp<kinematics::AggregateNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__AggregateNode_O ;
};
template <> class gctools::GCStamp<llvmo::TargetMachine_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__TargetMachine_O ;
};
template <> class gctools::GCStamp<llvmo::ThreadSafeContext_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ThreadSafeContext_O ;
};
template <> class gctools::GCStamp<llvmo::Value_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Value_O ;
};
template <> class gctools::GCStamp<chem::Bond_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Bond_O ;
};
template <> class gctools::GCStamp<chem::SuperposableConformationCollection_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SuperposableConformationCollection_O ;
};
template <> class gctools::GCStamp<units::UnitsExposer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_units__UnitsExposer_O ;
};
template <> class gctools::GCStamp<chem::CoordinateSystem_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CoordinateSystem_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::OptionalArgument>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_ ;
};
template <> class gctools::GCStamp<chem::AtomReference_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AtomReference_O ;
};
template <> class gctools::GCStamp<clbind::ClassRep_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_clbind__ClassRep_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantInt_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ConstantInt_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int16_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_int16_t_O ;
};
template <> class gctools::GCStamp<chem::Logical_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Logical_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__ ;
};
template <> class gctools::GCStamp<kinematics::BondId_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__BondId_O ;
};
template <> class gctools::GCStamp<llvmo::PassManagerBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__PassManagerBase_O ;
};
template <> class gctools::GCStamp<core::Exposer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Exposer_O ;
};
template <> class gctools::GCStamp<llvmo::ConstantStruct_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ConstantStruct_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___ ;
};
template <> class gctools::GCStamp<core::DirectoryIterator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__DirectoryIterator_O ;
};
template <> class gctools::GCStamp<chem::JumpPlug_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__JumpPlug_O ;
};
template <> class gctools::GCStamp<llvmo::DISubroutineType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DISubroutineType_O ;
};
template <> class gctools::GCStamp<kinematics::JumpJoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__JumpJoint_O ;
};
template <> class gctools::GCStamp<core::SimpleBitVector_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleBitVector_O ;
};
template <> class gctools::GCStamp<core::FunctionContainerEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FunctionContainerEnvironment_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__ ;
};
template <> class gctools::GCStamp<chem::OligomerPart_Base_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__OligomerPart_Base_O ;
};
template <> class gctools::GCStamp<chem::CDNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CDNode_O ;
};
template <> class gctools::GCStamp<llvmo::ResumeInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ResumeInst_O ;
};
template <> class gctools::GCStamp<llvmo::Function_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Function_O ;
};
template <> class gctools::GCStamp<chem::AddIonOctree_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AddIonOctree_O ;
};
template <> class gctools::GCStamp<chem::StereoInformation_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__StereoInformation_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__ ;
};
template <> class gctools::GCStamp<geom::BoundingCuboid_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__BoundingCuboid_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyAngle>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_ ;
};
template <> class gctools::GCStamp<chem::AtomIndexer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AtomIndexer_O ;
};
template <> class gctools::GCStamp<chem::Restraint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Restraint_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__ ;
};
template <> class gctools::GCStamp<llvmo::IRBuilder_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__IRBuilder_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_ ;
};
template <> class gctools::GCStamp<llvmo::ClaspJIT_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ClaspJIT_O ;
};
template <> class gctools::GCStamp<chem::FFParameter_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFParameter_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_byte8_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_byte8_t_O ;
};
template <> class gctools::GCStamp<llvmo::DILexicalBlockBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DILexicalBlockBase_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___ ;
};
template <> class gctools::GCStamp<core::ComplexVector_fixnum_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_fixnum_O ;
};
template <> class gctools::GCStamp<chem::RepresentedEntityNameSet_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RepresentedEntityNameSet_O ;
};
template <> class gctools::GCStamp<chem::MonomerCoordinates_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__MonomerCoordinates_O ;
};
template <> class gctools::GCStamp<chem::EnergyFunction_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyFunction_O ;
};
template <> class gctools::GCStamp<llvmo::VAArgInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__VAArgInst_O ;
};
template <> class gctools::GCStamp<chem::Twister_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Twister_O ;
};
template <> class gctools::GCStamp<core::MDArray_fixnum_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_fixnum_O ;
};
template <> class gctools::GCStamp<core::SharpEqualWrapper_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SharpEqualWrapper_O ;
};
template <> class gctools::GCStamp<geom::SimpleMDArrayCoordinate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_geom__SimpleMDArrayCoordinate_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::Vec0<int>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__ ;
};
template <> class gctools::GCStamp<llvmo::DIFile_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIFile_O ;
};
template <> class gctools::GCStamp<chem::AntechamberFocusAtomMatch_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AntechamberFocusAtomMatch_O ;
};
template <> class gctools::GCStamp<chem::PdbMonomerDatabase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__PdbMonomerDatabase_O ;
};
template <> class gctools::GCStamp<chem::Aggregate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Aggregate_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_int8_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_int8_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___ ;
};
template <> class gctools::GCStamp<chem::SearchStatistics_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SearchStatistics_O ;
};
template <> class gctools::GCStamp<llvmo::EngineBuilder_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__EngineBuilder_O ;
};
template <> class gctools::GCStamp<kinematics::Joint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__Joint_O ;
};
template <> class gctools::GCStamp<llvmo::SectionedAddress_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__SectionedAddress_O ;
};
template <> class gctools::GCStamp<core::TagbodyEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__TagbodyEnvironment_O ;
};
template <> class gctools::GCStamp<core::SpecialForm_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SpecialForm_O ;
};
template <> class gctools::GCStamp<chem::EnergyStretch_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyStretch_O ;
};
template <> class gctools::GCStamp<llvmo::FunctionCallee_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__FunctionCallee_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<unsigned char>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_unsigned_char_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__ ;
};
template <> class gctools::GCStamp<llvmo::DIBuilder_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIBuilder_O ;
};
template <> class gctools::GCStamp<llvmo::APInt_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__APInt_O ;
};
template <> class gctools::GCStamp<core::Symbol_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Symbol_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_ ;
};
template <> class gctools::GCStamp<chem::AtomOrBondMatchNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AtomOrBondMatchNode_O ;
};
template <> class gctools::GCStamp<core::MDArray_byte4_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_byte4_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::FFNonbondCrossTerm>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_ ;
};
template <> class gctools::GCStamp<core::Iterator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Iterator_O ;
};
template <> class gctools::GCStamp<chem::FFItorDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFItorDb_O ;
};
template <> class gctools::GCStamp<llvmo::IRBuilderBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__IRBuilderBase_O ;
};
template <> class gctools::GCStamp<core::Null_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Null_O ;
};
template <> class gctools::GCStamp<chem::RingFinder_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RingFinder_O ;
};
template <> class gctools::GCStamp<core::SingleDispatchMethod_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SingleDispatchMethod_O ;
};
template <> class gctools::GCStamp<core::CxxObject_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__CxxObject_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___ ;
};
template <> class gctools::GCStamp<llvmo::FunctionType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__FunctionType_O ;
};
template <> class gctools::GCStamp<clbind::DummyCreator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_clbind__DummyCreator_O ;
};
template <> class gctools::GCStamp<llvmo::DIContext_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIContext_O ;
};
template <> class gctools::GCStamp<llvmo::JITDylib_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__JITDylib_O ;
};
template <> class gctools::GCStamp<core::Pointer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Pointer_O ;
};
template <> class gctools::GCStamp<llvmo::UnreachableInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__UnreachableInst_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_int64_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_int64_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<core::SymbolClassHolderPair>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_ ;
};
template <> class gctools::GCStamp<chem::FFParameterBaseDb_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFParameterBaseDb_O ;
};
template <> class gctools::GCStamp<gctools::GCBitUnitArray_moveable<4,0>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_ ;
};
template <> class gctools::GCStamp<core::Float_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Float_O ;
};
template <> class gctools::GCStamp<chem::ResidueTest_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__ResidueTest_O ;
};
template <> class gctools::GCStamp<chem::RestraintDistance_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RestraintDistance_O ;
};
template <> class gctools::GCStamp<chem::SmartsRoot_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__SmartsRoot_O ;
};
template <> class gctools::GCStamp<clbind::ConstructorCreator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_clbind__ConstructorCreator_O ;
};
template <> class gctools::GCStamp<llvmo::DIDerivedType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DIDerivedType_O ;
};
template <> class gctools::GCStamp<chem::TwisterDriver_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__TwisterDriver_O ;
};
template <> class gctools::GCStamp<core::TranslationFunctor_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__TranslationFunctor_O ;
};
template <> class gctools::GCStamp<llvmo::Code_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Code_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__ ;
};
template <> class gctools::GCStamp<units::NamedUnit_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_units__NamedUnit_O ;
};
template <> class gctools::GCStamp<core::MDArray_double_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_double_O ;
};
template <> class gctools::GCStamp<llvmo::StoreInst_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__StoreInst_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___ ;
};
template <> class gctools::GCStamp<core::CodeEntryPoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__CodeEntryPoint_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte8_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_byte8_t_O ;
};
template <> class gctools::GCStamp<chem::VirtualSphere_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__VirtualSphere_O ;
};
template <> class gctools::GCStamp<core::Rational_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Rational_O ;
};
template <> class gctools::GCStamp<adapt::IndexedObjectBag_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_adapt__IndexedObjectBag_O ;
};
template <> class gctools::GCStamp<chem::CipPrioritizer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__CipPrioritizer_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<unsigned long>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_unsigned_long_ ;
};
template <> class gctools::GCStamp<chem::AtomTable_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__AtomTable_O ;
};
template <> class gctools::GCStamp<core::Real_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Real_O ;
};
template <> class gctools::GCStamp<core::FuncallableInstanceCreator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FuncallableInstanceCreator_O ;
};
template <> class gctools::GCStamp<chem::Topology_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Topology_O ;
};
template <> class gctools::GCStamp<core::StringOutputStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__StringOutputStream_O ;
};
template <> class gctools::GCStamp<chem::EntityNameSetWithCap_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EntityNameSetWithCap_O ;
};
template <> class gctools::GCStamp<chem::BondMatcher_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__BondMatcher_O ;
};
template <> class gctools::GCStamp<llvmo::AttributeSet_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__AttributeSet_O ;
};
template <> class gctools::GCStamp<llvmo::MDBuilder_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__MDBuilder_O ;
};
template <> class gctools::GCStamp<llvmo::DISubprogram_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DISubprogram_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__ ;
};
template <> class gctools::GCStamp<chem::TrajectoryFrame_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__TrajectoryFrame_O ;
};
template <> class gctools::GCStamp<core::Creator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Creator_O ;
};
template <> class gctools::GCStamp<llvmo::ArrayType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ArrayType_O ;
};
template <> class gctools::GCStamp<chem::PdbWriter_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__PdbWriter_O ;
};
template <> class gctools::GCStamp<chem::Stereoisomer_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Stereoisomer_O ;
};
template <> class gctools::GCStamp<llvmo::MCSubtargetInfo_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__MCSubtargetInfo_O ;
};
template <> class gctools::GCStamp<core::SimpleMDArray_byte2_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleMDArray_byte2_t_O ;
};
template <> class gctools::GCStamp<llvmo::BlockAddress_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__BlockAddress_O ;
};
template <> class gctools::GCStamp<llvmo::DICompositeType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__DICompositeType_O ;
};
template <> class gctools::GCStamp<gctools::GCArray_moveable<short>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCArray_moveable_short_ ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__ ;
};
template <> class gctools::GCStamp<chem::Matter_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Matter_O ;
};
template <> class gctools::GCStamp<core::HashTableEq_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__HashTableEq_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__ ;
};
template <> class gctools::GCStamp<chem::RestraintChiral_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RestraintChiral_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::EnergyChiralRestraint>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_ ;
};
template <> class gctools::GCStamp<chem::EnergyComponent_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__EnergyComponent_O ;
};
template <> class gctools::GCStamp<kinematics::DelayedBondedJointTemplate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__DelayedBondedJointTemplate_O ;
};
template <> class gctools::GCStamp<core::HashTableEqualp_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__HashTableEqualp_O ;
};
template <> class gctools::GCStamp<core::LambdaListHandler_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__LambdaListHandler_O ;
};
template <> class gctools::GCStamp<kinematics::RotamerSetBase_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__RotamerSetBase_O ;
};
template <> class gctools::GCStamp<core::SymbolMacroletEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SymbolMacroletEnvironment_O ;
};
template <> class gctools::GCStamp<chem::RestrainedExoCyclicAtom_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RestrainedExoCyclicAtom_O ;
};
template <> class gctools::GCStamp<llvmo::ImmutablePass_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__ImmutablePass_O ;
};
template <> class gctools::GCStamp<core::FuncallableInstance_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__FuncallableInstance_O ;
};
template <> class gctools::GCStamp<chem::RingCoupling_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__RingCoupling_O ;
};
template <> class gctools::GCStamp<kinematics::FoldTree_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__FoldTree_O ;
};
template <> class gctools::GCStamp<chem::NumericalFunction_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__NumericalFunction_O ;
};
template <> class gctools::GCStamp<core::SynonymStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SynonymStream_O ;
};
template <> class gctools::GCStamp<core::MDArray_int2_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__MDArray_int2_t_O ;
};
template <> class gctools::GCStamp<kinematics::ChiList_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__ChiList_O ;
};
template <> class gctools::GCStamp<core::SimpleVector_int16_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__SimpleVector_int16_t_O ;
};
template <> class gctools::GCStamp<llvmo::Pass_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__Pass_O ;
};
template <> class gctools::GCStamp<chem::StepReport_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__StepReport_O ;
};
template <> class gctools::GCStamp<kinematics::BondedJointTemplate_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__BondedJointTemplate_O ;
};
template <> class gctools::GCStamp<core::Lisp_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Lisp_O ;
};
template <> class gctools::GCStamp<chem::FFVdw_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__FFVdw_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte4_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_byte4_t_O ;
};
template <> class gctools::GCStamp<asttooling::SourceLocation_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_asttooling__SourceLocation_O ;
};
template <> class gctools::GCStamp<core::CatchEnvironment_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__CatchEnvironment_O ;
};
template <> class gctools::GCStamp<kinematics::RingClosingMonomerNode_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__RingClosingMonomerNode_O ;
};
template <> class gctools::GCStamp<llvmo::TargetSubtargetInfo_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__TargetSubtargetInfo_O ;
};
template <> class gctools::GCStamp<chem::Root_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_chem__Root_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__ ;
};
template <> class gctools::GCStamp<core::Bignum_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__Bignum_O ;
};
template <> class gctools::GCStamp<kinematics::RootBondedJoint_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_kinematics__RootBondedJoint_O ;
};
template <> class gctools::GCStamp<core::LocalEntryPointGenerator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__LocalEntryPointGenerator_O ;
};
template <> class gctools::GCStamp<core::GlobalEntryPointGenerator_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__GlobalEntryPointGenerator_O ;
};
template <> class gctools::GCStamp<core::ComplexVector_byte32_t_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__ComplexVector_byte32_t_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<chem::AtomicInfo>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_ ;
};
template <> class gctools::GCStamp<llvmo::GlobalValue_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__GlobalValue_O ;
};
template <> class gctools::GCStamp<llvmo::PointerType_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_llvmo__PointerType_O ;
};
template <> class gctools::GCStamp<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__ ;
};
template <> class gctools::GCStamp<core::TwoWayStream_O> {
public:
  static gctools::GCStampEnum const StampWtag = gctools::STAMPWTAG_core__TwoWayStream_O ;
};
#endif // defined(GC_STAMP_SELECTORS)
#if defined(GC_OBJ_SCAN)
#endif // defined(GC_OBJ_SCAN)
#if defined(GC_OBJ_SCAN_HELPERS)
// StampWtag = core::T_O/7
{ class_kind, STAMPWTAG_core__T_O, sizeof(core::T_O), 0, 0, "core::T_O" },
// StampWtag = core::Unused_dummy_O/11
{ class_kind, STAMPWTAG_core__Unused_dummy_O, sizeof(core::Unused_dummy_O), 0, 0, "core::Unused_dummy_O" },
// StampWtag = core::General_O/15
{ class_kind, STAMPWTAG_core__General_O, sizeof(core::General_O), 0, IS_POLYMORPHIC, "core::General_O" },
// StampWtag = core::LambdaListHandler_O/19
{ class_kind, STAMPWTAG_core__LambdaListHandler_O, sizeof(core::LambdaListHandler_O), 0, IS_POLYMORPHIC, "core::LambdaListHandler_O" },
//      field: "_NumberOfSpecialVariables" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_NumberOfSpecialVariables), 0, "_NumberOfSpecialVariables" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_CreatesBindings" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_CreatesBindings), 0, "_CreatesBindings" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ClassifiedSymbolList" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_ClassifiedSymbolList), 0, "_ClassifiedSymbolList" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_SpecialSymbolSet" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<core::HashTableEq_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::HashTableEq_O" :NAME "HashTableEq_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_SpecialSymbolSet.theObject), 0, "_SpecialSymbolSet.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_DeclareSpecifierList" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_DeclareSpecifierList), 0, "_DeclareSpecifierList" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RequiredArguments" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::RequiredArgument>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::RequiredArgument" :NAME "RequiredArgument") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::RequiredArgument,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::RequiredArgument>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::RequiredArgument" :NAME "RequiredArgument") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::RequiredArgument>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::RequiredArgument>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::RequiredArgument" :NAME "RequiredArgument") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::RequiredArgument>>" :SPECIALIZER "class gctools::GCVector_moveable<class core::RequiredArgument>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::RequiredArgument>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RequiredArguments._Vector._Contents), 0, "_RequiredArguments._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_OptionalArguments" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::OptionalArgument>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::OptionalArgument" :NAME "OptionalArgument") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::OptionalArgument,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::OptionalArgument>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::OptionalArgument" :NAME "OptionalArgument") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::OptionalArgument>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::OptionalArgument>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::OptionalArgument" :NAME "OptionalArgument") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::OptionalArgument>>" :SPECIALIZER "class gctools::GCVector_moveable<class core::OptionalArgument>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::OptionalArgument>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_OptionalArguments._Vector._Contents), 0, "_OptionalArguments._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_RestArgument" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::RestArgument" :NAME "RestArgument")
//      field: "._ArgTarget" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RestArgument._ArgTarget), 0, "_RestArgument._ArgTarget" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RestArgument" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::RestArgument" :NAME "RestArgument")
//      field: "._ArgTargetFrameIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RestArgument._ArgTargetFrameIndex), 0, "_RestArgument._ArgTargetFrameIndex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_RestArgument" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::RestArgument" :NAME "RestArgument")
//      field: ".VaRest" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RestArgument.VaRest), 0, "_RestArgument.VaRest" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_KeyFlag" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_KeyFlag), 0, "_KeyFlag" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_KeywordArguments" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::KeywordArgument>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::KeywordArgument,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeywordArgument>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeywordArgument>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::KeywordArgument>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::KeywordArgument>>" :SPECIALIZER "class gctools::GCVector_moveable<class core::KeywordArgument>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::KeywordArgument>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_KeywordArguments._Vector._Contents), 0, "_KeywordArguments._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_AllowOtherKeys" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_AllowOtherKeys), 0, "_AllowOtherKeys" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AuxArguments" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::AuxArgument>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::AuxArgument" :NAME "AuxArgument") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::AuxArgument,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::AuxArgument>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::AuxArgument" :NAME "AuxArgument") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::AuxArgument>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::AuxArgument>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::AuxArgument" :NAME "AuxArgument") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::AuxArgument>>" :SPECIALIZER "class gctools::GCVector_moveable<class core::AuxArgument>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::AuxArgument>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_AuxArguments._Vector._Contents), 0, "_AuxArguments._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleString_O>" :SPECIALIZER "class core::SimpleString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NumberOfLexicalVariables" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_NumberOfLexicalVariables), 0, "_NumberOfLexicalVariables" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RequiredLexicalArgumentsOnly" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_RequiredLexicalArgumentsOnly), 0, "_RequiredLexicalArgumentsOnly" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LexicalVariableNamesForDebugging" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LambdaListHandler_O),_LexicalVariableNamesForDebugging), 0, "_LexicalVariableNamesForDebugging" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::AttributeSet_O/23
{ class_kind, STAMPWTAG_llvmo__AttributeSet_O, sizeof(llvmo::AttributeSet_O), 0, IS_POLYMORPHIC, "llvmo::AttributeSet_O" },
//      field: "val" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<llvm::AttributeSet>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::AttributeSet" :NAME "AttributeSet") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(llvm::AttributeSet), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::AttributeSet_O),val), 0, "val" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Pointer_O/27
{ class_kind, STAMPWTAG_core__Pointer_O, sizeof(core::Pointer_O), 0, IS_POLYMORPHIC, "core::Pointer_O" },
//      field: "m_raw_data" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Pointer_O),m_raw_data), 0, "m_raw_data" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = clasp_ffi::ForeignData_O/31
{ class_kind, STAMPWTAG_clasp_ffi__ForeignData_O, sizeof(clasp_ffi::ForeignData_O), 0, IS_POLYMORPHIC, "clasp_ffi::ForeignData_O" },
//      field: "m_raw_data" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignData_O),m_raw_data), 0, "m_raw_data" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "m_kind" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignData_O),m_kind), 0, "m_kind" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "m_size" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignData_O),m_size), 0, "m_size" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "m_orig_data_ptr" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignData_O),m_orig_data_ptr), 0, "m_orig_data_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::CxxObject_O/35
{ class_kind, STAMPWTAG_core__CxxObject_O, sizeof(core::CxxObject_O), 0, IS_POLYMORPHIC, "core::CxxObject_O" },
// StampWtag = asttooling::SourceLocation_O/39
{ class_kind, STAMPWTAG_asttooling__SourceLocation_O, sizeof(asttooling::SourceLocation_O), 0, IS_POLYMORPHIC, "asttooling::SourceLocation_O" },
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<clang::SourceLocation>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "clang::SourceLocation" :NAME "SourceLocation") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(clang::SourceLocation), __builtin_offsetof(SAFE_TYPE_MACRO(asttooling::SourceLocation_O),_Value), 0, "_Value" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = kinematics::ChiList_O/43
{ class_kind, STAMPWTAG_kinematics__ChiList_O, sizeof(kinematics::ChiList_O), 0, IS_POLYMORPHIC, "kinematics::ChiList_O" },
//      field: "_Chis" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::ChiDihedral_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChiDihedral_O>" :SPECIALIZER "class kinematics::ChiDihedral_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::ChiDihedral_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChiDihedral_O>" :SPECIALIZER "class kinematics::ChiDihedral_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChiDihedral_O>" :SPECIALIZER "class kinematics::ChiDihedral_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::ChiDihedral_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::ChiList_O),_Chis._Vector._Contents), 0, "_Chis._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::NumericalFunction_O/47
{ class_kind, STAMPWTAG_chem__NumericalFunction_O, sizeof(chem::NumericalFunction_O), 0, IS_POLYMORPHIC, "chem::NumericalFunction_O" },
//      field: "title" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),title), 0, "title" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "xAxisName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),xAxisName), 0, "xAxisName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "yAxisName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),yAxisName), 0, "yAxisName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "xInc" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),xInc), 0, "xInc" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "xStart" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),xStart), 0, "xStart" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "values" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<double>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<double,gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<double>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<double>>" :SPECIALIZER "class gctools::GCVector_moveable<double>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::NumericalFunction_O),values._Vector._Contents), 0, "values._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = kinematics::FoldTree_O/51
{ class_kind, STAMPWTAG_kinematics__FoldTree_O, sizeof(kinematics::FoldTree_O), 0, IS_POLYMORPHIC, "kinematics::FoldTree_O" },
//      field: "_AggregateNode" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::AggregateNode_O>" :SPECIALIZER "class kinematics::AggregateNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::AggregateNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::FoldTree_O),_AggregateNode), 0, "_AggregateNode" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::RotamerSetBase_O/55
{ class_kind, STAMPWTAG_kinematics__RotamerSetBase_O, sizeof(kinematics::RotamerSetBase_O), 0, IS_POLYMORPHIC, "kinematics::RotamerSetBase_O" },
//      field: "_Rotamers" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::Rotamer_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::Rotamer_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::Rotamer_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RotamerSetBase_O),_Rotamers._Vector._Contents), 0, "_Rotamers._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = kinematics::BackboneDependentRotamerSet_O/59
{ class_kind, STAMPWTAG_kinematics__BackboneDependentRotamerSet_O, sizeof(kinematics::BackboneDependentRotamerSet_O), 0, IS_POLYMORPHIC, "kinematics::BackboneDependentRotamerSet_O" },
//      field: "_Rotamers" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::Rotamer_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::Rotamer_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::Rotamer_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerSet_O),_Rotamers._Vector._Contents), 0, "_Rotamers._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Phi" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerSet_O),_Phi), 0, "_Phi" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Psi" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerSet_O),_Psi), 0, "_Psi" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = kinematics::RotamerSet_O/63
{ class_kind, STAMPWTAG_kinematics__RotamerSet_O, sizeof(kinematics::RotamerSet_O), 0, IS_POLYMORPHIC, "kinematics::RotamerSet_O" },
//      field: "_Rotamers" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::Rotamer_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::Rotamer_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::Rotamer_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RotamerSet_O),_Rotamers._Vector._Contents), 0, "_Rotamers._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyComponent_O/67
{ class_kind, STAMPWTAG_chem__EnergyComponent_O, sizeof(chem::EnergyComponent_O), 0, IS_POLYMORPHIC, "chem::EnergyComponent_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyComponent_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::EnergyStretch_O/71
{ class_kind, STAMPWTAG_chem__EnergyStretch_O, sizeof(chem::EnergyStretch_O), 0, IS_POLYMORPHIC, "chem::EnergyStretch_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyStretch>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyStretch,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyStretch>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyStretch>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyStretch>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyStretch>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyStretch>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyStretch>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyStretch>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyStretch,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyStretch>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyStretch>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyStretch>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyStretch>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyStretch>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyStretch>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyRigidBodyComponent_O/75
{ class_kind, STAMPWTAG_chem__EnergyRigidBodyComponent_O, sizeof(chem::EnergyRigidBodyComponent_O), 0, IS_POLYMORPHIC, "chem::EnergyRigidBodyComponent_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyComponent_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::EnergyRigidBodyStaple_O/79
{ class_kind, STAMPWTAG_chem__EnergyRigidBodyStaple_O, sizeof(chem::EnergyRigidBodyStaple_O), 0, IS_POLYMORPHIC, "chem::EnergyRigidBodyStaple_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyRigidBodyStaple>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyRigidBodyStaple" :NAME "EnergyRigidBodyStaple") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyRigidBodyStaple,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyRigidBodyStaple" :NAME "EnergyRigidBodyStaple") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyRigidBodyStaple" :NAME "EnergyRigidBodyStaple") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyRigidBodyStaple>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyRigidBodyNonbond_O/83
{ class_kind, STAMPWTAG_chem__EnergyRigidBodyNonbond_O, sizeof(chem::EnergyRigidBodyNonbond_O), 0, IS_POLYMORPHIC, "chem::EnergyRigidBodyNonbond_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DielectricConstant" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_DielectricConstant), 0, "_DielectricConstant" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleVdw" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_ScaleVdw), 0, "_ScaleVdw" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleElectrostatic" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_ScaleElectrostatic), 0, "_ScaleElectrostatic" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyVdw" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_EnergyVdw), 0, "_EnergyVdw" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyElectrostatic" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_EnergyElectrostatic), 0, "_EnergyElectrostatic" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RigidBodyEndAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_byte32_t_O>" :SPECIALIZER "class core::SimpleVector_byte32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_byte32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_RigidBodyEndAtom), 0, "_RigidBodyEndAtom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomInfoTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::RigidBodyAtomInfo>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyAtomInfo" :NAME "RigidBodyAtomInfo") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::RigidBodyAtomInfo,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyAtomInfo" :NAME "RigidBodyAtomInfo") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::RigidBodyAtomInfo>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyAtomInfo" :NAME "RigidBodyAtomInfo") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>>" :SPECIALIZER "class gctools::GCVector_moveable<struct chem::RigidBodyAtomInfo>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::RigidBodyAtomInfo>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_AtomInfoTable._Vector._Contents), 0, "_AtomInfoTable._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_NumberOfTypes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_NumberOfTypes), 0, "_NumberOfTypes" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_CrossTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::RigidBodyNonbondCrossTerm>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyNonbondCrossTerm" :NAME "RigidBodyNonbondCrossTerm") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::RigidBodyNonbondCrossTerm,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyNonbondCrossTerm" :NAME "RigidBodyNonbondCrossTerm") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyNonbondCrossTerm" :NAME "RigidBodyNonbondCrossTerm") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>>" :SPECIALIZER "class gctools::GCVector_moveable<struct chem::RigidBodyNonbondCrossTerm>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyNonbond_O),_CrossTerms._Vector._Contents), 0, "_CrossTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyOutOfZPlane_O/87
{ class_kind, STAMPWTAG_chem__EnergyOutOfZPlane_O, sizeof(chem::EnergyOutOfZPlane_O), 0, IS_POLYMORPHIC, "chem::EnergyOutOfZPlane_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyOutOfZPlane>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyOutOfZPlane,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyOutOfZPlane>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyOutOfZPlane>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyOutOfZPlane>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyOutOfZPlane,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyOutOfZPlane>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyOutOfZPlane>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyOutOfZPlane>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergySketchNonbond_O/91
{ class_kind, STAMPWTAG_chem__EnergySketchNonbond_O, sizeof(chem::EnergySketchNonbond_O), 0, IS_POLYMORPHIC, "chem::EnergySketchNonbond_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleSketchNonbond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_ScaleSketchNonbond), 0, "_ScaleSketchNonbond" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LongDistanceCutoff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_LongDistanceCutoff), 0, "_LongDistanceCutoff" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_IgnoreHydrogensAndLps" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_IgnoreHydrogensAndLps), 0, "_IgnoreHydrogensAndLps" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Energy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Energy), 0, "_Energy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FreezeFlags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_FreezeFlags), 0, "_FreezeFlags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergySketchNonbond>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchNonbond" :NAME "EnergySketchNonbond") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergySketchNonbond,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergySketchNonbond>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchNonbond" :NAME "EnergySketchNonbond") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergySketchNonbond>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergySketchNonbond>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchNonbond" :NAME "EnergySketchNonbond") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchNonbond>>" :SPECIALIZER "class gctools::GCVector_moveable<struct chem::EnergySketchNonbond>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchNonbond>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyDihedralRestraint_O/95
{ class_kind, STAMPWTAG_chem__EnergyDihedralRestraint_O, sizeof(chem::EnergyDihedralRestraint_O), 0, IS_POLYMORPHIC, "chem::EnergyDihedralRestraint_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyDihedralRestraint>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyDihedralRestraint,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyDihedralRestraint>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyDihedralRestraint>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyDihedralRestraint>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyDihedralRestraint,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyDihedralRestraint>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyDihedralRestraint>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedralRestraint>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyChiralRestraint_O/99
{ class_kind, STAMPWTAG_chem__EnergyChiralRestraint_O, sizeof(chem::EnergyChiralRestraint_O), 0, IS_POLYMORPHIC, "chem::EnergyChiralRestraint_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyChiralRestraint>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyChiralRestraint,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyChiralRestraint>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyChiralRestraint>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyChiralRestraint>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyChiralRestraint,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyChiralRestraint>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyChiralRestraint>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyChiralRestraint>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyPointToLineRestraint_O/103
{ class_kind, STAMPWTAG_chem__EnergyPointToLineRestraint_O, sizeof(chem::EnergyPointToLineRestraint_O), 0, IS_POLYMORPHIC, "chem::EnergyPointToLineRestraint_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bond_div_2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Bond_div_2), 0, "_Bond_div_2" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Stretch" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergySketchStretch_O>" :SPECIALIZER "class chem::EnergySketchStretch_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergySketchStretch_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_Stretch), 0, "_Stretch" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ForceConstant" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPointToLineRestraint_O),_ForceConstant), 0, "_ForceConstant" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::EnergyDihedral_O/107
{ class_kind, STAMPWTAG_chem__EnergyDihedral_O, sizeof(chem::EnergyDihedral_O), 0, IS_POLYMORPHIC, "chem::EnergyDihedral_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyDihedral>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyDihedral,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyDihedral>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyDihedral>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyDihedral>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedral>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyDihedral>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedral>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyDihedral>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyDihedral,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyDihedral>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyDihedral>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyDihedral>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedral>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyDihedral>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyDihedral>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyNonbond_O/111
{ class_kind, STAMPWTAG_chem__EnergyNonbond_O, sizeof(chem::EnergyNonbond_O), 0, IS_POLYMORPHIC, "chem::EnergyNonbond_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DielectricConstant" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_DielectricConstant), 0, "_DielectricConstant" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleVdw" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ScaleVdw), 0, "_ScaleVdw" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleElectrostatic" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ScaleElectrostatic), 0, "_ScaleElectrostatic" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyVdw" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_EnergyVdw), 0, "_EnergyVdw" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyElectrostatic" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_EnergyElectrostatic), 0, "_EnergyElectrostatic" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NonbondCutoff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NonbondCutoff), 0, "_NonbondCutoff" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NonbondCutoffSquared" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NonbondCutoffSquared), 0, "_NonbondCutoffSquared" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NonbondCutoffReciprocal12" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NonbondCutoffReciprocal12), 0, "_NonbondCutoffReciprocal12" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NonbondCutoffReciprocal6" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NonbondCutoffReciprocal6), 0, "_NonbondCutoffReciprocal6" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_UsesExcludedAtoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_UsesExcludedAtoms), 0, "_UsesExcludedAtoms" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyNonbond>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyNonbond,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyNonbond>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyNonbond>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyNonbond>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyNonbond>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyNonbond>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyNonbond,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyNonbond>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyNonbond>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyNonbond>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyNonbond>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_FFNonbondDb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_FFNonbondDb), 0, "_FFNonbondDb" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomTable_O>" :SPECIALIZER "class chem::AtomTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_AtomTable), 0, "_AtomTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ntypes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ntypes), 0, "_ntypes" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_atom_name_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_O>" :SPECIALIZER "class core::SimpleVector_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_atom_name_vector), 0, "_atom_name_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_charge_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_charge_vector), 0, "_charge_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_mass_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_mass_vector), 0, "_mass_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_atomic_number_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_atomic_number_vector), 0, "_atomic_number_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ico_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ico_vec), 0, "_ico_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_iac_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_iac_vec), 0, "_iac_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_atom_type_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_O>" :SPECIALIZER "class core::SimpleVector_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_atom_type_vector), 0, "_atom_type_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_local_typej_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_local_typej_vec), 0, "_local_typej_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_cn1_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_cn1_vec), 0, "_cn1_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_cn2_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_cn2_vec), 0, "_cn2_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NumberOfExcludedAtomIndices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_NumberOfExcludedAtomIndices), 0, "_NumberOfExcludedAtomIndices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ExcludedAtomIndices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond_O),_ExcludedAtomIndices), 0, "_ExcludedAtomIndices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::EnergyPeriodicBoundaryConditionsNonbond_O/115
{ class_kind, STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O, sizeof(chem::EnergyPeriodicBoundaryConditionsNonbond_O), 0, IS_POLYMORPHIC, "chem::EnergyPeriodicBoundaryConditionsNonbond_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DielectricConstant" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_DielectricConstant), 0, "_DielectricConstant" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleVdw" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ScaleVdw), 0, "_ScaleVdw" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleElectrostatic" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ScaleElectrostatic), 0, "_ScaleElectrostatic" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyVdw" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_EnergyVdw), 0, "_EnergyVdw" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyElectrostatic" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_EnergyElectrostatic), 0, "_EnergyElectrostatic" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NonbondCutoff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NonbondCutoff), 0, "_NonbondCutoff" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NonbondCutoffSquared" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NonbondCutoffSquared), 0, "_NonbondCutoffSquared" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NonbondCutoffReciprocal12" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NonbondCutoffReciprocal12), 0, "_NonbondCutoffReciprocal12" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NonbondCutoffReciprocal6" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NonbondCutoffReciprocal6), 0, "_NonbondCutoffReciprocal6" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_UsesExcludedAtoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_UsesExcludedAtoms), 0, "_UsesExcludedAtoms" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyNonbond>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyNonbond,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyNonbond>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyNonbond>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyNonbond>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyNonbond>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyNonbond>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyNonbond,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyNonbond>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyNonbond>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyNonbond>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyNonbond>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyNonbond>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_FFNonbondDb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_FFNonbondDb), 0, "_FFNonbondDb" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomTable_O>" :SPECIALIZER "class chem::AtomTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_AtomTable), 0, "_AtomTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ntypes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ntypes), 0, "_ntypes" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_atom_name_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_O>" :SPECIALIZER "class core::SimpleVector_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_atom_name_vector), 0, "_atom_name_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_charge_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_charge_vector), 0, "_charge_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_mass_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_mass_vector), 0, "_mass_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_atomic_number_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_atomic_number_vector), 0, "_atomic_number_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ico_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ico_vec), 0, "_ico_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_iac_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_iac_vec), 0, "_iac_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_atom_type_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_O>" :SPECIALIZER "class core::SimpleVector_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_atom_type_vector), 0, "_atom_type_vector" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_local_typej_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_local_typej_vec), 0, "_local_typej_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_cn1_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_cn1_vec), 0, "_cn1_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_cn2_vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_cn2_vec), 0, "_cn2_vec" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NumberOfExcludedAtomIndices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_NumberOfExcludedAtomIndices), 0, "_NumberOfExcludedAtomIndices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ExcludedAtomIndices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_int32_t_O>" :SPECIALIZER "class core::SimpleVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyPeriodicBoundaryConditionsNonbond_O),_ExcludedAtomIndices), 0, "_ExcludedAtomIndices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::EnergyAnchorRestraint_O/119
{ class_kind, STAMPWTAG_chem__EnergyAnchorRestraint_O, sizeof(chem::EnergyAnchorRestraint_O), 0, IS_POLYMORPHIC, "chem::EnergyAnchorRestraint_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyAnchorRestraint>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyAnchorRestraint,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyAnchorRestraint>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyAnchorRestraint>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyAnchorRestraint>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyAnchorRestraint,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyAnchorRestraint>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyAnchorRestraint>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAnchorRestraint>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyFixedNonbondRestraint_O/123
{ class_kind, STAMPWTAG_chem__EnergyFixedNonbondRestraint_O, sizeof(chem::EnergyFixedNonbondRestraint_O), 0, IS_POLYMORPHIC, "chem::EnergyFixedNonbondRestraint_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MobileAtomTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomTable_O>" :SPECIALIZER "class chem::AtomTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_MobileAtomTable), 0, "_MobileAtomTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NonbondCrossTermTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbondCrossTermTable_O>" :SPECIALIZER "class chem::FFNonbondCrossTermTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFNonbondCrossTermTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_NonbondCrossTermTable), 0, "_NonbondCrossTermTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DielectricConstant" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_DielectricConstant), 0, "_DielectricConstant" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleVdw" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_ScaleVdw), 0, "_ScaleVdw" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ScaleElectrostatic" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_ScaleElectrostatic), 0, "_ScaleElectrostatic" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyVdw" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_EnergyVdw), 0, "_EnergyVdw" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyElectrostatic" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_EnergyElectrostatic), 0, "_EnergyElectrostatic" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::FixedNonbondRestraint>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FixedNonbondRestraint" :NAME "FixedNonbondRestraint") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::FixedNonbondRestraint,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::FixedNonbondRestraint>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FixedNonbondRestraint" :NAME "FixedNonbondRestraint") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::FixedNonbondRestraint>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::FixedNonbondRestraint>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FixedNonbondRestraint" :NAME "FixedNonbondRestraint") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::FixedNonbondRestraint>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::FixedNonbondRestraint>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::FixedNonbondRestraint>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::BeyondThresholdFixedNonbondRestraint>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BeyondThresholdFixedNonbondRestraint" :NAME "BeyondThresholdFixedNonbondRestraint") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::BeyondThresholdFixedNonbondRestraint,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BeyondThresholdFixedNonbondRestraint" :NAME "BeyondThresholdFixedNonbondRestraint") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BeyondThresholdFixedNonbondRestraint" :NAME "BeyondThresholdFixedNonbondRestraint") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::BeyondThresholdFixedNonbondRestraint>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFixedNonbondRestraint_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergySketchStretch_O/127
{ class_kind, STAMPWTAG_chem__EnergySketchStretch_O, sizeof(chem::EnergySketchStretch_O), 0, IS_POLYMORPHIC, "chem::EnergySketchStretch_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergySketchStretch>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergySketchStretch,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergySketchStretch>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergySketchStretch>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergySketchStretch>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchStretch>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergySketchStretch>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchStretch>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergySketchStretch>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergySketchStretch,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergySketchStretch>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergySketchStretch>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergySketchStretch>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchStretch>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergySketchStretch>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergySketchStretch>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EnergyAngle_O/131
{ class_kind, STAMPWTAG_chem__EnergyAngle_O, sizeof(chem::EnergyAngle_O), 0, IS_POLYMORPHIC, "chem::EnergyAngle_O" },
//      field: "_Enabled" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Enabled), 0, "_Enabled" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorThreshold" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_ErrorThreshold), 0, "_ErrorThreshold" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugEnergy), 0, "_DebugEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Debug_NumberOfTermsToCalculate" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Debug_NumberOfTermsToCalculate), 0, "_Debug_NumberOfTermsToCalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugLog" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_DebugLog), 0, "_DebugLog" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Evaluations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Evaluations), 0, "_Evaluations" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyAngle>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyAngle,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAngle>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAngle>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyAngle>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAngle>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyAngle>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAngle>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_BeyondThresholdTerms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyAngle>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyAngle,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAngle>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAngle>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyAngle>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAngle>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyAngle>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAngle>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle_O),_BeyondThresholdTerms._Vector._Contents), 0, "_BeyondThresholdTerms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Matter_O/135
{ class_kind, STAMPWTAG_chem__Matter_O, sizeof(chem::Matter_O), 0, IS_POLYMORPHIC, "chem::Matter_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Matter_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Matter_O),name), 0, "name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_contents" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Matter_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Matter_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Matter_O),_contents._Vector._Contents), 0, "_contents._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Matter_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RestraintList" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Matter_O),_RestraintList), 0, "_RestraintList" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Aggregate_O/139
{ class_kind, STAMPWTAG_chem__Aggregate_O, sizeof(chem::Aggregate_O), 0, IS_POLYMORPHIC, "chem::Aggregate_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),name), 0, "name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_contents" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Matter_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Matter_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_contents._Vector._Contents), 0, "_contents._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RestraintList" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_RestraintList), 0, "_RestraintList" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ForceFieldName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_ForceFieldName), 0, "_ForceFieldName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_BoundingBox" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BoundingBox_O>" :SPECIALIZER "class chem::BoundingBox_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BoundingBox_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Aggregate_O),_BoundingBox), 0, "_BoundingBox" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Atom_O/143
{ class_kind, STAMPWTAG_chem__Atom_O, sizeof(chem::Atom_O), 0, IS_POLYMORPHIC, "chem::Atom_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),name), 0, "name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_contents" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Matter_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Matter_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_contents._Vector._Contents), 0, "_contents._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RestraintList" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_RestraintList), 0, "_RestraintList" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_UniqueAtomOrder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_UniqueAtomOrder), 0, "_UniqueAtomOrder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Alias" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Alias), 0, "_Alias" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),flags), 0, "flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),type), 0, "type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "bonds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Bond_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Bond_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Bond_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),bonds._Vector._Contents), 0, "bonds._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "charge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),charge), 0, "charge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "copyAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),copyAtom), 0, "copyAtom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "backCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),backCount), 0, "backCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "tempInt" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),tempInt), 0, "tempInt" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "dAtomTemp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),dAtomTemp), 0, "dAtomTemp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "seenId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),seenId), 0, "seenId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "occupancy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),occupancy), 0, "occupancy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "tempFactor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),tempFactor), 0, "tempFactor" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "vdwRadius" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),vdwRadius), 0, "vdwRadius" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "covalentRadius" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),covalentRadius), 0, "covalentRadius" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mask" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Mask), 0, "_Mask" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RingMembershipCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short")
 {  fixed_field, ctype_unsigned_short, sizeof(unsigned short), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_RingMembershipCount), 0, "_RingMembershipCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Ionization" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short")
 {  fixed_field, ctype_short, sizeof(short), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Atom_O),_Ionization), 0, "_Ionization" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::VirtualAtom_O/147
{ class_kind, STAMPWTAG_chem__VirtualAtom_O, sizeof(chem::VirtualAtom_O), 0, IS_POLYMORPHIC, "chem::VirtualAtom_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),name), 0, "name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_contents" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Matter_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Matter_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_contents._Vector._Contents), 0, "_contents._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RestraintList" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_RestraintList), 0, "_RestraintList" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_UniqueAtomOrder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_UniqueAtomOrder), 0, "_UniqueAtomOrder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Alias" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Alias), 0, "_Alias" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),flags), 0, "flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),type), 0, "type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "bonds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Bond_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Bond_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Bond_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),bonds._Vector._Contents), 0, "bonds._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "charge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),charge), 0, "charge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "copyAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),copyAtom), 0, "copyAtom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "backCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),backCount), 0, "backCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "tempInt" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),tempInt), 0, "tempInt" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "dAtomTemp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),dAtomTemp), 0, "dAtomTemp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "seenId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),seenId), 0, "seenId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "occupancy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),occupancy), 0, "occupancy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "tempFactor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),tempFactor), 0, "tempFactor" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "vdwRadius" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),vdwRadius), 0, "vdwRadius" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "covalentRadius" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),covalentRadius), 0, "covalentRadius" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mask" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Mask), 0, "_Mask" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RingMembershipCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short")
 {  fixed_field, ctype_unsigned_short, sizeof(unsigned short), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_RingMembershipCount), 0, "_RingMembershipCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Ionization" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short")
 {  fixed_field, ctype_short, sizeof(short), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_Ionization), 0, "_Ionization" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_CalculatePosition" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CalculatePosition_O>" :SPECIALIZER "class chem::CalculatePosition_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CalculatePosition_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualAtom_O),_CalculatePosition), 0, "_CalculatePosition" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Residue_O/151
{ class_kind, STAMPWTAG_chem__Residue_O, sizeof(chem::Residue_O), 0, IS_POLYMORPHIC, "chem::Residue_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),name), 0, "name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_contents" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Matter_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Matter_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_contents._Vector._Contents), 0, "_contents._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RestraintList" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_RestraintList), 0, "_RestraintList" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_Type), 0, "_Type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Selected" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_Selected), 0, "_Selected" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NetCharge" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_NetCharge), 0, "_NetCharge" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "tempInt" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),tempInt), 0, "tempInt" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "pdbName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),pdbName), 0, "pdbName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_FileSequenceNumber" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_FileSequenceNumber), 0, "_FileSequenceNumber" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_UniqueLabel" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<core::Symbol_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Symbol_O" :NAME "Symbol_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_UniqueLabel.theObject), 0, "_UniqueLabel.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_MonomerAliases" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<adapt::SymbolSet_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::SymbolSet_O>" :SPECIALIZER "class adapt::SymbolSet_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "adapt::SymbolSet_O" :NAME "SymbolSet_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Residue_O),_MonomerAliases.theObject), 0, "_MonomerAliases.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Molecule_O/155
{ class_kind, STAMPWTAG_chem__Molecule_O, sizeof(chem::Molecule_O), 0, IS_POLYMORPHIC, "chem::Molecule_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),name), 0, "name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_contents" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Matter_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Matter_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_contents._Vector._Contents), 0, "_contents._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RestraintList" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_RestraintList), 0, "_RestraintList" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ForceFieldName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_ForceFieldName), 0, "_ForceFieldName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Molecule_O),_Type), 0, "_Type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::PdbWriter_O/159
{ class_kind, STAMPWTAG_chem__PdbWriter_O, sizeof(chem::PdbWriter_O), 0, IS_POLYMORPHIC, "chem::PdbWriter_O" },
//      field: "_Out" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PdbWriter_O),_Out), 0, "_Out" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::TrajectoryFrame_O/163
{ class_kind, STAMPWTAG_chem__TrajectoryFrame_O, sizeof(chem::TrajectoryFrame_O), 0, IS_POLYMORPHIC, "chem::TrajectoryFrame_O" },
//      field: "_Coordinates" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::SimpleVectorCoordinate_O>" :SPECIALIZER "class geom::SimpleVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::TrajectoryFrame_O),_Coordinates), 0, "_Coordinates" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::MDBuilder_O/167
{ class_kind, STAMPWTAG_llvmo__MDBuilder_O, sizeof(llvmo::MDBuilder_O), 0, IS_POLYMORPHIC, "llvmo::MDBuilder_O" },
//      field: "_Builder" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::MDBuilder" :NAME "MDBuilder"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MDBuilder_O),_Builder), 0, "_Builder" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::Topology_O/171
{ class_kind, STAMPWTAG_chem__Topology_O, sizeof(chem::Topology_O), 0, IS_POLYMORPHIC, "chem::Topology_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Constitution" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Constitution_O>" :SPECIALIZER "class chem::Constitution_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Constitution_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_Constitution), 0, "_Constitution" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_StereoisomerCoding" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_StereoisomerCoding), 0, "_StereoisomerCoding" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_StereoisomerAtomProperties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::StereoisomerAtoms_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtoms_O>" :SPECIALIZER "class chem::StereoisomerAtoms_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::StereoisomerAtoms_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtoms_O>" :SPECIALIZER "class chem::StereoisomerAtoms_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtoms_O>" :SPECIALIZER "class chem::StereoisomerAtoms_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::StereoisomerAtoms_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_StereoisomerAtomProperties._Vector._Contents), 0, "_StereoisomerAtomProperties._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DefaultOutPlugName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_DefaultOutPlugName), 0, "_DefaultOutPlugName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Plugs" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Plug_O>" :SPECIALIZER "class chem::Plug_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::Plug_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Topology_O),_Plugs._Contents), 0, "_Plugs._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::AtomTable_O/175
{ class_kind, STAMPWTAG_chem__AtomTable_O, sizeof(chem::AtomTable_O), 0, IS_POLYMORPHIC, "chem::AtomTable_O" },
//      field: "_Atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::EnergyAtom>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::EnergyAtom,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAtom>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::EnergyAtom>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::EnergyAtom>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAtom>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::EnergyAtom>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::EnergyAtom>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_Atoms._Vector._Contents), 0, "_Atoms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_AtomTableIndices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_AtomTableIndices), 0, "_AtomTableIndices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ResiduePointers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_int32_t_O>" :SPECIALIZER "class core::ComplexVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_ResiduePointers), 0, "_ResiduePointers" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ResidueNames" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_T_O>" :SPECIALIZER "class core::ComplexVector_T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_ResidueNames), 0, "_ResidueNames" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomsPerMolecule" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_int32_t_O>" :SPECIALIZER "class core::ComplexVector_int32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_int32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_AtomsPerMolecule), 0, "_AtomsPerMolecule" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_firstSolventMoleculeNSPSOL" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_firstSolventMoleculeNSPSOL), 0, "_firstSolventMoleculeNSPSOL" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_finalSoluteResidueIPTRES" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_finalSoluteResidueIPTRES), 0, "_finalSoluteResidueIPTRES" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_totalNumberOfMoleculesNSPM" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_totalNumberOfMoleculesNSPM), 0, "_totalNumberOfMoleculesNSPM" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Residues" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_Residues), 0, "_Residues" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Molecules" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_Molecules), 0, "_Molecules" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AggregateName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_AggregateName), 0, "_AggregateName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_BoundingBox" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_BoundingBox), 0, "_BoundingBox" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NonbondForceFieldForAggregate" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTable_O),_NonbondForceFieldForAggregate), 0, "_NonbondForceFieldForAggregate" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::CipPrioritizer_O/179
{ class_kind, STAMPWTAG_chem__CipPrioritizer_O, sizeof(chem::CipPrioritizer_O), 0, IS_POLYMORPHIC, "chem::CipPrioritizer_O" },
//      field: "_p" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<int,gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<int>>" :SPECIALIZER "class gctools::GCVector_moveable<int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CipPrioritizer_O),_p._Vector._Contents), 0, "_p._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_s" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::Vec0<int>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::Vec0<int>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::Vec0<int>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::Vec0<int>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::Vec0<int>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::Vec0<int>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::Vec0<int> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::Vec0<int>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CipPrioritizer_O),_s._Vector._Contents), 0, "_s._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = adapt::IndexedObjectBag_O/183
{ class_kind, STAMPWTAG_adapt__IndexedObjectBag_O, sizeof(adapt::IndexedObjectBag_O), 0, IS_POLYMORPHIC, "adapt::IndexedObjectBag_O" },
//      field: "_Bag" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<core::HashTableEq_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::HashTableEq_O" :NAME "HashTableEq_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::IndexedObjectBag_O),_Bag.theObject), 0, "_Bag.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_NextIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")
 {  fixed_field, ctype_long, sizeof(long), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::IndexedObjectBag_O),_NextIndex), 0, "_NextIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::VirtualSphere_O/187
{ class_kind, STAMPWTAG_chem__VirtualSphere_O, sizeof(chem::VirtualSphere_O), 0, IS_POLYMORPHIC, "chem::VirtualSphere_O" },
//      field: "_WindowWidth" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_WindowWidth), 0, "_WindowWidth" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_WindowHeight" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_WindowHeight), 0, "_WindowHeight" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_StartX" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_StartX), 0, "_StartX" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_StartY" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_StartY), 0, "_StartY" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_MouseX" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_MouseX), 0, "_MouseX" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_MouseY" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_MouseY), 0, "_MouseY" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Recalculate" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_Recalculate), 0, "_Recalculate" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Scale" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::VirtualSphere_O),_Scale), 0, "_Scale" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::TwisterDriver_O/191
{ class_kind, STAMPWTAG_chem__TwisterDriver_O, sizeof(chem::TwisterDriver_O), 0, IS_POLYMORPHIC, "chem::TwisterDriver_O" },
//      field: "_Aggregate" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Aggregate_O>" :SPECIALIZER "class chem::Aggregate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Aggregate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::TwisterDriver_O),_Aggregate), 0, "_Aggregate" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Twisters" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Twister_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Twister_O>" :SPECIALIZER "class chem::Twister_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Twister_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Twister_O>" :SPECIALIZER "class chem::Twister_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Twister_O>" :SPECIALIZER "class chem::Twister_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Twister_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::TwisterDriver_O),_Twisters._Vector._Contents), 0, "_Twisters._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::RingFinder_O/195
{ class_kind, STAMPWTAG_chem__RingFinder_O, sizeof(chem::RingFinder_O), 0, IS_POLYMORPHIC, "chem::RingFinder_O" },
//      field: "_vertices" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTable_O>" :SPECIALIZER "class core::HashTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_vertices), 0, "_vertices" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_edges" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::AGEdge_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::AGEdge_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::AGEdge_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_edges._Vector._Contents), 0, "_edges._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_rings" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEql_O>" :SPECIALIZER "class core::HashTableEql_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_rings), 0, "_rings" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_finalRings" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::PathMessage_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PathMessage_O>" :SPECIALIZER "class chem::PathMessage_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::PathMessage_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PathMessage_O>" :SPECIALIZER "class chem::PathMessage_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PathMessage_O>" :SPECIALIZER "class chem::PathMessage_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::PathMessage_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_finalRings._Vector._Contents), 0, "_finalRings._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_gaussian" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::SimpleBitVector_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::SimpleBitVector_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class core::SimpleBitVector_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingFinder_O),_gaussian._Vector._Contents), 0, "_gaussian._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = llvmo::FunctionCallee_O/199
{ class_kind, STAMPWTAG_llvmo__FunctionCallee_O, sizeof(llvmo::FunctionCallee_O), 0, IS_POLYMORPHIC, "llvmo::FunctionCallee_O" },
//      field: "_Info" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<llvm::FunctionCallee>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::FunctionCallee" :NAME "FunctionCallee") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(llvm::FunctionCallee), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FunctionCallee_O),_Info), 0, "_Info" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = kinematics::Joint_O/203
{ class_kind, STAMPWTAG_kinematics__Joint_O, sizeof(kinematics::Joint_O), 0, IS_POLYMORPHIC, "kinematics::Joint_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Molecule" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Id._Molecule), 0, "_Id._Molecule" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Residue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Id._Residue), 0, "_Id._Residue" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Id._Atom), 0, "_Id._Atom" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ToInternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_ToInternal), 0, "_ToInternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ToExternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_ToExternal), 0, "_ToExternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofRefoldIndex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Joint_O),_DofRefoldIndex), 0, "_DofRefoldIndex" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = kinematics::JumpJoint_O/207
{ class_kind, STAMPWTAG_kinematics__JumpJoint_O, sizeof(kinematics::JumpJoint_O), 0, IS_POLYMORPHIC, "kinematics::JumpJoint_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Molecule" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Id._Molecule), 0, "_Id._Molecule" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Residue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Id._Residue), 0, "_Id._Residue" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Id._Atom), 0, "_Id._Atom" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ToInternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_ToInternal), 0, "_ToInternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ToExternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_ToExternal), 0, "_ToExternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofRefoldIndex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_DofRefoldIndex), 0, "_DofRefoldIndex" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::Joint_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::Joint_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JumpJoint_O),_Children._Vector._Contents), 0, "_Children._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = kinematics::OriginJumpJoint_O/211
{ class_kind, STAMPWTAG_kinematics__OriginJumpJoint_O, sizeof(kinematics::OriginJumpJoint_O), 0, IS_POLYMORPHIC, "kinematics::OriginJumpJoint_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Molecule" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Id._Molecule), 0, "_Id._Molecule" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Residue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Id._Residue), 0, "_Id._Residue" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Id._Atom), 0, "_Id._Atom" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ToInternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_ToInternal), 0, "_ToInternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ToExternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_ToExternal), 0, "_ToExternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofRefoldIndex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_DofRefoldIndex), 0, "_DofRefoldIndex" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::Joint_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::Joint_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::OriginJumpJoint_O),_Children._Vector._Contents), 0, "_Children._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = kinematics::BondedJoint_O/215
{ class_kind, STAMPWTAG_kinematics__BondedJoint_O, sizeof(kinematics::BondedJoint_O), 0, IS_POLYMORPHIC, "kinematics::BondedJoint_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Molecule" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Id._Molecule), 0, "_Id._Molecule" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Residue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Id._Residue), 0, "_Id._Residue" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Id._Atom), 0, "_Id._Atom" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ToInternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_ToInternal), 0, "_ToInternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ToExternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_ToExternal), 0, "_ToExternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofRefoldIndex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_DofRefoldIndex), 0, "_DofRefoldIndex" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_NumberOfChildren), 0, "_NumberOfChildren" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[0]), 0, "_Children[0]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[1]), 0, "_Children[1]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[2]), 0, "_Children[2]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[3]), 0, "_Children[3]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Children[4]), 0, "_Children[4]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Phi" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Phi), 0, "_Phi" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Theta" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Theta), 0, "_Theta" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_Distance), 0, "_Distance" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofChangePropagatesToYoungerSiblings" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJoint_O),_DofChangePropagatesToYoungerSiblings), 0, "_DofChangePropagatesToYoungerSiblings" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = kinematics::RootBondedJoint_O/219
{ class_kind, STAMPWTAG_kinematics__RootBondedJoint_O, sizeof(kinematics::RootBondedJoint_O), 0, IS_POLYMORPHIC, "kinematics::RootBondedJoint_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Molecule" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Id._Molecule), 0, "_Id._Molecule" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Residue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Id._Residue), 0, "_Id._Residue" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Id._Atom), 0, "_Id._Atom" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ToInternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_ToInternal), 0, "_ToInternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ToExternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_ToExternal), 0, "_ToExternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofRefoldIndex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_DofRefoldIndex), 0, "_DofRefoldIndex" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_NumberOfChildren), 0, "_NumberOfChildren" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[0]), 0, "_Children[0]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[1]), 0, "_Children[1]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[2]), 0, "_Children[2]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[3]), 0, "_Children[3]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Children[4]), 0, "_Children[4]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Phi" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Phi), 0, "_Phi" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Theta" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Theta), 0, "_Theta" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_Distance), 0, "_Distance" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofChangePropagatesToYoungerSiblings" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_DofChangePropagatesToYoungerSiblings), 0, "_DofChangePropagatesToYoungerSiblings" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RootInfo" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::RootAtomInfo" :NAME "RootAtomInfo")
//      field: "._ConstitutionName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_RootInfo._ConstitutionName), 0, "_RootInfo._ConstitutionName" }, // atomic: NIL public: (NIL T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RootInfo" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::RootAtomInfo" :NAME "RootAtomInfo")
//      field: "._TopologyName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_RootInfo._TopologyName), 0, "_RootInfo._TopologyName" }, // atomic: NIL public: (NIL T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RootInfo" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::RootAtomInfo" :NAME "RootAtomInfo")
//      field: "._Bond1Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJoint_O),_RootInfo._Bond1Id), 0, "_RootInfo._Bond1Id" }, // atomic: NIL public: (NIL T) fixable: NIL good-name: T
// StampWtag = kinematics::DelayedBondedJoint_O/223
{ class_kind, STAMPWTAG_kinematics__DelayedBondedJoint_O, sizeof(kinematics::DelayedBondedJoint_O), 0, IS_POLYMORPHIC, "kinematics::DelayedBondedJoint_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Molecule" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Id._Molecule), 0, "_Id._Molecule" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Residue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Id._Residue), 0, "_Id._Residue" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomId" :NAME "AtomId")
//      field: "._Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Id._Atom), 0, "_Id._Atom" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ToInternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_ToInternal), 0, "_ToInternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ToExternal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<class kinematics::Joint_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_ToExternal), 0, "_ToExternal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofRefoldIndex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_DofRefoldIndex), 0, "_DofRefoldIndex" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_NumberOfChildren), 0, "_NumberOfChildren" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[0]), 0, "_Children[0]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[1]), 0, "_Children[1]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[2]), 0, "_Children[2]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[3]), 0, "_Children[3]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Children[4]), 0, "_Children[4]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Phi" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Phi), 0, "_Phi" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Theta" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Theta), 0, "_Theta" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_Distance), 0, "_Distance" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DofChangePropagatesToYoungerSiblings" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_DofChangePropagatesToYoungerSiblings), 0, "_DofChangePropagatesToYoungerSiblings" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DelayType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_DelayType), 0, "_DelayType" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DelayAtomId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJoint_O),_DelayAtomId), 0, "_DelayAtomId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::SearchStatistics_O/227
{ class_kind, STAMPWTAG_chem__SearchStatistics_O, sizeof(chem::SearchStatistics_O), 0, IS_POLYMORPHIC, "chem::SearchStatistics_O" },
//      field: "_ReportFrequency" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SearchStatistics_O),_ReportFrequency), 0, "_ReportFrequency" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::PdbMonomerDatabase_O/231
{ class_kind, STAMPWTAG_chem__PdbMonomerDatabase_O, sizeof(chem::PdbMonomerDatabase_O), 0, IS_POLYMORPHIC, "chem::PdbMonomerDatabase_O" },
//      field: "_Database" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PdbMonomerConnectivity_O>" :SPECIALIZER "class chem::PdbMonomerConnectivity_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::PdbMonomerConnectivity_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PdbMonomerDatabase_O),_Database._Contents), 0, "_Database._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Twister_O/235
{ class_kind, STAMPWTAG_chem__Twister_O, sizeof(chem::Twister_O), 0, IS_POLYMORPHIC, "chem::Twister_O" },
//      field: "_FixedRef" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_FixedRef), 0, "_FixedRef" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Fixed" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_Fixed), 0, "_Fixed" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Movable" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_Movable), 0, "_Movable" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_MovableRef" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_MovableRef), 0, "_MovableRef" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Atoms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Atom_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Atom_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Twister_O),_Atoms._Vector._Contents), 0, "_Atoms._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::MonomerCoordinates_O/239
{ class_kind, STAMPWTAG_chem__MonomerCoordinates_O, sizeof(chem::MonomerCoordinates_O), 0, IS_POLYMORPHIC, "chem::MonomerCoordinates_O" },
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Context" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerContext_O>" :SPECIALIZER "class chem::MonomerContext_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MonomerContext_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_Context), 0, "_Context" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_TrainerName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_TrainerName), 0, "_TrainerName" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Rotamers" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Rotamer_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Rotamer_O>" :SPECIALIZER "class chem::Rotamer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Rotamer_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Rotamer_O>" :SPECIALIZER "class chem::Rotamer_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Rotamer_O>" :SPECIALIZER "class chem::Rotamer_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Rotamer_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerCoordinates_O),_Rotamers._Vector._Contents), 0, "_Rotamers._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FFParameter_O/243
{ class_kind, STAMPWTAG_chem__FFParameter_O, sizeof(chem::FFParameter_O), 0, IS_POLYMORPHIC, "chem::FFParameter_O" },
// StampWtag = chem::FFVdw_O/247
{ class_kind, STAMPWTAG_chem__FFVdw_O, sizeof(chem::FFVdw_O), 0, IS_POLYMORPHIC, "chem::FFVdw_O" },
//      field: "_T1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_T1), 0, "_T1" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_T2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_T2), 0, "_T2" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_R" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_R), 0, "_R" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Eps" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_Eps), 0, "_Eps" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_M" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_M), 0, "_M" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_N" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_N), 0, "_N" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Edep" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFVdw_O),_Edep), 0, "_Edep" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::FFStretch_O/251
{ class_kind, STAMPWTAG_chem__FFStretch_O, sizeof(chem::FFStretch_O), 0, IS_POLYMORPHIC, "chem::FFStretch_O" },
//      field: "_Type1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFStretch_O),_Type1), 0, "_Type1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Type2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFStretch_O),_Type2), 0, "_Type2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_R0_Nanometer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFStretch_O),_R0_Nanometer), 0, "_R0_Nanometer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Kb_kJPerNanometerSquared" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFStretch_O),_Kb_kJPerNanometerSquared), 0, "_Kb_kJPerNanometerSquared" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::FFPtor_O/255
{ class_kind, STAMPWTAG_chem__FFPtor_O, sizeof(chem::FFPtor_O), 0, IS_POLYMORPHIC, "chem::FFPtor_O" },
//      field: "_T1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_T1), 0, "_T1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_T2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_T2), 0, "_T2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_T3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_T3), 0, "_T3" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_T4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_T4), 0, "_T4" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_HasScee" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_HasScee), 0, "_HasScee" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Scee" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_Scee), 0, "_Scee" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_HasScnb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_HasScnb), 0, "_HasScnb" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Scnb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_Scnb), 0, "_Scnb" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtor_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::FFItor_O/259
{ class_kind, STAMPWTAG_chem__FFItor_O, sizeof(chem::FFItor_O), 0, IS_POLYMORPHIC, "chem::FFItor_O" },
//      field: "_T1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFItor_O),_T1), 0, "_T1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_T2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFItor_O),_T2), 0, "_T2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_T3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFItor_O),_T3), 0, "_T3" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_T4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFItor_O),_T4), 0, "_T4" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::FFNonbond_O/263
{ class_kind, STAMPWTAG_chem__FFNonbond_O, sizeof(chem::FFNonbond_O), 0, IS_POLYMORPHIC, "chem::FFNonbond_O" },
//      field: "_Type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Type), 0, "_Type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Radius_Nanometers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Radius_Nanometers), 0, "_Radius_Nanometers" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Epsilon_kJ" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Epsilon_kJ), 0, "_Epsilon_kJ" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Apol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Apol), 0, "_Apol" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Neff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Neff), 0, "_Neff" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Mass), 0, "_Mass" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Polarizability" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Polarizability), 0, "_Polarizability" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InitialCharge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_InitialCharge), 0, "_InitialCharge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Fcadj" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Fcadj), 0, "_Fcadj" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Pbci" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_Pbci), 0, "_Pbci" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SameParms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbond_O),_SameParms), 0, "_SameParms" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::FFAngle_O/267
{ class_kind, STAMPWTAG_chem__FFAngle_O, sizeof(chem::FFAngle_O), 0, IS_POLYMORPHIC, "chem::FFAngle_O" },
//      field: "_Type1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_Type1), 0, "_Type1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Type2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_Type2), 0, "_Type2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Type3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_Type3), 0, "_Type3" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AngRad" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_AngRad), 0, "_AngRad" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_K2__kJPerRadianSquared" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngle_O),_K2__kJPerRadianSquared), 0, "_K2__kJPerRadianSquared" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::Restraint_O/271
{ class_kind, STAMPWTAG_chem__Restraint_O, sizeof(chem::Restraint_O), 0, IS_POLYMORPHIC, "chem::Restraint_O" },
//      field: "_Active" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Restraint_O),_Active), 0, "_Active" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::RestraintChiral_O/275
{ class_kind, STAMPWTAG_chem__RestraintChiral_O, sizeof(chem::RestraintChiral_O), 0, IS_POLYMORPHIC, "chem::RestraintChiral_O" },
//      field: "_Active" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintChiral_O),_Active), 0, "_Active" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_A" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintChiral_O),_A), 0, "_A" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Chirality" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintChiral_O),_Chirality), 0, "_Chirality" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::RestraintDistance_O/279
{ class_kind, STAMPWTAG_chem__RestraintDistance_O, sizeof(chem::RestraintDistance_O), 0, IS_POLYMORPHIC, "chem::RestraintDistance_O" },
//      field: "_Active" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_Active), 0, "_Active" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_A" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_A), 0, "_A" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_B" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_B), 0, "_B" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_K" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_K), 0, "_K" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_R0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDistance_O),_R0), 0, "_R0" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::RestraintAngle_O/283
{ class_kind, STAMPWTAG_chem__RestraintAngle_O, sizeof(chem::RestraintAngle_O), 0, IS_POLYMORPHIC, "chem::RestraintAngle_O" },
//      field: "_Active" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_Active), 0, "_Active" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_A" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_A), 0, "_A" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_B" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_B), 0, "_B" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_C" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_C), 0, "_C" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_MinRad" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_MinRad), 0, "_MinRad" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MaxRad" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_MaxRad), 0, "_MaxRad" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Weight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAngle_O),_Weight), 0, "_Weight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::RestraintAnchor_O/287
{ class_kind, STAMPWTAG_chem__RestraintAnchor_O, sizeof(chem::RestraintAnchor_O), 0, IS_POLYMORPHIC, "chem::RestraintAnchor_O" },
//      field: "_Active" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAnchor_O),_Active), 0, "_Active" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAnchor_O),_Atom), 0, "_Atom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Weight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintAnchor_O),_Weight), 0, "_Weight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::RestraintFixedNonbond_O/291
{ class_kind, STAMPWTAG_chem__RestraintFixedNonbond_O, sizeof(chem::RestraintFixedNonbond_O), 0, IS_POLYMORPHIC, "chem::RestraintFixedNonbond_O" },
//      field: "_Active" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintFixedNonbond_O),_Active), 0, "_Active" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintFixedNonbond_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::RestraintDihedral_O/295
{ class_kind, STAMPWTAG_chem__RestraintDihedral_O, sizeof(chem::RestraintDihedral_O), 0, IS_POLYMORPHIC, "chem::RestraintDihedral_O" },
//      field: "_Active" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_Active), 0, "_Active" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_A" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_A), 0, "_A" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_B" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_B), 0, "_B" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_C" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_C), 0, "_C" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_D" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_D), 0, "_D" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_MinDegrees" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_MinDegrees), 0, "_MinDegrees" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MaxDegrees" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_MaxDegrees), 0, "_MaxDegrees" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Weight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestraintDihedral_O),_Weight), 0, "_Weight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::AtomIndexer_O/299
{ class_kind, STAMPWTAG_chem__AtomIndexer_O, sizeof(chem::AtomIndexer_O), 0, IS_POLYMORPHIC, "chem::AtomIndexer_O" },
//      field: "_Names" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Symbol_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Symbol_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::Symbol_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomIndexer_O),_Names._Vector._Contents), 0, "_Names._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = geom::BoundingCuboid_O/303
{ class_kind, STAMPWTAG_geom__BoundingCuboid_O, sizeof(geom::BoundingCuboid_O), 0, IS_POLYMORPHIC, "geom::BoundingCuboid_O" },
//      field: "_Defined" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(geom::BoundingCuboid_O),_Defined), 0, "_Defined" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::StereoInformation_O/307
{ class_kind, STAMPWTAG_chem__StereoInformation_O, sizeof(chem::StereoInformation_O), 0, IS_POLYMORPHIC, "chem::StereoInformation_O" },
//      field: "_Stereoisomers" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Stereoisomer_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Stereoisomer_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Stereoisomer_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoInformation_O),_Stereoisomers._Vector._Contents), 0, "_Stereoisomers._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_NameOrPdbToStereoisomer" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<class chem::Stereoisomer_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoInformation_O),_NameOrPdbToStereoisomer._Contents), 0, "_NameOrPdbToStereoisomer._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_ComplexRestraints" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ComplexRestraint_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ComplexRestraint_O>" :SPECIALIZER "class chem::ComplexRestraint_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ComplexRestraint_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ComplexRestraint_O>" :SPECIALIZER "class chem::ComplexRestraint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ComplexRestraint_O>" :SPECIALIZER "class chem::ComplexRestraint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ComplexRestraint_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoInformation_O),_ComplexRestraints._Vector._Contents), 0, "_ComplexRestraints._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::AddIonOctree_O/311
{ class_kind, STAMPWTAG_chem__AddIonOctree_O, sizeof(chem::AddIonOctree_O), 0, IS_POLYMORPHIC, "chem::AddIonOctree_O" },
//      field: "_BoundingBox" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BoundingBox_O>" :SPECIALIZER "class chem::BoundingBox_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BoundingBox_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_BoundingBox), 0, "_BoundingBox" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_BoundingBox_x_rsize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_BoundingBox_x_rsize), 0, "_BoundingBox_x_rsize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_BoundingBox_y_rsize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_BoundingBox_y_rsize), 0, "_BoundingBox_y_rsize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_BoundingBox_z_rsize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_BoundingBox_z_rsize), 0, "_BoundingBox_z_rsize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_iMaxDepth" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_iMaxDepth), 0, "_iMaxDepth" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "iTreePoints" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),iTreePoints), 0, "iTreePoints" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "iDielectric" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),iDielectric), 0, "iDielectric" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "iNodeCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),iNodeCount), 0, "iNodeCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "fVolume" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),fVolume), 0, "fVolume" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "dGridSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),dGridSize), 0, "dGridSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "fNewCharge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),fNewCharge), 0, "fNewCharge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "fMinCharge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),fMinCharge), 0, "fMinCharge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "fMaxCharge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),fMaxCharge), 0, "fMaxCharge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "aClosestAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),aClosestAtom), 0, "aClosestAtom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "dClosestDistance" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),dClosestDistance), 0, "dClosestDistance" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "PiDensities" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<int,gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<int>>" :SPECIALIZER "class gctools::GCVector_moveable<int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),PiDensities._Vector._Contents), 0, "PiDensities._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "iNodeNumCharges" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<int,gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<int>>" :SPECIALIZER "class gctools::GCVector_moveable<int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),iNodeNumCharges._Vector._Contents), 0, "iNodeNumCharges._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_PfCharges" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<float>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<float,gctools::GCContainerAllocator<gctools::GCVector_moveable<float>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<float>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<float>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<float>>" :SPECIALIZER "class gctools::GCVector_moveable<float>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<float>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),_PfCharges._Vector._Contents), 0, "_PfCharges._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "PdHalfEdges" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<double>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<double,gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<double>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<double>>" :SPECIALIZER "class gctools::GCVector_moveable<double>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),PdHalfEdges._Vector._Contents), 0, "PdHalfEdges._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "PdHalfDiagonals" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<double>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<double,gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<double>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<double>>" :SPECIALIZER "class gctools::GCVector_moveable<double>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),PdHalfDiagonals._Vector._Contents), 0, "PdHalfDiagonals._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "vaAtoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Atom_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Atom_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),vaAtoms._Vector._Contents), 0, "vaAtoms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "atomsToResidues" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),atomsToResidues), 0, "atomsToResidues" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "residuesToMolecules" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),residuesToMolecules), 0, "residuesToMolecules" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "onHead" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AddIonOctree_O),onHead), 0, "onHead" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::CDNode_O/315
{ class_kind, STAMPWTAG_chem__CDNode_O, sizeof(chem::CDNode_O), 0, IS_POLYMORPHIC, "chem::CDNode_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Color" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Color), 0, "_Color" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Label" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Label), 0, "_Label" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomProperties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_AtomProperties), 0, "_AtomProperties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ResidueProperties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_ResidueProperties), 0, "_ResidueProperties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_MoleculeProperties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_MoleculeProperties), 0, "_MoleculeProperties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Atom" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::Atom_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Atom_O" :NAME "Atom_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_Atom.theObject), 0, "_Atom.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_BackSpan" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::CDNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::CDNode_O" :NAME "CDNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_BackSpan.theObject), 0, "_BackSpan.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_NextSpan" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::CDNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::CDNode_O" :NAME "CDNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDNode_O),_NextSpan.theObject), 0, "_NextSpan.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::OligomerPart_Base_O/319
{ class_kind, STAMPWTAG_chem__OligomerPart_Base_O, sizeof(chem::OligomerPart_Base_O), 0, IS_POLYMORPHIC, "chem::OligomerPart_Base_O" },
// StampWtag = chem::OligomerPart_Link_O/323
{ class_kind, STAMPWTAG_chem__OligomerPart_Link_O, sizeof(chem::OligomerPart_Link_O), 0, IS_POLYMORPHIC, "chem::OligomerPart_Link_O" },
//      field: "_Monomer1Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Link_O),_Monomer1Id), 0, "_Monomer1Id" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Coupling" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Link_O),_Coupling), 0, "_Coupling" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Monomer2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OligomerPart_Monomer_O>" :SPECIALIZER "class chem::OligomerPart_Monomer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OligomerPart_Monomer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Link_O),_Monomer2), 0, "_Monomer2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::OligomerPart_Monomer_O/327
{ class_kind, STAMPWTAG_chem__OligomerPart_Monomer_O, sizeof(chem::OligomerPart_Monomer_O), 0, IS_POLYMORPHIC, "chem::OligomerPart_Monomer_O" },
//      field: "_MonomerId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_MonomerId), 0, "_MonomerId" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_GroupName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_GroupName), 0, "_GroupName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_MonomerAliases" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_MonomerAliases), 0, "_MonomerAliases" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OligomerPart_Monomer_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = kinematics::BondId_O/331
{ class_kind, STAMPWTAG_kinematics__BondId_O, sizeof(kinematics::BondId_O), 0, IS_POLYMORPHIC, "kinematics::BondId_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondId_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Child" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondId_O),_Child), 0, "_Child" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::CoordinateSystem_O/335
{ class_kind, STAMPWTAG_chem__CoordinateSystem_O, sizeof(chem::CoordinateSystem_O), 0, IS_POLYMORPHIC, "chem::CoordinateSystem_O" },
// StampWtag = chem::Bond_O/339
{ class_kind, STAMPWTAG_chem__Bond_O, sizeof(chem::Bond_O), 0, IS_POLYMORPHIC, "chem::Bond_O" },
//      field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Bond_O),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Atom2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Bond_O),_Atom2), 0, "_Atom2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Bond_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::CandoDatabase_O/343
{ class_kind, STAMPWTAG_chem__CandoDatabase_O, sizeof(chem::CandoDatabase_O), 0, IS_POLYMORPHIC, "chem::CandoDatabase_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_DateCreated" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_DateCreated), 0, "_DateCreated" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DateUpdated" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_DateUpdated), 0, "_DateUpdated" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_frameRecognizers" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FrameRecognizer_O>" :SPECIALIZER "class chem::FrameRecognizer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::FrameRecognizer_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_frameRecognizers._Contents), 0, "_frameRecognizers._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_MonomerCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::MonomerCoordinates_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_MonomerCoordinates._Contents), 0, "_MonomerCoordinates._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Entities" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_Entities), 0, "_Entities" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Topologys" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CandoDatabase_O),_Topologys), 0, "_Topologys" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::AbstractLargeSquareMatrix_O/347
{ class_kind, STAMPWTAG_chem__AbstractLargeSquareMatrix_O, sizeof(chem::AbstractLargeSquareMatrix_O), 0, IS_POLYMORPHIC, "chem::AbstractLargeSquareMatrix_O" },
//      field: "_Columns" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AbstractLargeSquareMatrix_O),_Columns), 0, "_Columns" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Rows" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AbstractLargeSquareMatrix_O),_Rows), 0, "_Rows" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::SparseLargeSquareMatrix_O/351
{ class_kind, STAMPWTAG_chem__SparseLargeSquareMatrix_O, sizeof(chem::SparseLargeSquareMatrix_O), 0, IS_POLYMORPHIC, "chem::SparseLargeSquareMatrix_O" },
//      field: "_Columns" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_Columns), 0, "_Columns" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Rows" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_Rows), 0, "_Rows" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_InsertionIsComplete" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_InsertionIsComplete), 0, "_InsertionIsComplete" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_RowStartEntries" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_RowStartEntries), 0, "_RowStartEntries" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_RowStarts" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<unsigned int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<unsigned int,gctools::GCContainerAllocator<gctools::GCVector_moveable<unsigned int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<unsigned int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<unsigned int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<unsigned int>>" :SPECIALIZER "class gctools::GCVector_moveable<unsigned int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<unsigned int>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_RowStarts._Vector._Contents), 0, "_RowStarts._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_ActiveElements" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_ActiveElements), 0, "_ActiveElements" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ReservedElements" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_ReservedElements), 0, "_ReservedElements" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ColumnForValue" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<unsigned int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<unsigned int,gctools::GCContainerAllocator<gctools::GCVector_moveable<unsigned int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<unsigned int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<unsigned int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<unsigned int>>" :SPECIALIZER "class gctools::GCVector_moveable<unsigned int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<unsigned int>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_ColumnForValue._Vector._Contents), 0, "_ColumnForValue._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Values" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<double>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<double,gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<double>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<double>>" :SPECIALIZER "class gctools::GCVector_moveable<double>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SparseLargeSquareMatrix_O),_Values._Vector._Contents), 0, "_Values._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FullLargeSquareMatrix_O/355
{ class_kind, STAMPWTAG_chem__FullLargeSquareMatrix_O, sizeof(chem::FullLargeSquareMatrix_O), 0, IS_POLYMORPHIC, "chem::FullLargeSquareMatrix_O" },
//      field: "_Columns" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FullLargeSquareMatrix_O),_Columns), 0, "_Columns" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Rows" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FullLargeSquareMatrix_O),_Rows), 0, "_Rows" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ActiveElements" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FullLargeSquareMatrix_O),_ActiveElements), 0, "_ActiveElements" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Values" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<double>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<double,gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<double>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<double>>" :SPECIALIZER "class gctools::GCVector_moveable<double>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FullLargeSquareMatrix_O),_Values._Vector._Contents), 0, "_Values._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FFBaseDb_O/359
{ class_kind, STAMPWTAG_chem__FFBaseDb_O, sizeof(chem::FFBaseDb_O), 0, IS_POLYMORPHIC, "chem::FFBaseDb_O" },
// StampWtag = chem::FFParameterBaseDb_O/363
{ class_kind, STAMPWTAG_chem__FFParameterBaseDb_O, sizeof(chem::FFParameterBaseDb_O), 0, IS_POLYMORPHIC, "chem::FFParameterBaseDb_O" },
//      field: "_Parameters" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFParameterBaseDb_O),_Parameters), 0, "_Parameters" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::FFItorDb_O/367
{ class_kind, STAMPWTAG_chem__FFItorDb_O, sizeof(chem::FFItorDb_O), 0, IS_POLYMORPHIC, "chem::FFItorDb_O" },
//      field: "_Parameters" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFItorDb_O),_Parameters), 0, "_Parameters" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::FFStretchDb_O/371
{ class_kind, STAMPWTAG_chem__FFStretchDb_O, sizeof(chem::FFStretchDb_O), 0, IS_POLYMORPHIC, "chem::FFStretchDb_O" },
//      field: "_Parameters" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFStretchDb_O),_Parameters), 0, "_Parameters" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EstimateStretch" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class chem::EstimateStretch> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFStretchDb_O),_EstimateStretch._Contents), 0, "_EstimateStretch._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FFAngleDb_O/375
{ class_kind, STAMPWTAG_chem__FFAngleDb_O, sizeof(chem::FFAngleDb_O), 0, IS_POLYMORPHIC, "chem::FFAngleDb_O" },
//      field: "_Parameters" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_Parameters), 0, "_Parameters" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AngleFunction" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_AngleFunction), 0, "_AngleFunction" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ZConstants" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class core::DoubleFloat_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_ZConstants._Contents), 0, "_ZConstants._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_CConstants" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class core::DoubleFloat_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFAngleDb_O),_CConstants._Contents), 0, "_CConstants._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FFNonbondDb_O/379
{ class_kind, STAMPWTAG_chem__FFNonbondDb_O, sizeof(chem::FFNonbondDb_O), 0, IS_POLYMORPHIC, "chem::FFNonbondDb_O" },
//      field: "_Parameters" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),_Parameters), 0, "_Parameters" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "EleChargeFcn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleChargeFcn), 0, "EleChargeFcn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "EleDielectricValue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleDielectricValue), 0, "EleDielectricValue" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "EleDielectricValueDefined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleDielectricValueDefined), 0, "EleDielectricValueDefined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "EleBuffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleBuffer), 0, "EleBuffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "EleBufferDefined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleBufferDefined), 0, "EleBufferDefined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "EleScale14" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleScale14), 0, "EleScale14" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "EleScale14Defined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleScale14Defined), 0, "EleScale14Defined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "VdwScale14" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScale14), 0, "VdwScale14" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "VdwScale14Defined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScale14Defined), 0, "VdwScale14Defined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "VdwScaleBufferA" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScaleBufferA), 0, "VdwScaleBufferA" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "VdwScaleBufferADefined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScaleBufferADefined), 0, "VdwScaleBufferADefined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "VdwScaleBufferB" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScaleBufferB), 0, "VdwScaleBufferB" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "VdwScaleBufferBDefined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwScaleBufferBDefined), 0, "VdwScaleBufferBDefined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "EleDielectricCodeDefined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),EleDielectricCodeDefined), 0, "EleDielectricCodeDefined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "VdwMixRadiusDefined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwMixRadiusDefined), 0, "VdwMixRadiusDefined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "VdwMixWellDefined" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),VdwMixWellDefined), 0, "VdwMixWellDefined" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::FFNonbond_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbond_O>" :SPECIALIZER "class chem::FFNonbond_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::FFNonbond_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbond_O>" :SPECIALIZER "class chem::FFNonbond_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbond_O>" :SPECIALIZER "class chem::FFNonbond_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::FFNonbond_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondDb_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FFPtorDb_O/383
{ class_kind, STAMPWTAG_chem__FFPtorDb_O, sizeof(chem::FFPtorDb_O), 0, IS_POLYMORPHIC, "chem::FFPtorDb_O" },
//      field: "_Parameters" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFPtorDb_O),_Parameters), 0, "_Parameters" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::FFVdwDb_O/387
{ class_kind, STAMPWTAG_chem__FFVdwDb_O, sizeof(chem::FFVdwDb_O), 0, IS_POLYMORPHIC, "chem::FFVdwDb_O" },
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::FFVdw_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdw_O>" :SPECIALIZER "class chem::FFVdw_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::FFVdw_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdw_O>" :SPECIALIZER "class chem::FFVdw_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdw_O>" :SPECIALIZER "class chem::FFVdw_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::FFVdw_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFVdwDb_O),_Terms._Vector._Contents), 0, "_Terms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FFTypesDb_O/391
{ class_kind, STAMPWTAG_chem__FFTypesDb_O, sizeof(chem::FFTypesDb_O), 0, IS_POLYMORPHIC, "chem::FFTypesDb_O" },
//      field: "_TypeAssignmentRules" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::FFTypeRule_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypeRule_O>" :SPECIALIZER "class chem::FFTypeRule_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::FFTypeRule_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypeRule_O>" :SPECIALIZER "class chem::FFTypeRule_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypeRule_O>" :SPECIALIZER "class chem::FFTypeRule_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::FFTypeRule_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFTypesDb_O),_TypeAssignmentRules._Vector._Contents), 0, "_TypeAssignmentRules._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = llvmo::LibraryBase_O/395
{ class_kind, STAMPWTAG_llvmo__LibraryBase_O, sizeof(llvmo::LibraryBase_O), 0, IS_POLYMORPHIC, "llvmo::LibraryBase_O" },
// StampWtag = llvmo::ObjectFile_O/399
{ class_kind, STAMPWTAG_llvmo__ObjectFile_O, sizeof(llvmo::ObjectFile_O), 0, IS_POLYMORPHIC, "llvmo::ObjectFile_O" },
//      field: "_MemoryBuffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::UNIQUE-PTR-CTYPE :KEY "std::unique_ptr<llvm::MemoryBuffer,std::default_delete<llvm::MemoryBuffer>>" :NAME "unique_ptr" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::MemoryBuffer" :NAME "MemoryBuffer") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::default_delete<llvm::MemoryBuffer>" :NAME "default_delete" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::MemoryBuffer" :NAME "MemoryBuffer") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::unique_ptr<llvm::MemoryBuffer,std::default_delete<llvm::MemoryBuffer>>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_MemoryBuffer), 0, "_MemoryBuffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ObjectFileOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_ObjectFileOffset), 0, "_ObjectFileOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ObjectFileSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_ObjectFileSize), 0, "_ObjectFileSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Size" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_Size), 0, "_Size" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_StartupID" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_StartupID), 0, "_StartupID" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_JITDylib" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<llvmo::JITDylib_O>" :SPECIALIZER "class llvmo::JITDylib_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<llvmo::JITDylib_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_JITDylib), 0, "_JITDylib" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_FasoName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_FasoName), 0, "_FasoName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_FasoIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_FasoIndex), 0, "_FasoIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<llvmo::Code_O>" :SPECIALIZER "class llvmo::Code_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<llvmo::Code_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ObjectFile_O),_Code), 0, "_Code" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::LibraryFile_O/403
{ class_kind, STAMPWTAG_llvmo__LibraryFile_O, sizeof(llvmo::LibraryFile_O), 0, IS_POLYMORPHIC, "llvmo::LibraryFile_O" },
//      field: "_Library" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LibraryFile_O),_Library), 0, "_Library" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::AGVertex_O/407
{ class_kind, STAMPWTAG_chem__AGVertex_O, sizeof(chem::AGVertex_O), 0, IS_POLYMORPHIC, "chem::AGVertex_O" },
//      field: "_graph" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::RingFinder_O>" :SPECIALIZER "class chem::RingFinder_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::RingFinder_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_graph), 0, "_graph" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_atom" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_atom), 0, "_atom" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_edges" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::AGEdge_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::AGEdge_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::AGEdge_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_edges._Vector._Contents), 0, "_edges._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_seenId" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_seenId), 0, "_seenId" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_backSpan" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_backSpan), 0, "_backSpan" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_backCount" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_backCount), 0, "_backCount" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_sendBuffer" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_sendBuffer), 0, "_sendBuffer" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_receiveBuffer" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGVertex_O),_receiveBuffer), 0, "_receiveBuffer" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ForceField_O/411
{ class_kind, STAMPWTAG_chem__ForceField_O, sizeof(chem::ForceField_O), 0, IS_POLYMORPHIC, "chem::ForceField_O" },
//      field: "_Title" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Title), 0, "_Title" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Ref" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Ref), 0, "_Ref" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SingleBondMultiBondDistinctions" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Symbol_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Symbol_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::Symbol_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_SingleBondMultiBondDistinctions._Vector._Contents), 0, "_SingleBondMultiBondDistinctions._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Info" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::InfoDb_O>" :SPECIALIZER "class chem::InfoDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::InfoDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Info), 0, "_Info" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Types" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypesDb_O>" :SPECIALIZER "class chem::FFTypesDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFTypesDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Types), 0, "_Types" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Stretches" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFStretchDb_O>" :SPECIALIZER "class chem::FFStretchDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFStretchDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Stretches), 0, "_Stretches" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Angles" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFAngleDb_O>" :SPECIALIZER "class chem::FFAngleDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFAngleDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Angles), 0, "_Angles" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Itors" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFItorDb_O>" :SPECIALIZER "class chem::FFItorDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFItorDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Itors), 0, "_Itors" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Ptors" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFPtorDb_O>" :SPECIALIZER "class chem::FFPtorDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFPtorDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Ptors), 0, "_Ptors" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Nonbonds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbondDb_O>" :SPECIALIZER "class chem::FFNonbondDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFNonbondDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Nonbonds), 0, "_Nonbonds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Vdws" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdwDb_O>" :SPECIALIZER "class chem::FFVdwDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFVdwDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceField_O),_Vdws), 0, "_Vdws" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::AtomReferenceBase_O/415
{ class_kind, STAMPWTAG_chem__AtomReferenceBase_O, sizeof(chem::AtomReferenceBase_O), 0, IS_POLYMORPHIC, "chem::AtomReferenceBase_O" },
// StampWtag = chem::AtomReference_O/419
{ class_kind, STAMPWTAG_chem__AtomReference_O, sizeof(chem::AtomReference_O), 0, IS_POLYMORPHIC, "chem::AtomReference_O" },
//      field: "_AtomAlias" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomReference_O),_AtomAlias), 0, "_AtomAlias" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ScoringFunction_O/423
{ class_kind, STAMPWTAG_chem__ScoringFunction_O, sizeof(chem::ScoringFunction_O), 0, IS_POLYMORPHIC, "chem::ScoringFunction_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ScoringFunction_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Debug" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ScoringFunction_O),_Debug), 0, "_Debug" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::EnergyFunction_O/427
{ class_kind, STAMPWTAG_chem__EnergyFunction_O, sizeof(chem::EnergyFunction_O), 0, IS_POLYMORPHIC, "chem::EnergyFunction_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Debug" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Debug), 0, "_Debug" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NonbondCrossTermTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbondCrossTermTable_O>" :SPECIALIZER "class chem::FFNonbondCrossTermTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFNonbondCrossTermTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_NonbondCrossTermTable), 0, "_NonbondCrossTermTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomTable_O>" :SPECIALIZER "class chem::AtomTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_AtomTable), 0, "_AtomTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Stretch" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyStretch_O>" :SPECIALIZER "class chem::EnergyStretch_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyStretch_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Stretch), 0, "_Stretch" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Angle" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyAngle_O>" :SPECIALIZER "class chem::EnergyAngle_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyAngle_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Angle), 0, "_Angle" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Dihedral" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyDihedral_O>" :SPECIALIZER "class chem::EnergyDihedral_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyDihedral_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Dihedral), 0, "_Dihedral" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Nonbond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyNonbond_O>" :SPECIALIZER "class chem::EnergyNonbond_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyNonbond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Nonbond), 0, "_Nonbond" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DihedralRestraint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyDihedralRestraint_O>" :SPECIALIZER "class chem::EnergyDihedralRestraint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyDihedralRestraint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_DihedralRestraint), 0, "_DihedralRestraint" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ChiralRestraint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyChiralRestraint_O>" :SPECIALIZER "class chem::EnergyChiralRestraint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyChiralRestraint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_ChiralRestraint), 0, "_ChiralRestraint" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AnchorRestraint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyAnchorRestraint_O>" :SPECIALIZER "class chem::EnergyAnchorRestraint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyAnchorRestraint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_AnchorRestraint), 0, "_AnchorRestraint" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_FixedNonbondRestraint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyFixedNonbondRestraint_O>" :SPECIALIZER "class chem::EnergyFixedNonbondRestraint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyFixedNonbondRestraint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_FixedNonbondRestraint), 0, "_FixedNonbondRestraint" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OtherEnergyComponents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_OtherEnergyComponents), 0, "_OtherEnergyComponents" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_BoundingBox" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BoundingBox_O>" :SPECIALIZER "class chem::BoundingBox_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BoundingBox_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_BoundingBox), 0, "_BoundingBox" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RestrainSecondaryAmides" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_RestrainSecondaryAmides), 0, "_RestrainSecondaryAmides" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ChiralRestraintWeight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_ChiralRestraintWeight), 0, "_ChiralRestraintWeight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ChiralRestraintOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_ChiralRestraintOffset), 0, "_ChiralRestraintOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AnchorRestraintWeight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_AnchorRestraintWeight), 0, "_AnchorRestraintWeight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FixedNonbondRestraintWeight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_FixedNonbondRestraintWeight), 0, "_FixedNonbondRestraintWeight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DielectricConstant" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_DielectricConstant), 0, "_DielectricConstant" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Message" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_Message), 0, "_Message" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_MissingParameters" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyFunction_O),_MissingParameters), 0, "_MissingParameters" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::SketchFunction_O/431
{ class_kind, STAMPWTAG_chem__SketchFunction_O, sizeof(chem::SketchFunction_O), 0, IS_POLYMORPHIC, "chem::SketchFunction_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Debug" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Debug), 0, "_Debug" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Graph" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Graph), 0, "_Graph" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NodeTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_NodeTable), 0, "_NodeTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Stretch" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergySketchStretch_O>" :SPECIALIZER "class chem::EnergySketchStretch_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergySketchStretch_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Stretch), 0, "_Stretch" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutOfZPlane" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyOutOfZPlane_O>" :SPECIALIZER "class chem::EnergyOutOfZPlane_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyOutOfZPlane_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_OutOfZPlane), 0, "_OutOfZPlane" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_PointToLineRestraint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergyPointToLineRestraint_O>" :SPECIALIZER "class chem::EnergyPointToLineRestraint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergyPointToLineRestraint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_PointToLineRestraint), 0, "_PointToLineRestraint" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Nonbond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EnergySketchNonbond_O>" :SPECIALIZER "class chem::EnergySketchNonbond_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EnergySketchNonbond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Nonbond), 0, "_Nonbond" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_PointToLineRestraintWeight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_PointToLineRestraintWeight), 0, "_PointToLineRestraintWeight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_OutOfZPlaneWeight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_OutOfZPlaneWeight), 0, "_OutOfZPlaneWeight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Message" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Message), 0, "_Message" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Frozen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SketchFunction_O),_Frozen), 0, "_Frozen" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::RigidBodyEnergyFunction_O/435
{ class_kind, STAMPWTAG_chem__RigidBodyEnergyFunction_O, sizeof(chem::RigidBodyEnergyFunction_O), 0, IS_POLYMORPHIC, "chem::RigidBodyEnergyFunction_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Debug" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_Debug), 0, "_Debug" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RigidBodies" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_RigidBodies), 0, "_RigidBodies" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SavedCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_SavedCoordinates), 0, "_SavedCoordinates" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Terms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_Terms), 0, "_Terms" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_BoundingBox" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BoundingBox_O>" :SPECIALIZER "class chem::BoundingBox_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BoundingBox_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyEnergyFunction_O),_BoundingBox), 0, "_BoundingBox" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::WildElementDict_O/439
{ class_kind, STAMPWTAG_chem__WildElementDict_O, sizeof(chem::WildElementDict_O), 0, IS_POLYMORPHIC, "chem::WildElementDict_O" },
//      field: "_AtomWildCards" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::WildElementDict_O),_AtomWildCards), 0, "_AtomWildCards" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = asttooling::QualType_O/443
{ class_kind, STAMPWTAG_asttooling__QualType_O, sizeof(asttooling::QualType_O), 0, IS_POLYMORPHIC, "asttooling::QualType_O" },
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<clang::QualType>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "clang::QualType" :NAME "QualType") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(clang::QualType), __builtin_offsetof(SAFE_TYPE_MACRO(asttooling::QualType_O),_Value), 0, "_Value" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = llvmo::DITypeRefArray_O/447
{ class_kind, STAMPWTAG_llvmo__DITypeRefArray_O, sizeof(llvmo::DITypeRefArray_O), 0, IS_POLYMORPHIC, "llvmo::DITypeRefArray_O" },
//      field: "_Val" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<llvm::DITypeRefArray>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::DITypeRefArray" :NAME "DITypeRefArray") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(llvm::DITypeRefArray), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DITypeRefArray_O),_Val), 0, "_Val" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = geom::OVector3_O/451
{ class_kind, STAMPWTAG_geom__OVector3_O, sizeof(geom::OVector3_O), 0, IS_POLYMORPHIC, "geom::OVector3_O" },
// StampWtag = geom::OVector2_O/455
{ class_kind, STAMPWTAG_geom__OVector2_O, sizeof(geom::OVector2_O), 0, IS_POLYMORPHIC, "geom::OVector2_O" },
// StampWtag = chem::Structure_Old_ListEntry_O/459
{ class_kind, STAMPWTAG_chem__Structure_Old_ListEntry_O, sizeof(chem::Structure_Old_ListEntry_O), 0, IS_POLYMORPHIC, "chem::Structure_Old_ListEntry_O" },
//      field: "_WeakStructureList" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_List_O>" :SPECIALIZER "class chem::Structure_Old_List_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Structure_Old_List_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_WeakStructureList), 0, "_WeakStructureList" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AllCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::SimpleVectorCoordinate_O>" :SPECIALIZER "class geom::SimpleVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_AllCoordinates), 0, "_AllCoordinates" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_SuperposeCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::SimpleVectorCoordinate_O>" :SPECIALIZER "class geom::SimpleVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_SuperposeCoordinates), 0, "_SuperposeCoordinates" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Members" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_ListEntry_O),_Members), 0, "_Members" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::FFTypeRule_O/463
{ class_kind, STAMPWTAG_chem__FFTypeRule_O, sizeof(chem::FFTypeRule_O), 0, IS_POLYMORPHIC, "chem::FFTypeRule_O" },
//      field: "_Test" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Root_O>" :SPECIALIZER "class chem::Root_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Root_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFTypeRule_O),_Test), 0, "_Test" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFTypeRule_O),_Type), 0, "_Type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = adapt::QDomNode_O/467
{ class_kind, STAMPWTAG_adapt__QDomNode_O, sizeof(adapt::QDomNode_O), 0, IS_POLYMORPHIC, "adapt::QDomNode_O" },
//      field: "parent" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "adapt::QDomNode_O" :NAME "QDomNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),parent), 0, "parent" }, // atomic: NIL public: (NIL) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "localName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),localName), 0, "localName" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_FileName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),_FileName), 0, "_FileName" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "lineNumber" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),lineNumber), 0, "lineNumber" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "characters" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::StringOutputStream_O>" :SPECIALIZER "class core::StringOutputStream_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::StringOutputStream_O>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),characters), 0, "characters" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<adapt::QDomNode_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::QDomNode_O>" :SPECIALIZER "class adapt::QDomNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<adapt::QDomNode_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::QDomNode_O>" :SPECIALIZER "class adapt::QDomNode_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::QDomNode_O>" :SPECIALIZER "class adapt::QDomNode_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class adapt::QDomNode_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),_children._Vector._Contents), 0, "_children._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_attributes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::QDomNode_O),_attributes._Contents), 0, "_attributes._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = mp::SharedMutex_O/471
{ class_kind, STAMPWTAG_mp__SharedMutex_O, sizeof(mp::SharedMutex_O), 0, IS_POLYMORPHIC, "mp::SharedMutex_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Owner" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_Owner), 0, "_Owner" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_SharedMutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::UpgradableSharedMutex" :NAME "UpgradableSharedMutex")
//      field: ".mReadMutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mp::Mutex>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::Mutex" :NAME "Mutex") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(mp::Mutex), __builtin_offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReadMutex), 0, "_SharedMutex.mReadMutex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_SharedMutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::UpgradableSharedMutex" :NAME "UpgradableSharedMutex")
//      field: ".mWriteMutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mp::Mutex>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::Mutex" :NAME "Mutex") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(mp::Mutex), __builtin_offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mWriteMutex), 0, "_SharedMutex.mWriteMutex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_SharedMutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::UpgradableSharedMutex" :NAME "UpgradableSharedMutex")
//      field: ".mReadsBlocked" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReadsBlocked), 0, "_SharedMutex.mReadsBlocked" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_SharedMutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::UpgradableSharedMutex" :NAME "UpgradableSharedMutex")
//      field: ".mMaxReaders" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mMaxReaders), 0, "_SharedMutex.mMaxReaders" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_SharedMutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::UpgradableSharedMutex" :NAME "UpgradableSharedMutex")
//      field: ".mReaders" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(mp::SharedMutex_O),_SharedMutex.mReaders), 0, "_SharedMutex.mReaders" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = chem::ConstitutionAtom_O/475
{ class_kind, STAMPWTAG_chem__ConstitutionAtom_O, sizeof(chem::ConstitutionAtom_O), 0, IS_POLYMORPHIC, "chem::ConstitutionAtom_O" },
//      field: "_AtomName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_AtomName), 0, "_AtomName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_Index), 0, "_Index" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_AtomType), 0, "_AtomType" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Bonds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ConstitutionBond_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ConstitutionBond_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ConstitutionBond_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtom_O),_Bonds._Vector._Contents), 0, "_Bonds._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::ConstitutionVirtualAtom_O/479
{ class_kind, STAMPWTAG_chem__ConstitutionVirtualAtom_O, sizeof(chem::ConstitutionVirtualAtom_O), 0, IS_POLYMORPHIC, "chem::ConstitutionVirtualAtom_O" },
//      field: "_AtomName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_AtomName), 0, "_AtomName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_Index), 0, "_Index" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_AtomType), 0, "_AtomType" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Properties" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_Properties), 0, "_Properties" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Bonds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ConstitutionBond_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ConstitutionBond_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ConstitutionBond_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_Bonds._Vector._Contents), 0, "_Bonds._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_CalculatePositionCode" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CalculatePosition_O>" :SPECIALIZER "class chem::CalculatePosition_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CalculatePosition_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionVirtualAtom_O),_CalculatePositionCode), 0, "_CalculatePositionCode" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Smirks_O/483
{ class_kind, STAMPWTAG_chem__Smirks_O, sizeof(chem::Smirks_O), 0, IS_POLYMORPHIC, "chem::Smirks_O" },
//      field: "_reactant" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::SmartsRoot_O>" :SPECIALIZER "class chem::SmartsRoot_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::SmartsRoot_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Smirks_O),_reactant), 0, "_reactant" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_product" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::SmartsRoot_O>" :SPECIALIZER "class chem::SmartsRoot_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::SmartsRoot_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Smirks_O),_product), 0, "_product" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ReadAmberParameters_O/487
{ class_kind, STAMPWTAG_chem__ReadAmberParameters_O, sizeof(chem::ReadAmberParameters_O), 0, IS_POLYMORPHIC, "chem::ReadAmberParameters_O" },
//      field: "_Types" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypesDb_O>" :SPECIALIZER "class chem::FFTypesDb_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFTypesDb_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ReadAmberParameters_O),_Types), 0, "_Types" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ForceField" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ForceField_O>" :SPECIALIZER "class chem::ForceField_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ForceField_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ReadAmberParameters_O),_ForceField), 0, "_ForceField" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::AGEdge_O/491
{ class_kind, STAMPWTAG_chem__AGEdge_O, sizeof(chem::AGEdge_O), 0, IS_POLYMORPHIC, "chem::AGEdge_O" },
//      field: "_graph" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::RingFinder_O>" :SPECIALIZER "class chem::RingFinder_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::RingFinder_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGEdge_O),_graph), 0, "_graph" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_id" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGEdge_O),_id), 0, "_id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_vertex1" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGVertex_O>" :SPECIALIZER "class chem::AGVertex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGVertex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGEdge_O),_vertex1), 0, "_vertex1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_vertex2" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGVertex_O>" :SPECIALIZER "class chem::AGVertex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGVertex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AGEdge_O),_vertex2), 0, "_vertex2" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Entity_O/495
{ class_kind, STAMPWTAG_chem__Entity_O, sizeof(chem::Entity_O), 0, IS_POLYMORPHIC, "chem::Entity_O" },
// StampWtag = chem::Stereoisomer_O/499
{ class_kind, STAMPWTAG_chem__Stereoisomer_O, sizeof(chem::Stereoisomer_O), 0, IS_POLYMORPHIC, "chem::Stereoisomer_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Stereoisomer_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Pdb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Stereoisomer_O),_Pdb), 0, "_Pdb" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_StereoisomerIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Integer_O>" :SPECIALIZER "class core::Integer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Stereoisomer_O),_StereoisomerIndex), 0, "_StereoisomerIndex" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Configurations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::StereoConfiguration_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoConfiguration_O>" :SPECIALIZER "class chem::StereoConfiguration_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::StereoConfiguration_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoConfiguration_O>" :SPECIALIZER "class chem::StereoConfiguration_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoConfiguration_O>" :SPECIALIZER "class chem::StereoConfiguration_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::StereoConfiguration_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Stereoisomer_O),_Configurations._Vector._Contents), 0, "_Configurations._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::EntityNameSetBase_O/503
{ class_kind, STAMPWTAG_chem__EntityNameSetBase_O, sizeof(chem::EntityNameSetBase_O), 0, IS_POLYMORPHIC, "chem::EntityNameSetBase_O" },
//      field: "_Optional" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EntityNameSetBase_O),_Optional), 0, "_Optional" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_EntityNames" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::SymbolSet_O>" :SPECIALIZER "class adapt::SymbolSet_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EntityNameSetBase_O),_EntityNames), 0, "_EntityNames" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::EntityNameSetWithCap_O/507
{ class_kind, STAMPWTAG_chem__EntityNameSetWithCap_O, sizeof(chem::EntityNameSetWithCap_O), 0, IS_POLYMORPHIC, "chem::EntityNameSetWithCap_O" },
//      field: "_Optional" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EntityNameSetWithCap_O),_Optional), 0, "_Optional" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_EntityNames" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::SymbolSet_O>" :SPECIALIZER "class adapt::SymbolSet_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EntityNameSetWithCap_O),_EntityNames), 0, "_EntityNames" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Mate_O/511
{ class_kind, STAMPWTAG_chem__Mate_O, sizeof(chem::Mate_O), 0, IS_POLYMORPHIC, "chem::Mate_O" },
//      field: "_Optional" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Mate_O),_Optional), 0, "_Optional" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_EntityNames" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::SymbolSet_O>" :SPECIALIZER "class adapt::SymbolSet_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Mate_O),_EntityNames), 0, "_EntityNames" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Cap" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Mate_O),_Cap), 0, "_Cap" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::RingClosingMate_O/515
{ class_kind, STAMPWTAG_chem__RingClosingMate_O, sizeof(chem::RingClosingMate_O), 0, IS_POLYMORPHIC, "chem::RingClosingMate_O" },
//      field: "_Optional" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingClosingMate_O),_Optional), 0, "_Optional" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_EntityNames" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::SymbolSet_O>" :SPECIALIZER "class adapt::SymbolSet_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingClosingMate_O),_EntityNames), 0, "_EntityNames" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::EntityNameSet_O/519
{ class_kind, STAMPWTAG_chem__EntityNameSet_O, sizeof(chem::EntityNameSet_O), 0, IS_POLYMORPHIC, "chem::EntityNameSet_O" },
//      field: "_Optional" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EntityNameSet_O),_Optional), 0, "_Optional" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_EntityNames" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::SymbolSet_O>" :SPECIALIZER "class adapt::SymbolSet_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EntityNameSet_O),_EntityNames), 0, "_EntityNames" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EntityNameSet_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::RepresentedEntityNameSet_O/523
{ class_kind, STAMPWTAG_chem__RepresentedEntityNameSet_O, sizeof(chem::RepresentedEntityNameSet_O), 0, IS_POLYMORPHIC, "chem::RepresentedEntityNameSet_O" },
//      field: "_Optional" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),_Optional), 0, "_Optional" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_EntityNames" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::SymbolSet_O>" :SPECIALIZER "class adapt::SymbolSet_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),_EntityNames), 0, "_EntityNames" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Representative" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RepresentedEntityNameSet_O),_Representative), 0, "_Representative" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::MonomerPack_O/527
{ class_kind, STAMPWTAG_chem__MonomerPack_O, sizeof(chem::MonomerPack_O), 0, IS_POLYMORPHIC, "chem::MonomerPack_O" },
//      field: "_Optional" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_Optional), 0, "_Optional" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_EntityNames" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::SymbolSet_O>" :SPECIALIZER "class adapt::SymbolSet_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::SymbolSet_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_EntityNames), 0, "_EntityNames" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_InterestingAtomAliases" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_InterestingAtomAliases), 0, "_InterestingAtomAliases" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomIndexers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MapOfMonomerNamesToAtomIndexers_O>" :SPECIALIZER "class chem::MapOfMonomerNamesToAtomIndexers_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MapOfMonomerNamesToAtomIndexers_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerPack_O),_AtomIndexers), 0, "_AtomIndexers" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Constitution_O/531
{ class_kind, STAMPWTAG_chem__Constitution_O, sizeof(chem::Constitution_O), 0, IS_POLYMORPHIC, "chem::Constitution_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ConstitutionAtoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtoms_O>" :SPECIALIZER "class chem::ConstitutionAtoms_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConstitutionAtoms_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_ConstitutionAtoms), 0, "_ConstitutionAtoms" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_PlugsByName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Plug_O>" :SPECIALIZER "class chem::Plug_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::Plug_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_PlugsByName._Contents), 0, "_PlugsByName._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Topologies" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::Topology_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_Topologies._Contents), 0, "_Topologies._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_StereoInformation" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoInformation_O>" :SPECIALIZER "class chem::StereoInformation_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::StereoInformation_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Constitution_O),_StereoInformation), 0, "_StereoInformation" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Monomer_O/535
{ class_kind, STAMPWTAG_chem__Monomer_O, sizeof(chem::Monomer_O), 0, IS_POLYMORPHIC, "chem::Monomer_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_SequenceNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_SequenceNumber), 0, "_SequenceNumber" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Couplings" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMultimap_uncopyable<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>,core::SymbolComparer>" :NAME "SmallMultimap_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 2 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolComparer" :NAME "SymbolComparer") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::Coupling_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_Couplings._Contents), 0, "_Couplings._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_CurrentMonomerIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_CurrentMonomerIndex), 0, "_CurrentMonomerIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_CurrentStereoisomerOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_CurrentStereoisomerOffset), 0, "_CurrentStereoisomerOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Monomers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<core::Symbol_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Symbol_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::Symbol_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Monomer_O),_Monomers._Vector._Contents), 0, "_Monomers._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::OctNode_O/539
{ class_kind, STAMPWTAG_chem__OctNode_O, sizeof(chem::OctNode_O), 0, IS_POLYMORPHIC, "chem::OctNode_O" },
//      field: "iNodeNum" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),iNodeNum), 0, "iNodeNum" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "iStatus" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),iStatus), 0, "iStatus" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "iDepth" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),iDepth), 0, "iDepth" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "iAtoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),iAtoms), 0, "iAtoms" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "PaAtomList" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Atom_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Atom_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PaAtomList._Vector._Contents), 0, "PaAtomList._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_PfCharges" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<float>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<float,gctools::GCContainerAllocator<gctools::GCVector_moveable<float>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<float>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<float>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<float>>" :SPECIALIZER "class gctools::GCVector_moveable<float>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<float>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),_PfCharges._Vector._Contents), 0, "_PfCharges._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "PonChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[0]), 0, "PonChildren[0]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "PonChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[1]), 0, "PonChildren[1]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "PonChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[2]), 0, "PonChildren[2]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "PonChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[3]), 0, "PonChildren[3]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "PonChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[4]), 0, "PonChildren[4]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "PonChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O"))
//      field: "[5]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[5]), 0, "PonChildren[5]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "PonChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O"))
//      field: "[6]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[6]), 0, "PonChildren[6]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "PonChildren" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O"))
//      field: "[7]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OctNode_O>" :SPECIALIZER "class chem::OctNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OctNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OctNode_O),PonChildren[7]), 0, "PonChildren[7]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Structure_Old_List_O/543
{ class_kind, STAMPWTAG_chem__Structure_Old_List_O, sizeof(chem::Structure_Old_List_O), 0, IS_POLYMORPHIC, "chem::Structure_Old_List_O" },
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Entries" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>" :SPECIALIZER "class chem::Structure_Old_ListEntry_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>" :SPECIALIZER "class chem::Structure_Old_ListEntry_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>" :SPECIALIZER "class chem::Structure_Old_ListEntry_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Structure_Old_ListEntry_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_Entries._Vector._Contents), 0, "_Entries._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_AllAtoms" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_AllAtoms._Contents), 0, "_AllAtoms._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_SuperposeAtoms" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_SuperposeAtoms._Contents), 0, "_SuperposeAtoms._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_RmsCutOff" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_RmsCutOff), 0, "_RmsCutOff" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Structure_Old_List_O),_Data), 0, "_Data" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::BackboneDependentRotamerLibrary_O/547
{ class_kind, STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O, sizeof(kinematics::BackboneDependentRotamerLibrary_O), 0, IS_POLYMORPHIC, "kinematics::BackboneDependentRotamerLibrary_O" },
//      field: "_PhiStep" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PhiStep), 0, "_PhiStep" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PhiStart" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PhiStart), 0, "_PhiStart" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PhiCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PhiCount), 0, "_PhiCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PsiStep" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PsiStep), 0, "_PsiStep" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PsiStart" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PsiStart), 0, "_PsiStart" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PsiCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_PsiCount), 0, "_PsiCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RotamerSets" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>" :SPECIALIZER "class kinematics::BackboneDependentRotamerSet_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>" :SPECIALIZER "class kinematics::BackboneDependentRotamerSet_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>" :SPECIALIZER "class kinematics::BackboneDependentRotamerSet_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::BackboneDependentRotamerSet_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BackboneDependentRotamerLibrary_O),_RotamerSets._Vector._Contents), 0, "_RotamerSets._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::ReportBase_O/551
{ class_kind, STAMPWTAG_chem__ReportBase_O, sizeof(chem::ReportBase_O), 0, IS_POLYMORPHIC, "chem::ReportBase_O" },
//      field: "_Time" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ReportBase_O),_Time), 0, "_Time" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::StepReport_O/555
{ class_kind, STAMPWTAG_chem__StepReport_O, sizeof(chem::StepReport_O), 0, IS_POLYMORPHIC, "chem::StepReport_O" },
//      field: "_Time" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Time), 0, "_Time" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Iteration" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Iteration), 0, "_Iteration" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Xa" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Xa), 0, "_Xa" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Xb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Xb), 0, "_Xb" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Xc" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Xc), 0, "_Xc" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Fa" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Fa), 0, "_Fa" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Fb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Fb), 0, "_Fb" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Fc" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Fc), 0, "_Fc" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MinBracketSteps" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_MinBracketSteps), 0, "_MinBracketSteps" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyTermsEnabled" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_EnergyTermsEnabled), 0, "_EnergyTermsEnabled" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_TotalEnergy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_TotalEnergy), 0, "_TotalEnergy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DirectionMagnitude" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_DirectionMagnitude), 0, "_DirectionMagnitude" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ForceMagnitude" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ForceMagnitude), 0, "_ForceMagnitude" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MinimizerStatus" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_MinimizerStatus), 0, "_MinimizerStatus" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Direction" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Direction), 0, "_Direction" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LineSearchPosition" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_LineSearchPosition), 0, "_LineSearchPosition" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_LineSearchDirection" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_LineSearchDirection), 0, "_LineSearchDirection" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_LineSearchForce" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_LineSearchForce), 0, "_LineSearchForce" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_TotalEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_TotalEnergyFn), 0, "_TotalEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_StretchEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_StretchEnergyFn), 0, "_StretchEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AngleEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_AngleEnergyFn), 0, "_AngleEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DihedralEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_DihedralEnergyFn), 0, "_DihedralEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NonbondEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_NonbondEnergyFn), 0, "_NonbondEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ImproperEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ImproperEnergyFn), 0, "_ImproperEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ChiralRestraintEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ChiralRestraintEnergyFn), 0, "_ChiralRestraintEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AnchorRestraintEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_AnchorRestraintEnergyFn), 0, "_AnchorRestraintEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_PointToLineRestraintEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_PointToLineRestraintEnergyFn), 0, "_PointToLineRestraintEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutOfZPlaneEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_OutOfZPlaneEnergyFn), 0, "_OutOfZPlaneEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ImproperRestraintEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ImproperRestraintEnergyFn), 0, "_ImproperRestraintEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_FixedNonbondRestraintEnergyFn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::NumericalFunction_O>" :SPECIALIZER "class chem::NumericalFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::NumericalFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_FixedNonbondRestraintEnergyFn), 0, "_FixedNonbondRestraintEnergyFn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DbrentSteps" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_DbrentSteps), 0, "_DbrentSteps" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnergyEvals" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_EnergyEvals), 0, "_EnergyEvals" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ForceEvals" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ForceEvals), 0, "_ForceEvals" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Step" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_Step), 0, "_Step" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FMin" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_FMin), 0, "_FMin" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ForceMag" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_ForceMag), 0, "_ForceMag" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_StepEnergy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_StepEnergy), 0, "_StepEnergy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_IterationMessages" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_IterationMessages), 0, "_IterationMessages" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AngleBetweenDirectionAndForceDeg" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_AngleBetweenDirectionAndForceDeg), 0, "_AngleBetweenDirectionAndForceDeg" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PrematureTermination" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_PrematureTermination), 0, "_PrematureTermination" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PrematureTerminationMessage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StepReport_O),_PrematureTerminationMessage), 0, "_PrematureTerminationMessage" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::MessageReport_O/559
{ class_kind, STAMPWTAG_chem__MessageReport_O, sizeof(chem::MessageReport_O), 0, IS_POLYMORPHIC, "chem::MessageReport_O" },
//      field: "_Time" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MessageReport_O),_Time), 0, "_Time" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Message" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MessageReport_O),_Message), 0, "_Message" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::ForceMatchReport_O/563
{ class_kind, STAMPWTAG_chem__ForceMatchReport_O, sizeof(chem::ForceMatchReport_O), 0, IS_POLYMORPHIC, "chem::ForceMatchReport_O" },
//      field: "_Time" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_Time), 0, "_Time" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Message" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_Message), 0, "_Message" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AnalyticalForce" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_AnalyticalForce), 0, "_AnalyticalForce" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_NumericalForce" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ForceMatchReport_O),_NumericalForce), 0, "_NumericalForce" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ChemDraw_O/567
{ class_kind, STAMPWTAG_chem__ChemDraw_O, sizeof(chem::ChemDraw_O), 0, IS_POLYMORPHIC, "chem::ChemDraw_O" },
//      field: "_AllFragments" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::CDFragment_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::CDFragment_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::CDFragment_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemDraw_O),_AllFragments._Vector._Contents), 0, "_AllFragments._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_NamedFragments" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::CDFragment_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemDraw_O),_NamedFragments._Contents), 0, "_NamedFragments._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemDraw_O),_Code), 0, "_Code" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ZMatrixInternal_O/571
{ class_kind, STAMPWTAG_chem__ZMatrixInternal_O, sizeof(chem::ZMatrixInternal_O), 0, IS_POLYMORPHIC, "chem::ZMatrixInternal_O" },
//      field: "_WeakZMatrix" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrix_O>" :SPECIALIZER "class chem::ZMatrix_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrix_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_WeakZMatrix), 0, "_WeakZMatrix" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_InternalName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_InternalName), 0, "_InternalName" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Constrain" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_Constrain), 0, "_Constrain" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomNew" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_AtomNew), 0, "_AtomNew" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixInternal_O),_Value), 0, "_Value" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::ZMatrixBondInternal_O/575
{ class_kind, STAMPWTAG_chem__ZMatrixBondInternal_O, sizeof(chem::ZMatrixBondInternal_O), 0, IS_POLYMORPHIC, "chem::ZMatrixBondInternal_O" },
//      field: "_WeakZMatrix" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrix_O>" :SPECIALIZER "class chem::ZMatrix_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrix_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_WeakZMatrix), 0, "_WeakZMatrix" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_InternalName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_InternalName), 0, "_InternalName" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Constrain" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_Constrain), 0, "_Constrain" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomNew" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_AtomNew), 0, "_AtomNew" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_Value), 0, "_Value" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomBond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixBondInternal_O),_AtomBond), 0, "_AtomBond" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::ZMatrixDihedralInternal_O/579
{ class_kind, STAMPWTAG_chem__ZMatrixDihedralInternal_O, sizeof(chem::ZMatrixDihedralInternal_O), 0, IS_POLYMORPHIC, "chem::ZMatrixDihedralInternal_O" },
//      field: "_WeakZMatrix" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrix_O>" :SPECIALIZER "class chem::ZMatrix_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrix_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_WeakZMatrix), 0, "_WeakZMatrix" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_InternalName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_InternalName), 0, "_InternalName" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Constrain" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_Constrain), 0, "_Constrain" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomNew" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_AtomNew), 0, "_AtomNew" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_Value), 0, "_Value" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomBond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_AtomBond), 0, "_AtomBond" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomAngle" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_AtomAngle), 0, "_AtomAngle" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomDihedral" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixDihedralInternal_O),_AtomDihedral), 0, "_AtomDihedral" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::ZMatrixAngleInternal_O/583
{ class_kind, STAMPWTAG_chem__ZMatrixAngleInternal_O, sizeof(chem::ZMatrixAngleInternal_O), 0, IS_POLYMORPHIC, "chem::ZMatrixAngleInternal_O" },
//      field: "_WeakZMatrix" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrix_O>" :SPECIALIZER "class chem::ZMatrix_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrix_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_WeakZMatrix), 0, "_WeakZMatrix" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_InternalName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_InternalName), 0, "_InternalName" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Constrain" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_Constrain), 0, "_Constrain" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomNew" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_AtomNew), 0, "_AtomNew" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_Value), 0, "_Value" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomBond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_AtomBond), 0, "_AtomBond" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomAngle" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixAngleInternal_O),_AtomAngle), 0, "_AtomAngle" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::StereoisomerAtom_O/587
{ class_kind, STAMPWTAG_chem__StereoisomerAtom_O, sizeof(chem::StereoisomerAtom_O), 0, IS_POLYMORPHIC, "chem::StereoisomerAtom_O" },
//      field: "_AtomName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),_AtomName), 0, "_AtomName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ConstitutionAtomIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),_ConstitutionAtomIndex), 0, "_ConstitutionAtomIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomCharge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),_AtomCharge), 0, "_AtomCharge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtom_O),_AtomType), 0, "_AtomType" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::StereoisomerVirtualAtom_O/591
{ class_kind, STAMPWTAG_chem__StereoisomerVirtualAtom_O, sizeof(chem::StereoisomerVirtualAtom_O), 0, IS_POLYMORPHIC, "chem::StereoisomerVirtualAtom_O" },
//      field: "_AtomName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),_AtomName), 0, "_AtomName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ConstitutionAtomIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),_ConstitutionAtomIndex), 0, "_ConstitutionAtomIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomCharge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),_AtomCharge), 0, "_AtomCharge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AtomType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerVirtualAtom_O),_AtomType), 0, "_AtomType" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ZMatrix_O/595
{ class_kind, STAMPWTAG_chem__ZMatrix_O, sizeof(chem::ZMatrix_O), 0, IS_POLYMORPHIC, "chem::ZMatrix_O" },
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrix_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ZMatrix" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ZMatrixEntry_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixEntry_O>" :SPECIALIZER "class chem::ZMatrixEntry_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ZMatrixEntry_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixEntry_O>" :SPECIALIZER "class chem::ZMatrixEntry_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixEntry_O>" :SPECIALIZER "class chem::ZMatrixEntry_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ZMatrixEntry_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrix_O),_ZMatrix._Vector._Contents), 0, "_ZMatrix._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Internals" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ZMatrixInternal_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixInternal_O>" :SPECIALIZER "class chem::ZMatrixInternal_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ZMatrixInternal_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixInternal_O>" :SPECIALIZER "class chem::ZMatrixInternal_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixInternal_O>" :SPECIALIZER "class chem::ZMatrixInternal_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ZMatrixInternal_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrix_O),_Internals._Vector._Contents), 0, "_Internals._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Isoname_O/599
{ class_kind, STAMPWTAG_chem__Isoname_O, sizeof(chem::Isoname_O), 0, IS_POLYMORPHIC, "chem::Isoname_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Isoname_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Isomer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")
 {  fixed_field, ctype_long, sizeof(long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Isoname_O),_Isomer), 0, "_Isomer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Topology" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Isoname_O),_Topology), 0, "_Topology" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::PathMessage_O/603
{ class_kind, STAMPWTAG_chem__PathMessage_O, sizeof(chem::PathMessage_O), 0, IS_POLYMORPHIC, "chem::PathMessage_O" },
//      field: "_graph" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::RingFinder_O>" :SPECIALIZER "class chem::RingFinder_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::RingFinder_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_graph), 0, "_graph" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_beep" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<core::SimpleBitVector_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SimpleBitVector_O" :NAME "SimpleBitVector_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_beep.theObject), 0, "_beep.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_firstVertex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGVertex_O>" :SPECIALIZER "class chem::AGVertex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGVertex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_firstVertex), 0, "_firstVertex" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_firstEdge" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGEdge_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_firstEdge), 0, "_firstEdge" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_lastVertex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGVertex_O>" :SPECIALIZER "class chem::AGVertex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGVertex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PathMessage_O),_lastVertex), 0, "_lastVertex" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::MonomerId_O/607
{ class_kind, STAMPWTAG_kinematics__MonomerId_O, sizeof(kinematics::MonomerId_O), 0, IS_POLYMORPHIC, "kinematics::MonomerId_O" },
//      field: "_MonomerId" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::MonomerId" :NAME "MonomerId")
//      field: "._Chain" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerId_O),_MonomerId._Chain), 0, "_MonomerId._Chain" }, // atomic: NIL public: (NIL T) fixable: NIL good-name: T
//      field: "_MonomerId" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::MonomerId" :NAME "MonomerId")
//      field: "._Monomer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerId_O),_MonomerId._Monomer), 0, "_MonomerId._Monomer" }, // atomic: NIL public: (NIL T) fixable: NIL good-name: T
// StampWtag = kinematics::JointTemplate_O/611
{ class_kind, STAMPWTAG_kinematics__JointTemplate_O, sizeof(kinematics::JointTemplate_O), 0, IS_POLYMORPHIC, "kinematics::JointTemplate_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::JointTemplate_O" :NAME "JointTemplate_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Parent.theObject), 0, "_Parent.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::JointTemplate_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = kinematics::BondedJointTemplate_O/615
{ class_kind, STAMPWTAG_kinematics__BondedJointTemplate_O, sizeof(kinematics::BondedJointTemplate_O), 0, IS_POLYMORPHIC, "kinematics::BondedJointTemplate_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::JointTemplate_O" :NAME "JointTemplate_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Parent.theObject), 0, "_Parent.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::JointTemplate_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::JointTemplate_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Children._Vector._Contents), 0, "_Children._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Distance), 0, "_Distance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Theta" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Theta), 0, "_Theta" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Phi" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_Phi), 0, "_Phi" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_OutPlug" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OutPlug_O>" :SPECIALIZER "class chem::OutPlug_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OutPlug_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::BondedJointTemplate_O),_OutPlug), 0, "_OutPlug" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::DelayedBondedJointTemplate_O/619
{ class_kind, STAMPWTAG_kinematics__DelayedBondedJointTemplate_O, sizeof(kinematics::DelayedBondedJointTemplate_O), 0, IS_POLYMORPHIC, "kinematics::DelayedBondedJointTemplate_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::JointTemplate_O" :NAME "JointTemplate_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Parent.theObject), 0, "_Parent.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::JointTemplate_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::JointTemplate_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Children._Vector._Contents), 0, "_Children._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Distance), 0, "_Distance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Theta" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Theta), 0, "_Theta" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Phi" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Phi), 0, "_Phi" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_OutPlug" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OutPlug_O>" :SPECIALIZER "class chem::OutPlug_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OutPlug_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_OutPlug), 0, "_OutPlug" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Checkpoint" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Checkpoint_O>" :SPECIALIZER "class kinematics::Checkpoint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Checkpoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::DelayedBondedJointTemplate_O),_Checkpoint), 0, "_Checkpoint" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::RootBondedJointTemplate_O/623
{ class_kind, STAMPWTAG_kinematics__RootBondedJointTemplate_O, sizeof(kinematics::RootBondedJointTemplate_O), 0, IS_POLYMORPHIC, "kinematics::RootBondedJointTemplate_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::JointTemplate_O" :NAME "JointTemplate_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Parent.theObject), 0, "_Parent.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Id), 0, "_Id" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Comment" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Comment), 0, "_Comment" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::JointTemplate_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::JointTemplate_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Children._Vector._Contents), 0, "_Children._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Distance), 0, "_Distance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Theta" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Theta), 0, "_Theta" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Phi" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_Phi), 0, "_Phi" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_OutPlug" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OutPlug_O>" :SPECIALIZER "class chem::OutPlug_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OutPlug_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_OutPlug), 0, "_OutPlug" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ConstitutionName" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_ConstitutionName), 0, "_ConstitutionName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_TopologyName" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_TopologyName), 0, "_TopologyName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_InPlug" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Plug_O>" :SPECIALIZER "class chem::Plug_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Plug_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RootBondedJointTemplate_O),_InPlug), 0, "_InPlug" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = geom::Color_O/627
{ class_kind, STAMPWTAG_geom__Color_O, sizeof(geom::Color_O), 0, IS_POLYMORPHIC, "geom::Color_O" },
//      field: "_ColorName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(geom::Color_O),_ColorName), 0, "_ColorName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Color" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(geom::Color_O),_Color), 0, "_Color" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::ConformationCollection_O/631
{ class_kind, STAMPWTAG_chem__ConformationCollection_O, sizeof(chem::ConformationCollection_O), 0, IS_POLYMORPHIC, "chem::ConformationCollection_O" },
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationCollection_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Entries" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ConformationCollectionEntry_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ConformationCollectionEntry_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationCollection_O),_Entries._Vector._Contents), 0, "_Entries._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_AllAtoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationCollection_O),_AllAtoms._Contents), 0, "_AllAtoms._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationCollection_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::SuperposableConformationCollection_O/635
{ class_kind, STAMPWTAG_chem__SuperposableConformationCollection_O, sizeof(chem::SuperposableConformationCollection_O), 0, IS_POLYMORPHIC, "chem::SuperposableConformationCollection_O" },
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Entries" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ConformationCollectionEntry_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ConformationCollectionEntry_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_Entries._Vector._Contents), 0, "_Entries._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_AllAtoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_AllAtoms._Contents), 0, "_AllAtoms._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RmsCutOff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_RmsCutOff), 0, "_RmsCutOff" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SuperposeAtomIndices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_byte32_t_O>" :SPECIALIZER "class core::ComplexVector_byte32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposableConformationCollection_O),_SuperposeAtomIndices), 0, "_SuperposeAtomIndices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = asttooling::PresumedLoc_O/639
{ class_kind, STAMPWTAG_asttooling__PresumedLoc_O, sizeof(asttooling::PresumedLoc_O), 0, IS_POLYMORPHIC, "asttooling::PresumedLoc_O" },
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<clang::PresumedLoc>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "clang::PresumedLoc" :NAME "PresumedLoc") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(clang::PresumedLoc), __builtin_offsetof(SAFE_TYPE_MACRO(asttooling::PresumedLoc_O),_Value), 0, "_Value" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::Coupling_O/643
{ class_kind, STAMPWTAG_chem__Coupling_O, sizeof(chem::Coupling_O), 0, IS_POLYMORPHIC, "chem::Coupling_O" },
// StampWtag = chem::RingCoupling_O/647
{ class_kind, STAMPWTAG_chem__RingCoupling_O, sizeof(chem::RingCoupling_O), 0, IS_POLYMORPHIC, "chem::RingCoupling_O" },
//      field: "_Plug1" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingCoupling_O),_Plug1), 0, "_Plug1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Monomer1" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingCoupling_O),_Monomer1), 0, "_Monomer1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Plug2" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingCoupling_O),_Plug2), 0, "_Plug2" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Monomer2" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RingCoupling_O),_Monomer2), 0, "_Monomer2" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::DirectionalCoupling_O/651
{ class_kind, STAMPWTAG_chem__DirectionalCoupling_O, sizeof(chem::DirectionalCoupling_O), 0, IS_POLYMORPHIC, "chem::DirectionalCoupling_O" },
//      field: "_SourcePlugName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),_SourcePlugName), 0, "_SourcePlugName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_TargetPlugName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),_TargetPlugName), 0, "_TargetPlugName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_SourceMonomer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),_SourceMonomer), 0, "_SourceMonomer" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_TargetMonomer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::DirectionalCoupling_O),_TargetMonomer), 0, "_TargetMonomer" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = adapt::ObjectSet_O/655
{ class_kind, STAMPWTAG_adapt__ObjectSet_O, sizeof(adapt::ObjectSet_O), 0, IS_POLYMORPHIC, "adapt::ObjectSet_O" },
//      field: "_Set" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::ObjectSet_O),_Set), 0, "_Set" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Oligomer_O/659
{ class_kind, STAMPWTAG_chem__Oligomer_O, sizeof(chem::Oligomer_O), 0, IS_POLYMORPHIC, "chem::Oligomer_O" },
//      field: "_Monomers" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Monomer_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Monomer_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Monomer_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Oligomer_O),_Monomers._Vector._Contents), 0, "_Monomers._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Couplings" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Coupling_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Coupling_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Coupling_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Oligomer_O),_Couplings._Vector._Contents), 0, "_Couplings._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::PdbMonomerConnectivity_O/663
{ class_kind, STAMPWTAG_chem__PdbMonomerConnectivity_O, sizeof(chem::PdbMonomerConnectivity_O), 0, IS_POLYMORPHIC, "chem::PdbMonomerConnectivity_O" },
//      field: "_PdbName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PdbMonomerConnectivity_O),_PdbName), 0, "_PdbName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_LongNames" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_T_O>" :SPECIALIZER "class core::ComplexVector_T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PdbMonomerConnectivity_O),_LongNames), 0, "_LongNames" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_BondAtomPairs" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>,gctools::GCContainerAllocator<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<core::Symbol_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PdbMonomerConnectivity_O),_BondAtomPairs._Vector._Contents), 0, "_BondAtomPairs._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = units::Dimension_O/667
{ class_kind, STAMPWTAG_units__Dimension_O, sizeof(units::Dimension_O), 0, IS_POLYMORPHIC, "units::Dimension_O" },
// StampWtag = chem::ConformationExplorerEntry_O/671
{ class_kind, STAMPWTAG_chem__ConformationExplorerEntry_O, sizeof(chem::ConformationExplorerEntry_O), 0, IS_POLYMORPHIC, "chem::ConformationExplorerEntry_O" },
//      field: "_WeakConformationExplorer" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorer_O>" :SPECIALIZER "class chem::ConformationExplorer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_WeakConformationExplorer), 0, "_WeakConformationExplorer" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Stages" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ConformationExplorerEntryStage_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_Stages._Vector._Contents), 0, "_Stages._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_SelectedStage" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_SelectedStage), 0, "_SelectedStage" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_UniqueEntryIndex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_UniqueEntryIndex), 0, "_UniqueEntryIndex" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Binder" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntry_O),_Binder), 0, "_Binder" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = mp::ConditionVariable_O/675
{ class_kind, STAMPWTAG_mp__ConditionVariable_O, sizeof(mp::ConditionVariable_O), 0, IS_POLYMORPHIC, "mp::ConditionVariable_O" },
//      field: "_ConditionVariable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mp::ConditionVariable>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::ConditionVariable" :NAME "ConditionVariable") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(mp::ConditionVariable), __builtin_offsetof(SAFE_TYPE_MACRO(mp::ConditionVariable_O),_ConditionVariable), 0, "_ConditionVariable" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::ConditionVariable_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::PdbReader_O/679
{ class_kind, STAMPWTAG_chem__PdbReader_O, sizeof(chem::PdbReader_O), 0, IS_POLYMORPHIC, "chem::PdbReader_O" },
// StampWtag = chem::SpanningLoop_O/683
{ class_kind, STAMPWTAG_chem__SpanningLoop_O, sizeof(chem::SpanningLoop_O), 0, IS_POLYMORPHIC, "chem::SpanningLoop_O" },
//      field: "goal" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),goal), 0, "goal" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "initialized" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),initialized), 0, "initialized" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "done" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),done), 0, "done" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_OnlyFollowRealBonds" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),_OnlyFollowRealBonds), 0, "_OnlyFollowRealBonds" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_FollowBondIfTrueCallback" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::function<_Bool (gctools::smart_ptr<chem::Bond_O>)>" :NAME "function" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "_Bool (gctools::smart_ptr<class chem::Bond_O>)") :INTEGRAL-VALUE NIL))))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),_FollowBondIfTrueCallback), 0, "_FollowBondIfTrueCallback" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "top" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),top), 0, "top" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "currentObject" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),currentObject), 0, "currentObject" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "aCurSpan" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),aCurSpan), 0, "aCurSpan" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "aLastSpan" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),aLastSpan), 0, "aLastSpan" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "siLastSpan" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::SpanningInfo_O>" :SPECIALIZER "class chem::SpanningInfo_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::SpanningInfo_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),siLastSpan), 0, "siLastSpan" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "iSeenId" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),iSeenId), 0, "iSeenId" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "iMaxDistanceFromRoot" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),iMaxDistanceFromRoot), 0, "iMaxDistanceFromRoot" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "iInvisibleCollisions" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),iInvisibleCollisions), 0, "iInvisibleCollisions" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "aLastCollision" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),aLastCollision), 0, "aLastCollision" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "aInvisibleAtom" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),aInvisibleAtom), 0, "aInvisibleAtom" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "fVisibilityFlags" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),fVisibilityFlags), 0, "fVisibilityFlags" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "fVisibleFlagsOn" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),fVisibleFlagsOn), 0, "fVisibleFlagsOn" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "fVisibleFlagsOff" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),fVisibleFlagsOff), 0, "fVisibleFlagsOff" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "iTempInt" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),iTempInt), 0, "iTempInt" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_BackSpan" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningLoop_O),_BackSpan), 0, "_BackSpan" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ProperTorsion_O/687
{ class_kind, STAMPWTAG_chem__ProperTorsion_O, sizeof(chem::ProperTorsion_O), 0, IS_POLYMORPHIC, "chem::ProperTorsion_O" },
//      field: "_a1" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ProperTorsion_O),_a1), 0, "_a1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_a2" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ProperTorsion_O),_a2), 0, "_a2" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_a3" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ProperTorsion_O),_a3), 0, "_a3" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_a4" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ProperTorsion_O),_a4), 0, "_a4" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ResidueList_O/691
{ class_kind, STAMPWTAG_chem__ResidueList_O, sizeof(chem::ResidueList_O), 0, IS_POLYMORPHIC, "chem::ResidueList_O" },
// StampWtag = chem::SuperposeEngine_O/695
{ class_kind, STAMPWTAG_chem__SuperposeEngine_O, sizeof(chem::SuperposeEngine_O), 0, IS_POLYMORPHIC, "chem::SuperposeEngine_O" },
//      field: "_FixedIndices" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_byte32_t_O>" :SPECIALIZER "class core::ComplexVector_byte32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),_FixedIndices), 0, "_FixedIndices" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_FixedCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::ComplexVectorCoordinate_O>" :SPECIALIZER "class geom::ComplexVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::ComplexVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),_FixedCoordinates), 0, "_FixedCoordinates" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_MoveableIndices" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_byte32_t_O>" :SPECIALIZER "class core::ComplexVector_byte32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),_MoveableIndices), 0, "_MoveableIndices" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_MoveableCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::ComplexVectorCoordinate_O>" :SPECIALIZER "class geom::ComplexVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::ComplexVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeEngine_O),_MoveableCoordinates), 0, "_MoveableCoordinates" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::SuperposeSelectedAtoms_O/699
{ class_kind, STAMPWTAG_chem__SuperposeSelectedAtoms_O, sizeof(chem::SuperposeSelectedAtoms_O), 0, IS_POLYMORPHIC, "chem::SuperposeSelectedAtoms_O" },
//      field: "_FixedIndices" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_byte32_t_O>" :SPECIALIZER "class core::ComplexVector_byte32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_FixedIndices), 0, "_FixedIndices" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_FixedCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::ComplexVectorCoordinate_O>" :SPECIALIZER "class geom::ComplexVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::ComplexVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_FixedCoordinates), 0, "_FixedCoordinates" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_MoveableIndices" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_byte32_t_O>" :SPECIALIZER "class core::ComplexVector_byte32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_MoveableIndices), 0, "_MoveableIndices" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_MoveableCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::ComplexVectorCoordinate_O>" :SPECIALIZER "class geom::ComplexVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::ComplexVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_MoveableCoordinates), 0, "_MoveableCoordinates" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_SuperposeAtoms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Atom_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Atom_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SuperposeSelectedAtoms_O),_SuperposeAtoms._Vector._Contents), 0, "_SuperposeAtoms._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Command_O/703
{ class_kind, STAMPWTAG_chem__Command_O, sizeof(chem::Command_O), 0, IS_POLYMORPHIC, "chem::Command_O" },
// StampWtag = chem::StereoConfiguration_O/707
{ class_kind, STAMPWTAG_chem__StereoConfiguration_O, sizeof(chem::StereoConfiguration_O), 0, IS_POLYMORPHIC, "chem::StereoConfiguration_O" },
//      field: "_AtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoConfiguration_O),_AtomName), 0, "_AtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Configuration" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoConfiguration_O),_Configuration), 0, "_Configuration" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::MonomerBaseNode_O/711
{ class_kind, STAMPWTAG_kinematics__MonomerBaseNode_O, sizeof(kinematics::MonomerBaseNode_O), 0, IS_POLYMORPHIC, "kinematics::MonomerBaseNode_O" },
// StampWtag = kinematics::AggregateNode_O/715
{ class_kind, STAMPWTAG_kinematics__AggregateNode_O, sizeof(kinematics::AggregateNode_O), 0, IS_POLYMORPHIC, "kinematics::AggregateNode_O" },
//      field: "_Chains" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::ChainNode_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChainNode_O>" :SPECIALIZER "class kinematics::ChainNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::ChainNode_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChainNode_O>" :SPECIALIZER "class kinematics::ChainNode_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChainNode_O>" :SPECIALIZER "class kinematics::ChainNode_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::ChainNode_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::AggregateNode_O),_Chains._Vector._Contents), 0, "_Chains._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = kinematics::ChainNode_O/719
{ class_kind, STAMPWTAG_kinematics__ChainNode_O, sizeof(kinematics::ChainNode_O), 0, IS_POLYMORPHIC, "kinematics::ChainNode_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::ChainNode_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RootMonomerNode" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::ChainNode_O),_RootMonomerNode), 0, "_RootMonomerNode" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_IndexedMonomerNodes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::MonomerNode_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::MonomerNode_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::MonomerNode_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::ChainNode_O),_IndexedMonomerNodes._Vector._Contents), 0, "_IndexedMonomerNodes._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = kinematics::MonomerNode_O/723
{ class_kind, STAMPWTAG_kinematics__MonomerNode_O, sizeof(kinematics::MonomerNode_O), 0, IS_POLYMORPHIC, "kinematics::MonomerNode_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ParentPlugName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_ParentPlugName), 0, "_ParentPlugName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::MonomerId" :NAME "MonomerId")
//      field: "._Chain" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Id._Chain), 0, "_Id._Chain" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::MonomerId" :NAME "MonomerId")
//      field: "._Monomer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Id._Monomer), 0, "_Id._Monomer" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class kinematics::MonomerNode_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Children._Contents), 0, "_Children._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_StereoisomerName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_StereoisomerName), 0, "_StereoisomerName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Topology" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Topology), 0, "_Topology" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ConformationIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_ConformationIndex), 0, "_ConformationIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Joints" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::Joint_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::Joint_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::MonomerNode_O),_Joints._Vector._Contents), 0, "_Joints._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = kinematics::RingClosingMonomerNode_O/727
{ class_kind, STAMPWTAG_kinematics__RingClosingMonomerNode_O, sizeof(kinematics::RingClosingMonomerNode_O), 0, IS_POLYMORPHIC, "kinematics::RingClosingMonomerNode_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ParentPlugName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_ParentPlugName), 0, "_ParentPlugName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::MonomerId" :NAME "MonomerId")
//      field: "._Chain" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Id._Chain), 0, "_Id._Chain" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "kinematics::MonomerId" :NAME "MonomerId")
//      field: "._Monomer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Id._Monomer), 0, "_Id._Monomer" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class kinematics::MonomerNode_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Children._Contents), 0, "_Children._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_StereoisomerName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_StereoisomerName), 0, "_StereoisomerName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Topology" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Topology), 0, "_Topology" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ConformationIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_ConformationIndex), 0, "_ConformationIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Joints" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<kinematics::Joint_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class kinematics::Joint_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_Joints._Vector._Contents), 0, "_Joints._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_RingClosingChildren" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>" :SPECIALIZER "class kinematics::RingClosingMonomerNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class kinematics::RingClosingMonomerNode_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::RingClosingMonomerNode_O),_RingClosingChildren._Contents), 0, "_RingClosingChildren._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FFNonbondCrossTermTable_O/731
{ class_kind, STAMPWTAG_chem__FFNonbondCrossTermTable_O, sizeof(chem::FFNonbondCrossTermTable_O), 0, IS_POLYMORPHIC, "chem::FFNonbondCrossTermTable_O" },
//      field: "_NumberOfTypes" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondCrossTermTable_O),_NumberOfTypes), 0, "_NumberOfTypes" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_CrossTerms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::FFNonbondCrossTerm>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FFNonbondCrossTerm" :NAME "FFNonbondCrossTerm") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::FFNonbondCrossTerm,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::FFNonbondCrossTerm>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FFNonbondCrossTerm" :NAME "FFNonbondCrossTerm") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::FFNonbondCrossTerm>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::FFNonbondCrossTerm>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FFNonbondCrossTerm" :NAME "FFNonbondCrossTerm") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::FFNonbondCrossTerm>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::FFNonbondCrossTerm>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::FFNonbondCrossTerm>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondCrossTermTable_O),_CrossTerms._Vector._Contents), 0, "_CrossTerms._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Plug_O/735
{ class_kind, STAMPWTAG_chem__Plug_O, sizeof(chem::Plug_O), 0, IS_POLYMORPHIC, "chem::Plug_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Plug_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::JumpPlug_O/739
{ class_kind, STAMPWTAG_chem__JumpPlug_O, sizeof(chem::JumpPlug_O), 0, IS_POLYMORPHIC, "chem::JumpPlug_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::JumpPlug_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_JumpAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::JumpPlug_O),_JumpAtomName), 0, "_JumpAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::PlugWithMates_O/743
{ class_kind, STAMPWTAG_chem__PlugWithMates_O, sizeof(chem::PlugWithMates_O), 0, IS_POLYMORPHIC, "chem::PlugWithMates_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PlugWithMates_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_B0" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PlugWithMates_O),_B0), 0, "_B0" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_B1" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PlugWithMates_O),_B1), 0, "_B1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Mates" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Mate_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Mate_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Mate_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::PlugWithMates_O),_Mates._Vector._Contents), 0, "_Mates._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::InPlug_O/747
{ class_kind, STAMPWTAG_chem__InPlug_O, sizeof(chem::InPlug_O), 0, IS_POLYMORPHIC, "chem::InPlug_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::InPlug_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_B0" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::InPlug_O),_B0), 0, "_B0" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_B1" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::InPlug_O),_B1), 0, "_B1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Mates" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Mate_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Mate_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Mate_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::InPlug_O),_Mates._Vector._Contents), 0, "_Mates._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::OutPlug_O/751
{ class_kind, STAMPWTAG_chem__OutPlug_O, sizeof(chem::OutPlug_O), 0, IS_POLYMORPHIC, "chem::OutPlug_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_B0" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_B0), 0, "_B0" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_B1" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_B1), 0, "_B1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Mates" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Mate_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Mate_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Mate_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_Mates._Vector._Contents), 0, "_Mates._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_StubPivotAtom" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_StubPivotAtom), 0, "_StubPivotAtom" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_IsRingClosing" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OutPlug_O),_IsRingClosing), 0, "_IsRingClosing" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::OriginPlug_O/755
{ class_kind, STAMPWTAG_chem__OriginPlug_O, sizeof(chem::OriginPlug_O), 0, IS_POLYMORPHIC, "chem::OriginPlug_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OriginPlug_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_OriginAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::OriginPlug_O),_OriginAtomName), 0, "_OriginAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::Rotamer_O/759
{ class_kind, STAMPWTAG_kinematics__Rotamer_O, sizeof(kinematics::Rotamer_O), 0, IS_POLYMORPHIC, "kinematics::Rotamer_O" },
//      field: "_Dihedrals" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<double>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<double,gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<double>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<double>>" :SPECIALIZER "class gctools::GCVector_moveable<double>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Rotamer_O),_Dihedrals._Vector._Contents), 0, "_Dihedrals._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Sigmas" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<double>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<double,gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<double>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<double>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<double>>" :SPECIALIZER "class gctools::GCVector_moveable<double>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<double>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Rotamer_O),_Sigmas._Vector._Contents), 0, "_Sigmas._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Indices" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<int,gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<int>>" :SPECIALIZER "class gctools::GCVector_moveable<int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Rotamer_O),_Indices._Vector._Contents), 0, "_Indices._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Probability" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Rotamer_O),_Probability), 0, "_Probability" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Count" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Rotamer_O),_Count), 0, "_Count" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::MonomerContext_O/763
{ class_kind, STAMPWTAG_chem__MonomerContext_O, sizeof(chem::MonomerContext_O), 0, IS_POLYMORPHIC, "chem::MonomerContext_O" },
//      field: "_Self" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EntityNameSetBase_O>" :SPECIALIZER "class chem::EntityNameSetBase_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EntityNameSetBase_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerContext_O),_Self), 0, "_Self" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Neighbors" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EntityNameSetBase_O>" :SPECIALIZER "class chem::EntityNameSetBase_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::EntityNameSetBase_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MonomerContext_O),_Neighbors._Contents), 0, "_Neighbors._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::CDFragment_O/767
{ class_kind, STAMPWTAG_chem__CDFragment_O, sizeof(chem::CDFragment_O), 0, IS_POLYMORPHIC, "chem::CDFragment_O" },
//      field: "_ConstitutionName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_ConstitutionName), 0, "_ConstitutionName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Nodes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<int,gctools::smart_ptr<chem::CDNode_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<int, class gctools::smart_ptr<class chem::CDNode_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_Nodes._Contents), 0, "_Nodes._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_AtomsToNodes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<class chem::Atom_O>, class gctools::smart_ptr<class chem::CDNode_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_AtomsToNodes._Contents), 0, "_AtomsToNodes._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Bonds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::CDBond_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDBond_O>" :SPECIALIZER "class chem::CDBond_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::CDBond_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDBond_O>" :SPECIALIZER "class chem::CDBond_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDBond_O>" :SPECIALIZER "class chem::CDBond_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::CDBond_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_Bonds._Vector._Contents), 0, "_Bonds._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_LargestId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_LargestId), 0, "_LargestId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Molecule" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::Molecule_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Molecule_O" :NAME "Molecule_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDFragment_O),_Molecule.theObject), 0, "_Molecule.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = units::Unit_O/771
{ class_kind, STAMPWTAG_units__Unit_O, sizeof(units::Unit_O), 0, IS_POLYMORPHIC, "units::Unit_O" },
//      field: "_Amount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(units::Unit_O),_Amount), 0, "_Amount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = units::NamedUnit_O/775
{ class_kind, STAMPWTAG_units__NamedUnit_O, sizeof(units::NamedUnit_O), 0, IS_POLYMORPHIC, "units::NamedUnit_O" },
//      field: "_Amount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Amount), 0, "_Amount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Symbol" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Symbol), 0, "_Symbol" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Label" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Label), 0, "_Label" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(units::NamedUnit_O),_Code), 0, "_Code" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::NativeVector_int_O/779
{ class_kind, STAMPWTAG_core__NativeVector_int_O, sizeof(core::NativeVector_int_O), 0, IS_POLYMORPHIC, "core::NativeVector_int_O" },
//      field: "_Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<int,gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<int>>" :SPECIALIZER "class gctools::GCVector_moveable<int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::NativeVector_int_O),_Vector._Vector._Contents), 0, "_Vector._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = llvmo::CodeBase_O/783
{ class_kind, STAMPWTAG_llvmo__CodeBase_O, sizeof(llvmo::CodeBase_O), 0, IS_POLYMORPHIC, "llvmo::CodeBase_O" },
// StampWtag = llvmo::Code_O/787
{ class_kind, STAMPWTAG_llvmo__Code_O, sizeof(llvmo::Code_O), 0, IS_POLYMORPHIC, "llvmo::Code_O" },
//      field: "_HeadOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_HeadOffset), 0, "_HeadOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_TailOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_TailOffset), 0, "_TailOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ObjectFile" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<llvmo::ObjectFile_O>" :SPECIALIZER "class llvmo::ObjectFile_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<llvmo::ObjectFile_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_ObjectFile), 0, "_ObjectFile" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_gcroots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "gctools::GCRootsInModule" :NAME "GCRootsInModule"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_gcroots), 0, "_gcroots" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_TextSegmentStart" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_TextSegmentStart), 0, "_TextSegmentStart" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_TextSegmentEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_TextSegmentEnd), 0, "_TextSegmentEnd" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_TextSegmentSectionId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_TextSegmentSectionId), 0, "_TextSegmentSectionId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_StackmapStart" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_StackmapStart), 0, "_StackmapStart" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_StackmapSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_StackmapSize), 0, "_StackmapSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LiteralVectorStart" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_LiteralVectorStart), 0, "_LiteralVectorStart" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LiteralVectorSizeBytes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_LiteralVectorSizeBytes), 0, "_LiteralVectorSizeBytes" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_DataCode._Data), 0, "_DataCode._Data" },
 {  variable_capacity, sizeof(unsigned char), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_DataCode._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Code_O),_DataCode._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")
*/
/* (ctype-key (base one)) -> "unsigned char"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")>
{    variable_field, ctype_unsigned_char, sizeof(unsigned char), 0, 0, "only" },
// StampWtag = llvmo::Library_O/791
{ class_kind, STAMPWTAG_llvmo__Library_O, sizeof(llvmo::Library_O), 0, IS_POLYMORPHIC, "llvmo::Library_O" },
//      field: "_Executable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Library_O),_Executable), 0, "_Executable" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Start" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Library_O),_Start), 0, "_Start" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_End" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Library_O),_End), 0, "_End" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_VtableStart" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Library_O),_VtableStart), 0, "_VtableStart" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_VtableEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Library_O),_VtableEnd), 0, "_VtableEnd" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Library_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::InfoDb_O/795
{ class_kind, STAMPWTAG_chem__InfoDb_O, sizeof(chem::InfoDb_O), 0, IS_POLYMORPHIC, "chem::InfoDb_O" },
//      field: "_database" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class core::Array_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::InfoDb_O),_database._Contents), 0, "_database._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::MinimizerLog_O/799
{ class_kind, STAMPWTAG_chem__MinimizerLog_O, sizeof(chem::MinimizerLog_O), 0, IS_POLYMORPHIC, "chem::MinimizerLog_O" },
//      field: "_Minimizer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Minimizer_O>" :SPECIALIZER "class chem::Minimizer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Minimizer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MinimizerLog_O),_Minimizer), 0, "_Minimizer" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Reports" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ReportBase_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ReportBase_O>" :SPECIALIZER "class chem::ReportBase_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ReportBase_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ReportBase_O>" :SPECIALIZER "class chem::ReportBase_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ReportBase_O>" :SPECIALIZER "class chem::ReportBase_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ReportBase_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MinimizerLog_O),_Reports._Vector._Contents), 0, "_Reports._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::GenericOctree_O/803
{ class_kind, STAMPWTAG_chem__GenericOctree_O, sizeof(chem::GenericOctree_O), 0, IS_POLYMORPHIC, "chem::GenericOctree_O" },
//      field: "_depth" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_depth), 0, "_depth" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_containing_radius" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_containing_radius), 0, "_containing_radius" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "Entries" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),Entries), 0, "Entries" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[0]), 0, "_children[0]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[1]), 0, "_children[1]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[2]), 0, "_children[2]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[3]), 0, "_children[3]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[4]), 0, "_children[4]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O"))
//      field: "[5]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[5]), 0, "_children[5]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O"))
//      field: "[6]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[6]), 0, "_children[6]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_children" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 8 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O"))
//      field: "[7]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::GenericOctree_O>" :SPECIALIZER "class chem::GenericOctree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::GenericOctree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_children[7]), 0, "_children[7]" }, // atomic: NIL public: (T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::GenericOctree_O),_data), 0, "_data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::AtomTree_O/807
{ class_kind, STAMPWTAG_kinematics__AtomTree_O, sizeof(kinematics::AtomTree_O), 0, IS_POLYMORPHIC, "kinematics::AtomTree_O" },
//      field: "_Root" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::AtomTree_O),_Root), 0, "_Root" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "chem::AtomIdMap<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "AtomIdMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL)))
//      field: "._DefaultValue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::AtomTree_O),_AtomMap._DefaultValue), 0, "_AtomMap._DefaultValue" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "chem::AtomIdMap<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "AtomIdMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL)))
//      field: "._MoleculeMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>,std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>>>, std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>>>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_start" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::AtomTree_O),_AtomMap._MoleculeMap._M_impl._M_start), 0, "_AtomMap._MoleculeMap._M_impl._M_start" }, // atomic: NIL public: (T T T T) fixable: NIL good-name: T
//      field: "_AtomMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "chem::AtomIdMap<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "AtomIdMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL)))
//      field: "._MoleculeMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>,std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>>>, std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>>>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_finish" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::AtomTree_O),_AtomMap._MoleculeMap._M_impl._M_finish), 0, "_AtomMap._MoleculeMap._M_impl._M_finish" }, // atomic: NIL public: (T T T T) fixable: NIL good-name: T
//      field: "_AtomMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "chem::AtomIdMap<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "AtomIdMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL)))
//      field: "._MoleculeMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>,std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>>>, std::allocator<std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>>>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_end_of_storage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>,std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<kinematics::Joint_O>,std::allocator<gctools::smart_ptr<kinematics::Joint_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<kinematics::Joint_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::AtomTree_O),_AtomMap._MoleculeMap._M_impl._M_end_of_storage), 0, "_AtomMap._MoleculeMap._M_impl._M_end_of_storage" }, // atomic: NIL public: (T T T T) fixable: NIL good-name: T
// StampWtag = units::Quantity_O/811
{ class_kind, STAMPWTAG_units__Quantity_O, sizeof(units::Quantity_O), 0, IS_POLYMORPHIC, "units::Quantity_O" },
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(units::Quantity_O),_Value), 0, "_Value" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Unit" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<units::Unit_O>" :SPECIALIZER "class units::Unit_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<units::Unit_O>), __builtin_offsetof(SAFE_TYPE_MACRO(units::Quantity_O),_Unit), 0, "_Unit" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ChemInfoMatch_O/815
{ class_kind, STAMPWTAG_chem__ChemInfoMatch_O, sizeof(chem::ChemInfoMatch_O), 0, IS_POLYMORPHIC, "chem::ChemInfoMatch_O" },
//      field: "_Matches" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_Matches), 0, "_Matches" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MaxTagPlus1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_MaxTagPlus1), 0, "_MaxTagPlus1" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Root" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Root_O>" :SPECIALIZER "class chem::Root_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Root_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_Root), 0, "_Root" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingLookup" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEql_O>" :SPECIALIZER "class core::HashTableEql_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_RingLookup), 0, "_RingLookup" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_TagLookup" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_O>" :SPECIALIZER "class core::SimpleVector_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_TagLookup), 0, "_TagLookup" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_TagHistory" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoMatch_O),_TagHistory), 0, "_TagHistory" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ZMatrixEntry_O/819
{ class_kind, STAMPWTAG_chem__ZMatrixEntry_O, sizeof(chem::ZMatrixEntry_O), 0, IS_POLYMORPHIC, "chem::ZMatrixEntry_O" },
//      field: "_ZMatrixAtomName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_ZMatrixAtomName), 0, "_ZMatrixAtomName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_Atom), 0, "_Atom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Bond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixBondInternal_O>" :SPECIALIZER "class chem::ZMatrixBondInternal_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixBondInternal_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_Bond), 0, "_Bond" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Angle" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixAngleInternal_O>" :SPECIALIZER "class chem::ZMatrixAngleInternal_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixAngleInternal_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_Angle), 0, "_Angle" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Dihedral" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixDihedralInternal_O>" :SPECIALIZER "class chem::ZMatrixDihedralInternal_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixDihedralInternal_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ZMatrixEntry_O),_Dihedral), 0, "_Dihedral" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::SpecificContextSet_O/823
{ class_kind, STAMPWTAG_chem__SpecificContextSet_O, sizeof(chem::SpecificContextSet_O), 0, IS_POLYMORPHIC, "chem::SpecificContextSet_O" },
//      field: "_KeySets" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::SpecificContext_O>" :SPECIALIZER "class chem::SpecificContext_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::SpecificContext_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpecificContextSet_O),_KeySets._Contents), 0, "_KeySets._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Angle_O/827
{ class_kind, STAMPWTAG_chem__Angle_O, sizeof(chem::Angle_O), 0, IS_POLYMORPHIC, "chem::Angle_O" },
//      field: "_a1" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Angle_O),_a1), 0, "_a1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_a2" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Angle_O),_a2), 0, "_a2" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_a3" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Angle_O),_a3), 0, "_a3" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::MacroModelFile_O/831
{ class_kind, STAMPWTAG_chem__MacroModelFile_O, sizeof(chem::MacroModelFile_O), 0, IS_POLYMORPHIC, "chem::MacroModelFile_O" },
//      field: "lines" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MacroModelFile_O),lines), 0, "lines" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "file" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "_IO_FILE" :NAME "_IO_FILE"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MacroModelFile_O),file), 0, "file" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::BondList_O/835
{ class_kind, STAMPWTAG_chem__BondList_O, sizeof(chem::BondList_O), 0, IS_POLYMORPHIC, "chem::BondList_O" },
//      field: "_Bonds" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0_uncopyable<gctools::smart_ptr<chem::Bond_O>>" :NAME "Vec0_uncopyable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Bond_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Bond_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondList_O),_Bonds._Vector._Contents), 0, "_Bonds._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::ConformationExplorer_O/839
{ class_kind, STAMPWTAG_chem__ConformationExplorer_O, sizeof(chem::ConformationExplorer_O), 0, IS_POLYMORPHIC, "chem::ConformationExplorer_O" },
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Entries" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ConformationExplorerEntry_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ConformationExplorerEntry_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_Entries._Vector._Contents), 0, "_Entries._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_AllAtoms" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_AllAtoms._Contents), 0, "_AllAtoms._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_SuperposeAtomIndices" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_byte32_t_O>" :SPECIALIZER "class core::ComplexVector_byte32_t_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_byte32_t_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_SuperposeAtomIndices), 0, "_SuperposeAtomIndices" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Binder" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorer_O),_Binder), 0, "_Binder" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ChemInfoGraph_O/843
{ class_kind, STAMPWTAG_chem__ChemInfoGraph_O, sizeof(chem::ChemInfoGraph_O), 0, IS_POLYMORPHIC, "chem::ChemInfoGraph_O" },
//      field: "_Root" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Root_O>" :SPECIALIZER "class chem::Root_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Root_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_Root), 0, "_Root" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_nodes_to_index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_nodes_to_index), 0, "_nodes_to_index" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_nodeOrder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<unsigned long>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<unsigned long,gctools::GCContainerAllocator<gctools::GCVector_moveable<unsigned long>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<unsigned long>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<unsigned long>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<unsigned long>>" :SPECIALIZER "class gctools::GCVector_moveable<unsigned long>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<unsigned long>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_nodeOrder._Vector._Contents), 0, "_nodeOrder._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_atomNodes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ChemInfoNode_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ChemInfoNode_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ChemInfoNode_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_atomNodes._Vector._Contents), 0, "_atomNodes._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_bondNodes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::BondToAtomTest_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondToAtomTest_O>" :SPECIALIZER "class chem::BondToAtomTest_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::BondToAtomTest_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondToAtomTest_O>" :SPECIALIZER "class chem::BondToAtomTest_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondToAtomTest_O>" :SPECIALIZER "class chem::BondToAtomTest_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::BondToAtomTest_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_bondNodes._Vector._Contents), 0, "_bondNodes._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_chemInfoGraph" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "boost::adjacency_list<boost::vecS,boost::vecS,boost::undirectedS,chem::ChemInfoVertexData,boost::property<enum boost::edge_index_t,int,boost::no_property>,boost::no_property,boost::listS>" :NAME "adjacency_list" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::vecS" :NAME "vecS") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::vecS" :NAME "vecS") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 2 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::undirectedS" :NAME "undirectedS") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 3 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ChemInfoVertexData" :NAME "ChemInfoVertexData") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 4 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "boost::property<enum boost::edge_index_t,int,boost::no_property>" :NAME "property" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::ENUM-CTYPE :KEY "enum boost::edge_index_t") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 2 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::no_property" :NAME "no_property") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 5 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::no_property" :NAME "no_property") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 6 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::listS" :NAME "listS") :INTEGRAL-VALUE NIL))))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoGraph_O),_chemInfoGraph), 0, "_chemInfoGraph" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::CDText_O/847
{ class_kind, STAMPWTAG_chem__CDText_O, sizeof(chem::CDText_O), 0, IS_POLYMORPHIC, "chem::CDText_O" },
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDText_O),_Code), 0, "_Code" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::DINodeArray_O/851
{ class_kind, STAMPWTAG_llvmo__DINodeArray_O, sizeof(llvmo::DINodeArray_O), 0, IS_POLYMORPHIC, "llvmo::DINodeArray_O" },
//      field: "_Val" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<llvm::MDTupleTypedArrayWrapper<llvm::DINode>>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "llvm::MDTupleTypedArrayWrapper<llvm::DINode>" :NAME "MDTupleTypedArrayWrapper" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::DINode" :NAME "DINode") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(llvm::MDTupleTypedArrayWrapper<llvm::DINode>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DINodeArray_O),_Val), 0, "_Val" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::SpanningInfo_O/855
{ class_kind, STAMPWTAG_chem__SpanningInfo_O, sizeof(chem::SpanningInfo_O), 0, IS_POLYMORPHIC, "chem::SpanningInfo_O" },
//      field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningInfo_O),_Distance), 0, "_Distance" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ToRoot" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningInfo_O),_ToRoot), 0, "_ToRoot" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Next" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpanningInfo_O),_Next), 0, "_Next" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::Checkpoint_O/859
{ class_kind, STAMPWTAG_kinematics__Checkpoint_O, sizeof(kinematics::Checkpoint_O), 0, IS_POLYMORPHIC, "kinematics::Checkpoint_O" },
//      field: "_ConstitutionName" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Checkpoint_O),_ConstitutionName), 0, "_ConstitutionName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_TopologyName" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Checkpoint_O),_TopologyName), 0, "_TopologyName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::CheckpointJoint_O/863
{ class_kind, STAMPWTAG_kinematics__CheckpointJoint_O, sizeof(kinematics::CheckpointJoint_O), 0, IS_POLYMORPHIC, "kinematics::CheckpointJoint_O" },
//      field: "_ConstitutionName" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointJoint_O),_ConstitutionName), 0, "_ConstitutionName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_TopologyName" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointJoint_O),_TopologyName), 0, "_TopologyName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointJoint_O),_AtomName), 0, "_AtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::CheckpointOutPlugJoint_O/867
{ class_kind, STAMPWTAG_kinematics__CheckpointOutPlugJoint_O, sizeof(kinematics::CheckpointOutPlugJoint_O), 0, IS_POLYMORPHIC, "kinematics::CheckpointOutPlugJoint_O" },
//      field: "_ConstitutionName" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointOutPlugJoint_O),_ConstitutionName), 0, "_ConstitutionName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_TopologyName" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointOutPlugJoint_O),_TopologyName), 0, "_TopologyName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Plug" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::OutPlug_O>" :SPECIALIZER "class chem::OutPlug_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::OutPlug_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::CheckpointOutPlugJoint_O),_Plug), 0, "_Plug" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ConformationExplorerMatch_O/871
{ class_kind, STAMPWTAG_chem__ConformationExplorerMatch_O, sizeof(chem::ConformationExplorerMatch_O), 0, IS_POLYMORPHIC, "chem::ConformationExplorerMatch_O" },
//      field: "_Matches" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_Matches), 0, "_Matches" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ClosestMatchIndex" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_ClosestMatchIndex), 0, "_ClosestMatchIndex" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ClosestMatchRms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_ClosestMatchRms), 0, "_ClosestMatchRms" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_MatchStageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerMatch_O),_MatchStageName), 0, "_MatchStageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::StereoisomerAtoms_O/875
{ class_kind, STAMPWTAG_chem__StereoisomerAtoms_O, sizeof(chem::StereoisomerAtoms_O), 0, IS_POLYMORPHIC, "chem::StereoisomerAtoms_O" },
//      field: "_StereoisomerName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtoms_O),_StereoisomerName), 0, "_StereoisomerName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::StereoisomerAtom_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtom_O>" :SPECIALIZER "class chem::StereoisomerAtom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::StereoisomerAtom_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtom_O>" :SPECIALIZER "class chem::StereoisomerAtom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtom_O>" :SPECIALIZER "class chem::StereoisomerAtom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::StereoisomerAtom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StereoisomerAtoms_O),_Atoms._Vector._Contents), 0, "_Atoms._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Rotamer_O/879
{ class_kind, STAMPWTAG_chem__Rotamer_O, sizeof(chem::Rotamer_O), 0, IS_POLYMORPHIC, "chem::Rotamer_O" },
//      field: "_RotamerAtoms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::RotamerAtom>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RotamerAtom" :NAME "RotamerAtom") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::RotamerAtom,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::RotamerAtom>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RotamerAtom" :NAME "RotamerAtom") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::RotamerAtom>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::RotamerAtom>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RotamerAtom" :NAME "RotamerAtom") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::RotamerAtom>>" :SPECIALIZER "class gctools::GCVector_moveable<class chem::RotamerAtom>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::RotamerAtom>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Rotamer_O),_RotamerAtoms._Vector._Contents), 0, "_RotamerAtoms._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::ImproperTorsion_O/883
{ class_kind, STAMPWTAG_chem__ImproperTorsion_O, sizeof(chem::ImproperTorsion_O), 0, IS_POLYMORPHIC, "chem::ImproperTorsion_O" },
//      field: "_a1" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),_a1), 0, "_a1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_a2" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),_a2), 0, "_a2" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_a3central" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),_a3central), 0, "_a3central" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_a4" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ImproperTorsion_O),_a4), 0, "_a4" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = adapt::SymbolList_O/887
{ class_kind, STAMPWTAG_adapt__SymbolList_O, sizeof(adapt::SymbolList_O), 0, IS_POLYMORPHIC, "adapt::SymbolList_O" },
//      field: "_Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Symbol_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Symbol_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::Symbol_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::SymbolList_O),_Contents._Vector._Contents), 0, "_Contents._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::FrameRecognizer_O/891
{ class_kind, STAMPWTAG_chem__FrameRecognizer_O, sizeof(chem::FrameRecognizer_O), 0, IS_POLYMORPHIC, "chem::FrameRecognizer_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_Name), 0, "_Name" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_GroupName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_GroupName), 0, "_GroupName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Smarts" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_Smarts), 0, "_Smarts" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Root" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Root_O>" :SPECIALIZER "class chem::Root_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Root_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FrameRecognizer_O),_Root), 0, "_Root" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ConformationExplorerEntryStage_O/895
{ class_kind, STAMPWTAG_chem__ConformationExplorerEntryStage_O, sizeof(chem::ConformationExplorerEntryStage_O), 0, IS_POLYMORPHIC, "chem::ConformationExplorerEntryStage_O" },
//      field: "_BasedOnStageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_BasedOnStageName), 0, "_BasedOnStageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_StageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_StageName), 0, "_StageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Complete" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_Complete), 0, "_Complete" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_WeakConformationExplorerEntry" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntry_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_WeakConformationExplorerEntry), 0, "_WeakConformationExplorerEntry" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_FinalCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::SimpleVectorCoordinate_O>" :SPECIALIZER "class geom::SimpleVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_FinalCoordinates), 0, "_FinalCoordinates" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Binder" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_Binder), 0, "_Binder" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_EnergyKCal" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_EnergyKCal), 0, "_EnergyKCal" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ExternalInterfaceName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_ExternalInterfaceName), 0, "_ExternalInterfaceName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Model" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationExplorerEntryStage_O),_Model), 0, "_Model" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Trajectory_O/899
{ class_kind, STAMPWTAG_chem__Trajectory_O, sizeof(chem::Trajectory_O), 0, IS_POLYMORPHIC, "chem::Trajectory_O" },
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Trajectory_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomList" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::Atom_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::Atom_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Trajectory_O),_AtomList._Vector._Contents), 0, "_AtomList._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Frames" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::TrajectoryFrame_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::TrajectoryFrame_O>" :SPECIALIZER "class chem::TrajectoryFrame_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::TrajectoryFrame_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::TrajectoryFrame_O>" :SPECIALIZER "class chem::TrajectoryFrame_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::TrajectoryFrame_O>" :SPECIALIZER "class chem::TrajectoryFrame_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::TrajectoryFrame_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Trajectory_O),_Frames._Vector._Contents), 0, "_Frames._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Namespace" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Trajectory_O),_Namespace), 0, "_Namespace" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::CalculatePosition_O/903
{ class_kind, STAMPWTAG_chem__CalculatePosition_O, sizeof(chem::CalculatePosition_O), 0, IS_POLYMORPHIC, "chem::CalculatePosition_O" },
// StampWtag = chem::CalculatePositionRelativeToOrigin_O/907
{ class_kind, STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O, sizeof(chem::CalculatePositionRelativeToOrigin_O), 0, IS_POLYMORPHIC, "chem::CalculatePositionRelativeToOrigin_O" },
//      field: "_OriginAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionRelativeToOrigin_O),_OriginAtomName), 0, "_OriginAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ToAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionRelativeToOrigin_O),_ToAtomName), 0, "_ToAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ExtendDistance" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionRelativeToOrigin_O),_ExtendDistance), 0, "_ExtendDistance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::CalculatePositionUsingInternals_O/911
{ class_kind, STAMPWTAG_chem__CalculatePositionUsingInternals_O, sizeof(chem::CalculatePositionUsingInternals_O), 0, IS_POLYMORPHIC, "chem::CalculatePositionUsingInternals_O" },
//      field: "_DistanceAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_DistanceAtomName), 0, "_DistanceAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_AngleAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_AngleAtomName), 0, "_AngleAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_DihedralAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_DihedralAtomName), 0, "_DihedralAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_Distance), 0, "_Distance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AngleDegrees" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_AngleDegrees), 0, "_AngleDegrees" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DihedralDegrees" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionUsingInternals_O),_DihedralDegrees), 0, "_DihedralDegrees" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::CalculatePositionAlongBond_O/915
{ class_kind, STAMPWTAG_chem__CalculatePositionAlongBond_O, sizeof(chem::CalculatePositionAlongBond_O), 0, IS_POLYMORPHIC, "chem::CalculatePositionAlongBond_O" },
//      field: "_FromAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionAlongBond_O),_FromAtomName), 0, "_FromAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ToAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionAlongBond_O),_ToAtomName), 0, "_ToAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ExtendDistance" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CalculatePositionAlongBond_O),_ExtendDistance), 0, "_ExtendDistance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = geom::OMatrix_O/919
{ class_kind, STAMPWTAG_geom__OMatrix_O, sizeof(geom::OMatrix_O), 0, IS_POLYMORPHIC, "geom::OMatrix_O" },
// StampWtag = chem::ConformationCollectionEntry_O/923
{ class_kind, STAMPWTAG_chem__ConformationCollectionEntry_O, sizeof(chem::ConformationCollectionEntry_O), 0, IS_POLYMORPHIC, "chem::ConformationCollectionEntry_O" },
//      field: "_WeakConformationCollection" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollection_O>" :SPECIALIZER "class chem::ConformationCollection_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationCollection_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationCollectionEntry_O),_WeakConformationCollection), 0, "_WeakConformationCollection" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AllCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::SimpleVectorCoordinate_O>" :SPECIALIZER "class geom::SimpleVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationCollectionEntry_O),_AllCoordinates), 0, "_AllCoordinates" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConformationCollectionEntry_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ComplexRestraint_O/927
{ class_kind, STAMPWTAG_chem__ComplexRestraint_O, sizeof(chem::ComplexRestraint_O), 0, IS_POLYMORPHIC, "chem::ComplexRestraint_O" },
// StampWtag = chem::RestrainedExoCyclicAtom_O/931
{ class_kind, STAMPWTAG_chem__RestrainedExoCyclicAtom_O, sizeof(chem::RestrainedExoCyclicAtom_O), 0, IS_POLYMORPHIC, "chem::RestrainedExoCyclicAtom_O" },
//      field: "_ExoCyclicAtomName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestrainedExoCyclicAtom_O),_ExoCyclicAtomName), 0, "_ExoCyclicAtomName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Axial" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestrainedExoCyclicAtom_O),_Axial), 0, "_Axial" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::RestrainedPiBond_O/935
{ class_kind, STAMPWTAG_chem__RestrainedPiBond_O, sizeof(chem::RestrainedPiBond_O), 0, IS_POLYMORPHIC, "chem::RestrainedPiBond_O" },
//      field: "_Configuration" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestrainedPiBond_O),_Configuration), 0, "_Configuration" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_PiAtomX" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestrainedPiBond_O),_PiAtomX), 0, "_PiAtomX" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_PiAtomY" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RestrainedPiBond_O),_PiAtomY), 0, "_PiAtomY" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = mp::Mutex_O/939
{ class_kind, STAMPWTAG_mp__Mutex_O, sizeof(mp::Mutex_O), 0, IS_POLYMORPHIC, "mp::Mutex_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Owner" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Owner), 0, "_Owner" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mp::Mutex>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::Mutex" :NAME "Mutex") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(mp::Mutex), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Mutex_O),_Mutex), 0, "_Mutex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = mp::RecursiveMutex_O/943
{ class_kind, STAMPWTAG_mp__RecursiveMutex_O, sizeof(mp::RecursiveMutex_O), 0, IS_POLYMORPHIC, "mp::RecursiveMutex_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Owner" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Owner), 0, "_Owner" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mp::Mutex>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::Mutex" :NAME "Mutex") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(mp::Mutex), __builtin_offsetof(SAFE_TYPE_MACRO(mp::RecursiveMutex_O),_Mutex), 0, "_Mutex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::CombinedForceField_O/947
{ class_kind, STAMPWTAG_chem__CombinedForceField_O, sizeof(chem::CombinedForceField_O), 0, IS_POLYMORPHIC, "chem::CombinedForceField_O" },
//      field: "_ForceFields" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CombinedForceField_O),_ForceFields), 0, "_ForceFields" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::CDBond_O/951
{ class_kind, STAMPWTAG_chem__CDBond_O, sizeof(chem::CDBond_O), 0, IS_POLYMORPHIC, "chem::CDBond_O" },
//      field: "_IdBegin" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDBond_O),_IdBegin), 0, "_IdBegin" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_IdEnd" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDBond_O),_IdEnd), 0, "_IdEnd" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_BeginNode" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDBond_O),_BeginNode), 0, "_BeginNode" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_EndNode" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::CDBond_O),_EndNode), 0, "_EndNode" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ConstitutionBond_O/955
{ class_kind, STAMPWTAG_chem__ConstitutionBond_O, sizeof(chem::ConstitutionBond_O), 0, IS_POLYMORPHIC, "chem::ConstitutionBond_O" },
//      field: "_ToAtomIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionBond_O),_ToAtomIndex), 0, "_ToAtomIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = kinematics::ChiDihedral_O/959
{ class_kind, STAMPWTAG_kinematics__ChiDihedral_O, sizeof(kinematics::ChiDihedral_O), 0, IS_POLYMORPHIC, "kinematics::ChiDihedral_O" },
//      field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Atom2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),_Atom2), 0, "_Atom2" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Atom3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),_Atom3), 0, "_Atom3" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Atom4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::ChiDihedral_O),_Atom4), 0, "_Atom4" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::ConstitutionAtoms_O/963
{ class_kind, STAMPWTAG_chem__ConstitutionAtoms_O, sizeof(chem::ConstitutionAtoms_O), 0, IS_POLYMORPHIC, "chem::ConstitutionAtoms_O" },
//      field: "_Atoms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::ConstitutionAtom_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtom_O>" :SPECIALIZER "class chem::ConstitutionAtom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::ConstitutionAtom_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtom_O>" :SPECIALIZER "class chem::ConstitutionAtom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtom_O>" :SPECIALIZER "class chem::ConstitutionAtom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::ConstitutionAtom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ConstitutionAtoms_O),_Atoms._Vector._Contents), 0, "_Atoms._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = kinematics::Conformation_O/967
{ class_kind, STAMPWTAG_kinematics__Conformation_O, sizeof(kinematics::Conformation_O), 0, IS_POLYMORPHIC, "kinematics::Conformation_O" },
//      field: "_FoldTree" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::FoldTree_O>" :SPECIALIZER "class kinematics::FoldTree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::FoldTree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Conformation_O),_FoldTree), 0, "_FoldTree" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomTree" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::AtomTree_O>" :SPECIALIZER "class kinematics::AtomTree_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::AtomTree_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::Conformation_O),_AtomTree), 0, "_AtomTree" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::MoleculeGraph_O/971
{ class_kind, STAMPWTAG_chem__MoleculeGraph_O, sizeof(chem::MoleculeGraph_O), 0, IS_POLYMORPHIC, "chem::MoleculeGraph_O" },
//      field: "_nodes_to_index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MoleculeGraph_O),_nodes_to_index), 0, "_nodes_to_index" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_nodes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ComplexVector_T_O>" :SPECIALIZER "class core::ComplexVector_T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ComplexVector_T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MoleculeGraph_O),_nodes), 0, "_nodes" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_moleculeGraph" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "boost::adjacency_list<boost::vecS,boost::vecS,boost::undirectedS,chem::MoleculeVertexData,boost::property<enum boost::edge_weight_t,enum chem::BondOrderEnum,boost::no_property>,boost::no_property,boost::listS>" :NAME "adjacency_list" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::vecS" :NAME "vecS") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::vecS" :NAME "vecS") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 2 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::undirectedS" :NAME "undirectedS") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 3 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::MoleculeVertexData" :NAME "MoleculeVertexData") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 4 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "boost::property<enum boost::edge_weight_t,enum chem::BondOrderEnum,boost::no_property>" :NAME "property" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::ENUM-CTYPE :KEY "enum boost::edge_weight_t") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::ENUM-CTYPE :KEY "enum chem::BondOrderEnum") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 2 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::no_property" :NAME "no_property") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 5 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::no_property" :NAME "no_property") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 6 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::listS" :NAME "listS") :INTEGRAL-VALUE NIL))))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MoleculeGraph_O),_moleculeGraph), 0, "_moleculeGraph" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_num_edges" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MoleculeGraph_O),_num_edges), 0, "_num_edges" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::StructureComparer_O/975
{ class_kind, STAMPWTAG_chem__StructureComparer_O, sizeof(chem::StructureComparer_O), 0, IS_POLYMORPHIC, "chem::StructureComparer_O" },
//      field: "_Matter" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StructureComparer_O),_Matter), 0, "_Matter" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_AllAtoms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StructureComparer_O),_AllAtoms._Contents), 0, "_AllAtoms._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_SuperposeAtoms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StructureComparer_O),_SuperposeAtoms._Contents), 0, "_SuperposeAtoms._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_FixedCoordinates" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<geom::SimpleVectorCoordinate_O>" :SPECIALIZER "class geom::SimpleVectorCoordinate_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<geom::SimpleVectorCoordinate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::StructureComparer_O),_FixedCoordinates), 0, "_FixedCoordinates" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::BoundingBox_O/979
{ class_kind, STAMPWTAG_chem__BoundingBox_O, sizeof(chem::BoundingBox_O), 0, IS_POLYMORPHIC, "chem::BoundingBox_O" },
//      field: "_x_rwidth" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BoundingBox_O),_x_rwidth), 0, "_x_rwidth" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_y_rwidth" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BoundingBox_O),_y_rwidth), 0, "_y_rwidth" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_z_rwidth" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BoundingBox_O),_z_rwidth), 0, "_z_rwidth" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::ChemInfoNode_O/983
{ class_kind, STAMPWTAG_chem__ChemInfoNode_O, sizeof(chem::ChemInfoNode_O), 0, IS_POLYMORPHIC, "chem::ChemInfoNode_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoNode_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemInfoNode_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::BondMatcher_O/987
{ class_kind, STAMPWTAG_chem__BondMatcher_O, sizeof(chem::BondMatcher_O), 0, IS_POLYMORPHIC, "chem::BondMatcher_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondMatcher_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondMatcher_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::BondTest_O/991
{ class_kind, STAMPWTAG_chem__BondTest_O, sizeof(chem::BondTest_O), 0, IS_POLYMORPHIC, "chem::BondTest_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondTest_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondTest_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::BondLogical_O/995
{ class_kind, STAMPWTAG_chem__BondLogical_O, sizeof(chem::BondLogical_O), 0, IS_POLYMORPHIC, "chem::BondLogical_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondLogical_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondLogical_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Left" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondMatcher_O>" :SPECIALIZER "class chem::BondMatcher_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondMatcher_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondLogical_O),_Left), 0, "_Left" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Right" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondMatcher_O>" :SPECIALIZER "class chem::BondMatcher_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondMatcher_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondLogical_O),_Right), 0, "_Right" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::BondMatchNode_O/999
{ class_kind, STAMPWTAG_chem__BondMatchNode_O, sizeof(chem::BondMatchNode_O), 0, IS_POLYMORPHIC, "chem::BondMatchNode_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondMatchNode_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondMatchNode_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::AtomOrBondMatchNode_O/1003
{ class_kind, STAMPWTAG_chem__AtomOrBondMatchNode_O, sizeof(chem::AtomOrBondMatchNode_O), 0, IS_POLYMORPHIC, "chem::AtomOrBondMatchNode_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomOrBondMatchNode_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomOrBondMatchNode_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomOrBondMatchNode_O),_RingId), 0, "_RingId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::Root_O/1007
{ class_kind, STAMPWTAG_chem__Root_O, sizeof(chem::Root_O), 0, IS_POLYMORPHIC, "chem::Root_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Root_O),_RingId), 0, "_RingId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Node" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::ChemInfoNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ChemInfoNode_O" :NAME "ChemInfoNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Node.theObject), 0, "_Node.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Tests" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Tests), 0, "_Tests" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_MaxTag" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Root_O),_MaxTag), 0, "_MaxTag" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Root_O),_Code), 0, "_Code" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::SmartsRoot_O/1011
{ class_kind, STAMPWTAG_chem__SmartsRoot_O, sizeof(chem::SmartsRoot_O), 0, IS_POLYMORPHIC, "chem::SmartsRoot_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_RingId), 0, "_RingId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Node" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::ChemInfoNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ChemInfoNode_O" :NAME "ChemInfoNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Node.theObject), 0, "_Node.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Tests" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Tests), 0, "_Tests" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_MaxTag" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_MaxTag), 0, "_MaxTag" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SmartsRoot_O),_Code), 0, "_Code" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::AntechamberRoot_O/1015
{ class_kind, STAMPWTAG_chem__AntechamberRoot_O, sizeof(chem::AntechamberRoot_O), 0, IS_POLYMORPHIC, "chem::AntechamberRoot_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_RingId), 0, "_RingId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Node" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::ChemInfoNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ChemInfoNode_O" :NAME "ChemInfoNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Node.theObject), 0, "_Node.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Tests" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Tests), 0, "_Tests" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_MaxTag" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_MaxTag), 0, "_MaxTag" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_Code), 0, "_Code" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AfterMatchTests" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::RootMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::RootMatchNode_O>" :SPECIALIZER "class chem::RootMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RootMatchNode_O" :NAME "RootMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_AfterMatchTests.theObject), 0, "_AfterMatchTests.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_WildElementDictionary" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::WildElementDict_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::WildElementDict_O>" :SPECIALIZER "class chem::WildElementDict_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::WildElementDict_O" :NAME "WildElementDict_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberRoot_O),_WildElementDictionary.theObject), 0, "_WildElementDictionary.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::ResidueTest_O/1019
{ class_kind, STAMPWTAG_chem__ResidueTest_O, sizeof(chem::ResidueTest_O), 0, IS_POLYMORPHIC, "chem::ResidueTest_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_RingId), 0, "_RingId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RingTag" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_RingTag), 0, "_RingTag" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomTest" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::AtomOrBondMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomOrBondMatchNode_O>" :SPECIALIZER "class chem::AtomOrBondMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomOrBondMatchNode_O" :NAME "AtomOrBondMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ResidueTest_O),_AtomTest.theObject), 0, "_AtomTest.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::AntechamberFocusAtomMatch_O/1023
{ class_kind, STAMPWTAG_chem__AntechamberFocusAtomMatch_O, sizeof(chem::AntechamberFocusAtomMatch_O), 0, IS_POLYMORPHIC, "chem::AntechamberFocusAtomMatch_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_RingId), 0, "_RingId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ResidueNames" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::ResidueList_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ResidueList_O>" :SPECIALIZER "class chem::ResidueList_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ResidueList_O" :NAME "ResidueList_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_ResidueNames.theObject), 0, "_ResidueNames.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_AtomicNumber" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_AtomicNumber), 0, "_AtomicNumber" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfAttachedAtoms" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_NumberOfAttachedAtoms), 0, "_NumberOfAttachedAtoms" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfAttachedHydrogens" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_NumberOfAttachedHydrogens), 0, "_NumberOfAttachedHydrogens" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfElectronWithdrawingGroups" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_NumberOfElectronWithdrawingGroups), 0, "_NumberOfElectronWithdrawingGroups" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomicProperty" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::AtomOrBondMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomOrBondMatchNode_O>" :SPECIALIZER "class chem::AtomOrBondMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomOrBondMatchNode_O" :NAME "AtomOrBondMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberFocusAtomMatch_O),_AtomicProperty.theObject), 0, "_AtomicProperty.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Logical_O/1027
{ class_kind, STAMPWTAG_chem__Logical_O, sizeof(chem::Logical_O), 0, IS_POLYMORPHIC, "chem::Logical_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_RingId), 0, "_RingId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Left" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::ChemInfoNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ChemInfoNode_O" :NAME "ChemInfoNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_Left.theObject), 0, "_Left.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Right" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::ChemInfoNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ChemInfoNode_O" :NAME "ChemInfoNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Logical_O),_Right.theObject), 0, "_Right.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::AtomTest_O/1031
{ class_kind, STAMPWTAG_chem__AtomTest_O, sizeof(chem::AtomTest_O), 0, IS_POLYMORPHIC, "chem::AtomTest_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RingId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_RingId), 0, "_RingId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_IntArg" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_IntArg), 0, "_IntArg" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumArg" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_NumArg), 0, "_NumArg" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_StringArg" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_StringArg), 0, "_StringArg" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_SymbolArg" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomTest_O),_SymbolArg), 0, "_SymbolArg" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::BondToAtomTest_O/1035
{ class_kind, STAMPWTAG_chem__BondToAtomTest_O, sizeof(chem::BondToAtomTest_O), 0, IS_POLYMORPHIC, "chem::BondToAtomTest_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_BondMatcher" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondMatcher_O>" :SPECIALIZER "class chem::BondMatcher_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondMatcher_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),_BondMatcher), 0, "_BondMatcher" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomTest" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::AtomOrBondMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomOrBondMatchNode_O>" :SPECIALIZER "class chem::AtomOrBondMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomOrBondMatchNode_O" :NAME "AtomOrBondMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondToAtomTest_O),_AtomTest.theObject), 0, "_AtomTest.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::AntechamberBondToAtomTest_O/1039
{ class_kind, STAMPWTAG_chem__AntechamberBondToAtomTest_O, sizeof(chem::AntechamberBondToAtomTest_O), 0, IS_POLYMORPHIC, "chem::AntechamberBondToAtomTest_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Element" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Element), 0, "_Element" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Neighbors" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Neighbors), 0, "_Neighbors" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomProperties" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::AtomOrBondMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomOrBondMatchNode_O>" :SPECIALIZER "class chem::AtomOrBondMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomOrBondMatchNode_O" :NAME "AtomOrBondMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_AtomProperties.theObject), 0, "_AtomProperties.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Tag" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AntechamberBondToAtomTest_O),_Tag), 0, "_Tag" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::BondListMatchNode_O/1043
{ class_kind, STAMPWTAG_chem__BondListMatchNode_O, sizeof(chem::BondListMatchNode_O), 0, IS_POLYMORPHIC, "chem::BondListMatchNode_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondListMatchNode_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BondListMatchNode_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::Chain_O/1047
{ class_kind, STAMPWTAG_chem__Chain_O, sizeof(chem::Chain_O), 0, IS_POLYMORPHIC, "chem::Chain_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Chain_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Chain_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Head" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::BondMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondMatchNode_O>" :SPECIALIZER "class chem::BondMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BondMatchNode_O" :NAME "BondMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Chain_O),_Head.theObject), 0, "_Head.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Tail" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::BondListMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondListMatchNode_O>" :SPECIALIZER "class chem::BondListMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BondListMatchNode_O" :NAME "BondListMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Chain_O),_Tail.theObject), 0, "_Tail.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Branch_O/1051
{ class_kind, STAMPWTAG_chem__Branch_O, sizeof(chem::Branch_O), 0, IS_POLYMORPHIC, "chem::Branch_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Branch_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Branch_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Left" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::BondListMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondListMatchNode_O>" :SPECIALIZER "class chem::BondListMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BondListMatchNode_O" :NAME "BondListMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Branch_O),_Left.theObject), 0, "_Left.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Right" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<chem::BondListMatchNode_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondListMatchNode_O>" :SPECIALIZER "class chem::BondListMatchNode_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BondListMatchNode_O" :NAME "BondListMatchNode_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Branch_O),_Right.theObject), 0, "_Right.theObject" }, // atomic: NIL public: (T T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::RootMatchNode_O/1055
{ class_kind, STAMPWTAG_chem__RootMatchNode_O, sizeof(chem::RootMatchNode_O), 0, IS_POLYMORPHIC, "chem::RootMatchNode_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RootMatchNode_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RootMatchNode_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::AfterMatchBondToAtomTest_O/1059
{ class_kind, STAMPWTAG_chem__AfterMatchBondToAtomTest_O, sizeof(chem::AfterMatchBondToAtomTest_O), 0, IS_POLYMORPHIC, "chem::AfterMatchBondToAtomTest_O" },
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Bounds" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),_Bounds), 0, "_Bounds" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomTag1" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),_AtomTag1), 0, "_AtomTag1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomTag2" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AfterMatchBondToAtomTest_O),_AtomTag2), 0, "_AtomTag2" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ElementsInfo_O/1063
{ class_kind, STAMPWTAG_chem__ElementsInfo_O, sizeof(chem::ElementsInfo_O), 0, IS_POLYMORPHIC, "chem::ElementsInfo_O" },
//      field: "_atomicInfo" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::AtomicInfo>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::AtomicInfo,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::AtomicInfo>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::AtomicInfo>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::AtomicInfo>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::AtomicInfo>>" :SPECIALIZER "class gctools::GCVector_moveable<struct chem::AtomicInfo>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::AtomicInfo>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ElementsInfo_O),_atomicInfo._Vector._Contents), 0, "_atomicInfo._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_elementFromAtomicSymbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ElementsInfo_O),_elementFromAtomicSymbol), 0, "_elementFromAtomicSymbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_hybridizationInfo" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::HybridizationInfo>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::HybridizationInfo" :NAME "HybridizationInfo") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::HybridizationInfo,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::HybridizationInfo>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::HybridizationInfo" :NAME "HybridizationInfo") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::HybridizationInfo>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::HybridizationInfo>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::HybridizationInfo" :NAME "HybridizationInfo") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::HybridizationInfo>>" :SPECIALIZER "class gctools::GCVector_moveable<struct chem::HybridizationInfo>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::HybridizationInfo>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ElementsInfo_O),_hybridizationInfo._Vector._Contents), 0, "_hybridizationInfo._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_atomicNumberToAtomicInfoIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<int,gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<int>>" :SPECIALIZER "class gctools::GCVector_moveable<int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ElementsInfo_O),_atomicNumberToAtomicInfoIndex._Vector._Contents), 0, "_atomicNumberToAtomicInfoIndex._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_atomicMassToAtomicInfoIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<int,gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<int>>" :SPECIALIZER "class gctools::GCVector_moveable<int>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ElementsInfo_O),_atomicMassToAtomicInfoIndex._Vector._Contents), 0, "_atomicMassToAtomicInfoIndex._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Dimacs_O/1067
{ class_kind, STAMPWTAG_chem__Dimacs_O, sizeof(chem::Dimacs_O), 0, IS_POLYMORPHIC, "chem::Dimacs_O" },
//      field: "edges" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::pair<int,int>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_start" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),edges._M_impl._M_start), 0, "edges._M_impl._M_start" }, // atomic: NIL public: (T T T) fixable: NIL good-name: T
//      field: "edges" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::pair<int,int>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_finish" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),edges._M_impl._M_finish), 0, "edges._M_impl._M_finish" }, // atomic: NIL public: (T T T) fixable: NIL good-name: T
//      field: "edges" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::pair<int,int>,std::allocator<std::pair<int,int>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::pair<int,int>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_end_of_storage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),edges._M_impl._M_end_of_storage), 0, "edges._M_impl._M_end_of_storage" }, // atomic: NIL public: (T T T) fixable: NIL good-name: T
//      field: "degrees" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<int,std::allocator<int>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<int>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<int, std::allocator<int>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_start" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int"))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),degrees._M_impl._M_start), 0, "degrees._M_impl._M_start" }, // atomic: NIL public: (T T T) fixable: NIL good-name: T
//      field: "degrees" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<int,std::allocator<int>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<int>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<int, std::allocator<int>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_finish" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int"))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),degrees._M_impl._M_finish), 0, "degrees._M_impl._M_finish" }, // atomic: NIL public: (T T T) fixable: NIL good-name: T
//      field: "degrees" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<int,std::allocator<int>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<int>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<int, std::allocator<int>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_end_of_storage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int"))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),degrees._M_impl._M_end_of_storage), 0, "degrees._M_impl._M_end_of_storage" }, // atomic: NIL public: (T T T) fixable: NIL good-name: T
//      field: "numVertices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),numVertices), 0, "numVertices" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "adjacencyMatrixSizeLimit" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Dimacs_O),adjacencyMatrixSizeLimit), 0, "adjacencyMatrixSizeLimit" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::SpecificContext_O/1071
{ class_kind, STAMPWTAG_chem__SpecificContext_O, sizeof(chem::SpecificContext_O), 0, IS_POLYMORPHIC, "chem::SpecificContext_O" },
//      field: "_SelfName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpecificContext_O),_SelfName), 0, "_SelfName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Neighbors" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<chem::KeyEntry>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::KeyEntry" :NAME "KeyEntry") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<chem::KeyEntry,gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::KeyEntry>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::KeyEntry" :NAME "KeyEntry") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<chem::KeyEntry>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<chem::KeyEntry>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::KeyEntry" :NAME "KeyEntry") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<chem::KeyEntry>>" :SPECIALIZER "class gctools::GCVector_moveable<struct chem::KeyEntry>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<chem::KeyEntry>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::SpecificContext_O),_Neighbors._Vector._Contents), 0, "_Neighbors._Vector._Contents" }, // atomic: NIL public: (NIL T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Minimizer_O/1075
{ class_kind, STAMPWTAG_chem__Minimizer_O, sizeof(chem::Minimizer_O), 0, IS_POLYMORPHIC, "chem::Minimizer_O" },
//      field: "_InitialLineSearchStep" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_InitialLineSearchStep), 0, "_InitialLineSearchStep" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_SteepestDescentTolerance" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_SteepestDescentTolerance), 0, "_SteepestDescentTolerance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfSteepestDescentSteps" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_NumberOfSteepestDescentSteps), 0, "_NumberOfSteepestDescentSteps" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfConjugateGradientSteps" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_NumberOfConjugateGradientSteps), 0, "_NumberOfConjugateGradientSteps" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ConjugateGradientTolerance" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_ConjugateGradientTolerance), 0, "_ConjugateGradientTolerance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_NumberOfTruncatedNewtonSteps" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_NumberOfTruncatedNewtonSteps), 0, "_NumberOfTruncatedNewtonSteps" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_TruncatedNewtonTolerance" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_TruncatedNewtonTolerance), 0, "_TruncatedNewtonTolerance" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_DebugOn" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_DebugOn), 0, "_DebugOn" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Log" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MinimizerLog_O>" :SPECIALIZER "class chem::MinimizerLog_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MinimizerLog_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Log), 0, "_Log" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_MinBracketSteps" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_MinBracketSteps), 0, "_MinBracketSteps" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_PrintIntermediateResults" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_PrintIntermediateResults), 0, "_PrintIntermediateResults" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ReportEveryNSteps" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_ReportEveryNSteps), 0, "_ReportEveryNSteps" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ScoringFunction" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ScoringFunction_O>" :SPECIALIZER "class chem::ScoringFunction_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ScoringFunction_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_ScoringFunction), 0, "_ScoringFunction" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Iteration" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Iteration), 0, "_Iteration" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_StartTime" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::PosixTime_O>" :SPECIALIZER "class core::PosixTime_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::PosixTime_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_StartTime), 0, "_StartTime" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ShowElapsedTime" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_ShowElapsedTime), 0, "_ShowElapsedTime" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_MinGradientMean" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_MinGradientMean), 0, "_MinGradientMean" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_RMSForce" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_RMSForce), 0, "_RMSForce" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "nvP1DSearchTemp1" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),nvP1DSearchTemp1), 0, "nvP1DSearchTemp1" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "nvP1DSearchTemp2" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),nvP1DSearchTemp2), 0, "nvP1DSearchTemp2" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "nvP1DSearchOrigin" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),nvP1DSearchOrigin), 0, "nvP1DSearchOrigin" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "nvP1DSearchDirection" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleVector_double_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),nvP1DSearchDirection), 0, "nvP1DSearchDirection" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Frozen" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Frozen), 0, "_Frozen" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Position" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<core::SimpleVector_double_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SimpleVector_double_O" :NAME "SimpleVector_double_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Position.theObject), 0, "_Position.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_Force" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Nilable<gctools::smart_ptr<core::SimpleVector_double_O>>" :NAME "Nilable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleVector_double_O>" :SPECIALIZER "class core::SimpleVector_double_O") :INTEGRAL-VALUE NIL)))
//      field: ".theObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SimpleVector_double_O" :NAME "SimpleVector_double_O"))
 {  fixed_field, POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_Force.theObject), 0, "_Force.theObject" }, // atomic: NIL public: (NIL T) fixable: RAW-TAGGED-POINTER-FIX good-name: T
//      field: "_StepCallback" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Minimizer_O),_StepCallback), 0, "_StepCallback" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = adapt::SymbolSet_O/1079
{ class_kind, STAMPWTAG_adapt__SymbolSet_O, sizeof(adapt::SymbolSet_O), 0, IS_POLYMORPHIC, "adapt::SymbolSet_O" },
//      field: "_Symbols" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::SymbolSet_O),_Symbols), 0, "_Symbols" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::MapOfMonomerNamesToAtomIndexers_O/1083
{ class_kind, STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O, sizeof(chem::MapOfMonomerNamesToAtomIndexers_O), 0, IS_POLYMORPHIC, "chem::MapOfMonomerNamesToAtomIndexers_O" },
//      field: "_AtomIndexers" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomIndexer_O>" :SPECIALIZER "class chem::AtomIndexer_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<class chem::AtomIndexer_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::MapOfMonomerNamesToAtomIndexers_O),_AtomIndexers._Contents), 0, "_AtomIndexers._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = chem::Alias_O/1087
{ class_kind, STAMPWTAG_chem__Alias_O, sizeof(chem::Alias_O), 0, IS_POLYMORPHIC, "chem::Alias_O" },
//      field: "_MonomerAlias" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Alias_O),_MonomerAlias), 0, "_MonomerAlias" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomAlias" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Alias_O),_AtomAlias), 0, "_AtomAlias" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_MonomerId" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Alias_O),_MonomerId), 0, "_MonomerId" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_AtomId" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::Alias_O),_AtomId), 0, "_AtomId" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = chem::AtomIdToAtomMap_O/1091
{ class_kind, STAMPWTAG_chem__AtomIdToAtomMap_O, sizeof(chem::AtomIdToAtomMap_O), 0, IS_POLYMORPHIC, "chem::AtomIdToAtomMap_O" },
//      field: "_AtomIdMap" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "chem::AtomIdMap<gctools::smart_ptr<chem::Atom_O>>" :NAME "AtomIdMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._DefaultValue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomIdToAtomMap_O),_AtomIdMap._DefaultValue), 0, "_AtomIdMap._DefaultValue" }, // atomic: NIL public: (NIL T) fixable: SMART-PTR-FIX good-name: T
//      field: "_AtomIdMap" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "chem::AtomIdMap<gctools::smart_ptr<chem::Atom_O>>" :NAME "AtomIdMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._MoleculeMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>,std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>>>, std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>>>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_start" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomIdToAtomMap_O),_AtomIdMap._MoleculeMap._M_impl._M_start), 0, "_AtomIdMap._MoleculeMap._M_impl._M_start" }, // atomic: NIL public: (NIL T T T) fixable: NIL good-name: T
//      field: "_AtomIdMap" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "chem::AtomIdMap<gctools::smart_ptr<chem::Atom_O>>" :NAME "AtomIdMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._MoleculeMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>,std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>>>, std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>>>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_finish" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomIdToAtomMap_O),_AtomIdMap._MoleculeMap._M_impl._M_finish), 0, "_AtomIdMap._MoleculeMap._M_impl._M_finish" }, // atomic: NIL public: (NIL T T T) fixable: NIL good-name: T
//      field: "_AtomIdMap" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "chem::AtomIdMap<gctools::smart_ptr<chem::Atom_O>>" :NAME "AtomIdMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//      field: "._MoleculeMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>,std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._M_impl" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "std::_Vector_base<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>>>, std::allocator<std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>>>>>::_Vector_impl" :NAME "_Vector_impl")
//      field: "._M_end_of_storage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>,std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::vector<gctools::smart_ptr<chem::Atom_O>,std::allocator<gctools::smart_ptr<chem::Atom_O>>>" :NAME "vector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::allocator<gctools::smart_ptr<chem::Atom_O>>" :NAME "allocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))))
// {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomIdToAtomMap_O),_AtomIdMap._MoleculeMap._M_impl._M_end_of_storage), 0, "_AtomIdMap._MoleculeMap._M_impl._M_end_of_storage" }, // atomic: NIL public: (NIL T T T) fixable: NIL good-name: T
// StampWtag = mp::Process_O/1095
{ class_kind, STAMPWTAG_mp__Process_O, sizeof(mp::Process_O), 0, IS_POLYMORPHIC, "mp::Process_O" },
//      field: "_UniqueID" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_UniqueID), 0, "_UniqueID" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Function" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Function), 0, "_Function" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Arguments" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Arguments), 0, "_Arguments" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_InitialSpecialBindings" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_InitialSpecialBindings), 0, "_InitialSpecialBindings" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ReturnValuesList" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_ReturnValuesList), 0, "_ReturnValuesList" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Aborted" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Aborted), 0, "_Aborted" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AbortCondition" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_AbortCondition), 0, "_AbortCondition" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ThreadInfo" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::ThreadLocalState" :NAME "ThreadLocalState"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_ThreadInfo), 0, "_ThreadInfo" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Phase" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<mp::ProcessPhase>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::ENUM-CTYPE :KEY "mp::ProcessPhase"))
 {  fixed_field, ATOMIC_POD_OFFSET_mp__ProcessPhase, sizeof(mp::ProcessPhase), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Phase), 0, "_Phase" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SuspensionMutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mp::Mutex>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::Mutex" :NAME "Mutex") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(mp::Mutex), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionMutex), 0, "_SuspensionMutex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SuspensionCV" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mp::ConditionVariable>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mp::ConditionVariable" :NAME "ConditionVariable") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(mp::ConditionVariable), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_SuspensionCV), 0, "_SuspensionCV" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_StackSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_StackSize), 0, "_StackSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Thread" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<unsigned long>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),_Thread), 0, "_Thread" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "thr_o" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mps_thr_s *>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mps_thr_s" :NAME "mps_thr_s")) :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),thr_o), 0, "thr_o" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "root" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<mps_root_s *>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "mps_root_s" :NAME "mps_root_s")) :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(mp::Process_O),root), 0, "root" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::SingleDispatchMethod_O/1099
{ class_kind, STAMPWTAG_core__SingleDispatchMethod_O, sizeof(core::SingleDispatchMethod_O), 0, IS_POLYMORPHIC, "core::SingleDispatchMethod_O" },
//      field: "_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_name), 0, "_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_receiver_class" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_receiver_class), 0, "_receiver_class" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_argument_handler" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::LambdaListHandler_O>" :SPECIALIZER "class core::LambdaListHandler_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LambdaListHandler_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_argument_handler), 0, "_argument_handler" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_declares" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_declares), 0, "_declares" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_docstring" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_docstring), 0, "_docstring" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_function" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Function_O>" :SPECIALIZER "class core::Function_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SingleDispatchMethod_O),_function), 0, "_function" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::Iterator_O/1103
{ templated_kind, STAMPWTAG_core__Iterator_O, sizeof(core::Iterator_O), 0, IS_POLYMORPHIC, "core::Iterator_O" },
// StampWtag = core::DirectoryIterator_O/1107
{ class_kind, STAMPWTAG_core__DirectoryIterator_O, sizeof(core::DirectoryIterator_O), 0, IS_POLYMORPHIC, "core::DirectoryIterator_O" },
//      field: "_Path" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Path_O>" :SPECIALIZER "class core::Path_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Path_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::DirectoryIterator_O),_Path), 0, "_Path" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_CurrentIterator" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<boost::filesystem::directory_iterator *>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::filesystem::directory_iterator" :NAME "directory_iterator")) :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::DirectoryIterator_O),_CurrentIterator), 0, "_CurrentIterator" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EndIterator" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<boost::filesystem::directory_iterator>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::filesystem::directory_iterator" :NAME "directory_iterator") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(boost::filesystem::directory_iterator), __builtin_offsetof(SAFE_TYPE_MACRO(core::DirectoryIterator_O),_EndIterator), 0, "_EndIterator" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::IterateRestraints_O/1111
{ class_kind, STAMPWTAG_chem__IterateRestraints_O, sizeof(chem::IterateRestraints_O), 0, IS_POLYMORPHIC, "chem::IterateRestraints_O" },
//      field: "_Top" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateRestraints_O),_Top), 0, "_Top" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Restraints" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateRestraints_O),_Restraints), 0, "_Restraints" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_CurRestraint" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateRestraints_O),_CurRestraint), 0, "_CurRestraint" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = adapt::IterateCons_O/1115
{ class_kind, STAMPWTAG_adapt__IterateCons_O, sizeof(adapt::IterateCons_O), 0, IS_POLYMORPHIC, "adapt::IterateCons_O" },
//      field: "_Begin" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::IterateCons_O),_Begin), 0, "_Begin" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Cur" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::IterateCons_O),_Cur), 0, "_Cur" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::RecursiveDirectoryIterator_O/1119
{ class_kind, STAMPWTAG_core__RecursiveDirectoryIterator_O, sizeof(core::RecursiveDirectoryIterator_O), 0, IS_POLYMORPHIC, "core::RecursiveDirectoryIterator_O" },
//      field: "_Path" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Path_O>" :SPECIALIZER "class core::Path_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Path_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::RecursiveDirectoryIterator_O),_Path), 0, "_Path" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EnterHidden" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::RecursiveDirectoryIterator_O),_EnterHidden), 0, "_EnterHidden" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_CurrentIterator" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<boost::filesystem::recursive_directory_iterator *>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::filesystem::recursive_directory_iterator" :NAME "recursive_directory_iterator")) :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::RecursiveDirectoryIterator_O),_CurrentIterator), 0, "_CurrentIterator" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EndIterator" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<boost::filesystem::recursive_directory_iterator>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::filesystem::recursive_directory_iterator" :NAME "recursive_directory_iterator") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(boost::filesystem::recursive_directory_iterator), __builtin_offsetof(SAFE_TYPE_MACRO(core::RecursiveDirectoryIterator_O),_EndIterator), 0, "_EndIterator" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::IterateMatter_O/1123
{ class_kind, STAMPWTAG_chem__IterateMatter_O, sizeof(chem::IterateMatter_O), 0, IS_POLYMORPHIC, "chem::IterateMatter_O" },
//      field: "_Top" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Top), 0, "_Top" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Goal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Goal), 0, "_Goal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".goal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.goal), 0, "_Loop.goal" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".initialized" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.initialized), 0, "_Loop.initialized" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".done" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.done), 0, "_Loop.done" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".top" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.top), 0, "_Loop.top" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".currentObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.currentObject), 0, "_Loop.currentObject" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".curSubLoop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.curSubLoop), 0, "_Loop.curSubLoop" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[0]), 0, "_Loop.subLoopTop[0]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[1]), 0, "_Loop.subLoopTop[1]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[2]), 0, "_Loop.subLoopTop[2]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[3]), 0, "_Loop.subLoopTop[3]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopTop[4]), 0, "_Loop.subLoopTop[4]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[0]._Vec), 0, "_Loop.subLoopIteratorCur[0]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[0]._Index), 0, "_Loop.subLoopIteratorCur[0]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[1]._Vec), 0, "_Loop.subLoopIteratorCur[1]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[1]._Index), 0, "_Loop.subLoopIteratorCur[1]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[2]._Vec), 0, "_Loop.subLoopIteratorCur[2]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[2]._Index), 0, "_Loop.subLoopIteratorCur[2]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[3]._Vec), 0, "_Loop.subLoopIteratorCur[3]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[3]._Index), 0, "_Loop.subLoopIteratorCur[3]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[4]._Vec), 0, "_Loop.subLoopIteratorCur[4]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorCur[4]._Index), 0, "_Loop.subLoopIteratorCur[4]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[0]._Vec), 0, "_Loop.subLoopIteratorEnd[0]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[0]._Index), 0, "_Loop.subLoopIteratorEnd[0]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[1]._Vec), 0, "_Loop.subLoopIteratorEnd[1]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[1]._Index), 0, "_Loop.subLoopIteratorEnd[1]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[2]._Vec), 0, "_Loop.subLoopIteratorEnd[2]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[2]._Index), 0, "_Loop.subLoopIteratorEnd[2]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[3]._Vec), 0, "_Loop.subLoopIteratorEnd[3]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[3]._Index), 0, "_Loop.subLoopIteratorEnd[3]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[4]._Vec), 0, "_Loop.subLoopIteratorEnd[4]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.subLoopIteratorEnd[4]._Index), 0, "_Loop.subLoopIteratorEnd[4]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iIndex0), 0, "_Loop.iIndex0" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iIndex1), 0, "_Loop.iIndex1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iIndex2), 0, "_Loop.iIndex2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iIndex3), 0, "_Loop.iIndex3" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.atoms[0]), 0, "_Loop.atoms[0]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.atoms[1]), 0, "_Loop.atoms[1]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.atoms[2]), 0, "_Loop.atoms[2]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.atoms[3]), 0, "_Loop.atoms[3]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._Bond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop._Bond), 0, "_Loop._Bond" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aCurSpan" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.aCurSpan), 0, "_Loop.aCurSpan" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aLastSpan" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.aLastSpan), 0, "_Loop.aLastSpan" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iSeenId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iSeenId), 0, "_Loop.iSeenId" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iMaxDistanceFromRoot" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iMaxDistanceFromRoot), 0, "_Loop.iMaxDistanceFromRoot" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iInvisibleCollisions" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iInvisibleCollisions), 0, "_Loop.iInvisibleCollisions" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aLastCollision" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.aLastCollision), 0, "_Loop.aLastCollision" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aInvisibleAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.aInvisibleAtom), 0, "_Loop.aInvisibleAtom" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibilityFlags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.fVisibilityFlags), 0, "_Loop.fVisibilityFlags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibleFlagsOn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.fVisibleFlagsOn), 0, "_Loop.fVisibleFlagsOn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibleFlagsOff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.fVisibleFlagsOff), 0, "_Loop.fVisibleFlagsOff" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iTempInt" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop.iTempInt), 0, "_Loop.iTempInt" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._Impropers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::BondList_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::BondList_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::BondList_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop._Impropers._Vector._Contents), 0, "_Loop._Impropers._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._ImproperIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_Loop._ImproperIndex), 0, "_Loop._ImproperIndex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IsDone" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateMatter_O),_IsDone), 0, "_IsDone" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::IterateResidues_O/1127
{ class_kind, STAMPWTAG_chem__IterateResidues_O, sizeof(chem::IterateResidues_O), 0, IS_POLYMORPHIC, "chem::IterateResidues_O" },
//      field: "_Top" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Top), 0, "_Top" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Goal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Goal), 0, "_Goal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".goal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.goal), 0, "_Loop.goal" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".initialized" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.initialized), 0, "_Loop.initialized" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".done" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.done), 0, "_Loop.done" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".top" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.top), 0, "_Loop.top" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".currentObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.currentObject), 0, "_Loop.currentObject" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".curSubLoop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.curSubLoop), 0, "_Loop.curSubLoop" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[0]), 0, "_Loop.subLoopTop[0]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[1]), 0, "_Loop.subLoopTop[1]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[2]), 0, "_Loop.subLoopTop[2]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[3]), 0, "_Loop.subLoopTop[3]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopTop[4]), 0, "_Loop.subLoopTop[4]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[0]._Vec), 0, "_Loop.subLoopIteratorCur[0]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[0]._Index), 0, "_Loop.subLoopIteratorCur[0]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[1]._Vec), 0, "_Loop.subLoopIteratorCur[1]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[1]._Index), 0, "_Loop.subLoopIteratorCur[1]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[2]._Vec), 0, "_Loop.subLoopIteratorCur[2]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[2]._Index), 0, "_Loop.subLoopIteratorCur[2]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[3]._Vec), 0, "_Loop.subLoopIteratorCur[3]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[3]._Index), 0, "_Loop.subLoopIteratorCur[3]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[4]._Vec), 0, "_Loop.subLoopIteratorCur[4]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorCur[4]._Index), 0, "_Loop.subLoopIteratorCur[4]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[0]._Vec), 0, "_Loop.subLoopIteratorEnd[0]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[0]._Index), 0, "_Loop.subLoopIteratorEnd[0]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[1]._Vec), 0, "_Loop.subLoopIteratorEnd[1]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[1]._Index), 0, "_Loop.subLoopIteratorEnd[1]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[2]._Vec), 0, "_Loop.subLoopIteratorEnd[2]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[2]._Index), 0, "_Loop.subLoopIteratorEnd[2]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[3]._Vec), 0, "_Loop.subLoopIteratorEnd[3]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[3]._Index), 0, "_Loop.subLoopIteratorEnd[3]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[4]._Vec), 0, "_Loop.subLoopIteratorEnd[4]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.subLoopIteratorEnd[4]._Index), 0, "_Loop.subLoopIteratorEnd[4]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iIndex0), 0, "_Loop.iIndex0" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iIndex1), 0, "_Loop.iIndex1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iIndex2), 0, "_Loop.iIndex2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iIndex3), 0, "_Loop.iIndex3" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.atoms[0]), 0, "_Loop.atoms[0]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.atoms[1]), 0, "_Loop.atoms[1]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.atoms[2]), 0, "_Loop.atoms[2]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.atoms[3]), 0, "_Loop.atoms[3]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._Bond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop._Bond), 0, "_Loop._Bond" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aCurSpan" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.aCurSpan), 0, "_Loop.aCurSpan" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aLastSpan" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.aLastSpan), 0, "_Loop.aLastSpan" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iSeenId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iSeenId), 0, "_Loop.iSeenId" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iMaxDistanceFromRoot" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iMaxDistanceFromRoot), 0, "_Loop.iMaxDistanceFromRoot" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iInvisibleCollisions" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iInvisibleCollisions), 0, "_Loop.iInvisibleCollisions" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aLastCollision" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.aLastCollision), 0, "_Loop.aLastCollision" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aInvisibleAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.aInvisibleAtom), 0, "_Loop.aInvisibleAtom" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibilityFlags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.fVisibilityFlags), 0, "_Loop.fVisibilityFlags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibleFlagsOn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.fVisibleFlagsOn), 0, "_Loop.fVisibleFlagsOn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibleFlagsOff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.fVisibleFlagsOff), 0, "_Loop.fVisibleFlagsOff" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iTempInt" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop.iTempInt), 0, "_Loop.iTempInt" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._Impropers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::BondList_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::BondList_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::BondList_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop._Impropers._Vector._Contents), 0, "_Loop._Impropers._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._ImproperIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_Loop._ImproperIndex), 0, "_Loop._ImproperIndex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IsDone" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateResidues_O),_IsDone), 0, "_IsDone" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::IterateBonds_O/1131
{ class_kind, STAMPWTAG_chem__IterateBonds_O, sizeof(chem::IterateBonds_O), 0, IS_POLYMORPHIC, "chem::IterateBonds_O" },
//      field: "_Top" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Top), 0, "_Top" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Goal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Goal), 0, "_Goal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".goal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.goal), 0, "_Loop.goal" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".initialized" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.initialized), 0, "_Loop.initialized" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".done" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.done), 0, "_Loop.done" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".top" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.top), 0, "_Loop.top" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".currentObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.currentObject), 0, "_Loop.currentObject" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".curSubLoop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.curSubLoop), 0, "_Loop.curSubLoop" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[0]), 0, "_Loop.subLoopTop[0]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[1]), 0, "_Loop.subLoopTop[1]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[2]), 0, "_Loop.subLoopTop[2]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[3]), 0, "_Loop.subLoopTop[3]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopTop[4]), 0, "_Loop.subLoopTop[4]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[0]._Vec), 0, "_Loop.subLoopIteratorCur[0]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[0]._Index), 0, "_Loop.subLoopIteratorCur[0]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[1]._Vec), 0, "_Loop.subLoopIteratorCur[1]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[1]._Index), 0, "_Loop.subLoopIteratorCur[1]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[2]._Vec), 0, "_Loop.subLoopIteratorCur[2]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[2]._Index), 0, "_Loop.subLoopIteratorCur[2]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[3]._Vec), 0, "_Loop.subLoopIteratorCur[3]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[3]._Index), 0, "_Loop.subLoopIteratorCur[3]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[4]._Vec), 0, "_Loop.subLoopIteratorCur[4]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorCur[4]._Index), 0, "_Loop.subLoopIteratorCur[4]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[0]._Vec), 0, "_Loop.subLoopIteratorEnd[0]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[0]._Index), 0, "_Loop.subLoopIteratorEnd[0]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[1]._Vec), 0, "_Loop.subLoopIteratorEnd[1]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[1]._Index), 0, "_Loop.subLoopIteratorEnd[1]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[2]._Vec), 0, "_Loop.subLoopIteratorEnd[2]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[2]._Index), 0, "_Loop.subLoopIteratorEnd[2]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[3]._Vec), 0, "_Loop.subLoopIteratorEnd[3]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[3]._Index), 0, "_Loop.subLoopIteratorEnd[3]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[4]._Vec), 0, "_Loop.subLoopIteratorEnd[4]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.subLoopIteratorEnd[4]._Index), 0, "_Loop.subLoopIteratorEnd[4]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iIndex0), 0, "_Loop.iIndex0" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iIndex1), 0, "_Loop.iIndex1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iIndex2), 0, "_Loop.iIndex2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iIndex3), 0, "_Loop.iIndex3" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.atoms[0]), 0, "_Loop.atoms[0]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.atoms[1]), 0, "_Loop.atoms[1]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.atoms[2]), 0, "_Loop.atoms[2]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.atoms[3]), 0, "_Loop.atoms[3]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._Bond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop._Bond), 0, "_Loop._Bond" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aCurSpan" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.aCurSpan), 0, "_Loop.aCurSpan" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aLastSpan" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.aLastSpan), 0, "_Loop.aLastSpan" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iSeenId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iSeenId), 0, "_Loop.iSeenId" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iMaxDistanceFromRoot" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iMaxDistanceFromRoot), 0, "_Loop.iMaxDistanceFromRoot" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iInvisibleCollisions" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iInvisibleCollisions), 0, "_Loop.iInvisibleCollisions" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aLastCollision" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.aLastCollision), 0, "_Loop.aLastCollision" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aInvisibleAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.aInvisibleAtom), 0, "_Loop.aInvisibleAtom" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibilityFlags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.fVisibilityFlags), 0, "_Loop.fVisibilityFlags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibleFlagsOn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.fVisibleFlagsOn), 0, "_Loop.fVisibleFlagsOn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibleFlagsOff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.fVisibleFlagsOff), 0, "_Loop.fVisibleFlagsOff" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iTempInt" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop.iTempInt), 0, "_Loop.iTempInt" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._Impropers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::BondList_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::BondList_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::BondList_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop._Impropers._Vector._Contents), 0, "_Loop._Impropers._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._ImproperIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_Loop._ImproperIndex), 0, "_Loop._ImproperIndex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IsDone" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateBonds_O),_IsDone), 0, "_IsDone" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = chem::IterateAtoms_O/1135
{ class_kind, STAMPWTAG_chem__IterateAtoms_O, sizeof(chem::IterateAtoms_O), 0, IS_POLYMORPHIC, "chem::IterateAtoms_O" },
//      field: "_Top" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Top), 0, "_Top" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Goal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Goal), 0, "_Goal" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".goal" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.goal), 0, "_Loop.goal" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".initialized" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.initialized), 0, "_Loop.initialized" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".done" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.done), 0, "_Loop.done" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".top" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.top), 0, "_Loop.top" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".currentObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.currentObject), 0, "_Loop.currentObject" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".curSubLoop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.curSubLoop), 0, "_Loop.curSubLoop" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[0]), 0, "_Loop.subLoopTop[0]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[1]), 0, "_Loop.subLoopTop[1]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[2]), 0, "_Loop.subLoopTop[2]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[3]), 0, "_Loop.subLoopTop[3]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopTop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O"))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopTop[4]), 0, "_Loop.subLoopTop[4]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[0]._Vec), 0, "_Loop.subLoopIteratorCur[0]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[0]._Index), 0, "_Loop.subLoopIteratorCur[0]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[1]._Vec), 0, "_Loop.subLoopIteratorCur[1]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[1]._Index), 0, "_Loop.subLoopIteratorCur[1]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[2]._Vec), 0, "_Loop.subLoopIteratorCur[2]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[2]._Index), 0, "_Loop.subLoopIteratorCur[2]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[3]._Vec), 0, "_Loop.subLoopIteratorCur[3]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[3]._Index), 0, "_Loop.subLoopIteratorCur[3]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[4]._Vec), 0, "_Loop.subLoopIteratorCur[4]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorCur" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorCur[4]._Index), 0, "_Loop.subLoopIteratorCur[4]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[0]._Vec), 0, "_Loop.subLoopIteratorEnd[0]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[0]._Index), 0, "_Loop.subLoopIteratorEnd[0]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[1]._Vec), 0, "_Loop.subLoopIteratorEnd[1]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[1]._Index), 0, "_Loop.subLoopIteratorEnd[1]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[2]._Vec), 0, "_Loop.subLoopIteratorEnd[2]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[2]._Index), 0, "_Loop.subLoopIteratorEnd[2]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[3]._Vec), 0, "_Loop.subLoopIteratorEnd[3]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[3]._Index), 0, "_Loop.subLoopIteratorEnd[3]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vec" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Matter_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[4]._Vec), 0, "_Loop.subLoopIteratorEnd[4]._Vec" }, // atomic: NIL public: (T T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".subLoopIteratorEnd" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 5 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL))))
//      field: "[4]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>::GCVector_moveable_iterator<gctools::smart_ptr<chem::Matter_O>>" :NAME "GCVector_moveable_iterator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :INTEGRAL-VALUE NIL)))
//      field: "._Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.subLoopIteratorEnd[4]._Index), 0, "_Loop.subLoopIteratorEnd[4]._Index" }, // atomic: NIL public: (T T NIL T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iIndex0), 0, "_Loop.iIndex0" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iIndex1), 0, "_Loop.iIndex1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iIndex2), 0, "_Loop.iIndex2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iIndex3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iIndex3), 0, "_Loop.iIndex3" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[0]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.atoms[0]), 0, "_Loop.atoms[0]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[1]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.atoms[1]), 0, "_Loop.atoms[1]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[2]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.atoms[2]), 0, "_Loop.atoms[2]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".atoms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 4 :ELEMENT-TYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O"))
//      field: "[3]" (instance-field-access iv) -> NIL   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.atoms[3]), 0, "_Loop.atoms[3]" }, // atomic: NIL public: (T T NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._Bond" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop._Bond), 0, "_Loop._Bond" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aCurSpan" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.aCurSpan), 0, "_Loop.aCurSpan" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aLastSpan" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.aLastSpan), 0, "_Loop.aLastSpan" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iSeenId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iSeenId), 0, "_Loop.iSeenId" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iMaxDistanceFromRoot" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iMaxDistanceFromRoot), 0, "_Loop.iMaxDistanceFromRoot" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iInvisibleCollisions" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iInvisibleCollisions), 0, "_Loop.iInvisibleCollisions" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aLastCollision" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.aLastCollision), 0, "_Loop.aLastCollision" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".aInvisibleAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.aInvisibleAtom), 0, "_Loop.aInvisibleAtom" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibilityFlags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.fVisibilityFlags), 0, "_Loop.fVisibilityFlags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibleFlagsOn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.fVisibleFlagsOn), 0, "_Loop.fVisibleFlagsOn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".fVisibleFlagsOff" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.fVisibleFlagsOff), 0, "_Loop.fVisibleFlagsOff" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: ".iTempInt" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop.iTempInt), 0, "_Loop.iTempInt" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._Impropers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<chem::BondList_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<chem::BondList_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::BondList_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop._Impropers._Vector._Contents), 0, "_Loop._Impropers._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Loop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::Loop" :NAME "Loop")
//      field: "._ImproperIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_Loop._ImproperIndex), 0, "_Loop._ImproperIndex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IsDone" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::IterateAtoms_O),_IsDone), 0, "_IsDone" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::Symbol_O/1139
{ class_kind, STAMPWTAG_core__Symbol_O, sizeof(core::Symbol_O), 0, IS_POLYMORPHIC, "core::Symbol_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleString_O>" :SPECIALIZER "class core::SimpleString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_HomePackage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_HomePackage), 0, "_HomePackage" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_GlobalValue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_GlobalValue), 0, "_GlobalValue" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Function" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::Function_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Function_O>" :SPECIALIZER "class core::Function_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_Function), 0, "_Function" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SetfFunction" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::Function_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Function_O>" :SPECIALIZER "class core::Function_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_SetfFunction), 0, "_SetfFunction" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_BindingIdx" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<unsigned int>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int"))
 {  fixed_field, ATOMIC_POD_OFFSET_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_BindingIdx), 0, "_BindingIdx" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<unsigned int>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int"))
 {  fixed_field, ATOMIC_POD_OFFSET_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PropertyList" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Symbol_O),_PropertyList), 0, "_PropertyList" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::Null_O/1143
{ class_kind, STAMPWTAG_core__Null_O, sizeof(core::Null_O), 0, IS_POLYMORPHIC, "core::Null_O" },
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleString_O>" :SPECIALIZER "class core::SimpleString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Null_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_HomePackage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Null_O),_HomePackage), 0, "_HomePackage" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_GlobalValue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Null_O),_GlobalValue), 0, "_GlobalValue" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Function" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::Function_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Function_O>" :SPECIALIZER "class core::Function_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Null_O),_Function), 0, "_Function" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SetfFunction" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::Function_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Function_O>" :SPECIALIZER "class core::Function_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Null_O),_SetfFunction), 0, "_SetfFunction" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_BindingIdx" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<unsigned int>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int"))
 {  fixed_field, ATOMIC_POD_OFFSET_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Null_O),_BindingIdx), 0, "_BindingIdx" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<unsigned int>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int"))
 {  fixed_field, ATOMIC_POD_OFFSET_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Null_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PropertyList" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Null_O),_PropertyList), 0, "_PropertyList" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::SharpEqualWrapper_O/1147
{ class_kind, STAMPWTAG_core__SharpEqualWrapper_O, sizeof(core::SharpEqualWrapper_O), 0, IS_POLYMORPHIC, "core::SharpEqualWrapper_O" },
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SharpEqualWrapper_O),_Value), 0, "_Value" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Label" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SharpEqualWrapper_O),_Label), 0, "_Label" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::ClaspJIT_O/1151
{ class_kind, STAMPWTAG_llvmo__ClaspJIT_O, sizeof(llvmo::ClaspJIT_O), 0, IS_POLYMORPHIC, "llvmo::ClaspJIT_O" },
//      field: "_MainJITDylib" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<llvmo::JITDylib_O>" :SPECIALIZER "class llvmo::JITDylib_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<llvmo::JITDylib_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_MainJITDylib), 0, "_MainJITDylib" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_TPC" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::UNIQUE-PTR-CTYPE :KEY "std::unique_ptr<llvm::orc::TargetProcessControl,std::default_delete<llvm::orc::TargetProcessControl>>" :NAME "unique_ptr" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::orc::TargetProcessControl" :NAME "TargetProcessControl") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::default_delete<llvm::orc::TargetProcessControl>" :NAME "default_delete" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::orc::TargetProcessControl" :NAME "TargetProcessControl") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::unique_ptr<llvm::orc::TargetProcessControl,std::default_delete<llvm::orc::TargetProcessControl>>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_TPC), 0, "_TPC" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LLJIT" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::UNIQUE-PTR-CTYPE :KEY "std::unique_ptr<llvm::orc::LLJIT,std::default_delete<llvm::orc::LLJIT>>" :NAME "unique_ptr" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::orc::LLJIT" :NAME "LLJIT") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::default_delete<llvm::orc::LLJIT>" :NAME "default_delete" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::orc::LLJIT" :NAME "LLJIT") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::unique_ptr<llvm::orc::LLJIT,std::default_delete<llvm::orc::LLJIT>>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),_LLJIT), 0, "_LLJIT" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "LinkLayer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::orc::RTDyldObjectLinkingLayer" :NAME "RTDyldObjectLinkingLayer"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ClaspJIT_O),LinkLayer), 0, "LinkLayer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::Exposer_O/1155
{ class_kind, STAMPWTAG_core__Exposer_O, sizeof(core::Exposer_O), 0, IS_POLYMORPHIC, "core::Exposer_O" },
//      field: "_Package" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Exposer_O),_Package), 0, "_Package" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Exposer_O),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = units::UnitsExposer_O/1159
{ class_kind, STAMPWTAG_units__UnitsExposer_O, sizeof(units::UnitsExposer_O), 0, IS_POLYMORPHIC, "units::UnitsExposer_O" },
//      field: "_Package" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(units::UnitsExposer_O),_Package), 0, "_Package" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(units::UnitsExposer_O),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::CoreExposer_O/1163
{ class_kind, STAMPWTAG_core__CoreExposer_O, sizeof(core::CoreExposer_O), 0, IS_POLYMORPHIC, "core::CoreExposer_O" },
//      field: "_Package" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::CoreExposer_O),_Package), 0, "_Package" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::CoreExposer_O),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = geom::GeomExposer_O/1167
{ class_kind, STAMPWTAG_geom__GeomExposer_O, sizeof(geom::GeomExposer_O), 0, IS_POLYMORPHIC, "geom::GeomExposer_O" },
//      field: "_Package" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(geom::GeomExposer_O),_Package), 0, "_Package" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(geom::GeomExposer_O),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = adapt::AdaptExposer_O/1171
{ class_kind, STAMPWTAG_adapt__AdaptExposer_O, sizeof(adapt::AdaptExposer_O), 0, IS_POLYMORPHIC, "adapt::AdaptExposer_O" },
//      field: "_Package" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::AdaptExposer_O),_Package), 0, "_Package" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(adapt::AdaptExposer_O),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = kinematics::KinematicsExposer_O/1175
{ class_kind, STAMPWTAG_kinematics__KinematicsExposer_O, sizeof(kinematics::KinematicsExposer_O), 0, IS_POLYMORPHIC, "kinematics::KinematicsExposer_O" },
//      field: "_Package" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::KinematicsExposer_O),_Package), 0, "_Package" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(kinematics::KinematicsExposer_O),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = chem::ChemExposer_O/1179
{ class_kind, STAMPWTAG_chem__ChemExposer_O, sizeof(chem::ChemExposer_O), 0, IS_POLYMORPHIC, "chem::ChemExposer_O" },
//      field: "_Package" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemExposer_O),_Package), 0, "_Package" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ChemExposer_O),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = asttooling::AsttoolingExposer_O/1183
{ class_kind, STAMPWTAG_asttooling__AsttoolingExposer_O, sizeof(asttooling::AsttoolingExposer_O), 0, IS_POLYMORPHIC, "asttooling::AsttoolingExposer_O" },
//      field: "_Package" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(asttooling::AsttoolingExposer_O),_Package), 0, "_Package" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(asttooling::AsttoolingExposer_O),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::PosixTimeDuration_O/1187
{ class_kind, STAMPWTAG_core__PosixTimeDuration_O, sizeof(core::PosixTimeDuration_O), 0, IS_POLYMORPHIC, "core::PosixTimeDuration_O" },
//      field: "_Duration" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<boost::posix_time::time_duration>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::posix_time::time_duration" :NAME "time_duration") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(boost::posix_time::time_duration), __builtin_offsetof(SAFE_TYPE_MACRO(core::PosixTimeDuration_O),_Duration), 0, "_Duration" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = clasp_ffi::ForeignTypeSpec_O/1191
{ class_kind, STAMPWTAG_clasp_ffi__ForeignTypeSpec_O, sizeof(clasp_ffi::ForeignTypeSpec_O), 0, IS_POLYMORPHIC, "clasp_ffi::ForeignTypeSpec_O" },
//      field: "m_lisp_symbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_lisp_symbol), 0, "m_lisp_symbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_lisp_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_lisp_name), 0, "m_lisp_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_size" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Integer_O>" :SPECIALIZER "class core::Integer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_size), 0, "m_size" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_alignment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Fixnum_I>" :SPECIALIZER "class core::Fixnum_I")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Fixnum_I>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_alignment), 0, "m_alignment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_cxx_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_cxx_name), 0, "m_cxx_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_llvm_type_symbol_fn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Function_O>" :SPECIALIZER "class core::Function_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_llvm_type_symbol_fn), 0, "m_llvm_type_symbol_fn" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_to_object_fn_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_to_object_fn_name), 0, "m_to_object_fn_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_from_object_fn_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_from_object_fn_name), 0, "m_from_object_fn_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_to_object_fn_ptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clasp_ffi::ForeignData_O>" :SPECIALIZER "class clasp_ffi::ForeignData_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<clasp_ffi::ForeignData_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_to_object_fn_ptr), 0, "m_to_object_fn_ptr" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_from_object_fn_ptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clasp_ffi::ForeignData_O>" :SPECIALIZER "class clasp_ffi::ForeignData_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<clasp_ffi::ForeignData_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clasp_ffi::ForeignTypeSpec_O),m_from_object_fn_ptr), 0, "m_from_object_fn_ptr" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::SmallMap_O/1195
{ class_kind, STAMPWTAG_core__SmallMap_O, sizeof(core::SmallMap_O), 0, IS_POLYMORPHIC, "core::SmallMap_O" },
//      field: "map" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMap<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>" :NAME "SmallMap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SmallMap_O),map._Contents), 0, "map._Contents" }, // atomic: NIL public: (NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = core::Instance_O/1197
{ class_kind, STAMPWTAG_core__Instance_O, sizeof(core::Instance_O), 0, IS_POLYMORPHIC, "core::Instance_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Instance_O),_Class), 0, "_Class" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Rack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Rack_O>" :SPECIALIZER "class core::Rack_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Rack_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Instance_O),_Rack), 0, "_Rack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = clbind::ClassRep_O/1201
{ class_kind, STAMPWTAG_clbind__ClassRep_O, sizeof(clbind::ClassRep_O), 0, IS_POLYMORPHIC, "clbind::ClassRep_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),_Class), 0, "_Class" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Rack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Rack_O>" :SPECIALIZER "class core::Rack_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Rack_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),_Rack), 0, "_Rack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<clbind::type_id>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "clbind::type_id" :NAME "type_id") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(clbind::type_id), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_type), 0, "m_type" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "m_bases" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Cons_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Cons_O>" :SPECIALIZER "class core::Cons_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Cons_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Cons_O>" :SPECIALIZER "class core::Cons_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Cons_O>" :SPECIALIZER "class core::Cons_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::Cons_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_bases._Vector._Contents), 0, "m_bases._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "m_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_name), 0, "m_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "m_casts" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<clbind::detail::cast_graph *>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "clbind::detail::cast_graph" :NAME "cast_graph")) :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_casts), 0, "m_casts" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "m_classes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<clbind::detail::class_id_map *>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "clbind::detail::class_id_map" :NAME "class_id_map")) :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_classes), 0, "m_classes" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "m_derivable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRep_O),m_derivable), 0, "m_derivable" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::DerivableCxxObject_O/1204
{ class_kind, STAMPWTAG_core__DerivableCxxObject_O, sizeof(core::DerivableCxxObject_O), 0, IS_POLYMORPHIC, "core::DerivableCxxObject_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::DerivableCxxObject_O),_Class), 0, "_Class" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Rack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Rack_O>" :SPECIALIZER "class core::Rack_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Rack_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::DerivableCxxObject_O),_Rack), 0, "_Rack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = mpip::Mpi_O/1211
{ class_kind, STAMPWTAG_mpip__Mpi_O, sizeof(mpip::Mpi_O), 0, IS_POLYMORPHIC, "mpip::Mpi_O" },
//      field: "_LastReturnCode" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(mpip::Mpi_O),_LastReturnCode), 0, "_LastReturnCode" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Source" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(mpip::Mpi_O),_Source), 0, "_Source" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Tag" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(mpip::Mpi_O),_Tag), 0, "_Tag" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Sigset_O/1215
{ class_kind, STAMPWTAG_core__Sigset_O, sizeof(core::Sigset_O), 0, IS_POLYMORPHIC, "core::Sigset_O" },
//      field: "_sigset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "(anonymous)" :NAME "")
//      field: ".quot" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
// {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Sigset_O),_sigset.quot), 0, "_sigset.quot" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_sigset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "(anonymous)" :NAME "")
//      field: ".rem" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
// {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Sigset_O),_sigset.rem), 0, "_sigset.rem" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = core::Environment_O/1219
{ class_kind, STAMPWTAG_core__Environment_O, sizeof(core::Environment_O), 0, IS_POLYMORPHIC, "core::Environment_O" },
// StampWtag = core::GlueEnvironment_O/1223
{ class_kind, STAMPWTAG_core__GlueEnvironment_O, sizeof(core::GlueEnvironment_O), 0, IS_POLYMORPHIC, "core::GlueEnvironment_O" },
//      field: "_Map" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::GlueEnvironment_O),_Map), 0, "_Map" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Args" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::GlueEnvironment_O),_Args), 0, "_Args" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::LexicalEnvironment_O/1227
{ class_kind, STAMPWTAG_core__LexicalEnvironment_O, sizeof(core::LexicalEnvironment_O), 0, IS_POLYMORPHIC, "core::LexicalEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LexicalEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LexicalEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::CompileTimeEnvironment_O/1231
{ class_kind, STAMPWTAG_core__CompileTimeEnvironment_O, sizeof(core::CompileTimeEnvironment_O), 0, IS_POLYMORPHIC, "core::CompileTimeEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::CompileTimeEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::CompileTimeEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::CatchEnvironment_O/1235
{ class_kind, STAMPWTAG_core__CatchEnvironment_O, sizeof(core::CatchEnvironment_O), 0, IS_POLYMORPHIC, "core::CatchEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::CatchEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::CatchEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::SymbolMacroletEnvironment_O/1239
{ class_kind, STAMPWTAG_core__SymbolMacroletEnvironment_O, sizeof(core::SymbolMacroletEnvironment_O), 0, IS_POLYMORPHIC, "core::SymbolMacroletEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolMacroletEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolMacroletEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Macros" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolMacroletEnvironment_O),_Macros), 0, "_Macros" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::FunctionContainerEnvironment_O/1243
{ class_kind, STAMPWTAG_core__FunctionContainerEnvironment_O, sizeof(core::FunctionContainerEnvironment_O), 0, IS_POLYMORPHIC, "core::FunctionContainerEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Closure" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),_Closure), 0, "_Closure" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Function" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionContainerEnvironment_O),_Function), 0, "_Function" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::UnwindProtectEnvironment_O/1247
{ class_kind, STAMPWTAG_core__UnwindProtectEnvironment_O, sizeof(core::UnwindProtectEnvironment_O), 0, IS_POLYMORPHIC, "core::UnwindProtectEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::UnwindProtectEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::UnwindProtectEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_CleanupForm" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::UnwindProtectEnvironment_O),_CleanupForm), 0, "_CleanupForm" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::MacroletEnvironment_O/1251
{ class_kind, STAMPWTAG_core__MacroletEnvironment_O, sizeof(core::MacroletEnvironment_O), 0, IS_POLYMORPHIC, "core::MacroletEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MacroletEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MacroletEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Macros" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MacroletEnvironment_O),_Macros), 0, "_Macros" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::RuntimeVisibleEnvironment_O/1255
{ class_kind, STAMPWTAG_core__RuntimeVisibleEnvironment_O, sizeof(core::RuntimeVisibleEnvironment_O), 0, IS_POLYMORPHIC, "core::RuntimeVisibleEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RuntimeEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),_RuntimeEnvironment), 0, "_RuntimeEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Invisible" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::RuntimeVisibleEnvironment_O),_Invisible), 0, "_Invisible" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::TagbodyEnvironment_O/1259
{ class_kind, STAMPWTAG_core__TagbodyEnvironment_O, sizeof(core::TagbodyEnvironment_O), 0, IS_POLYMORPHIC, "core::TagbodyEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RuntimeEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_RuntimeEnvironment), 0, "_RuntimeEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Invisible" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_Invisible), 0, "_Invisible" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Tags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_Tags), 0, "_Tags" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_TagCode" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::List_V>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::List_V>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::List_V> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_TagCode._Vector._Contents), 0, "_TagCode._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_ActivationFrame" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ActivationFrame_O>" :SPECIALIZER "class core::ActivationFrame_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ActivationFrame_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_ActivationFrame), 0, "_ActivationFrame" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_LocalBlocks" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TagbodyEnvironment_O),_LocalBlocks), 0, "_LocalBlocks" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::BlockEnvironment_O/1263
{ class_kind, STAMPWTAG_core__BlockEnvironment_O, sizeof(core::BlockEnvironment_O), 0, IS_POLYMORPHIC, "core::BlockEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RuntimeEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_RuntimeEnvironment), 0, "_RuntimeEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Invisible" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_Invisible), 0, "_Invisible" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_BlockSymbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_BlockSymbol), 0, "_BlockSymbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ActivationFrame" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ValueFrame_O>" :SPECIALIZER "class core::ValueFrame_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ValueFrame_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_ActivationFrame), 0, "_ActivationFrame" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_LocalReturnBlock" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_LocalReturnBlock), 0, "_LocalReturnBlock" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_LocalReturnValue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BlockEnvironment_O),_LocalReturnValue), 0, "_LocalReturnValue" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::FunctionValueEnvironment_O/1267
{ class_kind, STAMPWTAG_core__FunctionValueEnvironment_O, sizeof(core::FunctionValueEnvironment_O), 0, IS_POLYMORPHIC, "core::FunctionValueEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RuntimeEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_RuntimeEnvironment), 0, "_RuntimeEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Invisible" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_Invisible), 0, "_Invisible" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FunctionIndices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_FunctionIndices), 0, "_FunctionIndices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_FunctionFrame" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FunctionFrame_O>" :SPECIALIZER "class core::FunctionFrame_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FunctionFrame_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionValueEnvironment_O),_FunctionFrame), 0, "_FunctionFrame" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::ValueEnvironment_O/1271
{ class_kind, STAMPWTAG_core__ValueEnvironment_O, sizeof(core::ValueEnvironment_O), 0, IS_POLYMORPHIC, "core::ValueEnvironment_O" },
//      field: "_ParentEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_ParentEnvironment), 0, "_ParentEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Metadata" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_Metadata), 0, "_Metadata" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RuntimeEnvironment" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_RuntimeEnvironment), 0, "_RuntimeEnvironment" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Invisible" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_Invisible), 0, "_Invisible" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_SymbolIndex_alist" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_SymbolIndex_alist), 0, "_SymbolIndex_alist" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ActivationFrame" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ValueFrame_O>" :SPECIALIZER "class core::ValueFrame_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ValueFrame_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueEnvironment_O),_ActivationFrame), 0, "_ActivationFrame" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::ActivationFrame_O/1275
{ class_kind, STAMPWTAG_core__ActivationFrame_O, sizeof(core::ActivationFrame_O), 0, IS_POLYMORPHIC, "core::ActivationFrame_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ActivationFrame_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::ValueFrame_O/1279
{ class_kind, STAMPWTAG_core__ValueFrame_O, sizeof(core::ValueFrame_O), 0, IS_POLYMORPHIC, "core::ValueFrame_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueFrame_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueFrame_O),_Objects._Data), 0, "_Objects._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueFrame_O),_Objects._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ValueFrame_O),_Objects._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::T_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, 0, "only" },
// StampWtag = core::FunctionFrame_O/1283
{ class_kind, STAMPWTAG_core__FunctionFrame_O, sizeof(core::FunctionFrame_O), 0, IS_POLYMORPHIC, "core::FunctionFrame_O" },
//      field: "_Parent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionFrame_O),_Parent), 0, "_Parent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionFrame_O),_Objects._Data), 0, "_Objects._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionFrame_O),_Objects._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionFrame_O),_Objects._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::T_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, 0, "only" },
// StampWtag = core::RandomState_O/1287
{ class_kind, STAMPWTAG_core__RandomState_O, sizeof(core::RandomState_O), 0, IS_POLYMORPHIC, "core::RandomState_O" },
//      field: "_Producer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<std::mersenne_twister_engine<unsigned long,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::mersenne_twister_engine<unsigned long,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>" :NAME "mersenne_twister_engine" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE NIL :INTEGRAL-VALUE "32") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 2 :CTYPE NIL :INTEGRAL-VALUE "624") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 3 :CTYPE NIL :INTEGRAL-VALUE "397") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 4 :CTYPE NIL :INTEGRAL-VALUE "31") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 5 :CTYPE NIL :INTEGRAL-VALUE "2567483615") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 6 :CTYPE NIL :INTEGRAL-VALUE "11") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 7 :CTYPE NIL :INTEGRAL-VALUE "4294967295") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 8 :CTYPE NIL :INTEGRAL-VALUE "7") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 9 :CTYPE NIL :INTEGRAL-VALUE "2636928640") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 10 :CTYPE NIL :INTEGRAL-VALUE "15") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 11 :CTYPE NIL :INTEGRAL-VALUE "4022730752") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 12 :CTYPE NIL :INTEGRAL-VALUE "18") #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 13 :CTYPE NIL :INTEGRAL-VALUE "1812433253"))) :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(std::mersenne_twister_engine<unsigned long,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>), __builtin_offsetof(SAFE_TYPE_MACRO(core::RandomState_O),_Producer), 0, "_Producer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::EntryPointBase_O/1291
{ class_kind, STAMPWTAG_core__EntryPointBase_O, sizeof(core::EntryPointBase_O), 0, IS_POLYMORPHIC, "core::EntryPointBase_O" },
//      field: "_FunctionDescription" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FunctionDescription_O>" :SPECIALIZER "class core::FunctionDescription_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FunctionDescription_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::EntryPointBase_O),_FunctionDescription), 0, "_FunctionDescription" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::GlobalEntryPointGenerator_O/1295
{ class_kind, STAMPWTAG_core__GlobalEntryPointGenerator_O, sizeof(core::GlobalEntryPointGenerator_O), 0, IS_POLYMORPHIC, "core::GlobalEntryPointGenerator_O" },
//      field: "_FunctionDescription" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FunctionDescription_O>" :SPECIALIZER "class core::FunctionDescription_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FunctionDescription_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::GlobalEntryPointGenerator_O),_FunctionDescription), 0, "_FunctionDescription" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_entry_point_indices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::GlobalEntryPointGenerator_O),_entry_point_indices), 0, "_entry_point_indices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::LocalEntryPointGenerator_O/1299
{ class_kind, STAMPWTAG_core__LocalEntryPointGenerator_O, sizeof(core::LocalEntryPointGenerator_O), 0, IS_POLYMORPHIC, "core::LocalEntryPointGenerator_O" },
//      field: "_FunctionDescription" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FunctionDescription_O>" :SPECIALIZER "class core::FunctionDescription_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FunctionDescription_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LocalEntryPointGenerator_O),_FunctionDescription), 0, "_FunctionDescription" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_entry_point_indices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LocalEntryPointGenerator_O),_entry_point_indices), 0, "_entry_point_indices" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::CodeEntryPoint_O/1303
{ class_kind, STAMPWTAG_core__CodeEntryPoint_O, sizeof(core::CodeEntryPoint_O), 0, IS_POLYMORPHIC, "core::CodeEntryPoint_O" },
//      field: "_FunctionDescription" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FunctionDescription_O>" :SPECIALIZER "class core::FunctionDescription_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FunctionDescription_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::CodeEntryPoint_O),_FunctionDescription), 0, "_FunctionDescription" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<llvmo::CodeBase_O>" :SPECIALIZER "class llvmo::CodeBase_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<llvmo::CodeBase_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::CodeEntryPoint_O),_Code), 0, "_Code" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::LocalEntryPoint_O/1307
{ class_kind, STAMPWTAG_core__LocalEntryPoint_O, sizeof(core::LocalEntryPoint_O), 0, IS_POLYMORPHIC, "core::LocalEntryPoint_O" },
//      field: "_FunctionDescription" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FunctionDescription_O>" :SPECIALIZER "class core::FunctionDescription_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FunctionDescription_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LocalEntryPoint_O),_FunctionDescription), 0, "_FunctionDescription" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<llvmo::CodeBase_O>" :SPECIALIZER "class llvmo::CodeBase_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<llvmo::CodeBase_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LocalEntryPoint_O),_Code), 0, "_Code" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::LocalEntryPoint_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::GlobalEntryPoint_O/1311
{ class_kind, STAMPWTAG_core__GlobalEntryPoint_O, sizeof(core::GlobalEntryPoint_O), 0, IS_POLYMORPHIC, "core::GlobalEntryPoint_O" },
//      field: "_FunctionDescription" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FunctionDescription_O>" :SPECIALIZER "class core::FunctionDescription_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FunctionDescription_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::GlobalEntryPoint_O),_FunctionDescription), 0, "_FunctionDescription" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Code" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<llvmo::CodeBase_O>" :SPECIALIZER "class llvmo::CodeBase_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<llvmo::CodeBase_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::GlobalEntryPoint_O),_Code), 0, "_Code" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::HashTableBase_O/1315
{ class_kind, STAMPWTAG_core__HashTableBase_O, sizeof(core::HashTableBase_O), 0, IS_POLYMORPHIC, "core::HashTableBase_O" },
// StampWtag = core::HashTable_O/1319
{ class_kind, STAMPWTAG_core__HashTable_O, sizeof(core::HashTable_O), 0, IS_POLYMORPHIC, "core::HashTable_O" },
//      field: "_RehashSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Number_O>" :SPECIALIZER "class core::Number_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_RehashSize), 0, "_RehashSize" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RehashThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_RehashThreshold), 0, "_RehashThreshold" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Table" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::KeyValuePair>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::KeyValuePair,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::KeyValuePair>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>" :SPECIALIZER "class gctools::GCVector_moveable<struct core::KeyValuePair>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_Table._Vector._Contents), 0, "_Table._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_HashTableCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_HashTableCount), 0, "_HashTableCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<mp::SharedMutex_O>" :SPECIALIZER "class mp::SharedMutex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTable_O),_Mutex), 0, "_Mutex" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::HashTableEqualp_O/1323
{ class_kind, STAMPWTAG_core__HashTableEqualp_O, sizeof(core::HashTableEqualp_O), 0, IS_POLYMORPHIC, "core::HashTableEqualp_O" },
//      field: "_RehashSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Number_O>" :SPECIALIZER "class core::Number_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_RehashSize), 0, "_RehashSize" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RehashThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_RehashThreshold), 0, "_RehashThreshold" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Table" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::KeyValuePair>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::KeyValuePair,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::KeyValuePair>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>" :SPECIALIZER "class gctools::GCVector_moveable<struct core::KeyValuePair>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_Table._Vector._Contents), 0, "_Table._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_HashTableCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_HashTableCount), 0, "_HashTableCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<mp::SharedMutex_O>" :SPECIALIZER "class mp::SharedMutex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqualp_O),_Mutex), 0, "_Mutex" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::HashTableEq_O/1327
{ class_kind, STAMPWTAG_core__HashTableEq_O, sizeof(core::HashTableEq_O), 0, IS_POLYMORPHIC, "core::HashTableEq_O" },
//      field: "_RehashSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Number_O>" :SPECIALIZER "class core::Number_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_RehashSize), 0, "_RehashSize" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RehashThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_RehashThreshold), 0, "_RehashThreshold" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Table" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::KeyValuePair>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::KeyValuePair,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::KeyValuePair>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>" :SPECIALIZER "class gctools::GCVector_moveable<struct core::KeyValuePair>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_Table._Vector._Contents), 0, "_Table._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_HashTableCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_HashTableCount), 0, "_HashTableCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<mp::SharedMutex_O>" :SPECIALIZER "class mp::SharedMutex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEq_O),_Mutex), 0, "_Mutex" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::HashTableEqual_O/1331
{ class_kind, STAMPWTAG_core__HashTableEqual_O, sizeof(core::HashTableEqual_O), 0, IS_POLYMORPHIC, "core::HashTableEqual_O" },
//      field: "_RehashSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Number_O>" :SPECIALIZER "class core::Number_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_RehashSize), 0, "_RehashSize" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RehashThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_RehashThreshold), 0, "_RehashThreshold" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Table" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::KeyValuePair>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::KeyValuePair,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::KeyValuePair>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>" :SPECIALIZER "class gctools::GCVector_moveable<struct core::KeyValuePair>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_Table._Vector._Contents), 0, "_Table._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_HashTableCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_HashTableCount), 0, "_HashTableCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<mp::SharedMutex_O>" :SPECIALIZER "class mp::SharedMutex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEqual_O),_Mutex), 0, "_Mutex" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::HashTableCustom_O/1335
{ class_kind, STAMPWTAG_core__HashTableCustom_O, sizeof(core::HashTableCustom_O), 0, IS_POLYMORPHIC, "core::HashTableCustom_O" },
//      field: "_RehashSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Number_O>" :SPECIALIZER "class core::Number_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableCustom_O),_RehashSize), 0, "_RehashSize" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RehashThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableCustom_O),_RehashThreshold), 0, "_RehashThreshold" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Table" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::KeyValuePair>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::KeyValuePair,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::KeyValuePair>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>" :SPECIALIZER "class gctools::GCVector_moveable<struct core::KeyValuePair>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableCustom_O),_Table._Vector._Contents), 0, "_Table._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_HashTableCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableCustom_O),_HashTableCount), 0, "_HashTableCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<mp::SharedMutex_O>" :SPECIALIZER "class mp::SharedMutex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableCustom_O),_Mutex), 0, "_Mutex" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "comparator" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Function_O>" :SPECIALIZER "class core::Function_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableCustom_O),comparator), 0, "comparator" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "hasher" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Function_O>" :SPECIALIZER "class core::Function_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Function_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableCustom_O),hasher), 0, "hasher" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::HashTableEql_O/1339
{ class_kind, STAMPWTAG_core__HashTableEql_O, sizeof(core::HashTableEql_O), 0, IS_POLYMORPHIC, "core::HashTableEql_O" },
//      field: "_RehashSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Number_O>" :SPECIALIZER "class core::Number_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_RehashSize), 0, "_RehashSize" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_RehashThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_RehashThreshold), 0, "_RehashThreshold" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Table" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::KeyValuePair>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::KeyValuePair,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::KeyValuePair>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::KeyValuePair>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>" :SPECIALIZER "class gctools::GCVector_moveable<struct core::KeyValuePair>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::KeyValuePair>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_Table._Vector._Contents), 0, "_Table._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_HashTableCount" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_HashTableCount), 0, "_HashTableCount" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<mp::SharedMutex_O>" :SPECIALIZER "class mp::SharedMutex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::HashTableEql_O),_Mutex), 0, "_Mutex" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::WeakKeyHashTable_O/1343
{ class_kind, STAMPWTAG_core__WeakKeyHashTable_O, sizeof(core::WeakKeyHashTable_O), 0, IS_POLYMORPHIC, "core::WeakKeyHashTable_O" },
//      field: "_HashTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "gctools::WeakKeyHashTable" :NAME "WeakKeyHashTable")
//      field: "._RehashSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Number_O>" :SPECIALIZER "class core::Number_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Number_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._RehashSize), 0, "_HashTable._RehashSize" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_HashTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "gctools::WeakKeyHashTable" :NAME "WeakKeyHashTable")
//      field: "._RehashThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._RehashThreshold), 0, "_HashTable._RehashThreshold" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_HashTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "gctools::WeakKeyHashTable" :NAME "WeakKeyHashTable")
//      field: "._Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._Length), 0, "_HashTable._Length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_HashTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "gctools::WeakKeyHashTable" :NAME "WeakKeyHashTable")
//      field: "._Keys" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::Buckets<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>,gctools::WeakLinks>>" :SPECIALIZER "struct gctools::Buckets<class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, struct gctools::WeakLinks>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::Buckets<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>,gctools::WeakLinks>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._Keys), 0, "_HashTable._Keys" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_HashTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "gctools::WeakKeyHashTable" :NAME "WeakKeyHashTable")
//      field: "._Values" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::Buckets<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>,gctools::StrongLinks>>" :SPECIALIZER "struct gctools::Buckets<class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, struct gctools::StrongLinks>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::Buckets<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>,gctools::StrongLinks>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._Values), 0, "_HashTable._Values" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_HashTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "gctools::WeakKeyHashTable" :NAME "WeakKeyHashTable")
//      field: "._Mutex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<mp::SharedMutex_O>" :SPECIALIZER "class mp::SharedMutex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mp::SharedMutex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::WeakKeyHashTable_O),_HashTable._Mutex), 0, "_HashTable._Mutex" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::FunctionDescription_O/1347
{ class_kind, STAMPWTAG_core__FunctionDescription_O, sizeof(core::FunctionDescription_O), 0, IS_POLYMORPHIC, "core::FunctionDescription_O" },
//      field: "_sourcePathname" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionDescription_O),_sourcePathname), 0, "_sourcePathname" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_functionName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionDescription_O),_functionName), 0, "_functionName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_lambdaList" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionDescription_O),_lambdaList), 0, "_lambdaList" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_docstring" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionDescription_O),_docstring), 0, "_docstring" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_declares" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionDescription_O),_declares), 0, "_declares" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "lineno" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionDescription_O),lineno), 0, "lineno" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionDescription_O),column), 0, "column" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "filepos" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FunctionDescription_O),filepos), 0, "filepos" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = llvmo::InsertPoint_O/1351
{ class_kind, STAMPWTAG_llvmo__InsertPoint_O, sizeof(llvmo::InsertPoint_O), 0, IS_POLYMORPHIC, "llvmo::InsertPoint_O" },
//      field: "_InsertPoint" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<llvm::IRBuilderBase::InsertPoint>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::IRBuilderBase::InsertPoint" :NAME "InsertPoint") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(llvm::IRBuilderBase::InsertPoint), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::InsertPoint_O),_InsertPoint), 0, "_InsertPoint" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Number_O/1355
{ class_kind, STAMPWTAG_core__Number_O, sizeof(core::Number_O), 0, IS_POLYMORPHIC, "core::Number_O" },
// StampWtag = core::Real_O/1359
{ class_kind, STAMPWTAG_core__Real_O, sizeof(core::Real_O), 0, IS_POLYMORPHIC, "core::Real_O" },
// StampWtag = core::Rational_O/1363
{ class_kind, STAMPWTAG_core__Rational_O, sizeof(core::Rational_O), 0, IS_POLYMORPHIC, "core::Rational_O" },
// StampWtag = core::Ratio_O/1367
{ class_kind, STAMPWTAG_core__Ratio_O, sizeof(core::Ratio_O), 0, IS_POLYMORPHIC, "core::Ratio_O" },
//      field: "_numerator" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Integer_O>" :SPECIALIZER "class core::Integer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Ratio_O),_numerator), 0, "_numerator" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_denominator" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Integer_O>" :SPECIALIZER "class core::Integer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Ratio_O),_denominator), 0, "_denominator" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::Integer_O/1371
{ class_kind, STAMPWTAG_core__Integer_O, sizeof(core::Integer_O), 0, IS_POLYMORPHIC, "core::Integer_O" },
// StampWtag = core::Bignum_O/1375
{ class_kind, STAMPWTAG_core__Bignum_O, sizeof(core::Bignum_O), 0, IS_POLYMORPHIC, "core::Bignum_O" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::Bignum_O),_limbs._Data), 0, "_limbs._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Bignum_O),_limbs._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::Bignum_O),_limbs._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::Fixnum_dummy_O/1379
{ class_kind, STAMPWTAG_core__Fixnum_dummy_O, sizeof(core::Fixnum_dummy_O), 0, IS_POLYMORPHIC, "core::Fixnum_dummy_O" },
// StampWtag = core::Float_O/1383
{ class_kind, STAMPWTAG_core__Float_O, sizeof(core::Float_O), 0, IS_POLYMORPHIC, "core::Float_O" },
// StampWtag = core::DoubleFloat_O/1387
{ class_kind, STAMPWTAG_core__DoubleFloat_O, sizeof(core::DoubleFloat_O), 0, IS_POLYMORPHIC, "core::DoubleFloat_O" },
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
 {  fixed_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::DoubleFloat_O),_Value), 0, "_Value" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::SingleFloat_dummy_O/1391
{ class_kind, STAMPWTAG_core__SingleFloat_dummy_O, sizeof(core::SingleFloat_dummy_O), 0, IS_POLYMORPHIC, "core::SingleFloat_dummy_O" },
// StampWtag = core::LongFloat_O/1395
{ class_kind, STAMPWTAG_core__LongFloat_O, sizeof(core::LongFloat_O), 0, IS_POLYMORPHIC, "core::LongFloat_O" },
// StampWtag = core::ShortFloat_O/1399
{ class_kind, STAMPWTAG_core__ShortFloat_O, sizeof(core::ShortFloat_O), 0, IS_POLYMORPHIC, "core::ShortFloat_O" },
//      field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
 {  fixed_field, ctype_float, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(core::ShortFloat_O),_Value), 0, "_Value" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Complex_O/1403
{ class_kind, STAMPWTAG_core__Complex_O, sizeof(core::Complex_O), 0, IS_POLYMORPHIC, "core::Complex_O" },
//      field: "_real" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Real_O>" :SPECIALIZER "class core::Real_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Real_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Complex_O),_real), 0, "_real" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_imaginary" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Real_O>" :SPECIALIZER "class core::Real_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Real_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Complex_O),_imaginary), 0, "_imaginary" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::SourcePosInfo_O/1407
{ class_kind, STAMPWTAG_core__SourcePosInfo_O, sizeof(core::SourcePosInfo_O), 0, IS_POLYMORPHIC, "core::SourcePosInfo_O" },
//      field: "_FileId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_FileId), 0, "_FileId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Filepos" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_Filepos), 0, "_Filepos" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Lineno" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_Lineno), 0, "_Lineno" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_Column), 0, "_Column" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FunctionScope" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_FunctionScope), 0, "_FunctionScope" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_InlinedAt" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SourcePosInfo_O),_InlinedAt), 0, "_InlinedAt" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::Record_O/1411
{ class_kind, STAMPWTAG_core__Record_O, sizeof(core::Record_O), 0, IS_POLYMORPHIC, "core::Record_O" },
//      field: "_alist" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Record_O),_alist), 0, "_alist" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_patching_callback" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Record_O),_patching_callback), 0, "_patching_callback" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Seen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Record_O),_Seen), 0, "_Seen" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::Frame_O/1415
{ class_kind, STAMPWTAG_core__Frame_O, sizeof(core::Frame_O), 0, IS_POLYMORPHIC, "core::Frame_O" },
//      field: "stype" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),stype), 0, "stype" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "return_address" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),return_address), 0, "return_address" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "raw_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),raw_name), 0, "raw_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "function_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),function_name), 0, "function_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "base_pointer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),base_pointer), 0, "base_pointer" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "frame_offset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),frame_offset), 0, "frame_offset" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "frame_size" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),frame_size), 0, "frame_size" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "function_start_address" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),function_start_address), 0, "function_start_address" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "function_end_address" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),function_end_address), 0, "function_end_address" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "function_description" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),function_description), 0, "function_description" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "arguments" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),arguments), 0, "arguments" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "closure" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),closure), 0, "closure" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "up" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),up), 0, "up" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "down" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Frame_O),down), 0, "down" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = clbind::ClassRegistry_O/1419
{ class_kind, STAMPWTAG_clbind__ClassRegistry_O, sizeof(clbind::ClassRegistry_O), 0, IS_POLYMORPHIC, "clbind::ClassRegistry_O" },
//      field: "m_classes" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEql_O>" :SPECIALIZER "class core::HashTableEql_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ClassRegistry_O),m_classes), 0, "m_classes" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::ClassHolder_O/1423
{ class_kind, STAMPWTAG_core__ClassHolder_O, sizeof(core::ClassHolder_O), 0, IS_POLYMORPHIC, "core::ClassHolder_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::Instance_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ClassHolder_O),_Class), 0, "_Class" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::WrappedPointer_O/1426
{ templated_kind, STAMPWTAG_core__WrappedPointer_O, sizeof(core::WrappedPointer_O), 0, IS_POLYMORPHIC, "core::WrappedPointer_O" },
//      field: "ShiftedStamp_" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::WrappedPointer_O),ShiftedStamp_), 0, "ShiftedStamp_" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "Class_" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::WrappedPointer_O),Class_), 0, "Class_" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::SymbolToEnumConverter_O/1431
{ class_kind, STAMPWTAG_core__SymbolToEnumConverter_O, sizeof(core::SymbolToEnumConverter_O), 0, IS_POLYMORPHIC, "core::SymbolToEnumConverter_O" },
//      field: "_WhatTheEnumsRepresent" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleString_O>" :SPECIALIZER "class core::SimpleString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_WhatTheEnumsRepresent), 0, "_WhatTheEnumsRepresent" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EnumToSymbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEql_O>" :SPECIALIZER "class core::HashTableEql_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_EnumToSymbol), 0, "_EnumToSymbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ArchiveSymbolToEnum" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_ArchiveSymbolToEnum), 0, "_ArchiveSymbolToEnum" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EnumToArchiveSymbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEql_O>" :SPECIALIZER "class core::HashTableEql_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEql_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_EnumToArchiveSymbol), 0, "_EnumToArchiveSymbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_SymbolToEnum" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolToEnumConverter_O),_SymbolToEnum), 0, "_SymbolToEnum" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::Attribute_O/1435
{ class_kind, STAMPWTAG_llvmo__Attribute_O, sizeof(llvmo::Attribute_O), 0, IS_POLYMORPHIC, "llvmo::Attribute_O" },
//      field: "_Attribute" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<llvm::Attribute>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Attribute" :NAME "Attribute") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(llvm::Attribute), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Attribute_O),_Attribute), 0, "_Attribute" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::ImmobileObject_O/1439
{ class_kind, STAMPWTAG_core__ImmobileObject_O, sizeof(core::ImmobileObject_O), 0, IS_POLYMORPHIC, "core::ImmobileObject_O" },
//      field: "_Head" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ImmobileObject_O),_Head), 0, "_Head" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Tail" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ImmobileObject_O),_Tail), 0, "_Tail" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::Function_O/1443
{ class_kind, STAMPWTAG_core__Function_O, sizeof(core::Function_O), 0, IS_POLYMORPHIC, "core::Function_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Function_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::FuncallableInstance_O/1445
{ class_kind, STAMPWTAG_core__FuncallableInstance_O, sizeof(core::FuncallableInstance_O), 0, IS_POLYMORPHIC, "core::FuncallableInstance_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Rack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Rack_O>" :SPECIALIZER "class core::Rack_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Rack_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_Rack), 0, "_Rack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_Class), 0, "_Class" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_InterpretedCalls" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<unsigned long>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, ATOMIC_POD_OFFSET_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_InterpretedCalls), 0, "_InterpretedCalls" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_CompiledDispatchFunction" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FuncallableInstance_O),_CompiledDispatchFunction), 0, "_CompiledDispatchFunction" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::Creator_O/1451
{ templated_kind, STAMPWTAG_core__Creator_O, sizeof(core::Creator_O), 0, IS_POLYMORPHIC, "core::Creator_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Creator_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::FuncallableInstanceCreator_O/1455
{ class_kind, STAMPWTAG_core__FuncallableInstanceCreator_O, sizeof(core::FuncallableInstanceCreator_O), 0, IS_POLYMORPHIC, "core::FuncallableInstanceCreator_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FuncallableInstanceCreator_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_class" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FuncallableInstanceCreator_O),_class), 0, "_class" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = clbind::ConstructorCreator_O/1459
{ templated_kind, STAMPWTAG_clbind__ConstructorCreator_O, sizeof(clbind::ConstructorCreator_O), 0, IS_POLYMORPHIC, "clbind::ConstructorCreator_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ConstructorCreator_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_mostDerivedClassSymbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::ConstructorCreator_O),_mostDerivedClassSymbol), 0, "_mostDerivedClassSymbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = clbind::DummyCreator_O/1463
{ class_kind, STAMPWTAG_clbind__DummyCreator_O, sizeof(clbind::DummyCreator_O), 0, IS_POLYMORPHIC, "clbind::DummyCreator_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::DummyCreator_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(clbind::DummyCreator_O),_name), 0, "_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::InstanceCreator_O/1467
{ class_kind, STAMPWTAG_core__InstanceCreator_O, sizeof(core::InstanceCreator_O), 0, IS_POLYMORPHIC, "core::InstanceCreator_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::InstanceCreator_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_class" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::InstanceCreator_O),_class), 0, "_class" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::ClassRepCreator_O/1471
{ class_kind, STAMPWTAG_core__ClassRepCreator_O, sizeof(core::ClassRepCreator_O), 0, IS_POLYMORPHIC, "core::ClassRepCreator_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ClassRepCreator_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::DerivableCxxClassCreator_O/1475
{ class_kind, STAMPWTAG_core__DerivableCxxClassCreator_O, sizeof(core::DerivableCxxClassCreator_O), 0, IS_POLYMORPHIC, "core::DerivableCxxClassCreator_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::DerivableCxxClassCreator_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::StandardClassCreator_O/1479
{ class_kind, STAMPWTAG_core__StandardClassCreator_O, sizeof(core::StandardClassCreator_O), 0, IS_POLYMORPHIC, "core::StandardClassCreator_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StandardClassCreator_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::SpecialForm_O/1483
{ class_kind, STAMPWTAG_core__SpecialForm_O, sizeof(core::SpecialForm_O), 0, IS_POLYMORPHIC, "core::SpecialForm_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SpecialForm_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_fptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::multiple_values<class core::T_O> (class gctools::smart_ptr<core::List_V>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SpecialForm_O),_fptr), 0, "_fptr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::Closure_O/1487
{ templated_kind, STAMPWTAG_core__Closure_O, sizeof(core::Closure_O), 0, IS_POLYMORPHIC, "core::Closure_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Closure_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::BuiltinClosure_O/1491
{ templated_kind, STAMPWTAG_core__BuiltinClosure_O, sizeof(core::BuiltinClosure_O), 0, IS_POLYMORPHIC, "core::BuiltinClosure_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BuiltinClosure_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_lambdaListHandler" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::LambdaListHandler_O>" :SPECIALIZER "class core::LambdaListHandler_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LambdaListHandler_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BuiltinClosure_O),_lambdaListHandler), 0, "_lambdaListHandler" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::TranslationFunctor_O/1495
{ class_kind, STAMPWTAG_core__TranslationFunctor_O, sizeof(core::TranslationFunctor_O), 0, IS_POLYMORPHIC, "core::TranslationFunctor_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TranslationFunctor_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_lambdaListHandler" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::LambdaListHandler_O>" :SPECIALIZER "class core::LambdaListHandler_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LambdaListHandler_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TranslationFunctor_O),_lambdaListHandler), 0, "_lambdaListHandler" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "fptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "core::T_O *(class core::T_O *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TranslationFunctor_O),fptr), 0, "fptr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::ClosureWithSlots_O/1499
{ class_kind, STAMPWTAG_core__ClosureWithSlots_O, sizeof(core::ClosureWithSlots_O), 0, IS_POLYMORPHIC, "core::ClosureWithSlots_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),_Slots._Data), 0, "_Slots._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),_Slots._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ClosureWithSlots_O),_Slots._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::T_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, 0, "only" },
// StampWtag = core::SingleDispatchGenericFunctionClosure_O/1503
{ class_kind, STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O, sizeof(core::SingleDispatchGenericFunctionClosure_O), 0, IS_POLYMORPHIC, "core::SingleDispatchGenericFunctionClosure_O" },
//      field: "_EntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::GlobalEntryPoint_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SingleDispatchGenericFunctionClosure_O),_EntryPoint), 0, "_EntryPoint" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::WeakPointer_O/1507
{ class_kind, STAMPWTAG_core__WeakPointer_O, sizeof(core::WeakPointer_O), 0, IS_POLYMORPHIC, "core::WeakPointer_O" },
//      field: "_WeakObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "gctools::WeakPointerManager" :NAME "WeakPointerManager")
//      field: ".pointer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::WeakPointer>" :SPECIALIZER "struct gctools::WeakPointer")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::WeakPointer>), __builtin_offsetof(SAFE_TYPE_MACRO(core::WeakPointer_O),_WeakObject.pointer), 0, "_WeakObject.pointer" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = llvmo::DebugLoc_O/1511
{ class_kind, STAMPWTAG_llvmo__DebugLoc_O, sizeof(llvmo::DebugLoc_O), 0, IS_POLYMORPHIC, "llvmo::DebugLoc_O" },
//      field: "_DebugLoc" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<llvm::DebugLoc>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::DebugLoc" :NAME "DebugLoc") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(llvm::DebugLoc), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DebugLoc_O),_DebugLoc), 0, "_DebugLoc" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Array_O/1515
{ class_kind, STAMPWTAG_core__Array_O, sizeof(core::Array_O), 0, IS_POLYMORPHIC, "core::Array_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Array_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::MDArray_O/1519
{ class_kind, STAMPWTAG_core__MDArray_O, sizeof(core::MDArray_O), 0, IS_POLYMORPHIC, "core::MDArray_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_int16_t_O,core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::MDArray_O>/1523
// StampWtag = core::MDArray_int16_t_O/1527
{ class_kind, STAMPWTAG_core__MDArray_int16_t_O, sizeof(core::MDArray_int16_t_O), 0, IS_POLYMORPHIC, "core::MDArray_int16_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int16_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_int8_t_O,core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::MDArray_O>/1531
// StampWtag = core::MDArray_int8_t_O/1535
{ class_kind, STAMPWTAG_core__MDArray_int8_t_O, sizeof(core::MDArray_int8_t_O), 0, IS_POLYMORPHIC, "core::MDArray_int8_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int8_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_int32_t_O,core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::MDArray_O>/1539
// StampWtag = core::MDArray_int32_t_O/1543
{ class_kind, STAMPWTAG_core__MDArray_int32_t_O, sizeof(core::MDArray_int32_t_O), 0, IS_POLYMORPHIC, "core::MDArray_int32_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int32_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_byte4_t_O,core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::MDArray_O>/1547
// StampWtag = core::MDArray_byte4_t_O/1551
{ class_kind, STAMPWTAG_core__MDArray_byte4_t_O, sizeof(core::MDArray_byte4_t_O), 0, IS_POLYMORPHIC, "core::MDArray_byte4_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte4_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_float_O,core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::MDArray_O>/1555
// StampWtag = core::MDArray_float_O/1559
{ class_kind, STAMPWTAG_core__MDArray_float_O, sizeof(core::MDArray_float_O), 0, IS_POLYMORPHIC, "core::MDArray_float_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_float_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_size_t_O,core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::MDArray_O>/1563
// StampWtag = core::MDArray_size_t_O/1567
{ class_kind, STAMPWTAG_core__MDArray_size_t_O, sizeof(core::MDArray_size_t_O), 0, IS_POLYMORPHIC, "core::MDArray_size_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_size_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_byte8_t_O,core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::MDArray_O>/1571
// StampWtag = core::MDArray_byte8_t_O/1575
{ class_kind, STAMPWTAG_core__MDArray_byte8_t_O, sizeof(core::MDArray_byte8_t_O), 0, IS_POLYMORPHIC, "core::MDArray_byte8_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte8_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_int2_t_O,core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::MDArray_O>/1579
// StampWtag = core::MDArray_int2_t_O/1583
{ class_kind, STAMPWTAG_core__MDArray_int2_t_O, sizeof(core::MDArray_int2_t_O), 0, IS_POLYMORPHIC, "core::MDArray_int2_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int2_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_fixnum_O,core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::MDArray_O>/1587
// StampWtag = core::MDArray_fixnum_O/1591
{ class_kind, STAMPWTAG_core__MDArray_fixnum_O, sizeof(core::MDArray_fixnum_O), 0, IS_POLYMORPHIC, "core::MDArray_fixnum_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_fixnum_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArrayBaseChar_O,core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::MDArray_O>/1595
// StampWtag = core::MDArrayBaseChar_O/1599
{ class_kind, STAMPWTAG_core__MDArrayBaseChar_O, sizeof(core::MDArrayBaseChar_O), 0, IS_POLYMORPHIC, "core::MDArrayBaseChar_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBaseChar_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_byte64_t_O,core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::MDArray_O>/1603
// StampWtag = core::MDArray_byte64_t_O/1607
{ class_kind, STAMPWTAG_core__MDArray_byte64_t_O, sizeof(core::MDArray_byte64_t_O), 0, IS_POLYMORPHIC, "core::MDArray_byte64_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte64_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<geom::MDArrayCoordinate_O,geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::MDArray_O>/1611
// StampWtag = geom::MDArrayCoordinate_O/1615
{ class_kind, STAMPWTAG_geom__MDArrayCoordinate_O, sizeof(geom::MDArrayCoordinate_O), 0, IS_POLYMORPHIC, "geom::MDArrayCoordinate_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(geom::MDArrayCoordinate_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArrayT_O,core::SimpleMDArrayT_O,core::SimpleVector_O,core::MDArray_O>/1619
// StampWtag = core::MDArrayT_O/1623
{ class_kind, STAMPWTAG_core__MDArrayT_O, sizeof(core::MDArrayT_O), 0, IS_POLYMORPHIC, "core::MDArrayT_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayT_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::SimpleMDArray_O/1627
{ class_kind, STAMPWTAG_core__SimpleMDArray_O, sizeof(core::SimpleMDArray_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::SimpleMDArray_O>/1631
// StampWtag = core::SimpleMDArray_int8_t_O/1635
{ class_kind, STAMPWTAG_core__SimpleMDArray_int8_t_O, sizeof(core::SimpleMDArray_int8_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_int8_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int8_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::SimpleMDArray_O>/1639
// StampWtag = core::SimpleMDArray_byte32_t_O/1643
{ class_kind, STAMPWTAG_core__SimpleMDArray_byte32_t_O, sizeof(core::SimpleMDArray_byte32_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_byte32_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte32_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::SimpleMDArray_O>/1647
// StampWtag = core::SimpleMDArray_int2_t_O/1651
{ class_kind, STAMPWTAG_core__SimpleMDArray_int2_t_O, sizeof(core::SimpleMDArray_int2_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_int2_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int2_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::SimpleMDArray_O>/1655
// StampWtag = core::SimpleMDArray_byte4_t_O/1659
{ class_kind, STAMPWTAG_core__SimpleMDArray_byte4_t_O, sizeof(core::SimpleMDArray_byte4_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_byte4_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte4_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::SimpleMDArray_O>/1663
// StampWtag = core::SimpleMDArray_int32_t_O/1667
{ class_kind, STAMPWTAG_core__SimpleMDArray_int32_t_O, sizeof(core::SimpleMDArray_int32_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_int32_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int32_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::SimpleMDArray_O>/1671
// StampWtag = core::SimpleMDArray_float_O/1675
{ class_kind, STAMPWTAG_core__SimpleMDArray_float_O, sizeof(core::SimpleMDArray_float_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_float_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_float_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::SimpleMDArray_O>/1679
// StampWtag = core::SimpleMDArray_int16_t_O/1683
{ class_kind, STAMPWTAG_core__SimpleMDArray_int16_t_O, sizeof(core::SimpleMDArray_int16_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_int16_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int16_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::SimpleMDArray_O>/1687
// StampWtag = core::SimpleMDArray_size_t_O/1691
{ class_kind, STAMPWTAG_core__SimpleMDArray_size_t_O, sizeof(core::SimpleMDArray_size_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_size_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_size_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::SimpleMDArray_O>/1695
// StampWtag = core::SimpleMDArrayCharacter_O/1699
{ class_kind, STAMPWTAG_core__SimpleMDArrayCharacter_O, sizeof(core::SimpleMDArrayCharacter_O), 0, IS_POLYMORPHIC, "core::SimpleMDArrayCharacter_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayCharacter_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::SimpleMDArray_O>/1703
// StampWtag = core::SimpleMDArray_byte2_t_O/1707
{ class_kind, STAMPWTAG_core__SimpleMDArray_byte2_t_O, sizeof(core::SimpleMDArray_byte2_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_byte2_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte2_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::SimpleMDArray_O>/1711
// StampWtag = core::SimpleMDArray_byte16_t_O/1715
{ class_kind, STAMPWTAG_core__SimpleMDArray_byte16_t_O, sizeof(core::SimpleMDArray_byte16_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_byte16_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte16_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::SimpleMDArray_O>/1719
// StampWtag = core::SimpleMDArrayBaseChar_O/1723
{ class_kind, STAMPWTAG_core__SimpleMDArrayBaseChar_O, sizeof(core::SimpleMDArrayBaseChar_O), 0, IS_POLYMORPHIC, "core::SimpleMDArrayBaseChar_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBaseChar_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::SimpleMDArray_O>/1727
// StampWtag = core::SimpleMDArray_byte64_t_O/1731
{ class_kind, STAMPWTAG_core__SimpleMDArray_byte64_t_O, sizeof(core::SimpleMDArray_byte64_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_byte64_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte64_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::SimpleMDArray_O>/1735
// StampWtag = core::SimpleMDArray_double_O/1739
{ class_kind, STAMPWTAG_core__SimpleMDArray_double_O, sizeof(core::SimpleMDArray_double_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_double_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_double_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArrayT_O,core::SimpleVector_O,core::SimpleMDArray_O>/1743
// StampWtag = core::SimpleMDArrayT_O/1747
{ class_kind, STAMPWTAG_core__SimpleMDArrayT_O, sizeof(core::SimpleMDArrayT_O), 0, IS_POLYMORPHIC, "core::SimpleMDArrayT_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayT_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::SimpleMDArray_O>/1751
// StampWtag = core::SimpleMDArray_int4_t_O/1755
{ class_kind, STAMPWTAG_core__SimpleMDArray_int4_t_O, sizeof(core::SimpleMDArray_int4_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_int4_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int4_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::SimpleMDArray_O>/1759
// StampWtag = geom::SimpleMDArrayCoordinate_O/1763
{ class_kind, STAMPWTAG_geom__SimpleMDArrayCoordinate_O, sizeof(geom::SimpleMDArrayCoordinate_O), 0, IS_POLYMORPHIC, "geom::SimpleMDArrayCoordinate_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleMDArrayCoordinate_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::SimpleMDArray_O>/1767
// StampWtag = core::SimpleMDArray_fixnum_O/1771
{ class_kind, STAMPWTAG_core__SimpleMDArray_fixnum_O, sizeof(core::SimpleMDArray_fixnum_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_fixnum_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_fixnum_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::SimpleMDArray_O>/1775
// StampWtag = core::SimpleMDArrayBit_O/1779
{ class_kind, STAMPWTAG_core__SimpleMDArrayBit_O, sizeof(core::SimpleMDArrayBit_O), 0, IS_POLYMORPHIC, "core::SimpleMDArrayBit_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArrayBit_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::SimpleMDArray_O>/1783
// StampWtag = core::SimpleMDArray_byte8_t_O/1787
{ class_kind, STAMPWTAG_core__SimpleMDArray_byte8_t_O, sizeof(core::SimpleMDArray_byte8_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_byte8_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_byte8_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleArray<core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::SimpleMDArray_O>/1791
// StampWtag = core::SimpleMDArray_int64_t_O/1795
{ class_kind, STAMPWTAG_core__SimpleMDArray_int64_t_O, sizeof(core::SimpleMDArray_int64_t_O), 0, IS_POLYMORPHIC, "core::SimpleMDArray_int64_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleMDArray_int64_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::ComplexVector_O/1799
{ class_kind, STAMPWTAG_core__ComplexVector_O, sizeof(core::ComplexVector_O), 0, IS_POLYMORPHIC, "core::ComplexVector_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_double_O,core::SimpleVector_double_O,core::ComplexVector_O>/1803
// StampWtag = core::ComplexVector_double_O/1807
{ class_kind, STAMPWTAG_core__ComplexVector_double_O, sizeof(core::ComplexVector_double_O), 0, IS_POLYMORPHIC, "core::ComplexVector_double_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_double_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_int8_t_O,core::SimpleVector_int8_t_O,core::ComplexVector_O>/1811
// StampWtag = core::ComplexVector_int8_t_O/1815
{ class_kind, STAMPWTAG_core__ComplexVector_int8_t_O, sizeof(core::ComplexVector_int8_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_int8_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int8_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_T_O,core::SimpleVector_O,core::ComplexVector_O>/1819
// StampWtag = core::ComplexVector_T_O/1823
{ class_kind, STAMPWTAG_core__ComplexVector_T_O, sizeof(core::ComplexVector_T_O), 0, IS_POLYMORPHIC, "core::ComplexVector_T_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_T_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_int32_t_O,core::SimpleVector_int32_t_O,core::ComplexVector_O>/1827
// StampWtag = core::ComplexVector_int32_t_O/1831
{ class_kind, STAMPWTAG_core__ComplexVector_int32_t_O, sizeof(core::ComplexVector_int32_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_int32_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int32_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_byte16_t_O,core::SimpleVector_byte16_t_O,core::ComplexVector_O>/1835
// StampWtag = core::ComplexVector_byte16_t_O/1839
{ class_kind, STAMPWTAG_core__ComplexVector_byte16_t_O, sizeof(core::ComplexVector_byte16_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_byte16_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte16_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<geom::ComplexVectorCoordinate_O,geom::SimpleVectorCoordinate_O,core::ComplexVector_O>/1843
// StampWtag = geom::ComplexVectorCoordinate_O/1847
{ class_kind, STAMPWTAG_geom__ComplexVectorCoordinate_O, sizeof(geom::ComplexVectorCoordinate_O), 0, IS_POLYMORPHIC, "geom::ComplexVectorCoordinate_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(geom::ComplexVectorCoordinate_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_byte4_t_O,core::SimpleVector_byte4_t_O,core::ComplexVector_O>/1851
// StampWtag = core::ComplexVector_byte4_t_O/1855
{ class_kind, STAMPWTAG_core__ComplexVector_byte4_t_O, sizeof(core::ComplexVector_byte4_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_byte4_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte4_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_byte64_t_O,core::SimpleVector_byte64_t_O,core::ComplexVector_O>/1859
// StampWtag = core::ComplexVector_byte64_t_O/1863
{ class_kind, STAMPWTAG_core__ComplexVector_byte64_t_O, sizeof(core::ComplexVector_byte64_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_byte64_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte64_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_int2_t_O,core::SimpleVector_int2_t_O,core::ComplexVector_O>/1867
// StampWtag = core::ComplexVector_int2_t_O/1871
{ class_kind, STAMPWTAG_core__ComplexVector_int2_t_O, sizeof(core::ComplexVector_int2_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_int2_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int2_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_float_O,core::SimpleVector_float_O,core::ComplexVector_O>/1875
// StampWtag = core::ComplexVector_float_O/1879
{ class_kind, STAMPWTAG_core__ComplexVector_float_O, sizeof(core::ComplexVector_float_O), 0, IS_POLYMORPHIC, "core::ComplexVector_float_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_float_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_int16_t_O,core::SimpleVector_int16_t_O,core::ComplexVector_O>/1883
// StampWtag = core::ComplexVector_int16_t_O/1887
{ class_kind, STAMPWTAG_core__ComplexVector_int16_t_O, sizeof(core::ComplexVector_int16_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_int16_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int16_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_int4_t_O,core::SimpleVector_int4_t_O,core::ComplexVector_O>/1891
// StampWtag = core::ComplexVector_int4_t_O/1895
{ class_kind, STAMPWTAG_core__ComplexVector_int4_t_O, sizeof(core::ComplexVector_int4_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_int4_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int4_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_size_t_O,core::SimpleVector_size_t_O,core::ComplexVector_O>/1899
// StampWtag = core::ComplexVector_size_t_O/1903
{ class_kind, STAMPWTAG_core__ComplexVector_size_t_O, sizeof(core::ComplexVector_size_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_size_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_size_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_byte2_t_O,core::SimpleVector_byte2_t_O,core::ComplexVector_O>/1907
// StampWtag = core::ComplexVector_byte2_t_O/1911
{ class_kind, STAMPWTAG_core__ComplexVector_byte2_t_O, sizeof(core::ComplexVector_byte2_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_byte2_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte2_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_byte8_t_O,core::SimpleVector_byte8_t_O,core::ComplexVector_O>/1915
// StampWtag = core::ComplexVector_byte8_t_O/1919
{ class_kind, STAMPWTAG_core__ComplexVector_byte8_t_O, sizeof(core::ComplexVector_byte8_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_byte8_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte8_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_byte32_t_O,core::SimpleVector_byte32_t_O,core::ComplexVector_O>/1923
// StampWtag = core::ComplexVector_byte32_t_O/1927
{ class_kind, STAMPWTAG_core__ComplexVector_byte32_t_O, sizeof(core::ComplexVector_byte32_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_byte32_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_byte32_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::BitVectorNs_O,core::SimpleBitVector_O,core::ComplexVector_O>/1931
// StampWtag = core::BitVectorNs_O/1935
{ class_kind, STAMPWTAG_core__BitVectorNs_O, sizeof(core::BitVectorNs_O), 0, IS_POLYMORPHIC, "core::BitVectorNs_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::BitVectorNs_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::StrNs_O/1939
{ class_kind, STAMPWTAG_core__StrNs_O, sizeof(core::StrNs_O), 0, IS_POLYMORPHIC, "core::StrNs_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrNs_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::Str8Ns_O,core::SimpleBaseString_O,core::StrNs_O>/1943
// StampWtag = core::Str8Ns_O/1947
{ class_kind, STAMPWTAG_core__Str8Ns_O, sizeof(core::Str8Ns_O), 0, IS_POLYMORPHIC, "core::Str8Ns_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::Str8Ns_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::StrWNs_O,core::SimpleCharacterString_O,core::StrNs_O>/1951
// StampWtag = core::StrWNs_O/1955
{ class_kind, STAMPWTAG_core__StrWNs_O, sizeof(core::StrWNs_O), 0, IS_POLYMORPHIC, "core::StrWNs_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::StrWNs_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_fixnum_O,core::SimpleVector_fixnum_O,core::ComplexVector_O>/1959
// StampWtag = core::ComplexVector_fixnum_O/1963
{ class_kind, STAMPWTAG_core__ComplexVector_fixnum_O, sizeof(core::ComplexVector_fixnum_O), 0, IS_POLYMORPHIC, "core::ComplexVector_fixnum_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_fixnum_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Vector<core::ComplexVector_int64_t_O,core::SimpleVector_int64_t_O,core::ComplexVector_O>/1967
// StampWtag = core::ComplexVector_int64_t_O/1971
{ class_kind, STAMPWTAG_core__ComplexVector_int64_t_O, sizeof(core::ComplexVector_int64_t_O), 0, IS_POLYMORPHIC, "core::ComplexVector_int64_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::ComplexVector_int64_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_int64_t_O,core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::MDArray_O>/1975
// StampWtag = core::MDArray_int64_t_O/1979
{ class_kind, STAMPWTAG_core__MDArray_int64_t_O, sizeof(core::MDArray_int64_t_O), 0, IS_POLYMORPHIC, "core::MDArray_int64_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int64_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_byte32_t_O,core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::MDArray_O>/1983
// StampWtag = core::MDArray_byte32_t_O/1987
{ class_kind, STAMPWTAG_core__MDArray_byte32_t_O, sizeof(core::MDArray_byte32_t_O), 0, IS_POLYMORPHIC, "core::MDArray_byte32_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte32_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_byte2_t_O,core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::MDArray_O>/1991
// StampWtag = core::MDArray_byte2_t_O/1995
{ class_kind, STAMPWTAG_core__MDArray_byte2_t_O, sizeof(core::MDArray_byte2_t_O), 0, IS_POLYMORPHIC, "core::MDArray_byte2_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte2_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArrayCharacter_O,core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::MDArray_O>/1999
// StampWtag = core::MDArrayCharacter_O/2003
{ class_kind, STAMPWTAG_core__MDArrayCharacter_O, sizeof(core::MDArrayCharacter_O), 0, IS_POLYMORPHIC, "core::MDArrayCharacter_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayCharacter_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArrayBit_O,core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::MDArray_O>/2007
// StampWtag = core::MDArrayBit_O/2011
{ class_kind, STAMPWTAG_core__MDArrayBit_O, sizeof(core::MDArrayBit_O), 0, IS_POLYMORPHIC, "core::MDArrayBit_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArrayBit_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_byte16_t_O,core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::MDArray_O>/2015
// StampWtag = core::MDArray_byte16_t_O/2019
{ class_kind, STAMPWTAG_core__MDArray_byte16_t_O, sizeof(core::MDArray_byte16_t_O), 0, IS_POLYMORPHIC, "core::MDArray_byte16_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_byte16_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_int4_t_O,core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::MDArray_O>/2023
// StampWtag = core::MDArray_int4_t_O/2027
{ class_kind, STAMPWTAG_core__MDArray_int4_t_O, sizeof(core::MDArray_int4_t_O), 0, IS_POLYMORPHIC, "core::MDArray_int4_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_int4_t_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_Array<core::MDArray_double_O,core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::MDArray_O>/2031
// StampWtag = core::MDArray_double_O/2035
{ class_kind, STAMPWTAG_core__MDArray_double_O, sizeof(core::MDArray_double_O), 0, IS_POLYMORPHIC, "core::MDArray_double_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FillPointerOrLengthOrDummy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_FillPointerOrLengthOrDummy), 0, "_FillPointerOrLengthOrDummy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ArrayTotalSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_ArrayTotalSize), 0, "_ArrayTotalSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Data" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Data), 0, "_Data" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_DisplacedIndexOffset" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_DisplacedIndexOffset), 0, "_DisplacedIndexOffset" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::MDArray_O::Flags" :NAME "Flags")
//      field: "._Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Flags._Flags), 0, "_Flags._Flags" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Dimensions._Data), 0, "_Dimensions._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Dimensions._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::MDArray_double_O),_Dimensions._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::AbstractSimpleVector_O/2039
{ class_kind, STAMPWTAG_core__AbstractSimpleVector_O, sizeof(core::AbstractSimpleVector_O), 0, IS_POLYMORPHIC, "core::AbstractSimpleVector_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AbstractSimpleVector_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::template_SimpleVector<core::SimpleVector_byte32_t_O,unsigned int,core::AbstractSimpleVector_O>/2043
// StampWtag = core::SimpleVector_byte32_t_O/2047
{ class_kind, STAMPWTAG_core__SimpleVector_byte32_t_O, sizeof(core::SimpleVector_byte32_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_byte32_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte32_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
*/
/* (ctype-key (base one)) -> "unsigned int"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")>
{    variable_field, ctype_unsigned_int, sizeof(unsigned int), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_size_t_O,unsigned long,core::AbstractSimpleVector_O>/2051
// StampWtag = core::SimpleVector_size_t_O/2055
{ class_kind, STAMPWTAG_core__SimpleVector_size_t_O, sizeof(core::SimpleVector_size_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_size_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_size_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_double_O,double,core::AbstractSimpleVector_O>/2059
// StampWtag = core::SimpleVector_double_O/2063
{ class_kind, STAMPWTAG_core__SimpleVector_double_O, sizeof(core::SimpleVector_double_O), 0, IS_POLYMORPHIC, "core::SimpleVector_double_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_double_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_double_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_double_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_double_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
*/
/* (ctype-key (base one)) -> "double"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")>
{    variable_field, ctype_double, sizeof(double), 0, 0, "only" },
// StampWtag = core::template_SimpleBitUnitVector<core::SimpleVector_int2_t_O,2,1>/2067
// StampWtag = core::SimpleVector_int2_t_O/2071
{ class_kind, STAMPWTAG_core__SimpleVector_int2_t_O, sizeof(core::SimpleVector_int2_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_int2_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 2, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),_Data._Length), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int2_t_O),_Data._Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_int64_t_O,long,core::AbstractSimpleVector_O>/2075
// StampWtag = core::SimpleVector_int64_t_O/2079
{ class_kind, STAMPWTAG_core__SimpleVector_int64_t_O, sizeof(core::SimpleVector_int64_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_int64_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int64_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")
*/
/* (ctype-key (base one)) -> "long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")>
{    variable_field, ctype_long, sizeof(long), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_int8_t_O,signed char,core::AbstractSimpleVector_O>/2083
// StampWtag = core::SimpleVector_int8_t_O/2087
{ class_kind, STAMPWTAG_core__SimpleVector_int8_t_O, sizeof(core::SimpleVector_int8_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_int8_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(signed char), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int8_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char")
*/
/* (ctype-key (base one)) -> "signed char"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char")>
{    variable_field, ctype_signed_char, sizeof(signed char), 0, 0, "only" },
// StampWtag = core::template_SimpleBitUnitVector<core::SimpleVector_byte4_t_O,4,0>/2091
// StampWtag = core::SimpleVector_byte4_t_O/2095
{ class_kind, STAMPWTAG_core__SimpleVector_byte4_t_O, sizeof(core::SimpleVector_byte4_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_byte4_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 4, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),_Data._Length), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte4_t_O),_Data._Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<geom::SimpleVectorCoordinate_O,Vector3,core::AbstractSimpleVector_O>/2099
// StampWtag = geom::SimpleVectorCoordinate_O/2103
{ class_kind, STAMPWTAG_geom__SimpleVectorCoordinate_O, sizeof(geom::SimpleVectorCoordinate_O), 0, IS_POLYMORPHIC, "geom::SimpleVectorCoordinate_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(Vector3), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(geom::SimpleVectorCoordinate_O),_Data._MaybeSignedLength), 0, NULL },
// StampWtag = core::SimpleString_O/2107
{ class_kind, STAMPWTAG_core__SimpleString_O, sizeof(core::SimpleString_O), 0, IS_POLYMORPHIC, "core::SimpleString_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleString_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::template_SimpleVector<core::SimpleBaseString_O,unsigned char,core::SimpleString_O>/2111
// StampWtag = core::SimpleBaseString_O/2115
{ class_kind, STAMPWTAG_core__SimpleBaseString_O, sizeof(core::SimpleBaseString_O), 0, IS_POLYMORPHIC, "core::SimpleBaseString_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleBaseString_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleBaseString_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned char), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleBaseString_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleBaseString_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")
*/
/* (ctype-key (base one)) -> "unsigned char"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")>
{    variable_field, ctype_unsigned_char, sizeof(unsigned char), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleCharacterString_O,unsigned int,core::SimpleString_O>/2119
// StampWtag = core::SimpleCharacterString_O/2123
{ class_kind, STAMPWTAG_core__SimpleCharacterString_O, sizeof(core::SimpleCharacterString_O), 0, IS_POLYMORPHIC, "core::SimpleCharacterString_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleCharacterString_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
*/
/* (ctype-key (base one)) -> "unsigned int"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")>
{    variable_field, ctype_unsigned_int, sizeof(unsigned int), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_int16_t_O,short,core::AbstractSimpleVector_O>/2127
// StampWtag = core::SimpleVector_int16_t_O/2131
{ class_kind, STAMPWTAG_core__SimpleVector_int16_t_O, sizeof(core::SimpleVector_int16_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_int16_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(short), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int16_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short")
*/
/* (ctype-key (base one)) -> "short"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short")>
{    variable_field, ctype_short, sizeof(short), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_byte16_t_O,unsigned short,core::AbstractSimpleVector_O>/2135
// StampWtag = core::SimpleVector_byte16_t_O/2139
{ class_kind, STAMPWTAG_core__SimpleVector_byte16_t_O, sizeof(core::SimpleVector_byte16_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_byte16_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned short), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte16_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short")
*/
/* (ctype-key (base one)) -> "unsigned short"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short")>
{    variable_field, ctype_unsigned_short, sizeof(unsigned short), 0, 0, "only" },
// StampWtag = core::template_SimpleBitUnitVector<core::SimpleBitVector_O,1,0>/2143
// StampWtag = core::SimpleBitVector_O/2147
{ class_kind, STAMPWTAG_core__SimpleBitVector_O, sizeof(core::SimpleBitVector_O), 0, IS_POLYMORPHIC, "core::SimpleBitVector_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleBitVector_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 1, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleBitVector_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleBitVector_O),_Data._Length), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleBitVector_O),_Data._Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleBitUnitVector<core::SimpleVector_int4_t_O,4,1>/2151
// StampWtag = core::SimpleVector_int4_t_O/2155
{ class_kind, STAMPWTAG_core__SimpleVector_int4_t_O, sizeof(core::SimpleVector_int4_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_int4_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 4, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),_Data._Length), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int4_t_O),_Data._Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_byte64_t_O,unsigned long,core::AbstractSimpleVector_O>/2159
// StampWtag = core::SimpleVector_byte64_t_O/2163
{ class_kind, STAMPWTAG_core__SimpleVector_byte64_t_O, sizeof(core::SimpleVector_byte64_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_byte64_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte64_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_fixnum_O,long,core::AbstractSimpleVector_O>/2167
// StampWtag = core::SimpleVector_fixnum_O/2171
{ class_kind, STAMPWTAG_core__SimpleVector_fixnum_O, sizeof(core::SimpleVector_fixnum_O), 0, IS_POLYMORPHIC, "core::SimpleVector_fixnum_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_fixnum_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")
*/
/* (ctype-key (base one)) -> "long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")>
{    variable_field, ctype_long, sizeof(long), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_float_O,float,core::AbstractSimpleVector_O>/2175
// StampWtag = core::SimpleVector_float_O/2179
{ class_kind, STAMPWTAG_core__SimpleVector_float_O, sizeof(core::SimpleVector_float_O), 0, IS_POLYMORPHIC, "core::SimpleVector_float_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_float_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_float_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_float_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_float_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
*/
/* (ctype-key (base one)) -> "float"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")>
{    variable_field, ctype_float, sizeof(float), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_O,gctools::smart_ptr<core::T_O>,core::AbstractSimpleVector_O>/2183
// StampWtag = core::SimpleVector_O/2187
{ class_kind, STAMPWTAG_core__SimpleVector_O, sizeof(core::SimpleVector_O), 0, IS_POLYMORPHIC, "core::SimpleVector_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::T_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_byte8_t_O,unsigned char,core::AbstractSimpleVector_O>/2191
// StampWtag = core::SimpleVector_byte8_t_O/2195
{ class_kind, STAMPWTAG_core__SimpleVector_byte8_t_O, sizeof(core::SimpleVector_byte8_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_byte8_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned char), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte8_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")
*/
/* (ctype-key (base one)) -> "unsigned char"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")>
{    variable_field, ctype_unsigned_char, sizeof(unsigned char), 0, 0, "only" },
// StampWtag = core::template_SimpleBitUnitVector<core::SimpleVector_byte2_t_O,2,0>/2199
// StampWtag = core::SimpleVector_byte2_t_O/2203
{ class_kind, STAMPWTAG_core__SimpleVector_byte2_t_O, sizeof(core::SimpleVector_byte2_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_byte2_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_bit_array0, 2, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),_Data._Length), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_byte2_t_O),_Data._Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = core::template_SimpleVector<core::SimpleVector_int32_t_O,int,core::AbstractSimpleVector_O>/2207
// StampWtag = core::SimpleVector_int32_t_O/2211
{ class_kind, STAMPWTAG_core__SimpleVector_int32_t_O, sizeof(core::SimpleVector_int32_t_O), 0, IS_POLYMORPHIC, "core::SimpleVector_int32_t_O" },
//      field: "_Length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 0 :ELEMENT-TYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long"))
 {  fixed_field, CONSTANT_ARRAY_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),_Length), 0, "_Length" }, // atomic: NIL public: (T) fixable: NIL good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),_Data._Data), 0, "_Data._Data" },
 {  variable_capacity, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),_Data._MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(core::SimpleVector_int32_t_O),_Data._MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
*/
/* (ctype-key (base one)) -> "int"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")>
{    variable_field, ctype_int, sizeof(int), 0, 0, "only" },
// StampWtag = core::Character_dummy_O/2215
{ class_kind, STAMPWTAG_core__Character_dummy_O, sizeof(core::Character_dummy_O), 0, IS_POLYMORPHIC, "core::Character_dummy_O" },
// StampWtag = llvmo::DataLayout_O/2219
{ class_kind, STAMPWTAG_llvmo__DataLayout_O, sizeof(llvmo::DataLayout_O), 0, IS_POLYMORPHIC, "llvmo::DataLayout_O" },
//      field: "_DataLayout" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::DataLayout" :NAME "DataLayout"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DataLayout_O),_DataLayout), 0, "_DataLayout" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::LoadTimeValues_O/2223
{ class_kind, STAMPWTAG_core__LoadTimeValues_O, sizeof(core::LoadTimeValues_O), 0, IS_POLYMORPHIC, "core::LoadTimeValues_O" },
//      field: "_Objects" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::T_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::T_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::T_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LoadTimeValues_O),_Objects._Vector._Contents), 0, "_Objects._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = core::Readtable_O/2227
{ class_kind, STAMPWTAG_core__Readtable_O, sizeof(core::Readtable_O), 0, IS_POLYMORPHIC, "core::Readtable_O" },
//      field: "Case_" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Readtable_O),Case_), 0, "Case_" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "SyntaxTypes_" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTable_O>" :SPECIALIZER "class core::HashTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Readtable_O),SyntaxTypes_), 0, "SyntaxTypes_" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "MacroCharacters_" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTable_O>" :SPECIALIZER "class core::HashTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Readtable_O),MacroCharacters_), 0, "MacroCharacters_" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "DispatchMacroCharacters_" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTable_O>" :SPECIALIZER "class core::HashTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Readtable_O),DispatchMacroCharacters_), 0, "DispatchMacroCharacters_" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::PosixTime_O/2231
{ class_kind, STAMPWTAG_core__PosixTime_O, sizeof(core::PosixTime_O), 0, IS_POLYMORPHIC, "core::PosixTime_O" },
//      field: "_Time" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<boost::posix_time::ptime>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::posix_time::ptime" :NAME "ptime") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(boost::posix_time::ptime), __builtin_offsetof(SAFE_TYPE_MACRO(core::PosixTime_O),_Time), 0, "_Time" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::StructLayout_O/2235
{ class_kind, STAMPWTAG_llvmo__StructLayout_O, sizeof(llvmo::StructLayout_O), 0, IS_POLYMORPHIC, "llvmo::StructLayout_O" },
//      field: "_StructLayout" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::StructLayout" :NAME "StructLayout"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::StructLayout_O),_StructLayout), 0, "_StructLayout" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::ExternalObject_O/2239
{ class_kind, STAMPWTAG_core__ExternalObject_O, sizeof(core::ExternalObject_O), 0, IS_POLYMORPHIC, "core::ExternalObject_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ExternalObject_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::Pass_O/2243
{ class_kind, STAMPWTAG_llvmo__Pass_O, sizeof(llvmo::Pass_O), 0, IS_POLYMORPHIC, "llvmo::Pass_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Pass_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Pass" :NAME "Pass"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Pass_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ModulePass_O/2247
{ class_kind, STAMPWTAG_llvmo__ModulePass_O, sizeof(llvmo::ModulePass_O), 0, IS_POLYMORPHIC, "llvmo::ModulePass_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ModulePass_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Pass" :NAME "Pass"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ModulePass_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ImmutablePass_O/2251
{ class_kind, STAMPWTAG_llvmo__ImmutablePass_O, sizeof(llvmo::ImmutablePass_O), 0, IS_POLYMORPHIC, "llvmo::ImmutablePass_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ImmutablePass_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Pass" :NAME "Pass"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ImmutablePass_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::TargetLibraryInfoWrapperPass_O/2255
{ class_kind, STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O, sizeof(llvmo::TargetLibraryInfoWrapperPass_O), 0, IS_POLYMORPHIC, "llvmo::TargetLibraryInfoWrapperPass_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetLibraryInfoWrapperPass_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Pass" :NAME "Pass"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetLibraryInfoWrapperPass_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::FunctionPass_O/2259
{ class_kind, STAMPWTAG_llvmo__FunctionPass_O, sizeof(llvmo::FunctionPass_O), 0, IS_POLYMORPHIC, "llvmo::FunctionPass_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FunctionPass_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Pass" :NAME "Pass"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FunctionPass_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::MCSubtargetInfo_O/2263
{ class_kind, STAMPWTAG_llvmo__MCSubtargetInfo_O, sizeof(llvmo::MCSubtargetInfo_O), 0, IS_POLYMORPHIC, "llvmo::MCSubtargetInfo_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MCSubtargetInfo_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::MCSubtargetInfo" :NAME "MCSubtargetInfo"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MCSubtargetInfo_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::TargetSubtargetInfo_O/2267
{ class_kind, STAMPWTAG_llvmo__TargetSubtargetInfo_O, sizeof(llvmo::TargetSubtargetInfo_O), 0, IS_POLYMORPHIC, "llvmo::TargetSubtargetInfo_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetSubtargetInfo_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::MCSubtargetInfo" :NAME "MCSubtargetInfo"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetSubtargetInfo_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::JITDylib_O/2271
{ class_kind, STAMPWTAG_llvmo__JITDylib_O, sizeof(llvmo::JITDylib_O), 0, IS_POLYMORPHIC, "llvmo::JITDylib_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::JITDylib_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::orc::JITDylib" :NAME "JITDylib"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::JITDylib_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::JITDylib_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBaseString_O>" :SPECIALIZER "class core::SimpleBaseString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBaseString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::JITDylib_O),_name), 0, "_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::DIContext_O/2275
{ class_kind, STAMPWTAG_llvmo__DIContext_O, sizeof(llvmo::DIContext_O), 0, IS_POLYMORPHIC, "llvmo::DIContext_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIContext_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::DIContext" :NAME "DIContext"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIContext_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::IRBuilderBase_O/2279
{ class_kind, STAMPWTAG_llvmo__IRBuilderBase_O, sizeof(llvmo::IRBuilderBase_O), 0, IS_POLYMORPHIC, "llvmo::IRBuilderBase_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilderBase_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::IRBuilderBase" :NAME "IRBuilderBase"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilderBase_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_CurrentDebugLocationSet" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilderBase_O),_CurrentDebugLocationSet), 0, "_CurrentDebugLocationSet" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::IRBuilder_O/2283
{ class_kind, STAMPWTAG_llvmo__IRBuilder_O, sizeof(llvmo::IRBuilder_O), 0, IS_POLYMORPHIC, "llvmo::IRBuilder_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilder_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::IRBuilderBase" :NAME "IRBuilderBase"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilder_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_CurrentDebugLocationSet" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IRBuilder_O),_CurrentDebugLocationSet), 0, "_CurrentDebugLocationSet" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::APInt_O/2287
{ class_kind, STAMPWTAG_llvmo__APInt_O, sizeof(llvmo::APInt_O), 0, IS_POLYMORPHIC, "llvmo::APInt_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::APInt_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_value" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<llvm::APInt>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::APInt" :NAME "APInt") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(llvm::APInt), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::APInt_O),_value), 0, "_value" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = llvmo::DIBuilder_O/2291
{ class_kind, STAMPWTAG_llvmo__DIBuilder_O, sizeof(llvmo::DIBuilder_O), 0, IS_POLYMORPHIC, "llvmo::DIBuilder_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIBuilder_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::DIBuilder" :NAME "DIBuilder"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIBuilder_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::SectionedAddress_O/2295
{ class_kind, STAMPWTAG_llvmo__SectionedAddress_O, sizeof(llvmo::SectionedAddress_O), 0, IS_POLYMORPHIC, "llvmo::SectionedAddress_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::SectionedAddress_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_value" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::object::SectionedAddress" :NAME "SectionedAddress")
//      field: ".Address" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::SectionedAddress_O),_value.Address), 0, "_value.Address" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_value" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::object::SectionedAddress" :NAME "SectionedAddress")
//      field: ".SectionIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::SectionedAddress_O),_value.SectionIndex), 0, "_value.SectionIndex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = llvmo::EngineBuilder_O/2299
{ class_kind, STAMPWTAG_llvmo__EngineBuilder_O, sizeof(llvmo::EngineBuilder_O), 0, IS_POLYMORPHIC, "llvmo::EngineBuilder_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::EngineBuilder_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::EngineBuilder" :NAME "EngineBuilder"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::EngineBuilder_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_ErrorStr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
 {  fixed_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::EngineBuilder_O),_ErrorStr), 0, "_ErrorStr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::PassManagerBase_O/2303
{ class_kind, STAMPWTAG_llvmo__PassManagerBase_O, sizeof(llvmo::PassManagerBase_O), 0, IS_POLYMORPHIC, "llvmo::PassManagerBase_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PassManagerBase_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::legacy::PassManagerBase" :NAME "PassManagerBase"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PassManagerBase_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::PassManager_O/2307
{ class_kind, STAMPWTAG_llvmo__PassManager_O, sizeof(llvmo::PassManager_O), 0, IS_POLYMORPHIC, "llvmo::PassManager_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PassManager_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::legacy::PassManagerBase" :NAME "PassManagerBase"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PassManager_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::FunctionPassManager_O/2311
{ class_kind, STAMPWTAG_llvmo__FunctionPassManager_O, sizeof(llvmo::FunctionPassManager_O), 0, IS_POLYMORPHIC, "llvmo::FunctionPassManager_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FunctionPassManager_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::legacy::PassManagerBase" :NAME "PassManagerBase"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FunctionPassManager_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::Value_O/2315
{ class_kind, STAMPWTAG_llvmo__Value_O, sizeof(llvmo::Value_O), 0, IS_POLYMORPHIC, "llvmo::Value_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Value_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Value_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::User_O/2319
{ class_kind, STAMPWTAG_llvmo__User_O, sizeof(llvmo::User_O), 0, IS_POLYMORPHIC, "llvmo::User_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::User_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::User_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::Instruction_O/2323
{ class_kind, STAMPWTAG_llvmo__Instruction_O, sizeof(llvmo::Instruction_O), 0, IS_POLYMORPHIC, "llvmo::Instruction_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Instruction_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Instruction_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::StoreInst_O/2327
{ class_kind, STAMPWTAG_llvmo__StoreInst_O, sizeof(llvmo::StoreInst_O), 0, IS_POLYMORPHIC, "llvmo::StoreInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::StoreInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::StoreInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::UnreachableInst_O/2331
{ class_kind, STAMPWTAG_llvmo__UnreachableInst_O, sizeof(llvmo::UnreachableInst_O), 0, IS_POLYMORPHIC, "llvmo::UnreachableInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::UnreachableInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::UnreachableInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ResumeInst_O/2335
{ class_kind, STAMPWTAG_llvmo__ResumeInst_O, sizeof(llvmo::ResumeInst_O), 0, IS_POLYMORPHIC, "llvmo::ResumeInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ResumeInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ResumeInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::AtomicCmpXchgInst_O/2339
{ class_kind, STAMPWTAG_llvmo__AtomicCmpXchgInst_O, sizeof(llvmo::AtomicCmpXchgInst_O), 0, IS_POLYMORPHIC, "llvmo::AtomicCmpXchgInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::AtomicCmpXchgInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::AtomicCmpXchgInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::FenceInst_O/2343
{ class_kind, STAMPWTAG_llvmo__FenceInst_O, sizeof(llvmo::FenceInst_O), 0, IS_POLYMORPHIC, "llvmo::FenceInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FenceInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FenceInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::CallBase_O/2347
{ class_kind, STAMPWTAG_llvmo__CallBase_O, sizeof(llvmo::CallBase_O), 0, IS_POLYMORPHIC, "llvmo::CallBase_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::CallBase_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::CallBase_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::CallInst_O/2351
{ class_kind, STAMPWTAG_llvmo__CallInst_O, sizeof(llvmo::CallInst_O), 0, IS_POLYMORPHIC, "llvmo::CallInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::CallInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::CallInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::InvokeInst_O/2355
{ class_kind, STAMPWTAG_llvmo__InvokeInst_O, sizeof(llvmo::InvokeInst_O), 0, IS_POLYMORPHIC, "llvmo::InvokeInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::InvokeInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::InvokeInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::BranchInst_O/2359
{ class_kind, STAMPWTAG_llvmo__BranchInst_O, sizeof(llvmo::BranchInst_O), 0, IS_POLYMORPHIC, "llvmo::BranchInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::BranchInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::BranchInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::UnaryInstruction_O/2363
{ class_kind, STAMPWTAG_llvmo__UnaryInstruction_O, sizeof(llvmo::UnaryInstruction_O), 0, IS_POLYMORPHIC, "llvmo::UnaryInstruction_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::UnaryInstruction_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::UnaryInstruction_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::VAArgInst_O/2367
{ class_kind, STAMPWTAG_llvmo__VAArgInst_O, sizeof(llvmo::VAArgInst_O), 0, IS_POLYMORPHIC, "llvmo::VAArgInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::VAArgInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::VAArgInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::AllocaInst_O/2371
{ class_kind, STAMPWTAG_llvmo__AllocaInst_O, sizeof(llvmo::AllocaInst_O), 0, IS_POLYMORPHIC, "llvmo::AllocaInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::AllocaInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::AllocaInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::LoadInst_O/2375
{ class_kind, STAMPWTAG_llvmo__LoadInst_O, sizeof(llvmo::LoadInst_O), 0, IS_POLYMORPHIC, "llvmo::LoadInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LoadInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LoadInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::SwitchInst_O/2379
{ class_kind, STAMPWTAG_llvmo__SwitchInst_O, sizeof(llvmo::SwitchInst_O), 0, IS_POLYMORPHIC, "llvmo::SwitchInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::SwitchInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::SwitchInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::AtomicRMWInst_O/2383
{ class_kind, STAMPWTAG_llvmo__AtomicRMWInst_O, sizeof(llvmo::AtomicRMWInst_O), 0, IS_POLYMORPHIC, "llvmo::AtomicRMWInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::AtomicRMWInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::AtomicRMWInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::LandingPadInst_O/2387
{ class_kind, STAMPWTAG_llvmo__LandingPadInst_O, sizeof(llvmo::LandingPadInst_O), 0, IS_POLYMORPHIC, "llvmo::LandingPadInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LandingPadInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LandingPadInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ReturnInst_O/2391
{ class_kind, STAMPWTAG_llvmo__ReturnInst_O, sizeof(llvmo::ReturnInst_O), 0, IS_POLYMORPHIC, "llvmo::ReturnInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ReturnInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ReturnInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::PHINode_O/2395
{ class_kind, STAMPWTAG_llvmo__PHINode_O, sizeof(llvmo::PHINode_O), 0, IS_POLYMORPHIC, "llvmo::PHINode_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PHINode_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PHINode_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::IndirectBrInst_O/2399
{ class_kind, STAMPWTAG_llvmo__IndirectBrInst_O, sizeof(llvmo::IndirectBrInst_O), 0, IS_POLYMORPHIC, "llvmo::IndirectBrInst_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IndirectBrInst_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IndirectBrInst_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::Constant_O/2403
{ class_kind, STAMPWTAG_llvmo__Constant_O, sizeof(llvmo::Constant_O), 0, IS_POLYMORPHIC, "llvmo::Constant_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Constant_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Constant_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::GlobalValue_O/2407
{ class_kind, STAMPWTAG_llvmo__GlobalValue_O, sizeof(llvmo::GlobalValue_O), 0, IS_POLYMORPHIC, "llvmo::GlobalValue_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::GlobalValue_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::GlobalValue_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_PtrIsOwned" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::GlobalValue_O),_PtrIsOwned), 0, "_PtrIsOwned" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::Function_O/2411
{ class_kind, STAMPWTAG_llvmo__Function_O, sizeof(llvmo::Function_O), 0, IS_POLYMORPHIC, "llvmo::Function_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Function_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Function_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_PtrIsOwned" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Function_O),_PtrIsOwned), 0, "_PtrIsOwned" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_RunTimeValues" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::LoadTimeValues_O>" :SPECIALIZER "class core::LoadTimeValues_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::LoadTimeValues_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Function_O),_RunTimeValues), 0, "_RunTimeValues" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::GlobalVariable_O/2415
{ class_kind, STAMPWTAG_llvmo__GlobalVariable_O, sizeof(llvmo::GlobalVariable_O), 0, IS_POLYMORPHIC, "llvmo::GlobalVariable_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::GlobalVariable_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::GlobalVariable_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_PtrIsOwned" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::GlobalVariable_O),_PtrIsOwned), 0, "_PtrIsOwned" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::BlockAddress_O/2419
{ class_kind, STAMPWTAG_llvmo__BlockAddress_O, sizeof(llvmo::BlockAddress_O), 0, IS_POLYMORPHIC, "llvmo::BlockAddress_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::BlockAddress_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::BlockAddress_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ConstantStruct_O/2423
{ class_kind, STAMPWTAG_llvmo__ConstantStruct_O, sizeof(llvmo::ConstantStruct_O), 0, IS_POLYMORPHIC, "llvmo::ConstantStruct_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantStruct_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantStruct_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ConstantInt_O/2427
{ class_kind, STAMPWTAG_llvmo__ConstantInt_O, sizeof(llvmo::ConstantInt_O), 0, IS_POLYMORPHIC, "llvmo::ConstantInt_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantInt_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantInt_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ConstantFP_O/2431
{ class_kind, STAMPWTAG_llvmo__ConstantFP_O, sizeof(llvmo::ConstantFP_O), 0, IS_POLYMORPHIC, "llvmo::ConstantFP_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantFP_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantFP_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ConstantPointerNull_O/2435
{ class_kind, STAMPWTAG_llvmo__ConstantPointerNull_O, sizeof(llvmo::ConstantPointerNull_O), 0, IS_POLYMORPHIC, "llvmo::ConstantPointerNull_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantPointerNull_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantPointerNull_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ConstantDataSequential_O/2439
{ class_kind, STAMPWTAG_llvmo__ConstantDataSequential_O, sizeof(llvmo::ConstantDataSequential_O), 0, IS_POLYMORPHIC, "llvmo::ConstantDataSequential_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantDataSequential_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantDataSequential_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ConstantDataArray_O/2443
{ class_kind, STAMPWTAG_llvmo__ConstantDataArray_O, sizeof(llvmo::ConstantDataArray_O), 0, IS_POLYMORPHIC, "llvmo::ConstantDataArray_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantDataArray_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantDataArray_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ConstantExpr_O/2447
{ class_kind, STAMPWTAG_llvmo__ConstantExpr_O, sizeof(llvmo::ConstantExpr_O), 0, IS_POLYMORPHIC, "llvmo::ConstantExpr_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantExpr_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantExpr_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::UndefValue_O/2451
{ class_kind, STAMPWTAG_llvmo__UndefValue_O, sizeof(llvmo::UndefValue_O), 0, IS_POLYMORPHIC, "llvmo::UndefValue_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::UndefValue_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::UndefValue_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ConstantArray_O/2455
{ class_kind, STAMPWTAG_llvmo__ConstantArray_O, sizeof(llvmo::ConstantArray_O), 0, IS_POLYMORPHIC, "llvmo::ConstantArray_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantArray_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ConstantArray_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::Argument_O/2459
{ class_kind, STAMPWTAG_llvmo__Argument_O, sizeof(llvmo::Argument_O), 0, IS_POLYMORPHIC, "llvmo::Argument_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Argument_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Argument_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::BasicBlock_O/2463
{ class_kind, STAMPWTAG_llvmo__BasicBlock_O, sizeof(llvmo::BasicBlock_O), 0, IS_POLYMORPHIC, "llvmo::BasicBlock_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::BasicBlock_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::BasicBlock_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::MetadataAsValue_O/2467
{ class_kind, STAMPWTAG_llvmo__MetadataAsValue_O, sizeof(llvmo::MetadataAsValue_O), 0, IS_POLYMORPHIC, "llvmo::MetadataAsValue_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MetadataAsValue_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Value" :NAME "Value"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MetadataAsValue_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ThreadSafeContext_O/2471
{ class_kind, STAMPWTAG_llvmo__ThreadSafeContext_O, sizeof(llvmo::ThreadSafeContext_O), 0, IS_POLYMORPHIC, "llvmo::ThreadSafeContext_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ThreadSafeContext_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::orc::ThreadSafeContext" :NAME "ThreadSafeContext"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ThreadSafeContext_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::TargetMachine_O/2475
{ class_kind, STAMPWTAG_llvmo__TargetMachine_O, sizeof(llvmo::TargetMachine_O), 0, IS_POLYMORPHIC, "llvmo::TargetMachine_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetMachine_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::TargetMachine" :NAME "TargetMachine"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetMachine_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::LLVMTargetMachine_O/2479
{ class_kind, STAMPWTAG_llvmo__LLVMTargetMachine_O, sizeof(llvmo::LLVMTargetMachine_O), 0, IS_POLYMORPHIC, "llvmo::LLVMTargetMachine_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LLVMTargetMachine_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::TargetMachine" :NAME "TargetMachine"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LLVMTargetMachine_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::Triple_O/2483
{ class_kind, STAMPWTAG_llvmo__Triple_O, sizeof(llvmo::Triple_O), 0, IS_POLYMORPHIC, "llvmo::Triple_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Triple_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Triple" :NAME "Triple"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Triple_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::LLVMContext_O/2487
{ class_kind, STAMPWTAG_llvmo__LLVMContext_O, sizeof(llvmo::LLVMContext_O), 0, IS_POLYMORPHIC, "llvmo::LLVMContext_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LLVMContext_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::LLVMContext" :NAME "LLVMContext"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::LLVMContext_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = llvmo::PassManagerBuilder_O/2491
{ class_kind, STAMPWTAG_llvmo__PassManagerBuilder_O, sizeof(llvmo::PassManagerBuilder_O), 0, IS_POLYMORPHIC, "llvmo::PassManagerBuilder_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PassManagerBuilder_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::PassManagerBuilder" :NAME "PassManagerBuilder"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PassManagerBuilder_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ExecutionEngine_O/2495
{ class_kind, STAMPWTAG_llvmo__ExecutionEngine_O, sizeof(llvmo::ExecutionEngine_O), 0, IS_POLYMORPHIC, "llvmo::ExecutionEngine_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ExecutionEngine_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::ExecutionEngine" :NAME "ExecutionEngine"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ExecutionEngine_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_DependentModules" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ExecutionEngine_O),_DependentModules), 0, "_DependentModules" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::Type_O/2499
{ class_kind, STAMPWTAG_llvmo__Type_O, sizeof(llvmo::Type_O), 0, IS_POLYMORPHIC, "llvmo::Type_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Type_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Type" :NAME "Type"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Type_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::PointerType_O/2503
{ class_kind, STAMPWTAG_llvmo__PointerType_O, sizeof(llvmo::PointerType_O), 0, IS_POLYMORPHIC, "llvmo::PointerType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PointerType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Type" :NAME "Type"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::PointerType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ArrayType_O/2507
{ class_kind, STAMPWTAG_llvmo__ArrayType_O, sizeof(llvmo::ArrayType_O), 0, IS_POLYMORPHIC, "llvmo::ArrayType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ArrayType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Type" :NAME "Type"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ArrayType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::FunctionType_O/2511
{ class_kind, STAMPWTAG_llvmo__FunctionType_O, sizeof(llvmo::FunctionType_O), 0, IS_POLYMORPHIC, "llvmo::FunctionType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FunctionType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Type" :NAME "Type"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::FunctionType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::IntegerType_O/2515
{ class_kind, STAMPWTAG_llvmo__IntegerType_O, sizeof(llvmo::IntegerType_O), 0, IS_POLYMORPHIC, "llvmo::IntegerType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IntegerType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Type" :NAME "Type"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::IntegerType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::VectorType_O/2519
{ class_kind, STAMPWTAG_llvmo__VectorType_O, sizeof(llvmo::VectorType_O), 0, IS_POLYMORPHIC, "llvmo::VectorType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::VectorType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Type" :NAME "Type"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::VectorType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::StructType_O/2523
{ class_kind, STAMPWTAG_llvmo__StructType_O, sizeof(llvmo::StructType_O), 0, IS_POLYMORPHIC, "llvmo::StructType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::StructType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Type" :NAME "Type"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::StructType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::TargetPassConfig_O/2527
{ class_kind, STAMPWTAG_llvmo__TargetPassConfig_O, sizeof(llvmo::TargetPassConfig_O), 0, IS_POLYMORPHIC, "llvmo::TargetPassConfig_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetPassConfig_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::TargetPassConfig" :NAME "TargetPassConfig"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetPassConfig_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::APFloat_O/2531
{ class_kind, STAMPWTAG_llvmo__APFloat_O, sizeof(llvmo::APFloat_O), 0, IS_POLYMORPHIC, "llvmo::APFloat_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::APFloat_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_valueP" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::APFloat" :NAME "APFloat"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::APFloat_O),_valueP), 0, "_valueP" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = llvmo::Metadata_O/2535
{ class_kind, STAMPWTAG_llvmo__Metadata_O, sizeof(llvmo::Metadata_O), 0, IS_POLYMORPHIC, "llvmo::Metadata_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Metadata_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Metadata_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::MDNode_O/2539
{ class_kind, STAMPWTAG_llvmo__MDNode_O, sizeof(llvmo::MDNode_O), 0, IS_POLYMORPHIC, "llvmo::MDNode_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MDNode_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MDNode_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DILocation_O/2543
{ class_kind, STAMPWTAG_llvmo__DILocation_O, sizeof(llvmo::DILocation_O), 0, IS_POLYMORPHIC, "llvmo::DILocation_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILocation_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILocation_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DINode_O/2547
{ class_kind, STAMPWTAG_llvmo__DINode_O, sizeof(llvmo::DINode_O), 0, IS_POLYMORPHIC, "llvmo::DINode_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DINode_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DINode_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DIVariable_O/2551
{ class_kind, STAMPWTAG_llvmo__DIVariable_O, sizeof(llvmo::DIVariable_O), 0, IS_POLYMORPHIC, "llvmo::DIVariable_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIVariable_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIVariable_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DILocalVariable_O/2555
{ class_kind, STAMPWTAG_llvmo__DILocalVariable_O, sizeof(llvmo::DILocalVariable_O), 0, IS_POLYMORPHIC, "llvmo::DILocalVariable_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILocalVariable_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILocalVariable_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DIScope_O/2559
{ class_kind, STAMPWTAG_llvmo__DIScope_O, sizeof(llvmo::DIScope_O), 0, IS_POLYMORPHIC, "llvmo::DIScope_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIScope_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIScope_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DIFile_O/2563
{ class_kind, STAMPWTAG_llvmo__DIFile_O, sizeof(llvmo::DIFile_O), 0, IS_POLYMORPHIC, "llvmo::DIFile_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIFile_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIFile_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DILocalScope_O/2567
{ class_kind, STAMPWTAG_llvmo__DILocalScope_O, sizeof(llvmo::DILocalScope_O), 0, IS_POLYMORPHIC, "llvmo::DILocalScope_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILocalScope_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILocalScope_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DISubprogram_O/2571
{ class_kind, STAMPWTAG_llvmo__DISubprogram_O, sizeof(llvmo::DISubprogram_O), 0, IS_POLYMORPHIC, "llvmo::DISubprogram_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DISubprogram_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DISubprogram_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DILexicalBlockBase_O/2575
{ class_kind, STAMPWTAG_llvmo__DILexicalBlockBase_O, sizeof(llvmo::DILexicalBlockBase_O), 0, IS_POLYMORPHIC, "llvmo::DILexicalBlockBase_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILexicalBlockBase_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILexicalBlockBase_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DILexicalBlock_O/2579
{ class_kind, STAMPWTAG_llvmo__DILexicalBlock_O, sizeof(llvmo::DILexicalBlock_O), 0, IS_POLYMORPHIC, "llvmo::DILexicalBlock_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILexicalBlock_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DILexicalBlock_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DICompileUnit_O/2583
{ class_kind, STAMPWTAG_llvmo__DICompileUnit_O, sizeof(llvmo::DICompileUnit_O), 0, IS_POLYMORPHIC, "llvmo::DICompileUnit_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DICompileUnit_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DICompileUnit_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DIType_O/2587
{ class_kind, STAMPWTAG_llvmo__DIType_O, sizeof(llvmo::DIType_O), 0, IS_POLYMORPHIC, "llvmo::DIType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DICompositeType_O/2591
{ class_kind, STAMPWTAG_llvmo__DICompositeType_O, sizeof(llvmo::DICompositeType_O), 0, IS_POLYMORPHIC, "llvmo::DICompositeType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DICompositeType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DICompositeType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DIDerivedType_O/2595
{ class_kind, STAMPWTAG_llvmo__DIDerivedType_O, sizeof(llvmo::DIDerivedType_O), 0, IS_POLYMORPHIC, "llvmo::DIDerivedType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIDerivedType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIDerivedType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DISubroutineType_O/2599
{ class_kind, STAMPWTAG_llvmo__DISubroutineType_O, sizeof(llvmo::DISubroutineType_O), 0, IS_POLYMORPHIC, "llvmo::DISubroutineType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DISubroutineType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DISubroutineType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DIBasicType_O/2603
{ class_kind, STAMPWTAG_llvmo__DIBasicType_O, sizeof(llvmo::DIBasicType_O), 0, IS_POLYMORPHIC, "llvmo::DIBasicType_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIBasicType_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIBasicType_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DIExpression_O/2607
{ class_kind, STAMPWTAG_llvmo__DIExpression_O, sizeof(llvmo::DIExpression_O), 0, IS_POLYMORPHIC, "llvmo::DIExpression_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIExpression_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DIExpression_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::ValueAsMetadata_O/2611
{ class_kind, STAMPWTAG_llvmo__ValueAsMetadata_O, sizeof(llvmo::ValueAsMetadata_O), 0, IS_POLYMORPHIC, "llvmo::ValueAsMetadata_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ValueAsMetadata_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::ValueAsMetadata_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::MDString_O/2615
{ class_kind, STAMPWTAG_llvmo__MDString_O, sizeof(llvmo::MDString_O), 0, IS_POLYMORPHIC, "llvmo::MDString_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MDString_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Metadata" :NAME "Metadata"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::MDString_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Test_O/2619
{ class_kind, STAMPWTAG_core__Test_O, sizeof(core::Test_O), 0, IS_POLYMORPHIC, "core::Test_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Test_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Test" :NAME "Test"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Test_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::NamedMDNode_O/2623
{ class_kind, STAMPWTAG_llvmo__NamedMDNode_O, sizeof(llvmo::NamedMDNode_O), 0, IS_POLYMORPHIC, "llvmo::NamedMDNode_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::NamedMDNode_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::NamedMDNode" :NAME "NamedMDNode"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::NamedMDNode_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::DWARFContext_O/2627
{ class_kind, STAMPWTAG_llvmo__DWARFContext_O, sizeof(llvmo::DWARFContext_O), 0, IS_POLYMORPHIC, "llvmo::DWARFContext_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DWARFContext_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::DWARFContext" :NAME "DWARFContext"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::DWARFContext_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::TargetOptions_O/2631
{ class_kind, STAMPWTAG_llvmo__TargetOptions_O, sizeof(llvmo::TargetOptions_O), 0, IS_POLYMORPHIC, "llvmo::TargetOptions_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetOptions_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::TargetOptions" :NAME "TargetOptions"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::TargetOptions_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::Module_O/2635
{ class_kind, STAMPWTAG_llvmo__Module_O, sizeof(llvmo::Module_O), 0, IS_POLYMORPHIC, "llvmo::Module_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Module_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_Id" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Module_O),_Id), 0, "_Id" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Module" :NAME "Module"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Module_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_UniqueGlobalVariableStrings" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Module_O),_UniqueGlobalVariableStrings), 0, "_UniqueGlobalVariableStrings" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = llvmo::Target_O/2639
{ class_kind, STAMPWTAG_llvmo__Target_O, sizeof(llvmo::Target_O), 0, IS_POLYMORPHIC, "llvmo::Target_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Target_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Target" :NAME "Target"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Target_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = llvmo::Linker_O/2643
{ class_kind, STAMPWTAG_llvmo__Linker_O, sizeof(llvmo::Linker_O), 0, IS_POLYMORPHIC, "llvmo::Linker_O" },
//      field: "_Class" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Linker_O),_Class), 0, "_Class" }, // atomic: NIL public: (NIL) fixable: SMART-PTR-FIX good-name: T
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PROTECTED   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "llvm::Linker" :NAME "Linker"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(llvmo::Linker_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Rack_O/2647
{ class_kind, STAMPWTAG_core__Rack_O, sizeof(core::Rack_O), 0, IS_POLYMORPHIC, "core::Rack_O" },
//      field: "_ShiftedStamp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
 {  fixed_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Rack_O),_ShiftedStamp), 0, "_ShiftedStamp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Sig" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Rack_O),_Sig), 0, "_Sig" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(core::Rack_O),_Slots._Data), 0, "_Slots._Data" },
 {  variable_capacity, sizeof(std::atomic<gctools::smart_ptr<core::T_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Rack_O),_Slots._Length), __builtin_offsetof(SAFE_TYPE_MACRO(core::Rack_O),_Slots._Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
*/
/* (ctype-key (base one)) -> "std::atomic<gctools::smart_ptr<core::T_O>>"
*/
// atomic-smart-ptr-p -> T
// one -> #<ATOMIC-SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))>
{    variable_field, ATOMIC_SMART_PTR_OFFSET, sizeof(std::atomic<gctools::smart_ptr<core::T_O>>), 0, 0, "only" },
// StampWtag = core::SmallMultimap_O/2651
{ class_kind, STAMPWTAG_core__SmallMultimap_O, sizeof(core::SmallMultimap_O), 0, IS_POLYMORPHIC, "core::SmallMultimap_O" },
//      field: "map" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallMultimap<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>,core::SymbolComparer>" :NAME "SmallMultimap" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 2 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolComparer" :NAME "SymbolComparer") :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>>" :SPECIALIZER "class gctools::GCVector_moveable<struct std::pair<class gctools::smart_ptr<core::Symbol_O>, class gctools::smart_ptr<core::T_O> > >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SmallMultimap_O),map._Contents), 0, "map._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = core::Scope_O/2655
{ class_kind, STAMPWTAG_core__Scope_O, sizeof(core::Scope_O), 0, IS_POLYMORPHIC, "core::Scope_O" },
// StampWtag = core::FileScope_O/2659
{ class_kind, STAMPWTAG_core__FileScope_O, sizeof(core::FileScope_O), 0, IS_POLYMORPHIC, "core::FileScope_O" },
//      field: "_pathname" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Pathname_O>" :SPECIALIZER "class core::Pathname_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Pathname_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileScope_O),_pathname), 0, "_pathname" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_PermanentPathName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileScope_O),_PermanentPathName), 0, "_PermanentPathName" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PermanentFileName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileScope_O),_PermanentFileName), 0, "_PermanentFileName" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FileHandle" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileScope_O),_FileHandle), 0, "_FileHandle" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::Path_O/2663
{ class_kind, STAMPWTAG_core__Path_O, sizeof(core::Path_O), 0, IS_POLYMORPHIC, "core::Path_O" },
//      field: "_Path" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::DONT-EXPOSE-CTYPE :KEY "dont_expose<boost::filesystem::path>" :NAME "dont_expose" :ARGUMENT (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::filesystem::path" :NAME "path") :INTEGRAL-VALUE NIL)))
 {  fixed_field, DONT_EXPOSE_OFFSET, sizeof(boost::filesystem::path), __builtin_offsetof(SAFE_TYPE_MACRO(core::Path_O),_Path), 0, "_Path" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Pathname_O/2667
{ class_kind, STAMPWTAG_core__Pathname_O, sizeof(core::Pathname_O), 0, IS_POLYMORPHIC, "core::Pathname_O" },
//      field: "_Host" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Host), 0, "_Host" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Device" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Device), 0, "_Device" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Directory" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Directory), 0, "_Directory" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Type), 0, "_Type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Version" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Pathname_O),_Version), 0, "_Version" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::LogicalPathname_O/2671
{ class_kind, STAMPWTAG_core__LogicalPathname_O, sizeof(core::LogicalPathname_O), 0, IS_POLYMORPHIC, "core::LogicalPathname_O" },
//      field: "_Host" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Host), 0, "_Host" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Device" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Device), 0, "_Device" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Directory" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Directory), 0, "_Directory" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Type), 0, "_Type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Version" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::LogicalPathname_O),_Version), 0, "_Version" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::Stream_O/2675
{ class_kind, STAMPWTAG_core__Stream_O, sizeof(core::Stream_O), 0, IS_POLYMORPHIC, "core::Stream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Stream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = core::AnsiStream_O/2679
{ class_kind, STAMPWTAG_core__AnsiStream_O, sizeof(core::AnsiStream_O), 0, IS_POLYMORPHIC, "core::AnsiStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AnsiStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = core::TwoWayStream_O/2683
{ class_kind, STAMPWTAG_core__TwoWayStream_O, sizeof(core::TwoWayStream_O), 0, IS_POLYMORPHIC, "core::TwoWayStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_In" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_In), 0, "_In" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Out" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::TwoWayStream_O),_Out), 0, "_Out" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::SynonymStream_O/2687
{ class_kind, STAMPWTAG_core__SynonymStream_O, sizeof(core::SynonymStream_O), 0, IS_POLYMORPHIC, "core::SynonymStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_SynonymSymbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SynonymStream_O),_SynonymSymbol), 0, "_SynonymSymbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::StringStream_O/2691
{ class_kind, STAMPWTAG_core__StringStream_O, sizeof(core::StringStream_O), 0, IS_POLYMORPHIC, "core::StringStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = core::StringOutputStream_O/2695
{ class_kind, STAMPWTAG_core__StringOutputStream_O, sizeof(core::StringOutputStream_O), 0, IS_POLYMORPHIC, "core::StringOutputStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringOutputStream_O),_Contents), 0, "_Contents" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::StringInputStream_O/2699
{ class_kind, STAMPWTAG_core__StringInputStream_O, sizeof(core::StringInputStream_O), 0, IS_POLYMORPHIC, "core::StringInputStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_Contents), 0, "_Contents" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_InputPosition" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")
 {  fixed_field, ctype_long, sizeof(long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputPosition), 0, "_InputPosition" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputLimit" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")
 {  fixed_field, ctype_long, sizeof(long), __builtin_offsetof(SAFE_TYPE_MACRO(core::StringInputStream_O),_InputLimit), 0, "_InputLimit" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::EchoStream_O/2703
{ class_kind, STAMPWTAG_core__EchoStream_O, sizeof(core::EchoStream_O), 0, IS_POLYMORPHIC, "core::EchoStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_In" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_In), 0, "_In" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Out" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::EchoStream_O),_Out), 0, "_Out" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::ConcatenatedStream_O/2707
{ class_kind, STAMPWTAG_core__ConcatenatedStream_O, sizeof(core::ConcatenatedStream_O), 0, IS_POLYMORPHIC, "core::ConcatenatedStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_List" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::ConcatenatedStream_O),_List), 0, "_List" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::FileStream_O/2711
{ class_kind, STAMPWTAG_core__FileStream_O, sizeof(core::FileStream_O), 0, IS_POLYMORPHIC, "core::FileStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Filename" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_Filename), 0, "_Filename" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ElementType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::FileStream_O),_ElementType), 0, "_ElementType" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::IOFileStream_O/2715
{ class_kind, STAMPWTAG_core__IOFileStream_O, sizeof(core::IOFileStream_O), 0, IS_POLYMORPHIC, "core::IOFileStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Filename" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_Filename), 0, "_Filename" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ElementType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_ElementType), 0, "_ElementType" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_FileDescriptor" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOFileStream_O),_FileDescriptor), 0, "_FileDescriptor" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::IOStreamStream_O/2719
{ class_kind, STAMPWTAG_core__IOStreamStream_O, sizeof(core::IOStreamStream_O), 0, IS_POLYMORPHIC, "core::IOStreamStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Filename" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_Filename), 0, "_Filename" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ElementType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_ElementType), 0, "_ElementType" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_File" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "_IO_FILE" :NAME "_IO_FILE"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::IOStreamStream_O),_File), 0, "_File" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::BroadcastStream_O/2723
{ class_kind, STAMPWTAG_core__BroadcastStream_O, sizeof(core::BroadcastStream_O), 0, IS_POLYMORPHIC, "core::BroadcastStream_O" },
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.write_byte8), 0, "ops.write_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte8" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, unsigned char *, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.read_byte8), 0, "ops.read_byte8" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.write_byte), 0, "ops.write_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_byte" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.read_byte), 0, "ops.read_byte" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.read_char), 0, "ops.read_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.write_char), 0, "ops.write_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".unread_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.unread_char), 0, "ops.unread_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".peek_char" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.peek_char), 0, "ops.peek_char" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".read_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.read_vector), 0, "ops.read_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".write_vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "long (gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>, long, long)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.write_vector), 0, "ops.write_vector" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".listen" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.listen), 0, "ops.listen" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_input" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.clear_input), 0, "ops.clear_input" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".clear_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.clear_output), 0, "ops.clear_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".finish_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.finish_output), 0, "ops.finish_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".force_output" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.force_output), 0, "ops.force_output" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".input_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.input_p), 0, "ops.input_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".output_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.output_p), 0, "ops.output_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".interactive_p" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.interactive_p), 0, "ops.interactive_p" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".element_type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.element_type), 0, "ops.element_type" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".length" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.length), 0, "ops.length" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".get_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.get_position), 0, "ops.get_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".set_position" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>, class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.set_position), 0, "ops.set_position" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.column), 0, "ops.column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "ops" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::FileOps" :NAME "FileOps")
//      field: ".close" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "gctools::smart_ptr<core::T_O> (class gctools::smart_ptr<core::T_O>)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),ops.close), 0, "ops.close" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Closed" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Closed), 0, "_Closed" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Buffer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "char"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Buffer), 0, "_Buffer" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Format" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Format), 0, "_Format" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ByteSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_ByteSize), 0, "_ByteSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Flags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Flags), 0, "_Flags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ByteStack" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_ByteStack), 0, "_ByteStack" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Encoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "int (gctools::smart_ptr<core::T_O>, unsigned char *, unsigned int)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Encoder), 0, "_Encoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Decoder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "unsigned int (gctools::smart_ptr<core::T_O>, unsigned char **, unsigned char *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Decoder), 0, "_Decoder" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_FormatTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_FormatTable), 0, "_FormatTable" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_EofChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_EofChar), 0, "_EofChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastOp" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_LastOp), 0, "_LastOp" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LastChar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_LastChar), 0, "_LastChar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ExternalFormat" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_ExternalFormat), 0, "_ExternalFormat" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_OutputColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_OutputColumn), 0, "_OutputColumn" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._CursorIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._CursorIsValid), 0, "_InputCursor._CursorIsValid" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._LineNumber), 0, "_InputCursor._LineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._Column" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._Column), 0, "_InputCursor._Column" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevLineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long long")
 {  fixed_field, ctype_long_long, sizeof(long long), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._PrevLineNumber), 0, "_InputCursor._PrevLineNumber" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_InputCursor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::StreamCursor" :NAME "StreamCursor")
//      field: "._PrevColumn" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_InputCursor._PrevColumn), 0, "_InputCursor._PrevColumn" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Streams" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::BroadcastStream_O),_Streams), 0, "_Streams" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = core::Package_O/2727
{ class_kind, STAMPWTAG_core__Package_O, sizeof(core::Package_O), 0, IS_POLYMORPHIC, "core::Package_O" },
//      field: "_InternalSymbols" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_InternalSymbols), 0, "_InternalSymbols" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_ExternalSymbols" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_ExternalSymbols), 0, "_ExternalSymbols" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Shadowing" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_Shadowing), 0, "_Shadowing" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleString_O>" :SPECIALIZER "class core::SimpleString_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleString_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_Name), 0, "_Name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_UsingPackages" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Package_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Package_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class core::Package_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_UsingPackages._Vector._Contents), 0, "_UsingPackages._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_PackagesUsedBy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Package_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Package_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class core::Package_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_PackagesUsedBy._Vector._Contents), 0, "_PackagesUsedBy._Vector._Contents" }, // atomic: NIL public: (T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_KeywordPackage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<_Bool>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool"))
 {  fixed_field, ATOMIC_POD_OFFSET__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_KeywordPackage), 0, "_KeywordPackage" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_AmpPackage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<_Bool>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool"))
 {  fixed_field, ATOMIC_POD_OFFSET__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_AmpPackage), 0, "_AmpPackage" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_ActsLikeKeywordPackage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<_Bool>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool"))
 {  fixed_field, ATOMIC_POD_OFFSET__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_ActsLikeKeywordPackage), 0, "_ActsLikeKeywordPackage" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Nicknames" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_Nicknames), 0, "_Nicknames" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_LocalNicknames" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_LocalNicknames), 0, "_LocalNicknames" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Documentation" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_Documentation), 0, "_Documentation" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Lock" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SHARED-MUTEX-CTYPE :KEY "mp::SharedMutex" :NAME "SharedMutex")
 {  fixed_field, CXX_SHARED_MUTEX_OFFSET, sizeof(mp::SharedMutex), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),_Lock), 0, "_Lock" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "systemLockedP" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),systemLockedP), 0, "systemLockedP" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "userLockedP" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),userLockedP), 0, "userLockedP" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "zombieP" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Package_O),zombieP), 0, "zombieP" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::FileStatus_O/2731
{ class_kind, STAMPWTAG_core__FileStatus_O, sizeof(core::FileStatus_O), 0, IS_POLYMORPHIC, "core::FileStatus_O" },
// StampWtag = core::InvocationHistoryFrameIterator_O/2735
{ class_kind, STAMPWTAG_core__InvocationHistoryFrameIterator_O, sizeof(core::InvocationHistoryFrameIterator_O), 0, IS_POLYMORPHIC, "core::InvocationHistoryFrameIterator_O" },
//      field: "_Frame" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::InvocationHistoryFrame" :NAME "InvocationHistoryFrame"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::InvocationHistoryFrameIterator_O),_Frame), 0, "_Frame" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
//      field: "_Index" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::InvocationHistoryFrameIterator_O),_Index), 0, "_Index" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::DirectoryEntry_O/2739
{ class_kind, STAMPWTAG_core__DirectoryEntry_O, sizeof(core::DirectoryEntry_O), 0, IS_POLYMORPHIC, "core::DirectoryEntry_O" },
//      field: "_Entry" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "boost::filesystem::directory_entry" :NAME "directory_entry"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::DirectoryEntry_O),_Entry), 0, "_Entry" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::LightUserData_O/2743
{ class_kind, STAMPWTAG_core__LightUserData_O, sizeof(core::LightUserData_O), 0, IS_POLYMORPHIC, "core::LightUserData_O" },
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::LightUserData_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::UserData_O/2747
{ class_kind, STAMPWTAG_core__UserData_O, sizeof(core::UserData_O), 0, IS_POLYMORPHIC, "core::UserData_O" },
//      field: "_ptr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "void"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::UserData_O),_ptr), 0, "_ptr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Dtor" (instance-field-access iv) -> CLANG-AST:AS-PRIVATE   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::FUNCTION-PROTO-CTYPE :KEY "void (void *)"))
 {  fixed_field, RAW_POINTER_OFFSET, sizeof(UnknownType), __builtin_offsetof(SAFE_TYPE_MACRO(core::UserData_O),_Dtor), 0, "_Dtor" }, // atomic: NIL public: (NIL) fixable: NIL good-name: T
// StampWtag = core::Cons_O/2751
{ class_kind, STAMPWTAG_core__Cons_O, sizeof(core::Cons_O), 0, 0, "core::Cons_O" },
//      field: "_Car" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Cons_O),_Car), 0, "_Car" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Cdr" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Cons_O),_Cdr), 0, "_Cdr" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = core::VaList_dummy_O/2755
{ class_kind, STAMPWTAG_core__VaList_dummy_O, sizeof(core::VaList_dummy_O), 0, 0, "core::VaList_dummy_O" },
// StampWtag = core::Lisp_O/2759
{ class_kind, STAMPWTAG_core__Lisp_O, sizeof(core::Lisp_O), 0, IS_POLYMORPHIC, "core::Lisp_O" },
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._TrueObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TrueObject), 0, "_Roots._TrueObject" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._NilObject" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._NilObject), 0, "_Roots._NilObject" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._ClaspJIT" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClaspJIT), 0, "_Roots._ClaspJIT" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._JITDylibs" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._JITDylibs), 0, "_Roots._JITDylibs" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._AllLibraries" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._AllLibraries), 0, "_Roots._AllLibraries" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._AllObjectFiles" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._AllObjectFiles), 0, "_Roots._AllObjectFiles" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._UnboundSymbolFunctionEntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnboundSymbolFunctionEntryPoint), 0, "_Roots._UnboundSymbolFunctionEntryPoint" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._UnboundSetfSymbolFunctionEntryPoint" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::GlobalEntryPoint_O>" :SPECIALIZER "class core::GlobalEntryPoint_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::GlobalEntryPoint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnboundSetfSymbolFunctionEntryPoint), 0, "_Roots._UnboundSetfSymbolFunctionEntryPoint" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._TerminalIO" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TerminalIO), 0, "_Roots._TerminalIO" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._ActiveThreads" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ActiveThreads), 0, "_Roots._ActiveThreads" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._DefaultSpecialBindings" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DefaultSpecialBindings), 0, "_Roots._DefaultSpecialBindings" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._Finalizers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::WeakKeyHashTable_O>" :SPECIALIZER "class core::WeakKeyHashTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::WeakKeyHashTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._Finalizers), 0, "_Roots._Finalizers" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._Sysprop" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTable_O>" :SPECIALIZER "class core::HashTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._Sysprop), 0, "_Roots._Sysprop" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._ClassTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTable_O>" :SPECIALIZER "class core::HashTable_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTable_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassTable), 0, "_Roots._ClassTable" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._IntegerOverflowAdjust" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Integer_O>" :SPECIALIZER "class core::Integer_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Integer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._IntegerOverflowAdjust), 0, "_Roots._IntegerOverflowAdjust" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: ".charInfo" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::CharacterInfo" :NAME "CharacterInfo")
//      field: "._NamesToCharacterIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.charInfo._NamesToCharacterIndex), 0, "_Roots.charInfo._NamesToCharacterIndex" }, // atomic: NIL public: (T T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: ".charInfo" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::CharacterInfo" :NAME "CharacterInfo")
//      field: ".gIndexedCharacters" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::T_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::T_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::T_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.charInfo.gIndexedCharacters._Vector._Contents), 0, "_Roots.charInfo.gIndexedCharacters._Vector._Contents" }, // atomic: NIL public: (T T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: ".charInfo" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::CharacterInfo" :NAME "CharacterInfo")
//      field: ".gCharacterNames" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::T_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::T_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::T_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.charInfo.gCharacterNames._Vector._Contents), 0, "_Roots.charInfo.gCharacterNames._Vector._Contents" }, // atomic: NIL public: (T T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._ClassSymbolsHolderUnshiftedNowhere" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Symbol_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Symbol_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::Symbol_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassSymbolsHolderUnshiftedNowhere._Vector._Contents), 0, "_Roots._ClassSymbolsHolderUnshiftedNowhere._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: ".staticClassesUnshiftedNowhere" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Instance_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Instance_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class core::Instance_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.staticClassesUnshiftedNowhere._Vector._Contents), 0, "_Roots.staticClassesUnshiftedNowhere._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: ".staticClassSymbolsUnshiftedNowhere" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Symbol_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Symbol_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<core::Symbol_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.staticClassSymbolsUnshiftedNowhere._Vector._Contents), 0, "_Roots.staticClassSymbolsUnshiftedNowhere._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: ".staticInstanceCreatorsUnshiftedNowhere" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Creator_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Creator_O>" :SPECIALIZER "class core::Creator_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Creator_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Creator_O>" :SPECIALIZER "class core::Creator_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Creator_O>" :SPECIALIZER "class core::Creator_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class core::Creator_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.staticInstanceCreatorsUnshiftedNowhere._Vector._Contents), 0, "_Roots.staticInstanceCreatorsUnshiftedNowhere._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._SourceFiles" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::FileScope_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FileScope_O>" :SPECIALIZER "class core::FileScope_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::FileScope_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FileScope_O>" :SPECIALIZER "class core::FileScope_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FileScope_O>" :SPECIALIZER "class core::FileScope_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class core::FileScope_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFiles._Vector._Contents), 0, "_Roots._SourceFiles._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: ".bootClassTable" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<core::SymbolClassHolderPair>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolClassHolderPair" :NAME "SymbolClassHolderPair") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<core::SymbolClassHolderPair,gctools::GCContainerAllocator<gctools::GCVector_moveable<core::SymbolClassHolderPair>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolClassHolderPair" :NAME "SymbolClassHolderPair") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<core::SymbolClassHolderPair>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<core::SymbolClassHolderPair>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolClassHolderPair" :NAME "SymbolClassHolderPair") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<core::SymbolClassHolderPair>>" :SPECIALIZER "class gctools::GCVector_moveable<class core::SymbolClassHolderPair>")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<core::SymbolClassHolderPair>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots.bootClassTable._Vector._Contents), 0, "_Roots.bootClassTable._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._MpiWorld" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<mpip::Mpi_O>" :SPECIALIZER "class mpip::Mpi_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<mpip::Mpi_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MpiWorld), 0, "_Roots._MpiWorld" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._ClassMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<clbind::ClassRep_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clbind::ClassRep_O>" :SPECIALIZER "class clbind::ClassRep_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<clbind::ClassRep_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clbind::ClassRep_O>" :SPECIALIZER "class clbind::ClassRep_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clbind::ClassRep_O>" :SPECIALIZER "class clbind::ClassRep_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class clbind::ClassRep_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ClassMap._Vector._Contents), 0, "_Roots._ClassMap._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._TheClass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheClass), 0, "_Roots._TheClass" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._TheBuiltInClass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheBuiltInClass), 0, "_Roots._TheBuiltInClass" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._TheStandardClass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheStandardClass), 0, "_Roots._TheStandardClass" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._TheStructureClass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheStructureClass), 0, "_Roots._TheStructureClass" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._TheDerivableCxxClass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheDerivableCxxClass), 0, "_Roots._TheDerivableCxxClass" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._TheClbindCxxClass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._TheClbindCxxClass), 0, "_Roots._TheClbindCxxClass" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._CorePackage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._CorePackage), 0, "_Roots._CorePackage" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._KeywordPackage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._KeywordPackage), 0, "_Roots._KeywordPackage" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._CommonLispPackage" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._CommonLispPackage), 0, "_Roots._CommonLispPackage" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._SpecialForms" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEq_O>" :SPECIALIZER "class core::HashTableEq_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEq_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SpecialForms), 0, "_Roots._SpecialForms" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._SingleDispatchGenericFunctions" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
 {  fixed_field, ATOMIC_SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleDispatchGenericFunctions), 0, "_Roots._SingleDispatchGenericFunctions" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._Packages" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<gctools::smart_ptr<core::Package_O>>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL)))
//      field: "._Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<gctools::smart_ptr<core::Package_O>,gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//      field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class core::Package_O> >")
 {  fixed_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._Packages._Vector._Contents), 0, "_Roots._Packages._Vector._Contents" }, // atomic: NIL public: (T T T T) fixable: TAGGED-POINTER-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._RehashSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._RehashSize), 0, "_Roots._RehashSize" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._RehashThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._RehashThreshold), 0, "_Roots._RehashThreshold" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._NullStream" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._NullStream), 0, "_Roots._NullStream" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._ThePathnameTranslations" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ThePathnameTranslations), 0, "_Roots._ThePathnameTranslations" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._ImaginaryUnit" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Complex_O>" :SPECIALIZER "class core::Complex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Complex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ImaginaryUnit), 0, "_Roots._ImaginaryUnit" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._ImaginaryUnitNegative" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Complex_O>" :SPECIALIZER "class core::Complex_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Complex_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._ImaginaryUnitNegative), 0, "_Roots._ImaginaryUnitNegative" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._PlusHalf" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Ratio_O>" :SPECIALIZER "class core::Ratio_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Ratio_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PlusHalf), 0, "_Roots._PlusHalf" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._MinusHalf" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Ratio_O>" :SPECIALIZER "class core::Ratio_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Ratio_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._MinusHalf), 0, "_Roots._MinusHalf" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._SingleFloatMinusZero" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SingleFloat_I>" :SPECIALIZER "class core::SingleFloat_I")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SingleFloat_I>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleFloatMinusZero), 0, "_Roots._SingleFloatMinusZero" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._SingleFloatPlusZero" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SingleFloat_I>" :SPECIALIZER "class core::SingleFloat_I")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SingleFloat_I>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleFloatPlusZero), 0, "_Roots._SingleFloatPlusZero" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._DoubleFloatMinusZero" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DoubleFloatMinusZero), 0, "_Roots._DoubleFloatMinusZero" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._DoubleFloatPlusZero" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DoubleFloatPlusZero), 0, "_Roots._DoubleFloatPlusZero" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._SingleFloatOne" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SingleFloat_I>" :SPECIALIZER "class core::SingleFloat_I")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SingleFloat_I>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SingleFloatOne), 0, "_Roots._SingleFloatOne" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._DoubleFloatOne" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._DoubleFloatOne), 0, "_Roots._DoubleFloatOne" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._UnixSignalHandlers" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._UnixSignalHandlers), 0, "_Roots._UnixSignalHandlers" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._CommandLineArguments" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._CommandLineArguments), 0, "_Roots._CommandLineArguments" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._SourceFileIndices" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._SourceFileIndices), 0, "_Roots._SourceFileIndices" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._PackageNameIndexMap" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::HashTableEqual_O>" :SPECIALIZER "class core::HashTableEqual_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::HashTableEqual_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PackageNameIndexMap), 0, "_Roots._PackageNameIndexMap" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
//      field: "_Roots" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Lisp_O::GCRoots" :NAME "GCRoots")
//      field: "._PrintSymbolsProperly" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Roots._PrintSymbolsProperly), 0, "_Roots._PrintSymbolsProperly" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IntegerOrdering" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::IntegerOrdering" :NAME "IntegerOrdering")
//      field: "._BigEndian" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._BigEndian), 0, "_IntegerOrdering._BigEndian" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IntegerOrdering" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::IntegerOrdering" :NAME "IntegerOrdering")
//      field: "._MostSignificantWordFirst" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._MostSignificantWordFirst), 0, "_IntegerOrdering._MostSignificantWordFirst" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IntegerOrdering" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::IntegerOrdering" :NAME "IntegerOrdering")
//      field: "._mpz_import_word_order" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._mpz_import_word_order), 0, "_IntegerOrdering._mpz_import_word_order" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IntegerOrdering" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::IntegerOrdering" :NAME "IntegerOrdering")
//      field: "._mpz_import_size" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._mpz_import_size), 0, "_IntegerOrdering._mpz_import_size" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_IntegerOrdering" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::IntegerOrdering" :NAME "IntegerOrdering")
//      field: "._mpz_import_endian" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_IntegerOrdering._mpz_import_endian), 0, "_IntegerOrdering._mpz_import_endian" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
//      field: "_BootClassTableIsValid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_BootClassTableIsValid), 0, "_BootClassTableIsValid" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_RequireLevel" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_RequireLevel), 0, "_RequireLevel" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_CoreBuiltInClassesInitialized" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_CoreBuiltInClassesInitialized), 0, "_CoreBuiltInClassesInitialized" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_BuiltInClassesInitialized" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_BuiltInClassesInitialized), 0, "_BuiltInClassesInitialized" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_PackagesInitialized" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_PackagesInitialized), 0, "_PackagesInitialized" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnvironmentInitialized" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_EnvironmentInitialized), 0, "_EnvironmentInitialized" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_NilsCreated" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_NilsCreated), 0, "_NilsCreated" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_Booted" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_Booted), 0, "_Booted" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MpiEnabled" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
 {  fixed_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_MpiEnabled), 0, "_MpiEnabled" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MpiRank" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_MpiRank), 0, "_MpiRank" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_MpiSize" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
 {  fixed_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_MpiSize), 0, "_MpiSize" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_EnvironmentId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<unsigned int>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int"))
 {  fixed_field, ATOMIC_POD_OFFSET_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_EnvironmentId), 0, "_EnvironmentId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
//      field: "_LineNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
 {  fixed_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(core::Lisp_O),_LineNumber), 0, "_LineNumber" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = clang::RecursiveASTVisitor<asttooling::AstVisitor_O>/2763
// StampWtag = asttooling::AstVisitor_O/2767
{ class_kind, STAMPWTAG_asttooling__AstVisitor_O, sizeof(asttooling::AstVisitor_O), 0, IS_POLYMORPHIC, "asttooling::AstVisitor_O" },
//      field: "_Target" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC   (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
 {  fixed_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(asttooling::AstVisitor_O),_Target), 0, "_Target" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCContainer/2771
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>/2775
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>" :SPECIALIZER "class kinematics::BackboneDependentRotamerSet_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>" :SPECIALIZER "class kinematics::BackboneDependentRotamerSet_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>" :SPECIALIZER "class kinematics::BackboneDependentRotamerSet_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::AtomicInfo>/2779
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_, sizeof(gctools::GCVector_moveable<chem::AtomicInfo>), 0, 0, "gctools::GCVector_moveable<chem::AtomicInfo>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomicInfo>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::AtomicInfo), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomicInfo>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomicInfo>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Valid" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
    {    variable_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_Valid), 0, "_Valid" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_RealElement" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
    {    variable_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_RealElement), 0, "_RealElement" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AtomicSymbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_AtomicSymbol), 0, "_AtomicSymbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ElementName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_ElementName), 0, "_ElementName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AtomicNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_AtomicNumber), 0, "_AtomicNumber" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_IntegerAtomicMass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_IntegerAtomicMass), 0, "_IntegerAtomicMass" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_RelativeAtomicWeight" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_RelativeAtomicWeight), 0, "_RelativeAtomicWeight" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_VdwRadius" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_VdwRadius), 0, "_VdwRadius" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomicInfo" :NAME "AtomicInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomicInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_CovalentRadius" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomicInfo),_CovalentRadius), 0, "_CovalentRadius" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>/2783
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ChemInfoNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ChemInfoNode_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ChemInfoNode_O>" :SPECIALIZER "class chem::ChemInfoNode_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ChemInfoNode_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergyChiralRestraint>/2787
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_, sizeof(gctools::GCVector_moveable<chem::EnergyChiralRestraint>), 0, 0, "gctools::GCVector_moveable<chem::EnergyChiralRestraint>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyChiralRestraint>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyChiralRestraint), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyChiralRestraint>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyChiralRestraint>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),_Atom2), 0, "_Atom2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),_Atom3), 0, "_Atom3" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),_Atom4), 0, "_Atom4" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermChiralRestraint" :NAME "TermChiralRestraint")
//     field: ".K" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.K), 0, "term.K" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermChiralRestraint" :NAME "TermChiralRestraint")
//     field: ".CO" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.CO), 0, "term.CO" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermChiralRestraint" :NAME "TermChiralRestraint")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermChiralRestraint" :NAME "TermChiralRestraint")
//     field: ".I2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.I2), 0, "term.I2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermChiralRestraint" :NAME "TermChiralRestraint")
//     field: ".I3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.I3), 0, "term.I3" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyChiralRestraint" :NAME "EnergyChiralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyChiralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermChiralRestraint" :NAME "TermChiralRestraint")
//     field: ".I4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyChiralRestraint),term.I4), 0, "term.I4" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>/2791
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::BondToAtomTest_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondToAtomTest_O>" :SPECIALIZER "class chem::BondToAtomTest_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::BondToAtomTest_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondToAtomTest_O>" :SPECIALIZER "class chem::BondToAtomTest_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondToAtomTest_O>" :SPECIALIZER "class chem::BondToAtomTest_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondToAtomTest_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>/2795
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::StereoConfiguration_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoConfiguration_O>" :SPECIALIZER "class chem::StereoConfiguration_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::StereoConfiguration_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoConfiguration_O>" :SPECIALIZER "class chem::StereoConfiguration_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoConfiguration_O>" :SPECIALIZER "class chem::StereoConfiguration_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::StereoConfiguration_O>), 0, 0, "only" },
// StampWtag = gctools::GCArray_moveable<short>/2799
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_short_, sizeof(gctools::GCArray_moveable<short>), 0, 0, "gctools::GCArray_moveable<short>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<short>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(short), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<short>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<short>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short")
*/
/* (ctype-key (base one)) -> "short"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "short")>
{    variable_field, ctype_short, sizeof(short), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>/2803
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Rotamer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Rotamer_O>" :SPECIALIZER "class chem::Rotamer_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Rotamer_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Rotamer_O>" :SPECIALIZER "class chem::Rotamer_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Rotamer_O>" :SPECIALIZER "class chem::Rotamer_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Rotamer_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<unsigned long>/2807
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_unsigned_long_, sizeof(gctools::GCVector_moveable<unsigned long>), 0, 0, "gctools::GCVector_moveable<unsigned long>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<unsigned long>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<unsigned long>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<unsigned long>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>/2811
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___, sizeof(gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>), 0, 0, "gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>),_Contents), 0, "_Contents" }, // atomic: NIL public: (T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>/2815
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::FFTypeRule_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypeRule_O>" :SPECIALIZER "class chem::FFTypeRule_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::FFTypeRule_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypeRule_O>" :SPECIALIZER "class chem::FFTypeRule_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFTypeRule_O>" :SPECIALIZER "class chem::FFTypeRule_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFTypeRule_O>), 0, 0, "only" },
// StampWtag = gctools::GCBitUnitArray_moveable<4,0>/2819
{ bitunit_container_kind, STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_, sizeof(gctools::GCBitUnitArray_moveable<4,0>), 4, 0, "gctools::GCBitUnitArray_moveable<4,0>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,0>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,0>),_Length), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,0>),_Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<core::SymbolClassHolderPair>/2823
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_, sizeof(gctools::GCVector_moveable<core::SymbolClassHolderPair>), 0, 0, "gctools::GCVector_moveable<core::SymbolClassHolderPair>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolClassHolderPair>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(core::SymbolClassHolderPair), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolClassHolderPair>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolClassHolderPair>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolClassHolderPair" :NAME "SymbolClassHolderPair")
*/
/* (ctype-key (base one)) -> "core::SymbolClassHolderPair"
*/
// atomic-smart-ptr-p -> NIL
//     field: "symbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolClassHolderPair),symbol), 0, "symbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolClassHolderPair" :NAME "SymbolClassHolderPair")
*/
/* (ctype-key (base one)) -> "core::SymbolClassHolderPair"
*/
// atomic-smart-ptr-p -> NIL
//     field: "theClassHolder" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::ClassHolder_O>" :SPECIALIZER "class core::ClassHolder_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::ClassHolder_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolClassHolderPair),theClassHolder), 0, "theClassHolder" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>/2827
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<chem::FFNonbondCrossTerm>/2831
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_, sizeof(gctools::GCVector_moveable<chem::FFNonbondCrossTerm>), 0, 0, "gctools::GCVector_moveable<chem::FFNonbondCrossTerm>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FFNonbondCrossTerm>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::FFNonbondCrossTerm), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FFNonbondCrossTerm>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FFNonbondCrossTerm>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FFNonbondCrossTerm" :NAME "FFNonbondCrossTerm")
*/
/* (ctype-key (base one)) -> "chem::FFNonbondCrossTerm"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Type1Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondCrossTerm),_Type1Index), 0, "_Type1Index" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FFNonbondCrossTerm" :NAME "FFNonbondCrossTerm")
*/
/* (ctype-key (base one)) -> "chem::FFNonbondCrossTerm"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Type2Index" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondCrossTerm),_Type2Index), 0, "_Type2Index" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FFNonbondCrossTerm" :NAME "FFNonbondCrossTerm")
*/
/* (ctype-key (base one)) -> "chem::FFNonbondCrossTerm"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_RStar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondCrossTerm),_RStar), 0, "_RStar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FFNonbondCrossTerm" :NAME "FFNonbondCrossTerm")
*/
/* (ctype-key (base one)) -> "chem::FFNonbondCrossTerm"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_A" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondCrossTerm),_A), 0, "_A" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FFNonbondCrossTerm" :NAME "FFNonbondCrossTerm")
*/
/* (ctype-key (base one)) -> "chem::FFNonbondCrossTerm"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_C" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FFNonbondCrossTerm),_C), 0, "_C" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>/2835
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::ChainNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChainNode_O>" :SPECIALIZER "class kinematics::ChainNode_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<kinematics::ChainNode_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChainNode_O>" :SPECIALIZER "class kinematics::ChainNode_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChainNode_O>" :SPECIALIZER "class kinematics::ChainNode_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::ChainNode_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergyDihedralRestraint>/2839
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_, sizeof(gctools::GCVector_moveable<chem::EnergyDihedralRestraint>), 0, 0, "gctools::GCVector_moveable<chem::EnergyDihedralRestraint>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedralRestraint>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyDihedralRestraint), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedralRestraint>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedralRestraint>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),_Atom2), 0, "_Atom2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),_Atom3), 0, "_Atom3" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),_Atom4), 0, "_Atom4" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AboveThreshold" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
    {    variable_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),_AboveThreshold), 0, "_AboveThreshold" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AboveThreshold_Phi" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),_AboveThreshold_Phi), 0, "_AboveThreshold_Phi" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermImproperRestraint" :NAME "TermImproperRestraint")
//     field: ".K" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),term.K), 0, "term.K" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermImproperRestraint" :NAME "TermImproperRestraint")
//     field: ".U" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),term.U), 0, "term.U" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermImproperRestraint" :NAME "TermImproperRestraint")
//     field: ".L" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),term.L), 0, "term.L" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermImproperRestraint" :NAME "TermImproperRestraint")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermImproperRestraint" :NAME "TermImproperRestraint")
//     field: ".I2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),term.I2), 0, "term.I2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermImproperRestraint" :NAME "TermImproperRestraint")
//     field: ".I3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),term.I3), 0, "term.I3" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedralRestraint" :NAME "EnergyDihedralRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedralRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermImproperRestraint" :NAME "TermImproperRestraint")
//     field: ".I4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedralRestraint),term.I4), 0, "term.I4" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>/2843
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>/2847
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::FFNonbond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbond_O>" :SPECIALIZER "class chem::FFNonbond_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::FFNonbond_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbond_O>" :SPECIALIZER "class chem::FFNonbond_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFNonbond_O>" :SPECIALIZER "class chem::FFNonbond_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFNonbond_O>), 0, 0, "only" },
// StampWtag = gctools::GCArray_moveable<unsigned char>/2851
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_unsigned_char_, sizeof(gctools::GCArray_moveable<unsigned char>), 0, 0, "gctools::GCArray_moveable<unsigned char>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned char>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned char), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned char>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned char>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")
*/
/* (ctype-key (base one)) -> "unsigned char"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned char")>
{    variable_field, ctype_unsigned_char, sizeof(unsigned char), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>/2855
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Array_O>" :SPECIALIZER "class core::Array_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Array_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::Vec0<int>>/2859
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__, sizeof(gctools::GCVector_moveable<gctools::Vec0<int>>), 0, 0, "gctools::GCVector_moveable<gctools::Vec0<int>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::Vec0<int>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::Vec0<int>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::Vec0<int>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::Vec0<int>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::Vec0<int>" :NAME "Vec0" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "gctools::Vec0<int>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Vector" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCVector<int,gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>>" :NAME "GCVector" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::GCContainerAllocator<gctools::GCVector_moveable<int>>" :NAME "GCContainerAllocator" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::GCVECTOR-MOVEABLE-CTYPE :KEY "gctools::GCVector_moveable<int>" :NAME "GCVector_moveable" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL))) :INTEGRAL-VALUE NIL)))
//     field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<int>>" :SPECIALIZER "class gctools::GCVector_moveable<int>")
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<int>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::Vec0<int>),_Vector._Contents), 0, "_Vector._Contents" }, // atomic: NIL public: (T T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>/2863
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EntityNameSetBase_O>" :SPECIALIZER "class chem::EntityNameSetBase_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EntityNameSetBase_O>" :SPECIALIZER "class chem::EntityNameSetBase_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::EntityNameSetBase_O>" :SPECIALIZER "class chem::EntityNameSetBase_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::EntityNameSetBase_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>/2867
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_, sizeof(gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>), 0, 0, "gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyRigidBodyStaple), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyRigidBodyStaple" :NAME "EnergyRigidBodyStaple")
*/
/* (ctype-key (base one)) -> "chem::EnergyRigidBodyStaple"
*/
// atomic-smart-ptr-p -> NIL
//     field: "ks" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple),ks), 0, "ks" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyRigidBodyStaple" :NAME "EnergyRigidBodyStaple")
*/
/* (ctype-key (base one)) -> "chem::EnergyRigidBodyStaple"
*/
// atomic-smart-ptr-p -> NIL
//     field: "r0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple),r0), 0, "r0" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyRigidBodyStaple" :NAME "EnergyRigidBodyStaple")
*/
/* (ctype-key (base one)) -> "chem::EnergyRigidBodyStaple"
*/
// atomic-smart-ptr-p -> NIL
//     field: "rigidBodyK" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple),rigidBodyK), 0, "rigidBodyK" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyRigidBodyStaple" :NAME "EnergyRigidBodyStaple")
*/
/* (ctype-key (base one)) -> "chem::EnergyRigidBodyStaple"
*/
// atomic-smart-ptr-p -> NIL
//     field: "rigidBodyL" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyRigidBodyStaple),rigidBodyL), 0, "rigidBodyL" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>/2871
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::T_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergyAngle>/2875
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_, sizeof(gctools::GCVector_moveable<chem::EnergyAngle>), 0, 0, "gctools::GCVector_moveable<chem::EnergyAngle>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAngle>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyAngle), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAngle>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAngle>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle")
*/
/* (ctype-key (base one)) -> "chem::EnergyAngle"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAngle" :NAME "TermAngle")
//     field: ".kt" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.kt), 0, "term.kt" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle")
*/
/* (ctype-key (base one)) -> "chem::EnergyAngle"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAngle" :NAME "TermAngle")
//     field: ".t0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.t0), 0, "term.t0" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle")
*/
/* (ctype-key (base one)) -> "chem::EnergyAngle"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAngle" :NAME "TermAngle")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle")
*/
/* (ctype-key (base one)) -> "chem::EnergyAngle"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAngle" :NAME "TermAngle")
//     field: ".I2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.I2), 0, "term.I2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle")
*/
/* (ctype-key (base one)) -> "chem::EnergyAngle"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAngle" :NAME "TermAngle")
//     field: ".I3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),term.I3), 0, "term.I3" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle")
*/
/* (ctype-key (base one)) -> "chem::EnergyAngle"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle")
*/
/* (ctype-key (base one)) -> "chem::EnergyAngle"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),_Atom2), 0, "_Atom2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAngle" :NAME "EnergyAngle")
*/
/* (ctype-key (base one)) -> "chem::EnergyAngle"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAngle),_Atom3), 0, "_Atom3" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>/2879
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::SimpleBitVector_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::SimpleBitVector_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::SimpleBitVector_O>" :SPECIALIZER "class core::SimpleBitVector_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::SimpleBitVector_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>/2883
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Monomer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Monomer_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Monomer_O>" :SPECIALIZER "class chem::Monomer_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Monomer_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>/2887
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::CDFragment_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::CDFragment_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDFragment_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>/2891
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MonomerCoordinates_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>/2895
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::TrajectoryFrame_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::TrajectoryFrame_O>" :SPECIALIZER "class chem::TrajectoryFrame_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::TrajectoryFrame_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::TrajectoryFrame_O>" :SPECIALIZER "class chem::TrajectoryFrame_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::TrajectoryFrame_O>" :SPECIALIZER "class chem::TrajectoryFrame_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::TrajectoryFrame_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<core::OptionalArgument>/2899
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_, sizeof(gctools::GCVector_moveable<core::OptionalArgument>), 0, 0, "gctools::GCVector_moveable<core::OptionalArgument>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::OptionalArgument>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(core::OptionalArgument), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::OptionalArgument>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::OptionalArgument>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::OptionalArgument" :NAME "OptionalArgument")
*/
/* (ctype-key (base one)) -> "core::OptionalArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ArgTarget" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_ArgTarget), 0, "_ArgTarget" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::OptionalArgument" :NAME "OptionalArgument")
*/
/* (ctype-key (base one)) -> "core::OptionalArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ArgTargetFrameIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_ArgTargetFrameIndex), 0, "_ArgTargetFrameIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::OptionalArgument" :NAME "OptionalArgument")
*/
/* (ctype-key (base one)) -> "core::OptionalArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Default" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_Default), 0, "_Default" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::OptionalArgument" :NAME "OptionalArgument")
*/
/* (ctype-key (base one)) -> "core::OptionalArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Sensor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Argument" :NAME "Argument")
//     field: "._ArgTarget" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_Sensor._ArgTarget), 0, "_Sensor._ArgTarget" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::OptionalArgument" :NAME "OptionalArgument")
*/
/* (ctype-key (base one)) -> "core::OptionalArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Sensor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Argument" :NAME "Argument")
//     field: "._ArgTargetFrameIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::OptionalArgument),_Sensor._ArgTargetFrameIndex), 0, "_Sensor._ArgTargetFrameIndex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<core::KeywordArgument>/2903
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_, sizeof(gctools::GCVector_moveable<core::KeywordArgument>), 0, 0, "gctools::GCVector_moveable<core::KeywordArgument>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeywordArgument>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(core::KeywordArgument), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeywordArgument>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeywordArgument>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument")
*/
/* (ctype-key (base one)) -> "core::KeywordArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ArgTarget" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_ArgTarget), 0, "_ArgTarget" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument")
*/
/* (ctype-key (base one)) -> "core::KeywordArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ArgTargetFrameIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_ArgTargetFrameIndex), 0, "_ArgTargetFrameIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument")
*/
/* (ctype-key (base one)) -> "core::KeywordArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Default" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_Default), 0, "_Default" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument")
*/
/* (ctype-key (base one)) -> "core::KeywordArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Keyword" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_Keyword), 0, "_Keyword" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument")
*/
/* (ctype-key (base one)) -> "core::KeywordArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Sensor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Argument" :NAME "Argument")
//     field: "._ArgTarget" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_Sensor._ArgTarget), 0, "_Sensor._ArgTarget" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeywordArgument" :NAME "KeywordArgument")
*/
/* (ctype-key (base one)) -> "core::KeywordArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Sensor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::Argument" :NAME "Argument")
//     field: "._ArgTargetFrameIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::KeywordArgument),_Sensor._ArgTargetFrameIndex), 0, "_Sensor._ArgTargetFrameIndex" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<chem::KeyEntry>/2907
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_, sizeof(gctools::GCVector_moveable<chem::KeyEntry>), 0, 0, "gctools::GCVector_moveable<chem::KeyEntry>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::KeyEntry>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::KeyEntry), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::KeyEntry>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::KeyEntry>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::KeyEntry" :NAME "KeyEntry")
*/
/* (ctype-key (base one)) -> "chem::KeyEntry"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Coupling" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::KeyEntry),_Coupling), 0, "_Coupling" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::KeyEntry" :NAME "KeyEntry")
*/
/* (ctype-key (base one)) -> "chem::KeyEntry"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Monomer" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::KeyEntry),_Monomer), 0, "_Monomer" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>/2911
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Stereoisomer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>/2915
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ReportBase_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ReportBase_O>" :SPECIALIZER "class chem::ReportBase_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ReportBase_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ReportBase_O>" :SPECIALIZER "class chem::ReportBase_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ReportBase_O>" :SPECIALIZER "class chem::ReportBase_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ReportBase_O>), 0, 0, "only" },
// StampWtag = gctools::GCArray_moveable<Vector3>/2919
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_Vector3_, sizeof(gctools::GCArray_moveable<Vector3>), 0, 0, "gctools::GCArray_moveable<Vector3>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<Vector3>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(Vector3), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<Vector3>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<Vector3>),_MaybeSignedLength), 0, NULL },
// StampWtag = gctools::GCVector_moveable<chem::EnergyAnchorRestraint>/2923
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_, sizeof(gctools::GCVector_moveable<chem::EnergyAnchorRestraint>), 0, 0, "gctools::GCVector_moveable<chem::EnergyAnchorRestraint>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAnchorRestraint>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyAnchorRestraint), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAnchorRestraint>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAnchorRestraint>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyAnchorRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAnchorRestraint" :NAME "TermAnchorRestraint")
//     field: ".ka" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.ka), 0, "term.ka" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyAnchorRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAnchorRestraint" :NAME "TermAnchorRestraint")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyAnchorRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAnchorRestraint" :NAME "TermAnchorRestraint")
//     field: ".xa" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.xa), 0, "term.xa" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyAnchorRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAnchorRestraint" :NAME "TermAnchorRestraint")
//     field: ".ya" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.ya), 0, "term.ya" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyAnchorRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermAnchorRestraint" :NAME "TermAnchorRestraint")
//     field: ".za" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),term.za), 0, "term.za" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAnchorRestraint" :NAME "EnergyAnchorRestraint")
*/
/* (ctype-key (base one)) -> "chem::EnergyAnchorRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAnchorRestraint),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>/2927
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::StereoisomerAtom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtom_O>" :SPECIALIZER "class chem::StereoisomerAtom_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::StereoisomerAtom_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtom_O>" :SPECIALIZER "class chem::StereoisomerAtom_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtom_O>" :SPECIALIZER "class chem::StereoisomerAtom_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::StereoisomerAtom_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>/2931
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::SpecificContext_O>" :SPECIALIZER "class chem::SpecificContext_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::SpecificContext_O>" :SPECIALIZER "class chem::SpecificContext_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::SpecificContext_O>" :SPECIALIZER "class chem::SpecificContext_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::SpecificContext_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<chem::HybridizationInfo>/2935
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_, sizeof(gctools::GCVector_moveable<chem::HybridizationInfo>), 0, 0, "gctools::GCVector_moveable<chem::HybridizationInfo>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::HybridizationInfo>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::HybridizationInfo), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::HybridizationInfo>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::HybridizationInfo>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::HybridizationInfo" :NAME "HybridizationInfo")
*/
/* (ctype-key (base one)) -> "chem::HybridizationInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_HybridizationSymbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::HybridizationInfo),_HybridizationSymbol), 0, "_HybridizationSymbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>/2939
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<kinematics::MonomerNode_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>/2943
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___, sizeof(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<int,gctools::smart_ptr<chem::Residue_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,gctools::smart_ptr<chem::Residue_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<int,gctools::smart_ptr<chem::Residue_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<int,gctools::smart_ptr<chem::Residue_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,gctools::smart_ptr<chem::Residue_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<int,gctools::smart_ptr<chem::Residue_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<int,gctools::smart_ptr<chem::Residue_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>/2947
{ container_kind, STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__, sizeof(gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>), 0, 0, "gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::atomic<gctools::smart_ptr<core::T_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>),_Length), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>),_Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))
*/
/* (ctype-key (base one)) -> "std::atomic<gctools::smart_ptr<core::T_O>>"
*/
// atomic-smart-ptr-p -> T
// one -> #<ATOMIC-SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::ATOMIC-CTYPE :KEY "std::atomic<gctools::smart_ptr<core::T_O>>" :NAME "atomic" :ARGUMENT #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O"))>
{    variable_field, ATOMIC_SMART_PTR_OFFSET, sizeof(std::atomic<gctools::smart_ptr<core::T_O>>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>/2951
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConstitutionBond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ConstitutionBond_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionBond_O>" :SPECIALIZER "class chem::ConstitutionBond_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConstitutionBond_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>/2955
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Structure_Old_ListEntry_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>" :SPECIALIZER "class chem::Structure_Old_ListEntry_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>" :SPECIALIZER "class chem::Structure_Old_ListEntry_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Structure_Old_ListEntry_O>" :SPECIALIZER "class chem::Structure_Old_ListEntry_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Structure_Old_ListEntry_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>/2959
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch")
//     field: "._ti" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),second._ti), 0, "second._ti" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch")
//     field: "._tj" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),second._tj), 0, "second._tj" }, // atomic: NIL public: (T T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch")
//     field: "._rij" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),second._rij), 0, "second._rij" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EstimateStretch" :NAME "EstimateStretch")
//     field: "._lnKij" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>),second._lnKij), 0, "second._lnKij" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>/2963
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConformationCollectionEntry_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ConformationCollectionEntry_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationCollectionEntry_O>" :SPECIALIZER "class chem::ConformationCollectionEntry_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationCollectionEntry_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>/2967
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BondId_O>" :SPECIALIZER "class kinematics::BondId_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BondId_O>" :SPECIALIZER "class kinematics::BondId_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::BondId_O>" :SPECIALIZER "class kinematics::BondId_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::BondId_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>/2971
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Coupling_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>/2975
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Matter_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Matter_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Matter_O>" :SPECIALIZER "class chem::Matter_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Matter_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>/2979
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomIndexer_O>" :SPECIALIZER "class chem::AtomIndexer_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomIndexer_O>" :SPECIALIZER "class chem::AtomIndexer_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AtomIndexer_O>" :SPECIALIZER "class chem::AtomIndexer_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AtomIndexer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>/2983
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::AGEdge_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::AGEdge_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::AGEdge_O>" :SPECIALIZER "class chem::AGEdge_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::AGEdge_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>/2987
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ComplexRestraint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ComplexRestraint_O>" :SPECIALIZER "class chem::ComplexRestraint_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ComplexRestraint_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ComplexRestraint_O>" :SPECIALIZER "class chem::ComplexRestraint_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ComplexRestraint_O>" :SPECIALIZER "class chem::ComplexRestraint_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ComplexRestraint_O>), 0, 0, "only" },
// StampWtag = gctools::GCBitUnitArray_moveable<2,0>/2991
{ bitunit_container_kind, STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_, sizeof(gctools::GCBitUnitArray_moveable<2,0>), 2, 0, "gctools::GCBitUnitArray_moveable<2,0>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,0>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,0>),_Length), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,0>),_Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>/2995
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::ChiDihedral_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChiDihedral_O>" :SPECIALIZER "class kinematics::ChiDihedral_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<kinematics::ChiDihedral_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChiDihedral_O>" :SPECIALIZER "class kinematics::ChiDihedral_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::ChiDihedral_O>" :SPECIALIZER "class kinematics::ChiDihedral_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::ChiDihedral_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>/2999
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Coupling_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Coupling_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Coupling_O>" :SPECIALIZER "class chem::Coupling_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Coupling_O>), 0, 0, "only" },
// StampWtag = gctools::GCBitUnitArray_moveable<1,0>/3003
{ bitunit_container_kind, STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_, sizeof(gctools::GCBitUnitArray_moveable<1,0>), 1, 0, "gctools::GCBitUnitArray_moveable<1,0>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<1,0>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<1,0>),_Length), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<1,0>),_Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = gctools::GCBitUnitArray_moveable<2,1>/3007
{ bitunit_container_kind, STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_, sizeof(gctools::GCBitUnitArray_moveable<2,1>), 2, 0, "gctools::GCBitUnitArray_moveable<2,1>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,1>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,1>),_Length), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<2,1>),_Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>/3011
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Topology_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Topology_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<int>/3015
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_int_, sizeof(gctools::GCVector_moveable<int>), 0, 0, "gctools::GCVector_moveable<int>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<int>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<int>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<int>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
*/
/* (ctype-key (base one)) -> "int"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")>
{    variable_field, ctype_int, sizeof(int), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>/3019
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FrameRecognizer_O>" :SPECIALIZER "class chem::FrameRecognizer_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FrameRecognizer_O>" :SPECIALIZER "class chem::FrameRecognizer_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FrameRecognizer_O>" :SPECIALIZER "class chem::FrameRecognizer_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FrameRecognizer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>/3023
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Stereoisomer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Stereoisomer_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Stereoisomer_O>" :SPECIALIZER "class chem::Stereoisomer_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Stereoisomer_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>/3027
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Mate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Mate_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Mate_O>" :SPECIALIZER "class chem::Mate_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Mate_O>), 0, 0, "only" },
// StampWtag = gctools::GCArray_moveable<float>/3031
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_float_, sizeof(gctools::GCArray_moveable<float>), 0, 0, "gctools::GCArray_moveable<float>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<float>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<float>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<float>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
*/
/* (ctype-key (base one)) -> "float"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")>
{    variable_field, ctype_float, sizeof(float), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>/3035
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Atom_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>/3039
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Bond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Bond_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Bond_O>" :SPECIALIZER "class chem::Bond_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Bond_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<core::T_O *>/3043
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_core__T_O___, sizeof(gctools::GCVector_moveable<core::T_O *>), 0, 0, "gctools::GCVector_moveable<core::T_O *>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::T_O *>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(core::T_O*), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::T_O *>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::T_O *>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::T_O" :NAME "T_O"))
*/
/* (ctype-key (base one)) -> NIL
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POINTER-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::T_O" :NAME "T_O")) :base #S(CLASP-ANALYZER::POINTER-CTYPE :KEY NIL :POINTEE #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::T_O" :NAME "T_O"))>
{    variable_field, POINTER_OFFSET, sizeof(core::T_O*), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergyDihedral>/3047
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_, sizeof(gctools::GCVector_moveable<chem::EnergyDihedral>), 0, 0, "gctools::GCVector_moveable<chem::EnergyDihedral>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedral>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyDihedral), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedral>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyDihedral>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Proper" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
    {    variable_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Proper), 0, "_Proper" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Atom2), 0, "_Atom2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Atom3), 0, "_Atom3" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_Atom4), 0, "_Atom4" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_PhaseRad" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_PhaseRad), 0, "_PhaseRad" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".sinPhase" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.sinPhase), 0, "term.sinPhase" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".cosPhase" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.cosPhase), 0, "term.cosPhase" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".V" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.V), 0, "term.V" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".DN" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.DN), 0, "term.DN" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".IN" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.IN), 0, "term.IN" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".I2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.I2), 0, "term.I2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".I3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.I3), 0, "term.I3" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermDihedral" :NAME "TermDihedral")
//     field: ".I4" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),term.I4), 0, "term.I4" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyDihedral" :NAME "EnergyDihedral")
*/
/* (ctype-key (base one)) -> "chem::EnergyDihedral"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_CalculatedDihedralDeviation" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyDihedral),_CalculatedDihedralDeviation), 0, "_CalculatedDihedralDeviation" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>/3051
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::MonomerNode_O>" :SPECIALIZER "class kinematics::MonomerNode_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::MonomerNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCArray_moveable<unsigned int>/3055
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_unsigned_int_, sizeof(gctools::GCArray_moveable<unsigned int>), 0, 0, "gctools::GCArray_moveable<unsigned int>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned int>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned int>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned int>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
*/
/* (ctype-key (base one)) -> "unsigned int"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")>
{    variable_field, ctype_unsigned_int, sizeof(unsigned int), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>/3059
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::BondList_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::BondList_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::BondList_O>" :SPECIALIZER "class chem::BondList_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::BondList_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>/3063
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntry_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ConformationExplorerEntry_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntry_O>" :SPECIALIZER "class chem::ConformationExplorerEntry_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntry_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::RotamerAtom>/3067
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_, sizeof(gctools::GCVector_moveable<chem::RotamerAtom>), 0, 0, "gctools::GCVector_moveable<chem::RotamerAtom>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RotamerAtom>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::RotamerAtom), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RotamerAtom>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RotamerAtom>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RotamerAtom" :NAME "RotamerAtom")
*/
/* (ctype-key (base one)) -> "chem::RotamerAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Distance" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RotamerAtom),_Distance), 0, "_Distance" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RotamerAtom" :NAME "RotamerAtom")
*/
/* (ctype-key (base one)) -> "chem::RotamerAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Angle" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RotamerAtom),_Angle), 0, "_Angle" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RotamerAtom" :NAME "RotamerAtom")
*/
/* (ctype-key (base one)) -> "chem::RotamerAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Torsion" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RotamerAtom),_Torsion), 0, "_Torsion" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>/3071
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Cons_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Cons_O>" :SPECIALIZER "class core::Cons_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::Cons_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Cons_O>" :SPECIALIZER "class core::Cons_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Cons_O>" :SPECIALIZER "class core::Cons_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Cons_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<double>/3075
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_double_, sizeof(gctools::GCVector_moveable<double>), 0, 0, "gctools::GCVector_moveable<double>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<double>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<double>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<double>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
*/
/* (ctype-key (base one)) -> "double"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")>
{    variable_field, ctype_double, sizeof(double), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>/3079
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::Rotamer_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<kinematics::Rotamer_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Rotamer_O>" :SPECIALIZER "class kinematics::Rotamer_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Rotamer_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>/3083
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Residue_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Residue_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>/3087
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Molecule_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>/3091
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<clbind::ClassRep_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clbind::ClassRep_O>" :SPECIALIZER "class clbind::ClassRep_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<clbind::ClassRep_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clbind::ClassRep_O>" :SPECIALIZER "class clbind::ClassRep_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<clbind::ClassRep_O>" :SPECIALIZER "class clbind::ClassRep_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<clbind::ClassRep_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::AtomPdbRec>/3095
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_, sizeof(gctools::GCVector_moveable<chem::AtomPdbRec>), 0, 0, "gctools::GCVector_moveable<chem::AtomPdbRec>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomPdbRec>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::AtomPdbRec), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomPdbRec>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomPdbRec>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_line" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_line), 0, "_line" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_recordName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_recordName), 0, "_recordName" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_serial" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_serial), 0, "_serial" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_name" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_name), 0, "_name" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_altLoc" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_altLoc), 0, "_altLoc" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_resName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_resName), 0, "_resName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_chainId" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_chainId), 0, "_chainId" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_resSeq" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_resSeq), 0, "_resSeq" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_iCode" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_iCode), 0, "_iCode" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_x" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_x), 0, "_x" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_y" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_y), 0, "_y" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_z" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_z), 0, "_z" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_occupancy" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_occupancy), 0, "_occupancy" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_tempFactor" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_tempFactor), 0, "_tempFactor" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_element" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_element), 0, "_element" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_charge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_charge), 0, "_charge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_atom), 0, "_atom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_residueIdx" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_residueIdx), 0, "_residueIdx" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomPdbRec" :NAME "AtomPdbRec")
*/
/* (ctype-key (base one)) -> "chem::AtomPdbRec"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_moleculeIdx" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomPdbRec),_moleculeIdx), 0, "_moleculeIdx" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<chem::EnergySketchStretch>/3099
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_, sizeof(gctools::GCVector_moveable<chem::EnergySketchStretch>), 0, 0, "gctools::GCVector_moveable<chem::EnergySketchStretch>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchStretch>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergySketchStretch), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchStretch>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchStretch>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergySketchStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermSketchStretch" :NAME "TermSketchStretch")
//     field: ".kb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch),term.kb), 0, "term.kb" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergySketchStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermSketchStretch" :NAME "TermSketchStretch")
//     field: ".r0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch),term.r0), 0, "term.r0" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergySketchStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermSketchStretch" :NAME "TermSketchStretch")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchStretch" :NAME "EnergySketchStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergySketchStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermSketchStretch" :NAME "TermSketchStretch")
//     field: ".I2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchStretch),term.I2), 0, "term.I2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = gctools::GCArray_moveable<signed char>/3103
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_signed_char_, sizeof(gctools::GCArray_moveable<signed char>), 0, 0, "gctools::GCArray_moveable<signed char>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<signed char>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(signed char), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<signed char>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<signed char>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char")
*/
/* (ctype-key (base one)) -> "signed char"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "signed char")>
{    variable_field, ctype_signed_char, sizeof(signed char), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergyOutOfZPlane>/3107
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_, sizeof(gctools::GCVector_moveable<chem::EnergyOutOfZPlane>), 0, 0, "gctools::GCVector_moveable<chem::EnergyOutOfZPlane>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyOutOfZPlane>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyOutOfZPlane), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyOutOfZPlane>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyOutOfZPlane>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane")
*/
/* (ctype-key (base one)) -> "chem::EnergyOutOfZPlane"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermOutOfZPlane" :NAME "TermOutOfZPlane")
//     field: ".kb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane),term.kb), 0, "term.kb" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane")
*/
/* (ctype-key (base one)) -> "chem::EnergyOutOfZPlane"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermOutOfZPlane" :NAME "TermOutOfZPlane")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyOutOfZPlane" :NAME "EnergyOutOfZPlane")
*/
/* (ctype-key (base one)) -> "chem::EnergyOutOfZPlane"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermOutOfZPlane" :NAME "TermOutOfZPlane")
//     field: ".za" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyOutOfZPlane),term.za), 0, "term.za" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>/3111
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::List_V>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::List_V>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::List_V>" :SPECIALIZER "class core::List_V")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::List_V>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>/3115
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Plug_O>" :SPECIALIZER "class chem::Plug_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Plug_O>" :SPECIALIZER "class chem::Plug_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Plug_O>" :SPECIALIZER "class chem::Plug_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Plug_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>/3119
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>" :SPECIALIZER "class chem::ConformationExplorerEntryStage_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>/3123
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::CDBond_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDBond_O>" :SPECIALIZER "class chem::CDBond_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::CDBond_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDBond_O>" :SPECIALIZER "class chem::CDBond_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDBond_O>" :SPECIALIZER "class chem::CDBond_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDBond_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergySketchNonbond>/3127
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_, sizeof(gctools::GCVector_moveable<chem::EnergySketchNonbond>), 0, 0, "gctools::GCVector_moveable<chem::EnergySketchNonbond>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchNonbond>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergySketchNonbond), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchNonbond>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergySketchNonbond>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchNonbond" :NAME "EnergySketchNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergySketchNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_FreezeFlags" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
    {    variable_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond),_FreezeFlags), 0, "_FreezeFlags" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchNonbond" :NAME "EnergySketchNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergySketchNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Constant" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond),_Constant), 0, "_Constant" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchNonbond" :NAME "EnergySketchNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergySketchNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond),I1), 0, "I1" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergySketchNonbond" :NAME "EnergySketchNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergySketchNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "I2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergySketchNonbond),I2), 0, "I2" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<core::KeyValuePair>/3131
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_, sizeof(gctools::GCVector_moveable<core::KeyValuePair>), 0, 0, "gctools::GCVector_moveable<core::KeyValuePair>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeyValuePair>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(core::KeyValuePair), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeyValuePair>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::KeyValuePair>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair")
*/
/* (ctype-key (base one)) -> "core::KeyValuePair"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Key" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::KeyValuePair),_Key), 0, "_Key" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::KeyValuePair" :NAME "KeyValuePair")
*/
/* (ctype-key (base one)) -> "core::KeyValuePair"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Value" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::KeyValuePair),_Value), 0, "_Value" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>/3135
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::Symbol_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>/3139
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Twister_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Twister_O>" :SPECIALIZER "class chem::Twister_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Twister_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Twister_O>" :SPECIALIZER "class chem::Twister_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Twister_O>" :SPECIALIZER "class chem::Twister_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Twister_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::FixedNonbondRestraint>/3143
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_, sizeof(gctools::GCVector_moveable<chem::FixedNonbondRestraint>), 0, 0, "gctools::GCVector_moveable<chem::FixedNonbondRestraint>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FixedNonbondRestraint>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::FixedNonbondRestraint), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FixedNonbondRestraint>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::FixedNonbondRestraint>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FixedNonbondRestraint" :NAME "FixedNonbondRestraint")
*/
/* (ctype-key (base one)) -> "chem::FixedNonbondRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_FixedAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FixedNonbondRestraint),_FixedAtom), 0, "_FixedAtom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FixedNonbondRestraint" :NAME "FixedNonbondRestraint")
*/
/* (ctype-key (base one)) -> "chem::FixedNonbondRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_FixedCharge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FixedNonbondRestraint),_FixedCharge), 0, "_FixedCharge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::FixedNonbondRestraint" :NAME "FixedNonbondRestraint")
*/
/* (ctype-key (base one)) -> "chem::FixedNonbondRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_FixedType" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::FixedNonbondRestraint),_FixedType), 0, "_FixedType" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>/3147
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<adapt::QDomNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::QDomNode_O>" :SPECIALIZER "class adapt::QDomNode_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<adapt::QDomNode_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::QDomNode_O>" :SPECIALIZER "class adapt::QDomNode_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<adapt::QDomNode_O>" :SPECIALIZER "class adapt::QDomNode_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<adapt::QDomNode_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>/3151
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ZMatrixInternal_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixInternal_O>" :SPECIALIZER "class chem::ZMatrixInternal_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ZMatrixInternal_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixInternal_O>" :SPECIALIZER "class chem::ZMatrixInternal_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixInternal_O>" :SPECIALIZER "class chem::ZMatrixInternal_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixInternal_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>/3155
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDFragment_O>" :SPECIALIZER "class chem::CDFragment_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDFragment_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>/3159
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::Molecule_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::Molecule_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Molecule_O>), 0, 0, "only" },
// StampWtag = gctools::GCArray_moveable<double>/3163
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_double_, sizeof(gctools::GCArray_moveable<double>), 0, 0, "gctools::GCArray_moveable<double>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<double>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<double>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<double>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
*/
/* (ctype-key (base one)) -> "double"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")>
{    variable_field, ctype_double, sizeof(double), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>/3167
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PdbMonomerConnectivity_O>" :SPECIALIZER "class chem::PdbMonomerConnectivity_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PdbMonomerConnectivity_O>" :SPECIALIZER "class chem::PdbMonomerConnectivity_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PdbMonomerConnectivity_O>" :SPECIALIZER "class chem::PdbMonomerConnectivity_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::PdbMonomerConnectivity_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>/3171
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___, sizeof(gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>/3175
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>),second), 0, "second" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>/3179
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::PathMessage_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PathMessage_O>" :SPECIALIZER "class chem::PathMessage_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::PathMessage_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PathMessage_O>" :SPECIALIZER "class chem::PathMessage_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::PathMessage_O>" :SPECIALIZER "class chem::PathMessage_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::PathMessage_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<core::RequiredArgument>/3183
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_, sizeof(gctools::GCVector_moveable<core::RequiredArgument>), 0, 0, "gctools::GCVector_moveable<core::RequiredArgument>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::RequiredArgument>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(core::RequiredArgument), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::RequiredArgument>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::RequiredArgument>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::RequiredArgument" :NAME "RequiredArgument")
*/
/* (ctype-key (base one)) -> "core::RequiredArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ArgTarget" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::RequiredArgument),_ArgTarget), 0, "_ArgTarget" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::RequiredArgument" :NAME "RequiredArgument")
*/
/* (ctype-key (base one)) -> "core::RequiredArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ArgTargetFrameIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::RequiredArgument),_ArgTargetFrameIndex), 0, "_ArgTargetFrameIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>/3187
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::FileScope_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FileScope_O>" :SPECIALIZER "class core::FileScope_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::FileScope_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FileScope_O>" :SPECIALIZER "class core::FileScope_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::FileScope_O>" :SPECIALIZER "class core::FileScope_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::FileScope_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>/3191
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ZMatrixEntry_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixEntry_O>" :SPECIALIZER "class chem::ZMatrixEntry_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ZMatrixEntry_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixEntry_O>" :SPECIALIZER "class chem::ZMatrixEntry_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ZMatrixEntry_O>" :SPECIALIZER "class chem::ZMatrixEntry_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ZMatrixEntry_O>), 0, 0, "only" },
// StampWtag = gctools::GCBitUnitArray_moveable<4,1>/3195
{ bitunit_container_kind, STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_, sizeof(gctools::GCBitUnitArray_moveable<4,1>), 4, 0, "gctools::GCBitUnitArray_moveable<4,1>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,1>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,1>),_Length), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCBitUnitArray_moveable<4,1>),_Length), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<core::SymbolStorage>/3199
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_, sizeof(gctools::GCVector_moveable<core::SymbolStorage>), 0, 0, "gctools::GCVector_moveable<core::SymbolStorage>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolStorage>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(core::SymbolStorage), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolStorage>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::SymbolStorage>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolStorage" :NAME "SymbolStorage")
*/
/* (ctype-key (base one)) -> "core::SymbolStorage"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_PackageName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_PackageName), 0, "_PackageName" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolStorage" :NAME "SymbolStorage")
*/
/* (ctype-key (base one)) -> "core::SymbolStorage"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_SymbolName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BASIC-STRING-CTYPE :KEY "std::basic_string<char,std::char_traits<char>,std::allocator<char>>" :NAME "basic_string")
    {    variable_field, CXX_FIXUP_OFFSET, sizeof(std::basic_string<char,std::char_traits<char>,std::allocator<char>>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_SymbolName), 0, "_SymbolName" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolStorage" :NAME "SymbolStorage")
*/
/* (ctype-key (base one)) -> "core::SymbolStorage"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Symbol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_Symbol), 0, "_Symbol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolStorage" :NAME "SymbolStorage")
*/
/* (ctype-key (base one)) -> "core::SymbolStorage"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Export" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
    {    variable_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_Export), 0, "_Export" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::SymbolStorage" :NAME "SymbolStorage")
*/
/* (ctype-key (base one)) -> "core::SymbolStorage"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Shadow" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
    {    variable_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(core::SymbolStorage),_Shadow), 0, "_Shadow" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>/3203
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_, sizeof(gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>), 0, 0, "gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::BeyondThresholdFixedNonbondRestraint), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BeyondThresholdFixedNonbondRestraint" :NAME "BeyondThresholdFixedNonbondRestraint")
*/
/* (ctype-key (base one)) -> "chem::BeyondThresholdFixedNonbondRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_MobileAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BeyondThresholdFixedNonbondRestraint),_MobileAtom), 0, "_MobileAtom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BeyondThresholdFixedNonbondRestraint" :NAME "BeyondThresholdFixedNonbondRestraint")
*/
/* (ctype-key (base one)) -> "chem::BeyondThresholdFixedNonbondRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_FixedAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BeyondThresholdFixedNonbondRestraint),_FixedAtom), 0, "_FixedAtom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::BeyondThresholdFixedNonbondRestraint" :NAME "BeyondThresholdFixedNonbondRestraint")
*/
/* (ctype-key (base one)) -> "chem::BeyondThresholdFixedNonbondRestraint"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_NonbondDistance" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::BeyondThresholdFixedNonbondRestraint),_NonbondDistance), 0, "_NonbondDistance" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>/3207
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___, sizeof(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<int,gctools::smart_ptr<chem::CDNode_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,gctools::smart_ptr<chem::CDNode_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<int,gctools::smart_ptr<chem::CDNode_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<int,gctools::smart_ptr<chem::CDNode_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<int,gctools::smart_ptr<chem::CDNode_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<int,gctools::smart_ptr<chem::CDNode_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<int,gctools::smart_ptr<chem::CDNode_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>/3211
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::DoubleFloat_O>" :SPECIALIZER "class core::DoubleFloat_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::DoubleFloat_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>/3215
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Instance_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::Instance_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Instance_O>" :SPECIALIZER "class core::Instance_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Instance_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>/3219
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<chem::Atom_O>,int>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<chem::Atom_O>,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<chem::Atom_O>,int>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,int>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<chem::Atom_O>,int>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<chem::Atom_O>,int>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,int>),second), 0, "second" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>/3223
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>" :SPECIALIZER "class kinematics::RingClosingMonomerNode_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>" :SPECIALIZER "class kinematics::RingClosingMonomerNode_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>" :SPECIALIZER "class kinematics::RingClosingMonomerNode_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>/3227
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_, sizeof(gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>), 0, 0, "gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::RigidBodyNonbondCrossTerm), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyNonbondCrossTerm" :NAME "RigidBodyNonbondCrossTerm")
*/
/* (ctype-key (base one)) -> "chem::RigidBodyNonbondCrossTerm"
*/
// atomic-smart-ptr-p -> NIL
//     field: "dA" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyNonbondCrossTerm),dA), 0, "dA" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyNonbondCrossTerm" :NAME "RigidBodyNonbondCrossTerm")
*/
/* (ctype-key (base one)) -> "chem::RigidBodyNonbondCrossTerm"
*/
// atomic-smart-ptr-p -> NIL
//     field: "dC" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyNonbondCrossTerm),dC), 0, "dC" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>/3231
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::MonomerCoordinates_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::MonomerCoordinates_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::MonomerCoordinates_O>" :SPECIALIZER "class chem::MonomerCoordinates_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::MonomerCoordinates_O>), 0, 0, "only" },
// StampWtag = gctools::GCArray_moveable<unsigned long>/3235
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_unsigned_long_, sizeof(gctools::GCArray_moveable<unsigned long>), 0, 0, "gctools::GCArray_moveable<unsigned long>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned long>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned long>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned long>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = gctools::GCArraySignedLength_moveable<unsigned long>/3239
{ container_kind, STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_, sizeof(gctools::GCArraySignedLength_moveable<unsigned long>), 0, 0, "gctools::GCArraySignedLength_moveable<unsigned long>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArraySignedLength_moveable<unsigned long>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArraySignedLength_moveable<unsigned long>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArraySignedLength_moveable<unsigned long>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
*/
/* (ctype-key (base one)) -> "unsigned long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")>
{    variable_field, ctype_unsigned_long, sizeof(unsigned long), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergyNonbond>/3243
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_, sizeof(gctools::GCVector_moveable<chem::EnergyNonbond>), 0, 0, "gctools::GCVector_moveable<chem::EnergyNonbond>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyNonbond>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyNonbond), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyNonbond>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyNonbond>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Is14" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "_Bool")
    {    variable_field, ctype__Bool, sizeof(_Bool), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Is14), 0, "_Is14" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Atom2), 0, "_Atom2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_A" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_A), 0, "_A" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_C" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_C), 0, "_C" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Charge1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Charge1), 0, "_Charge1" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Charge2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_Charge2), 0, "_Charge2" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_RStar" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),_RStar), 0, "_RStar" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermNonBond" :NAME "TermNonBond")
//     field: ".dQ1Q2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.dQ1Q2), 0, "term.dQ1Q2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermNonBond" :NAME "TermNonBond")
//     field: ".dA" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.dA), 0, "term.dA" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermNonBond" :NAME "TermNonBond")
//     field: ".dC" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.dC), 0, "term.dC" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermNonBond" :NAME "TermNonBond")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyNonbond" :NAME "EnergyNonbond")
*/
/* (ctype-key (base one)) -> "chem::EnergyNonbond"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermNonBond" :NAME "TermNonBond")
//     field: ".I2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyNonbond),term.I2), 0, "term.I2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>/3247
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<chem::AtomInfo>/3251
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_, sizeof(gctools::GCVector_moveable<chem::AtomInfo>), 0, 0, "gctools::GCVector_moveable<chem::AtomInfo>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomInfo>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::AtomInfo), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomInfo>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::AtomInfo>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomInfo" :NAME "AtomInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomInfo),_Atom), 0, "_Atom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomInfo" :NAME "AtomInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Residue" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomInfo),_Residue), 0, "_Residue" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::AtomInfo" :NAME "AtomInfo")
*/
/* (ctype-key (base one)) -> "chem::AtomInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Type" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::AtomInfo),_Type), 0, "_Type" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>/3255
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::FFVdw_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdw_O>" :SPECIALIZER "class chem::FFVdw_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::FFVdw_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdw_O>" :SPECIALIZER "class chem::FFVdw_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::FFVdw_O>" :SPECIALIZER "class chem::FFVdw_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::FFVdw_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>/3259
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::ConstitutionAtom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtom_O>" :SPECIALIZER "class chem::ConstitutionAtom_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::ConstitutionAtom_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtom_O>" :SPECIALIZER "class chem::ConstitutionAtom_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::ConstitutionAtom_O>" :SPECIALIZER "class chem::ConstitutionAtom_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::ConstitutionAtom_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergyAtom>/3263
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_, sizeof(gctools::GCVector_moveable<chem::EnergyAtom>), 0, 0, "gctools::GCVector_moveable<chem::EnergyAtom>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAtom>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyAtom), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAtom>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyAtom>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_SharedAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_SharedAtom), 0, "_SharedAtom" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_IndexTimes3" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_IndexTimes3), 0, "_IndexTimes3" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AtomName" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomName), 0, "_AtomName" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Charge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_Charge), 0, "_Charge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Mass" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_Mass), 0, "_Mass" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_TypeIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_TypeIndex), 0, "_TypeIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AtomicNumber" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomicNumber), 0, "_AtomicNumber" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Flag" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
    {    variable_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_Flag), 0, "_Flag" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AtomsAtRemoveBondAngle14" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 3 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))))
//     field: "[0]" (instance-field-access iv) -> NIL  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//     field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomsAtRemoveBondAngle14[0]._Contents), 0, "_AtomsAtRemoveBondAngle14[0]._Contents" }, // atomic: NIL public: (T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AtomsAtRemoveBondAngle14" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 3 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))))
//     field: "[1]" (instance-field-access iv) -> NIL  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//     field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomsAtRemoveBondAngle14[1]._Contents), 0, "_AtomsAtRemoveBondAngle14[1]._Contents" }, // atomic: NIL public: (T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyAtom" :NAME "EnergyAtom")
*/
/* (ctype-key (base one)) -> "chem::EnergyAtom"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_AtomsAtRemoveBondAngle14" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CONSTANT-ARRAY-CTYPE :KEY NIL :ARRAY-SIZE 3 :ELEMENT-TYPE #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL))))
//     field: "[2]" (instance-field-access iv) -> NIL  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>" :NAME "SmallOrderedSet" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL)))
//     field: "._Contents" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::TAGGED-POINTER-CTYPE :KEY "gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>" :SPECIALIZER "class gctools::GCVector_moveable<class gctools::smart_ptr<class chem::Atom_O> >")
    {    variable_field, TAGGED_POINTER_OFFSET, sizeof(gctools::tagged_pointer<gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyAtom),_AtomsAtRemoveBondAngle14[2]._Contents), 0, "_AtomsAtRemoveBondAngle14[2]._Contents" }, // atomic: NIL public: (T NIL T) fixable: TAGGED-POINTER-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>/3267
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::CDNode_O>" :SPECIALIZER "class chem::CDNode_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::CDNode_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCArray_moveable<int>/3271
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_int_, sizeof(gctools::GCArray_moveable<int>), 0, 0, "gctools::GCArray_moveable<int>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<int>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<int>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<int>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
*/
/* (ctype-key (base one)) -> "int"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")>
{    variable_field, ctype_int, sizeof(int), 0, 0, "only" },
// StampWtag = gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>/3275
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__, sizeof(gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>), 0, 0, "gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::T_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<core::AuxArgument>/3279
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_, sizeof(gctools::GCVector_moveable<core::AuxArgument>), 0, 0, "gctools::GCVector_moveable<core::AuxArgument>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::AuxArgument>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(core::AuxArgument), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::AuxArgument>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<core::AuxArgument>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::AuxArgument" :NAME "AuxArgument")
*/
/* (ctype-key (base one)) -> "core::AuxArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ArgTarget" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::AuxArgument),_ArgTarget), 0, "_ArgTarget" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::AuxArgument" :NAME "AuxArgument")
*/
/* (ctype-key (base one)) -> "core::AuxArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_ArgTargetFrameIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(core::AuxArgument),_ArgTargetFrameIndex), 0, "_ArgTargetFrameIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "core::AuxArgument" :NAME "AuxArgument")
*/
/* (ctype-key (base one)) -> "core::AuxArgument"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Expression" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(core::AuxArgument),_Expression), 0, "_Expression" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<chem::ResidueOut>/3283
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_, sizeof(gctools::GCVector_moveable<chem::ResidueOut>), 0, 0, "gctools::GCVector_moveable<chem::ResidueOut>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::ResidueOut>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::ResidueOut), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::ResidueOut>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::ResidueOut>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ResidueOut" :NAME "ResidueOut")
*/
/* (ctype-key (base one)) -> "chem::ResidueOut"
*/
// atomic-smart-ptr-p -> NIL
//     field: "mol" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Molecule_O>" :SPECIALIZER "class chem::Molecule_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Molecule_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ResidueOut),mol), 0, "mol" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ResidueOut" :NAME "ResidueOut")
*/
/* (ctype-key (base one)) -> "chem::ResidueOut"
*/
// atomic-smart-ptr-p -> NIL
//     field: "res" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Residue_O>" :SPECIALIZER "class chem::Residue_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Residue_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ResidueOut),res), 0, "res" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::ResidueOut" :NAME "ResidueOut")
*/
/* (ctype-key (base one)) -> "chem::ResidueOut"
*/
// atomic-smart-ptr-p -> NIL
//     field: "firstAtom" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
    {    variable_field, ctype_unsigned_int, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::ResidueOut),firstAtom), 0, "firstAtom" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCArray_moveable<long>/3287
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_long_, sizeof(gctools::GCArray_moveable<long>), 0, 0, "gctools::GCArray_moveable<long>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<long>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(long), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<long>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<long>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")
*/
/* (ctype-key (base one)) -> "long"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "long")>
{    variable_field, ctype_long, sizeof(long), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>/3291
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::JointTemplate_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<kinematics::JointTemplate_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::JointTemplate_O>" :SPECIALIZER "class kinematics::JointTemplate_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::JointTemplate_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::RigidBodyAtomInfo>/3295
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_, sizeof(gctools::GCVector_moveable<chem::RigidBodyAtomInfo>), 0, 0, "gctools::GCVector_moveable<chem::RigidBodyAtomInfo>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyAtomInfo>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::RigidBodyAtomInfo), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyAtomInfo>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::RigidBodyAtomInfo>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyAtomInfo" :NAME "RigidBodyAtomInfo")
*/
/* (ctype-key (base one)) -> "chem::RigidBodyAtomInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Object" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::T_O>" :SPECIALIZER "class core::T_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::T_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_Object), 0, "_Object" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyAtomInfo" :NAME "RigidBodyAtomInfo")
*/
/* (ctype-key (base one)) -> "chem::RigidBodyAtomInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_TypeIndex" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned long")
    {    variable_field, ctype_unsigned_long, sizeof(unsigned long), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_TypeIndex), 0, "_TypeIndex" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyAtomInfo" :NAME "RigidBodyAtomInfo")
*/
/* (ctype-key (base one)) -> "chem::RigidBodyAtomInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Radius" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_Radius), 0, "_Radius" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyAtomInfo" :NAME "RigidBodyAtomInfo")
*/
/* (ctype-key (base one)) -> "chem::RigidBodyAtomInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Epsilon" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_Epsilon), 0, "_Epsilon" }, // atomic: NIL public: (T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::RigidBodyAtomInfo" :NAME "RigidBodyAtomInfo")
*/
/* (ctype-key (base one)) -> "chem::RigidBodyAtomInfo"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Charge" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::RigidBodyAtomInfo),_Charge), 0, "_Charge" }, // atomic: NIL public: (T) fixable: NIL good-name: T
// StampWtag = gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>/3299
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___, sizeof(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>), 0, 0, "gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "first" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Symbol_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>),first), 0, "first" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CLASS-TEMPLATE-SPECIALIZATION-CTYPE :KEY "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>" :NAME "pair" :ARGUMENTS (#S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 0 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Symbol_O>" :SPECIALIZER "class core::Symbol_O") :INTEGRAL-VALUE NIL) #S(CLASP-ANALYZER::GC-TEMPLATE-ARGUMENT :INDEX 1 :CTYPE #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O") :INTEGRAL-VALUE NIL)))
*/
/* (ctype-key (base one)) -> "std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>"
*/
// atomic-smart-ptr-p -> NIL
//     field: "second" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Topology_O>" :SPECIALIZER "class chem::Topology_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Topology_O>), __builtin_offsetof(SAFE_TYPE_MACRO(std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>),second), 0, "second" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>/3303
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<chem::StereoisomerAtoms_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtoms_O>" :SPECIALIZER "class chem::StereoisomerAtoms_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<chem::StereoisomerAtoms_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtoms_O>" :SPECIALIZER "class chem::StereoisomerAtoms_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::StereoisomerAtoms_O>" :SPECIALIZER "class chem::StereoisomerAtoms_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::StereoisomerAtoms_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>/3307
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Package_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::Package_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Package_O>" :SPECIALIZER "class core::Package_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Package_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<unsigned int>/3311
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_unsigned_int_, sizeof(gctools::GCVector_moveable<unsigned int>), 0, 0, "gctools::GCVector_moveable<unsigned int>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<unsigned int>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned int), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<unsigned int>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<unsigned int>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")
*/
/* (ctype-key (base one)) -> "unsigned int"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned int")>
{    variable_field, ctype_unsigned_int, sizeof(unsigned int), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<chem::EnergyStretch>/3315
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_, sizeof(gctools::GCVector_moveable<chem::EnergyStretch>), 0, 0, "gctools::GCVector_moveable<chem::EnergyStretch>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyStretch>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(chem::EnergyStretch), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyStretch>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<chem::EnergyStretch>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergyStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermStretch" :NAME "TermStretch")
//     field: ".kb" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),term.kb), 0, "term.kb" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergyStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermStretch" :NAME "TermStretch")
//     field: ".r0" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "double")
    {    variable_field, ctype_double, sizeof(double), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),term.r0), 0, "term.r0" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergyStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermStretch" :NAME "TermStretch")
//     field: ".I1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),term.I1), 0, "term.I1" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergyStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "term" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::TermStretch" :NAME "TermStretch")
//     field: ".I2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "int")
    {    variable_field, ctype_int, sizeof(int), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),term.I2), 0, "term.I2" }, // atomic: NIL public: (T T) fixable: NIL good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergyStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom1" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),_Atom1), 0, "_Atom1" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
/* (base one) -> #S(CLASP-ANALYZER::CXXRECORD-CTYPE :KEY "chem::EnergyStretch" :NAME "EnergyStretch")
*/
/* (ctype-key (base one)) -> "chem::EnergyStretch"
*/
// atomic-smart-ptr-p -> NIL
//     field: "_Atom2" (instance-field-access iv) -> CLANG-AST:AS-PUBLIC  (instance-field-ctype iv) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<chem::Atom_O>" :SPECIALIZER "class chem::Atom_O")
    {    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<chem::Atom_O>), __builtin_offsetof(SAFE_TYPE_MACRO(chem::EnergyStretch),_Atom2), 0, "_Atom2" }, // atomic: NIL public: (T) fixable: SMART-PTR-FIX good-name: T
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>/3319
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<core::Creator_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Creator_O>" :SPECIALIZER "class core::Creator_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<core::Creator_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Creator_O>" :SPECIALIZER "class core::Creator_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<core::Creator_O>" :SPECIALIZER "class core::Creator_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<core::Creator_O>), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>/3323
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__, sizeof(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>), 0, 0, "gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(gctools::smart_ptr<kinematics::Joint_O>), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")
*/
/* (ctype-key (base one)) -> "gctools::smart_ptr<kinematics::Joint_O>"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<SMART-PTR-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O") :base #S(CLASP-ANALYZER::SMART-PTR-CTYPE :KEY "gctools::smart_ptr<kinematics::Joint_O>" :SPECIALIZER "class kinematics::Joint_O")>
{    variable_field, SMART_PTR_OFFSET, sizeof(gctools::smart_ptr<kinematics::Joint_O>), 0, 0, "only" },
// StampWtag = gctools::GCArray_moveable<unsigned short>/3327
{ container_kind, STAMPWTAG_gctools__GCArray_moveable_unsigned_short_, sizeof(gctools::GCArray_moveable<unsigned short>), 0, 0, "gctools::GCArray_moveable<unsigned short>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned short>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(unsigned short), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned short>),_MaybeSignedLength), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCArray_moveable<unsigned short>),_MaybeSignedLength), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short")
*/
/* (ctype-key (base one)) -> "unsigned short"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "unsigned short")>
{    variable_field, ctype_unsigned_short, sizeof(unsigned short), 0, 0, "only" },
// StampWtag = gctools::GCVector_moveable<float>/3331
{ container_kind, STAMPWTAG_gctools__GCVector_moveable_float_, sizeof(gctools::GCVector_moveable<float>), 0, 0, "gctools::GCVector_moveable<float>" },
 {  variable_array0, 0, 0, __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<float>),_Data), 0, "_Data" },
 {  variable_capacity, sizeof(float), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<float>),_End), __builtin_offsetof(SAFE_TYPE_MACRO(gctools::GCVector_moveable<float>),_Capacity), 0, NULL },
/* (base one) -> #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")
*/
/* (ctype-key (base one)) -> "float"
*/
// atomic-smart-ptr-p -> NIL
// one -> #<POD-OFFSET :fields NIL :offset-type #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float") :base #S(CLASP-ANALYZER::BUILTIN-CTYPE :KEY "float")>
{    variable_field, ctype_float, sizeof(float), 0, 0, "only" },
// StampWtag = clang::FrontendAction/3335
// StampWtag = clang::ASTFrontendAction/3339
// StampWtag = clang::SyntaxOnlyAction/3343
// StampWtag = clang::tooling::ToolAction/3347
// StampWtag = clang::tooling::FrontendActionFactory/3351
// StampWtag = clang::ast_matchers::MatchFinder::MatchCallback/3355

#endif // defined(GC_OBJ_SCAN_HELPERS)
#if defined(GC_OBJ_SCAN_TABLE)
static void* OBJ_SCAN_table[] = { 
  /* 0 */ NULL,
   NULL
};
#endif // defined(GC_OBJ_SCAN_TABLE)
#if defined(GC_OBJ_FINALIZE)
obj_finalize_STAMPWTAG_core__T_O:
{
     // stamp value 7
    core::T_O* obj_gc_safe = reinterpret_cast<core::T_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~T_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Unused_dummy_O:
{
     // stamp value 11
    core::Unused_dummy_O* obj_gc_safe = reinterpret_cast<core::Unused_dummy_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Unused_dummy_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__General_O:
{
     // stamp value 15
    core::General_O* obj_gc_safe = reinterpret_cast<core::General_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~General_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__LambdaListHandler_O:
{
     // stamp value 19
    core::LambdaListHandler_O* obj_gc_safe = reinterpret_cast<core::LambdaListHandler_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LambdaListHandler_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__AttributeSet_O:
{
     // stamp value 23
    llvmo::AttributeSet_O* obj_gc_safe = reinterpret_cast<llvmo::AttributeSet_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AttributeSet_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Pointer_O:
{
     // stamp value 27
    core::Pointer_O* obj_gc_safe = reinterpret_cast<core::Pointer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Pointer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_clasp_ffi__ForeignData_O:
{
     // stamp value 31
    clasp_ffi::ForeignData_O* obj_gc_safe = reinterpret_cast<clasp_ffi::ForeignData_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ForeignData_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__CxxObject_O:
{
     // stamp value 35
    core::CxxObject_O* obj_gc_safe = reinterpret_cast<core::CxxObject_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CxxObject_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_asttooling__SourceLocation_O:
{
     // stamp value 39
    asttooling::SourceLocation_O* obj_gc_safe = reinterpret_cast<asttooling::SourceLocation_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SourceLocation_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__ChiList_O:
{
     // stamp value 43
    kinematics::ChiList_O* obj_gc_safe = reinterpret_cast<kinematics::ChiList_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ChiList_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__NumericalFunction_O:
{
     // stamp value 47
    chem::NumericalFunction_O* obj_gc_safe = reinterpret_cast<chem::NumericalFunction_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~NumericalFunction_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__FoldTree_O:
{
     // stamp value 51
    kinematics::FoldTree_O* obj_gc_safe = reinterpret_cast<kinematics::FoldTree_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FoldTree_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__RotamerSetBase_O:
{
     // stamp value 55
    kinematics::RotamerSetBase_O* obj_gc_safe = reinterpret_cast<kinematics::RotamerSetBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RotamerSetBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__BackboneDependentRotamerSet_O:
{
     // stamp value 59
    kinematics::BackboneDependentRotamerSet_O* obj_gc_safe = reinterpret_cast<kinematics::BackboneDependentRotamerSet_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BackboneDependentRotamerSet_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__RotamerSet_O:
{
     // stamp value 63
    kinematics::RotamerSet_O* obj_gc_safe = reinterpret_cast<kinematics::RotamerSet_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RotamerSet_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyComponent_O:
{
     // stamp value 67
    chem::EnergyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyComponent_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyComponent_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyStretch_O:
{
     // stamp value 71
    chem::EnergyStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergyStretch_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyStretch_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyRigidBodyComponent_O:
{
     // stamp value 75
    chem::EnergyRigidBodyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyComponent_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyRigidBodyComponent_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyRigidBodyStaple_O:
{
     // stamp value 79
    chem::EnergyRigidBodyStaple_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyStaple_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyRigidBodyStaple_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyRigidBodyNonbond_O:
{
     // stamp value 83
    chem::EnergyRigidBodyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyNonbond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyRigidBodyNonbond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyOutOfZPlane_O:
{
     // stamp value 87
    chem::EnergyOutOfZPlane_O* obj_gc_safe = reinterpret_cast<chem::EnergyOutOfZPlane_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyOutOfZPlane_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergySketchNonbond_O:
{
     // stamp value 91
    chem::EnergySketchNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergySketchNonbond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergySketchNonbond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyDihedralRestraint_O:
{
     // stamp value 95
    chem::EnergyDihedralRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyDihedralRestraint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyDihedralRestraint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyChiralRestraint_O:
{
     // stamp value 99
    chem::EnergyChiralRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyChiralRestraint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyChiralRestraint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyPointToLineRestraint_O:
{
     // stamp value 103
    chem::EnergyPointToLineRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyPointToLineRestraint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyPointToLineRestraint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyDihedral_O:
{
     // stamp value 107
    chem::EnergyDihedral_O* obj_gc_safe = reinterpret_cast<chem::EnergyDihedral_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyDihedral_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyNonbond_O:
{
     // stamp value 111
    chem::EnergyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyNonbond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyNonbond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O:
{
     // stamp value 115
    chem::EnergyPeriodicBoundaryConditionsNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyPeriodicBoundaryConditionsNonbond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyPeriodicBoundaryConditionsNonbond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyAnchorRestraint_O:
{
     // stamp value 119
    chem::EnergyAnchorRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyAnchorRestraint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyAnchorRestraint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyFixedNonbondRestraint_O:
{
     // stamp value 123
    chem::EnergyFixedNonbondRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyFixedNonbondRestraint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyFixedNonbondRestraint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergySketchStretch_O:
{
     // stamp value 127
    chem::EnergySketchStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergySketchStretch_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergySketchStretch_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyAngle_O:
{
     // stamp value 131
    chem::EnergyAngle_O* obj_gc_safe = reinterpret_cast<chem::EnergyAngle_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyAngle_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Matter_O:
{
     // stamp value 135
    chem::Matter_O* obj_gc_safe = reinterpret_cast<chem::Matter_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Matter_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Aggregate_O:
{
     // stamp value 139
    chem::Aggregate_O* obj_gc_safe = reinterpret_cast<chem::Aggregate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Aggregate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Atom_O:
{
     // stamp value 143
    chem::Atom_O* obj_gc_safe = reinterpret_cast<chem::Atom_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Atom_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__VirtualAtom_O:
{
     // stamp value 147
    chem::VirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::VirtualAtom_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~VirtualAtom_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Residue_O:
{
     // stamp value 151
    chem::Residue_O* obj_gc_safe = reinterpret_cast<chem::Residue_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Residue_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Molecule_O:
{
     // stamp value 155
    chem::Molecule_O* obj_gc_safe = reinterpret_cast<chem::Molecule_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Molecule_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__PdbWriter_O:
{
     // stamp value 159
    chem::PdbWriter_O* obj_gc_safe = reinterpret_cast<chem::PdbWriter_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PdbWriter_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__TrajectoryFrame_O:
{
     // stamp value 163
    chem::TrajectoryFrame_O* obj_gc_safe = reinterpret_cast<chem::TrajectoryFrame_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TrajectoryFrame_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__MDBuilder_O:
{
     // stamp value 167
    llvmo::MDBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::MDBuilder_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDBuilder_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Topology_O:
{
     // stamp value 171
    chem::Topology_O* obj_gc_safe = reinterpret_cast<chem::Topology_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Topology_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AtomTable_O:
{
     // stamp value 175
    chem::AtomTable_O* obj_gc_safe = reinterpret_cast<chem::AtomTable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomTable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CipPrioritizer_O:
{
     // stamp value 179
    chem::CipPrioritizer_O* obj_gc_safe = reinterpret_cast<chem::CipPrioritizer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CipPrioritizer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_adapt__IndexedObjectBag_O:
{
     // stamp value 183
    adapt::IndexedObjectBag_O* obj_gc_safe = reinterpret_cast<adapt::IndexedObjectBag_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IndexedObjectBag_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__VirtualSphere_O:
{
     // stamp value 187
    chem::VirtualSphere_O* obj_gc_safe = reinterpret_cast<chem::VirtualSphere_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~VirtualSphere_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__TwisterDriver_O:
{
     // stamp value 191
    chem::TwisterDriver_O* obj_gc_safe = reinterpret_cast<chem::TwisterDriver_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TwisterDriver_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RingFinder_O:
{
     // stamp value 195
    chem::RingFinder_O* obj_gc_safe = reinterpret_cast<chem::RingFinder_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RingFinder_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__FunctionCallee_O:
{
     // stamp value 199
    llvmo::FunctionCallee_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionCallee_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FunctionCallee_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__Joint_O:
{
     // stamp value 203
    kinematics::Joint_O* obj_gc_safe = reinterpret_cast<kinematics::Joint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Joint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__JumpJoint_O:
{
     // stamp value 207
    kinematics::JumpJoint_O* obj_gc_safe = reinterpret_cast<kinematics::JumpJoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~JumpJoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__OriginJumpJoint_O:
{
     // stamp value 211
    kinematics::OriginJumpJoint_O* obj_gc_safe = reinterpret_cast<kinematics::OriginJumpJoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OriginJumpJoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__BondedJoint_O:
{
     // stamp value 215
    kinematics::BondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::BondedJoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondedJoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__RootBondedJoint_O:
{
     // stamp value 219
    kinematics::RootBondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::RootBondedJoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RootBondedJoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__DelayedBondedJoint_O:
{
     // stamp value 223
    kinematics::DelayedBondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::DelayedBondedJoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DelayedBondedJoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SearchStatistics_O:
{
     // stamp value 227
    chem::SearchStatistics_O* obj_gc_safe = reinterpret_cast<chem::SearchStatistics_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SearchStatistics_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__PdbMonomerDatabase_O:
{
     // stamp value 231
    chem::PdbMonomerDatabase_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerDatabase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PdbMonomerDatabase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Twister_O:
{
     // stamp value 235
    chem::Twister_O* obj_gc_safe = reinterpret_cast<chem::Twister_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Twister_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__MonomerCoordinates_O:
{
     // stamp value 239
    chem::MonomerCoordinates_O* obj_gc_safe = reinterpret_cast<chem::MonomerCoordinates_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MonomerCoordinates_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFParameter_O:
{
     // stamp value 243
    chem::FFParameter_O* obj_gc_safe = reinterpret_cast<chem::FFParameter_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFParameter_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFVdw_O:
{
     // stamp value 247
    chem::FFVdw_O* obj_gc_safe = reinterpret_cast<chem::FFVdw_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFVdw_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFStretch_O:
{
     // stamp value 251
    chem::FFStretch_O* obj_gc_safe = reinterpret_cast<chem::FFStretch_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFStretch_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFPtor_O:
{
     // stamp value 255
    chem::FFPtor_O* obj_gc_safe = reinterpret_cast<chem::FFPtor_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFPtor_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFItor_O:
{
     // stamp value 259
    chem::FFItor_O* obj_gc_safe = reinterpret_cast<chem::FFItor_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFItor_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFNonbond_O:
{
     // stamp value 263
    chem::FFNonbond_O* obj_gc_safe = reinterpret_cast<chem::FFNonbond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFNonbond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFAngle_O:
{
     // stamp value 267
    chem::FFAngle_O* obj_gc_safe = reinterpret_cast<chem::FFAngle_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFAngle_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Restraint_O:
{
     // stamp value 271
    chem::Restraint_O* obj_gc_safe = reinterpret_cast<chem::Restraint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Restraint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RestraintChiral_O:
{
     // stamp value 275
    chem::RestraintChiral_O* obj_gc_safe = reinterpret_cast<chem::RestraintChiral_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RestraintChiral_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RestraintDistance_O:
{
     // stamp value 279
    chem::RestraintDistance_O* obj_gc_safe = reinterpret_cast<chem::RestraintDistance_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RestraintDistance_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RestraintAngle_O:
{
     // stamp value 283
    chem::RestraintAngle_O* obj_gc_safe = reinterpret_cast<chem::RestraintAngle_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RestraintAngle_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RestraintAnchor_O:
{
     // stamp value 287
    chem::RestraintAnchor_O* obj_gc_safe = reinterpret_cast<chem::RestraintAnchor_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RestraintAnchor_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RestraintFixedNonbond_O:
{
     // stamp value 291
    chem::RestraintFixedNonbond_O* obj_gc_safe = reinterpret_cast<chem::RestraintFixedNonbond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RestraintFixedNonbond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RestraintDihedral_O:
{
     // stamp value 295
    chem::RestraintDihedral_O* obj_gc_safe = reinterpret_cast<chem::RestraintDihedral_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RestraintDihedral_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AtomIndexer_O:
{
     // stamp value 299
    chem::AtomIndexer_O* obj_gc_safe = reinterpret_cast<chem::AtomIndexer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomIndexer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_geom__BoundingCuboid_O:
{
     // stamp value 303
    geom::BoundingCuboid_O* obj_gc_safe = reinterpret_cast<geom::BoundingCuboid_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BoundingCuboid_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__StereoInformation_O:
{
     // stamp value 307
    chem::StereoInformation_O* obj_gc_safe = reinterpret_cast<chem::StereoInformation_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StereoInformation_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AddIonOctree_O:
{
     // stamp value 311
    chem::AddIonOctree_O* obj_gc_safe = reinterpret_cast<chem::AddIonOctree_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AddIonOctree_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CDNode_O:
{
     // stamp value 315
    chem::CDNode_O* obj_gc_safe = reinterpret_cast<chem::CDNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CDNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__OligomerPart_Base_O:
{
     // stamp value 319
    chem::OligomerPart_Base_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Base_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OligomerPart_Base_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__OligomerPart_Link_O:
{
     // stamp value 323
    chem::OligomerPart_Link_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Link_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OligomerPart_Link_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__OligomerPart_Monomer_O:
{
     // stamp value 327
    chem::OligomerPart_Monomer_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Monomer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OligomerPart_Monomer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__BondId_O:
{
     // stamp value 331
    kinematics::BondId_O* obj_gc_safe = reinterpret_cast<kinematics::BondId_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondId_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CoordinateSystem_O:
{
     // stamp value 335
    chem::CoordinateSystem_O* obj_gc_safe = reinterpret_cast<chem::CoordinateSystem_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CoordinateSystem_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Bond_O:
{
     // stamp value 339
    chem::Bond_O* obj_gc_safe = reinterpret_cast<chem::Bond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Bond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CandoDatabase_O:
{
     // stamp value 343
    chem::CandoDatabase_O* obj_gc_safe = reinterpret_cast<chem::CandoDatabase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CandoDatabase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AbstractLargeSquareMatrix_O:
{
     // stamp value 347
    chem::AbstractLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::AbstractLargeSquareMatrix_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AbstractLargeSquareMatrix_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SparseLargeSquareMatrix_O:
{
     // stamp value 351
    chem::SparseLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::SparseLargeSquareMatrix_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SparseLargeSquareMatrix_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FullLargeSquareMatrix_O:
{
     // stamp value 355
    chem::FullLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::FullLargeSquareMatrix_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FullLargeSquareMatrix_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFBaseDb_O:
{
     // stamp value 359
    chem::FFBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFBaseDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFBaseDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFParameterBaseDb_O:
{
     // stamp value 363
    chem::FFParameterBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFParameterBaseDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFParameterBaseDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFItorDb_O:
{
     // stamp value 367
    chem::FFItorDb_O* obj_gc_safe = reinterpret_cast<chem::FFItorDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFItorDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFStretchDb_O:
{
     // stamp value 371
    chem::FFStretchDb_O* obj_gc_safe = reinterpret_cast<chem::FFStretchDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFStretchDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFAngleDb_O:
{
     // stamp value 375
    chem::FFAngleDb_O* obj_gc_safe = reinterpret_cast<chem::FFAngleDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFAngleDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFNonbondDb_O:
{
     // stamp value 379
    chem::FFNonbondDb_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFNonbondDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFPtorDb_O:
{
     // stamp value 383
    chem::FFPtorDb_O* obj_gc_safe = reinterpret_cast<chem::FFPtorDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFPtorDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFVdwDb_O:
{
     // stamp value 387
    chem::FFVdwDb_O* obj_gc_safe = reinterpret_cast<chem::FFVdwDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFVdwDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFTypesDb_O:
{
     // stamp value 391
    chem::FFTypesDb_O* obj_gc_safe = reinterpret_cast<chem::FFTypesDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFTypesDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__LibraryBase_O:
{
     // stamp value 395
    llvmo::LibraryBase_O* obj_gc_safe = reinterpret_cast<llvmo::LibraryBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LibraryBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ObjectFile_O:
{
     // stamp value 399
    llvmo::ObjectFile_O* obj_gc_safe = reinterpret_cast<llvmo::ObjectFile_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ObjectFile_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__LibraryFile_O:
{
     // stamp value 403
    llvmo::LibraryFile_O* obj_gc_safe = reinterpret_cast<llvmo::LibraryFile_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LibraryFile_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AGVertex_O:
{
     // stamp value 407
    chem::AGVertex_O* obj_gc_safe = reinterpret_cast<chem::AGVertex_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AGVertex_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ForceField_O:
{
     // stamp value 411
    chem::ForceField_O* obj_gc_safe = reinterpret_cast<chem::ForceField_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ForceField_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AtomReferenceBase_O:
{
     // stamp value 415
    chem::AtomReferenceBase_O* obj_gc_safe = reinterpret_cast<chem::AtomReferenceBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomReferenceBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AtomReference_O:
{
     // stamp value 419
    chem::AtomReference_O* obj_gc_safe = reinterpret_cast<chem::AtomReference_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomReference_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ScoringFunction_O:
{
     // stamp value 423
    chem::ScoringFunction_O* obj_gc_safe = reinterpret_cast<chem::ScoringFunction_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ScoringFunction_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EnergyFunction_O:
{
     // stamp value 427
    chem::EnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::EnergyFunction_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EnergyFunction_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SketchFunction_O:
{
     // stamp value 431
    chem::SketchFunction_O* obj_gc_safe = reinterpret_cast<chem::SketchFunction_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SketchFunction_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RigidBodyEnergyFunction_O:
{
     // stamp value 435
    chem::RigidBodyEnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::RigidBodyEnergyFunction_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RigidBodyEnergyFunction_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__WildElementDict_O:
{
     // stamp value 439
    chem::WildElementDict_O* obj_gc_safe = reinterpret_cast<chem::WildElementDict_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~WildElementDict_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_asttooling__QualType_O:
{
     // stamp value 443
    asttooling::QualType_O* obj_gc_safe = reinterpret_cast<asttooling::QualType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~QualType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DITypeRefArray_O:
{
     // stamp value 447
    llvmo::DITypeRefArray_O* obj_gc_safe = reinterpret_cast<llvmo::DITypeRefArray_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DITypeRefArray_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_geom__OVector3_O:
{
     // stamp value 451
    geom::OVector3_O* obj_gc_safe = reinterpret_cast<geom::OVector3_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OVector3_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_geom__OVector2_O:
{
     // stamp value 455
    geom::OVector2_O* obj_gc_safe = reinterpret_cast<geom::OVector2_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OVector2_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Structure_Old_ListEntry_O:
{
     // stamp value 459
    chem::Structure_Old_ListEntry_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_ListEntry_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Structure_Old_ListEntry_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFTypeRule_O:
{
     // stamp value 463
    chem::FFTypeRule_O* obj_gc_safe = reinterpret_cast<chem::FFTypeRule_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFTypeRule_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_adapt__QDomNode_O:
{
     // stamp value 467
    adapt::QDomNode_O* obj_gc_safe = reinterpret_cast<adapt::QDomNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~QDomNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_mp__SharedMutex_O:
{
     // stamp value 471
    mp::SharedMutex_O* obj_gc_safe = reinterpret_cast<mp::SharedMutex_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SharedMutex_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConstitutionAtom_O:
{
     // stamp value 475
    chem::ConstitutionAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtom_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstitutionAtom_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConstitutionVirtualAtom_O:
{
     // stamp value 479
    chem::ConstitutionVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionVirtualAtom_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstitutionVirtualAtom_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Smirks_O:
{
     // stamp value 483
    chem::Smirks_O* obj_gc_safe = reinterpret_cast<chem::Smirks_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Smirks_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ReadAmberParameters_O:
{
     // stamp value 487
    chem::ReadAmberParameters_O* obj_gc_safe = reinterpret_cast<chem::ReadAmberParameters_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ReadAmberParameters_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AGEdge_O:
{
     // stamp value 491
    chem::AGEdge_O* obj_gc_safe = reinterpret_cast<chem::AGEdge_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AGEdge_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Entity_O:
{
     // stamp value 495
    chem::Entity_O* obj_gc_safe = reinterpret_cast<chem::Entity_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Entity_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Stereoisomer_O:
{
     // stamp value 499
    chem::Stereoisomer_O* obj_gc_safe = reinterpret_cast<chem::Stereoisomer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Stereoisomer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EntityNameSetBase_O:
{
     // stamp value 503
    chem::EntityNameSetBase_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EntityNameSetBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EntityNameSetWithCap_O:
{
     // stamp value 507
    chem::EntityNameSetWithCap_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetWithCap_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EntityNameSetWithCap_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Mate_O:
{
     // stamp value 511
    chem::Mate_O* obj_gc_safe = reinterpret_cast<chem::Mate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Mate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RingClosingMate_O:
{
     // stamp value 515
    chem::RingClosingMate_O* obj_gc_safe = reinterpret_cast<chem::RingClosingMate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RingClosingMate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__EntityNameSet_O:
{
     // stamp value 519
    chem::EntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSet_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EntityNameSet_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RepresentedEntityNameSet_O:
{
     // stamp value 523
    chem::RepresentedEntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::RepresentedEntityNameSet_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RepresentedEntityNameSet_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__MonomerPack_O:
{
     // stamp value 527
    chem::MonomerPack_O* obj_gc_safe = reinterpret_cast<chem::MonomerPack_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MonomerPack_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Constitution_O:
{
     // stamp value 531
    chem::Constitution_O* obj_gc_safe = reinterpret_cast<chem::Constitution_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Constitution_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Monomer_O:
{
     // stamp value 535
    chem::Monomer_O* obj_gc_safe = reinterpret_cast<chem::Monomer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Monomer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__OctNode_O:
{
     // stamp value 539
    chem::OctNode_O* obj_gc_safe = reinterpret_cast<chem::OctNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OctNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Structure_Old_List_O:
{
     // stamp value 543
    chem::Structure_Old_List_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_List_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Structure_Old_List_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O:
{
     // stamp value 547
    kinematics::BackboneDependentRotamerLibrary_O* obj_gc_safe = reinterpret_cast<kinematics::BackboneDependentRotamerLibrary_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BackboneDependentRotamerLibrary_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ReportBase_O:
{
     // stamp value 551
    chem::ReportBase_O* obj_gc_safe = reinterpret_cast<chem::ReportBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ReportBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__StepReport_O:
{
     // stamp value 555
    chem::StepReport_O* obj_gc_safe = reinterpret_cast<chem::StepReport_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StepReport_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__MessageReport_O:
{
     // stamp value 559
    chem::MessageReport_O* obj_gc_safe = reinterpret_cast<chem::MessageReport_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MessageReport_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ForceMatchReport_O:
{
     // stamp value 563
    chem::ForceMatchReport_O* obj_gc_safe = reinterpret_cast<chem::ForceMatchReport_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ForceMatchReport_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ChemDraw_O:
{
     // stamp value 567
    chem::ChemDraw_O* obj_gc_safe = reinterpret_cast<chem::ChemDraw_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ChemDraw_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ZMatrixInternal_O:
{
     // stamp value 571
    chem::ZMatrixInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixInternal_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ZMatrixInternal_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ZMatrixBondInternal_O:
{
     // stamp value 575
    chem::ZMatrixBondInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixBondInternal_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ZMatrixBondInternal_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ZMatrixDihedralInternal_O:
{
     // stamp value 579
    chem::ZMatrixDihedralInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixDihedralInternal_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ZMatrixDihedralInternal_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ZMatrixAngleInternal_O:
{
     // stamp value 583
    chem::ZMatrixAngleInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixAngleInternal_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ZMatrixAngleInternal_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__StereoisomerAtom_O:
{
     // stamp value 587
    chem::StereoisomerAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtom_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StereoisomerAtom_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__StereoisomerVirtualAtom_O:
{
     // stamp value 591
    chem::StereoisomerVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerVirtualAtom_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StereoisomerVirtualAtom_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ZMatrix_O:
{
     // stamp value 595
    chem::ZMatrix_O* obj_gc_safe = reinterpret_cast<chem::ZMatrix_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ZMatrix_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Isoname_O:
{
     // stamp value 599
    chem::Isoname_O* obj_gc_safe = reinterpret_cast<chem::Isoname_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Isoname_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__PathMessage_O:
{
     // stamp value 603
    chem::PathMessage_O* obj_gc_safe = reinterpret_cast<chem::PathMessage_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PathMessage_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__MonomerId_O:
{
     // stamp value 607
    kinematics::MonomerId_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerId_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MonomerId_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__JointTemplate_O:
{
     // stamp value 611
    kinematics::JointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::JointTemplate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~JointTemplate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__BondedJointTemplate_O:
{
     // stamp value 615
    kinematics::BondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::BondedJointTemplate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondedJointTemplate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__DelayedBondedJointTemplate_O:
{
     // stamp value 619
    kinematics::DelayedBondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::DelayedBondedJointTemplate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DelayedBondedJointTemplate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__RootBondedJointTemplate_O:
{
     // stamp value 623
    kinematics::RootBondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::RootBondedJointTemplate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RootBondedJointTemplate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_geom__Color_O:
{
     // stamp value 627
    geom::Color_O* obj_gc_safe = reinterpret_cast<geom::Color_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Color_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConformationCollection_O:
{
     // stamp value 631
    chem::ConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollection_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConformationCollection_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SuperposableConformationCollection_O:
{
     // stamp value 635
    chem::SuperposableConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::SuperposableConformationCollection_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SuperposableConformationCollection_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_asttooling__PresumedLoc_O:
{
     // stamp value 639
    asttooling::PresumedLoc_O* obj_gc_safe = reinterpret_cast<asttooling::PresumedLoc_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PresumedLoc_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Coupling_O:
{
     // stamp value 643
    chem::Coupling_O* obj_gc_safe = reinterpret_cast<chem::Coupling_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Coupling_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RingCoupling_O:
{
     // stamp value 647
    chem::RingCoupling_O* obj_gc_safe = reinterpret_cast<chem::RingCoupling_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RingCoupling_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__DirectionalCoupling_O:
{
     // stamp value 651
    chem::DirectionalCoupling_O* obj_gc_safe = reinterpret_cast<chem::DirectionalCoupling_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DirectionalCoupling_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_adapt__ObjectSet_O:
{
     // stamp value 655
    adapt::ObjectSet_O* obj_gc_safe = reinterpret_cast<adapt::ObjectSet_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ObjectSet_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Oligomer_O:
{
     // stamp value 659
    chem::Oligomer_O* obj_gc_safe = reinterpret_cast<chem::Oligomer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Oligomer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__PdbMonomerConnectivity_O:
{
     // stamp value 663
    chem::PdbMonomerConnectivity_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerConnectivity_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PdbMonomerConnectivity_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_units__Dimension_O:
{
     // stamp value 667
    units::Dimension_O* obj_gc_safe = reinterpret_cast<units::Dimension_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Dimension_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConformationExplorerEntry_O:
{
     // stamp value 671
    chem::ConformationExplorerEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntry_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConformationExplorerEntry_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_mp__ConditionVariable_O:
{
     // stamp value 675
    mp::ConditionVariable_O* obj_gc_safe = reinterpret_cast<mp::ConditionVariable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConditionVariable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__PdbReader_O:
{
     // stamp value 679
    chem::PdbReader_O* obj_gc_safe = reinterpret_cast<chem::PdbReader_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PdbReader_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SpanningLoop_O:
{
     // stamp value 683
    chem::SpanningLoop_O* obj_gc_safe = reinterpret_cast<chem::SpanningLoop_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SpanningLoop_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ProperTorsion_O:
{
     // stamp value 687
    chem::ProperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ProperTorsion_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ProperTorsion_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ResidueList_O:
{
     // stamp value 691
    chem::ResidueList_O* obj_gc_safe = reinterpret_cast<chem::ResidueList_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ResidueList_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SuperposeEngine_O:
{
     // stamp value 695
    chem::SuperposeEngine_O* obj_gc_safe = reinterpret_cast<chem::SuperposeEngine_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SuperposeEngine_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SuperposeSelectedAtoms_O:
{
     // stamp value 699
    chem::SuperposeSelectedAtoms_O* obj_gc_safe = reinterpret_cast<chem::SuperposeSelectedAtoms_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SuperposeSelectedAtoms_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Command_O:
{
     // stamp value 703
    chem::Command_O* obj_gc_safe = reinterpret_cast<chem::Command_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Command_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__StereoConfiguration_O:
{
     // stamp value 707
    chem::StereoConfiguration_O* obj_gc_safe = reinterpret_cast<chem::StereoConfiguration_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StereoConfiguration_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__MonomerBaseNode_O:
{
     // stamp value 711
    kinematics::MonomerBaseNode_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerBaseNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MonomerBaseNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__AggregateNode_O:
{
     // stamp value 715
    kinematics::AggregateNode_O* obj_gc_safe = reinterpret_cast<kinematics::AggregateNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AggregateNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__ChainNode_O:
{
     // stamp value 719
    kinematics::ChainNode_O* obj_gc_safe = reinterpret_cast<kinematics::ChainNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ChainNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__MonomerNode_O:
{
     // stamp value 723
    kinematics::MonomerNode_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MonomerNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__RingClosingMonomerNode_O:
{
     // stamp value 727
    kinematics::RingClosingMonomerNode_O* obj_gc_safe = reinterpret_cast<kinematics::RingClosingMonomerNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RingClosingMonomerNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FFNonbondCrossTermTable_O:
{
     // stamp value 731
    chem::FFNonbondCrossTermTable_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondCrossTermTable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FFNonbondCrossTermTable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Plug_O:
{
     // stamp value 735
    chem::Plug_O* obj_gc_safe = reinterpret_cast<chem::Plug_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Plug_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__JumpPlug_O:
{
     // stamp value 739
    chem::JumpPlug_O* obj_gc_safe = reinterpret_cast<chem::JumpPlug_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~JumpPlug_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__PlugWithMates_O:
{
     // stamp value 743
    chem::PlugWithMates_O* obj_gc_safe = reinterpret_cast<chem::PlugWithMates_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PlugWithMates_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__InPlug_O:
{
     // stamp value 747
    chem::InPlug_O* obj_gc_safe = reinterpret_cast<chem::InPlug_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~InPlug_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__OutPlug_O:
{
     // stamp value 751
    chem::OutPlug_O* obj_gc_safe = reinterpret_cast<chem::OutPlug_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OutPlug_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__OriginPlug_O:
{
     // stamp value 755
    chem::OriginPlug_O* obj_gc_safe = reinterpret_cast<chem::OriginPlug_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OriginPlug_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__Rotamer_O:
{
     // stamp value 759
    kinematics::Rotamer_O* obj_gc_safe = reinterpret_cast<kinematics::Rotamer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Rotamer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__MonomerContext_O:
{
     // stamp value 763
    chem::MonomerContext_O* obj_gc_safe = reinterpret_cast<chem::MonomerContext_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MonomerContext_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CDFragment_O:
{
     // stamp value 767
    chem::CDFragment_O* obj_gc_safe = reinterpret_cast<chem::CDFragment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CDFragment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_units__Unit_O:
{
     // stamp value 771
    units::Unit_O* obj_gc_safe = reinterpret_cast<units::Unit_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Unit_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_units__NamedUnit_O:
{
     // stamp value 775
    units::NamedUnit_O* obj_gc_safe = reinterpret_cast<units::NamedUnit_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~NamedUnit_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__NativeVector_int_O:
{
     // stamp value 779
    core::NativeVector_int_O* obj_gc_safe = reinterpret_cast<core::NativeVector_int_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~NativeVector_int_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__CodeBase_O:
{
     // stamp value 783
    llvmo::CodeBase_O* obj_gc_safe = reinterpret_cast<llvmo::CodeBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CodeBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Code_O:
{
     // stamp value 787
    llvmo::Code_O* obj_gc_safe = reinterpret_cast<llvmo::Code_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Code_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Library_O:
{
     // stamp value 791
    llvmo::Library_O* obj_gc_safe = reinterpret_cast<llvmo::Library_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Library_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__InfoDb_O:
{
     // stamp value 795
    chem::InfoDb_O* obj_gc_safe = reinterpret_cast<chem::InfoDb_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~InfoDb_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__MinimizerLog_O:
{
     // stamp value 799
    chem::MinimizerLog_O* obj_gc_safe = reinterpret_cast<chem::MinimizerLog_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MinimizerLog_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__GenericOctree_O:
{
     // stamp value 803
    chem::GenericOctree_O* obj_gc_safe = reinterpret_cast<chem::GenericOctree_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~GenericOctree_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__AtomTree_O:
{
     // stamp value 807
    kinematics::AtomTree_O* obj_gc_safe = reinterpret_cast<kinematics::AtomTree_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomTree_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_units__Quantity_O:
{
     // stamp value 811
    units::Quantity_O* obj_gc_safe = reinterpret_cast<units::Quantity_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Quantity_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ChemInfoMatch_O:
{
     // stamp value 815
    chem::ChemInfoMatch_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoMatch_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ChemInfoMatch_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ZMatrixEntry_O:
{
     // stamp value 819
    chem::ZMatrixEntry_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixEntry_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ZMatrixEntry_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SpecificContextSet_O:
{
     // stamp value 823
    chem::SpecificContextSet_O* obj_gc_safe = reinterpret_cast<chem::SpecificContextSet_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SpecificContextSet_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Angle_O:
{
     // stamp value 827
    chem::Angle_O* obj_gc_safe = reinterpret_cast<chem::Angle_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Angle_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__MacroModelFile_O:
{
     // stamp value 831
    chem::MacroModelFile_O* obj_gc_safe = reinterpret_cast<chem::MacroModelFile_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MacroModelFile_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__BondList_O:
{
     // stamp value 835
    chem::BondList_O* obj_gc_safe = reinterpret_cast<chem::BondList_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondList_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConformationExplorer_O:
{
     // stamp value 839
    chem::ConformationExplorer_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConformationExplorer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ChemInfoGraph_O:
{
     // stamp value 843
    chem::ChemInfoGraph_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoGraph_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ChemInfoGraph_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CDText_O:
{
     // stamp value 847
    chem::CDText_O* obj_gc_safe = reinterpret_cast<chem::CDText_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CDText_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DINodeArray_O:
{
     // stamp value 851
    llvmo::DINodeArray_O* obj_gc_safe = reinterpret_cast<llvmo::DINodeArray_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DINodeArray_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SpanningInfo_O:
{
     // stamp value 855
    chem::SpanningInfo_O* obj_gc_safe = reinterpret_cast<chem::SpanningInfo_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SpanningInfo_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__Checkpoint_O:
{
     // stamp value 859
    kinematics::Checkpoint_O* obj_gc_safe = reinterpret_cast<kinematics::Checkpoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Checkpoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__CheckpointJoint_O:
{
     // stamp value 863
    kinematics::CheckpointJoint_O* obj_gc_safe = reinterpret_cast<kinematics::CheckpointJoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CheckpointJoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__CheckpointOutPlugJoint_O:
{
     // stamp value 867
    kinematics::CheckpointOutPlugJoint_O* obj_gc_safe = reinterpret_cast<kinematics::CheckpointOutPlugJoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CheckpointOutPlugJoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConformationExplorerMatch_O:
{
     // stamp value 871
    chem::ConformationExplorerMatch_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerMatch_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConformationExplorerMatch_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__StereoisomerAtoms_O:
{
     // stamp value 875
    chem::StereoisomerAtoms_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtoms_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StereoisomerAtoms_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Rotamer_O:
{
     // stamp value 879
    chem::Rotamer_O* obj_gc_safe = reinterpret_cast<chem::Rotamer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Rotamer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ImproperTorsion_O:
{
     // stamp value 883
    chem::ImproperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ImproperTorsion_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ImproperTorsion_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_adapt__SymbolList_O:
{
     // stamp value 887
    adapt::SymbolList_O* obj_gc_safe = reinterpret_cast<adapt::SymbolList_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SymbolList_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__FrameRecognizer_O:
{
     // stamp value 891
    chem::FrameRecognizer_O* obj_gc_safe = reinterpret_cast<chem::FrameRecognizer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FrameRecognizer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConformationExplorerEntryStage_O:
{
     // stamp value 895
    chem::ConformationExplorerEntryStage_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntryStage_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConformationExplorerEntryStage_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Trajectory_O:
{
     // stamp value 899
    chem::Trajectory_O* obj_gc_safe = reinterpret_cast<chem::Trajectory_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Trajectory_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CalculatePosition_O:
{
     // stamp value 903
    chem::CalculatePosition_O* obj_gc_safe = reinterpret_cast<chem::CalculatePosition_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CalculatePosition_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O:
{
     // stamp value 907
    chem::CalculatePositionRelativeToOrigin_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionRelativeToOrigin_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CalculatePositionRelativeToOrigin_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CalculatePositionUsingInternals_O:
{
     // stamp value 911
    chem::CalculatePositionUsingInternals_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionUsingInternals_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CalculatePositionUsingInternals_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CalculatePositionAlongBond_O:
{
     // stamp value 915
    chem::CalculatePositionAlongBond_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionAlongBond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CalculatePositionAlongBond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_geom__OMatrix_O:
{
     // stamp value 919
    geom::OMatrix_O* obj_gc_safe = reinterpret_cast<geom::OMatrix_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~OMatrix_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConformationCollectionEntry_O:
{
     // stamp value 923
    chem::ConformationCollectionEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollectionEntry_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConformationCollectionEntry_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ComplexRestraint_O:
{
     // stamp value 927
    chem::ComplexRestraint_O* obj_gc_safe = reinterpret_cast<chem::ComplexRestraint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexRestraint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RestrainedExoCyclicAtom_O:
{
     // stamp value 931
    chem::RestrainedExoCyclicAtom_O* obj_gc_safe = reinterpret_cast<chem::RestrainedExoCyclicAtom_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RestrainedExoCyclicAtom_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RestrainedPiBond_O:
{
     // stamp value 935
    chem::RestrainedPiBond_O* obj_gc_safe = reinterpret_cast<chem::RestrainedPiBond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RestrainedPiBond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_mp__Mutex_O:
{
     // stamp value 939
    mp::Mutex_O* obj_gc_safe = reinterpret_cast<mp::Mutex_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Mutex_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_mp__RecursiveMutex_O:
{
     // stamp value 943
    mp::RecursiveMutex_O* obj_gc_safe = reinterpret_cast<mp::RecursiveMutex_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RecursiveMutex_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CombinedForceField_O:
{
     // stamp value 947
    chem::CombinedForceField_O* obj_gc_safe = reinterpret_cast<chem::CombinedForceField_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CombinedForceField_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__CDBond_O:
{
     // stamp value 951
    chem::CDBond_O* obj_gc_safe = reinterpret_cast<chem::CDBond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CDBond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConstitutionBond_O:
{
     // stamp value 955
    chem::ConstitutionBond_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionBond_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstitutionBond_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__ChiDihedral_O:
{
     // stamp value 959
    kinematics::ChiDihedral_O* obj_gc_safe = reinterpret_cast<kinematics::ChiDihedral_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ChiDihedral_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ConstitutionAtoms_O:
{
     // stamp value 963
    chem::ConstitutionAtoms_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtoms_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstitutionAtoms_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__Conformation_O:
{
     // stamp value 967
    kinematics::Conformation_O* obj_gc_safe = reinterpret_cast<kinematics::Conformation_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Conformation_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__MoleculeGraph_O:
{
     // stamp value 971
    chem::MoleculeGraph_O* obj_gc_safe = reinterpret_cast<chem::MoleculeGraph_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MoleculeGraph_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__StructureComparer_O:
{
     // stamp value 975
    chem::StructureComparer_O* obj_gc_safe = reinterpret_cast<chem::StructureComparer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StructureComparer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__BoundingBox_O:
{
     // stamp value 979
    chem::BoundingBox_O* obj_gc_safe = reinterpret_cast<chem::BoundingBox_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BoundingBox_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ChemInfoNode_O:
{
     // stamp value 983
    chem::ChemInfoNode_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ChemInfoNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__BondMatcher_O:
{
     // stamp value 987
    chem::BondMatcher_O* obj_gc_safe = reinterpret_cast<chem::BondMatcher_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondMatcher_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__BondTest_O:
{
     // stamp value 991
    chem::BondTest_O* obj_gc_safe = reinterpret_cast<chem::BondTest_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondTest_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__BondLogical_O:
{
     // stamp value 995
    chem::BondLogical_O* obj_gc_safe = reinterpret_cast<chem::BondLogical_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondLogical_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__BondMatchNode_O:
{
     // stamp value 999
    chem::BondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondMatchNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondMatchNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AtomOrBondMatchNode_O:
{
     // stamp value 1003
    chem::AtomOrBondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::AtomOrBondMatchNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomOrBondMatchNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Root_O:
{
     // stamp value 1007
    chem::Root_O* obj_gc_safe = reinterpret_cast<chem::Root_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Root_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SmartsRoot_O:
{
     // stamp value 1011
    chem::SmartsRoot_O* obj_gc_safe = reinterpret_cast<chem::SmartsRoot_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SmartsRoot_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AntechamberRoot_O:
{
     // stamp value 1015
    chem::AntechamberRoot_O* obj_gc_safe = reinterpret_cast<chem::AntechamberRoot_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AntechamberRoot_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ResidueTest_O:
{
     // stamp value 1019
    chem::ResidueTest_O* obj_gc_safe = reinterpret_cast<chem::ResidueTest_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ResidueTest_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AntechamberFocusAtomMatch_O:
{
     // stamp value 1023
    chem::AntechamberFocusAtomMatch_O* obj_gc_safe = reinterpret_cast<chem::AntechamberFocusAtomMatch_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AntechamberFocusAtomMatch_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Logical_O:
{
     // stamp value 1027
    chem::Logical_O* obj_gc_safe = reinterpret_cast<chem::Logical_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Logical_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AtomTest_O:
{
     // stamp value 1031
    chem::AtomTest_O* obj_gc_safe = reinterpret_cast<chem::AtomTest_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomTest_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__BondToAtomTest_O:
{
     // stamp value 1035
    chem::BondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::BondToAtomTest_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondToAtomTest_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AntechamberBondToAtomTest_O:
{
     // stamp value 1039
    chem::AntechamberBondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::AntechamberBondToAtomTest_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AntechamberBondToAtomTest_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__BondListMatchNode_O:
{
     // stamp value 1043
    chem::BondListMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondListMatchNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BondListMatchNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Chain_O:
{
     // stamp value 1047
    chem::Chain_O* obj_gc_safe = reinterpret_cast<chem::Chain_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Chain_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Branch_O:
{
     // stamp value 1051
    chem::Branch_O* obj_gc_safe = reinterpret_cast<chem::Branch_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Branch_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__RootMatchNode_O:
{
     // stamp value 1055
    chem::RootMatchNode_O* obj_gc_safe = reinterpret_cast<chem::RootMatchNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RootMatchNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AfterMatchBondToAtomTest_O:
{
     // stamp value 1059
    chem::AfterMatchBondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::AfterMatchBondToAtomTest_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AfterMatchBondToAtomTest_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ElementsInfo_O:
{
     // stamp value 1063
    chem::ElementsInfo_O* obj_gc_safe = reinterpret_cast<chem::ElementsInfo_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ElementsInfo_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Dimacs_O:
{
     // stamp value 1067
    chem::Dimacs_O* obj_gc_safe = reinterpret_cast<chem::Dimacs_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Dimacs_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__SpecificContext_O:
{
     // stamp value 1071
    chem::SpecificContext_O* obj_gc_safe = reinterpret_cast<chem::SpecificContext_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SpecificContext_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Minimizer_O:
{
     // stamp value 1075
    chem::Minimizer_O* obj_gc_safe = reinterpret_cast<chem::Minimizer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Minimizer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_adapt__SymbolSet_O:
{
     // stamp value 1079
    adapt::SymbolSet_O* obj_gc_safe = reinterpret_cast<adapt::SymbolSet_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SymbolSet_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O:
{
     // stamp value 1083
    chem::MapOfMonomerNamesToAtomIndexers_O* obj_gc_safe = reinterpret_cast<chem::MapOfMonomerNamesToAtomIndexers_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MapOfMonomerNamesToAtomIndexers_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__Alias_O:
{
     // stamp value 1087
    chem::Alias_O* obj_gc_safe = reinterpret_cast<chem::Alias_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Alias_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__AtomIdToAtomMap_O:
{
     // stamp value 1091
    chem::AtomIdToAtomMap_O* obj_gc_safe = reinterpret_cast<chem::AtomIdToAtomMap_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomIdToAtomMap_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_mp__Process_O:
{
     // stamp value 1095
    mp::Process_O* obj_gc_safe = reinterpret_cast<mp::Process_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Process_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SingleDispatchMethod_O:
{
     // stamp value 1099
    core::SingleDispatchMethod_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchMethod_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SingleDispatchMethod_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Iterator_O:
{
     // stamp value 1103
    core::Iterator_O* obj_gc_safe = reinterpret_cast<core::Iterator_O*>(client);
    obj_gc_safe->~Iterator_O();
}
obj_finalize_STAMPWTAG_core__DirectoryIterator_O:
{
     // stamp value 1107
    core::DirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::DirectoryIterator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DirectoryIterator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__IterateRestraints_O:
{
     // stamp value 1111
    chem::IterateRestraints_O* obj_gc_safe = reinterpret_cast<chem::IterateRestraints_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IterateRestraints_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_adapt__IterateCons_O:
{
     // stamp value 1115
    adapt::IterateCons_O* obj_gc_safe = reinterpret_cast<adapt::IterateCons_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IterateCons_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__RecursiveDirectoryIterator_O:
{
     // stamp value 1119
    core::RecursiveDirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::RecursiveDirectoryIterator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RecursiveDirectoryIterator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__IterateMatter_O:
{
     // stamp value 1123
    chem::IterateMatter_O* obj_gc_safe = reinterpret_cast<chem::IterateMatter_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IterateMatter_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__IterateResidues_O:
{
     // stamp value 1127
    chem::IterateResidues_O* obj_gc_safe = reinterpret_cast<chem::IterateResidues_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IterateResidues_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__IterateBonds_O:
{
     // stamp value 1131
    chem::IterateBonds_O* obj_gc_safe = reinterpret_cast<chem::IterateBonds_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IterateBonds_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__IterateAtoms_O:
{
     // stamp value 1135
    chem::IterateAtoms_O* obj_gc_safe = reinterpret_cast<chem::IterateAtoms_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IterateAtoms_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Symbol_O:
{
     // stamp value 1139
    core::Symbol_O* obj_gc_safe = reinterpret_cast<core::Symbol_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Symbol_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Null_O:
{
     // stamp value 1143
    core::Null_O* obj_gc_safe = reinterpret_cast<core::Null_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Null_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SharpEqualWrapper_O:
{
     // stamp value 1147
    core::SharpEqualWrapper_O* obj_gc_safe = reinterpret_cast<core::SharpEqualWrapper_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SharpEqualWrapper_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ClaspJIT_O:
{
     // stamp value 1151
    llvmo::ClaspJIT_O* obj_gc_safe = reinterpret_cast<llvmo::ClaspJIT_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ClaspJIT_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Exposer_O:
{
     // stamp value 1155
    core::Exposer_O* obj_gc_safe = reinterpret_cast<core::Exposer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Exposer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_units__UnitsExposer_O:
{
     // stamp value 1159
    units::UnitsExposer_O* obj_gc_safe = reinterpret_cast<units::UnitsExposer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~UnitsExposer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__CoreExposer_O:
{
     // stamp value 1163
    core::CoreExposer_O* obj_gc_safe = reinterpret_cast<core::CoreExposer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CoreExposer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_geom__GeomExposer_O:
{
     // stamp value 1167
    geom::GeomExposer_O* obj_gc_safe = reinterpret_cast<geom::GeomExposer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~GeomExposer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_adapt__AdaptExposer_O:
{
     // stamp value 1171
    adapt::AdaptExposer_O* obj_gc_safe = reinterpret_cast<adapt::AdaptExposer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AdaptExposer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_kinematics__KinematicsExposer_O:
{
     // stamp value 1175
    kinematics::KinematicsExposer_O* obj_gc_safe = reinterpret_cast<kinematics::KinematicsExposer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~KinematicsExposer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_chem__ChemExposer_O:
{
     // stamp value 1179
    chem::ChemExposer_O* obj_gc_safe = reinterpret_cast<chem::ChemExposer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ChemExposer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_asttooling__AsttoolingExposer_O:
{
     // stamp value 1183
    asttooling::AsttoolingExposer_O* obj_gc_safe = reinterpret_cast<asttooling::AsttoolingExposer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AsttoolingExposer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__PosixTimeDuration_O:
{
     // stamp value 1187
    core::PosixTimeDuration_O* obj_gc_safe = reinterpret_cast<core::PosixTimeDuration_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PosixTimeDuration_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_clasp_ffi__ForeignTypeSpec_O:
{
     // stamp value 1191
    clasp_ffi::ForeignTypeSpec_O* obj_gc_safe = reinterpret_cast<clasp_ffi::ForeignTypeSpec_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ForeignTypeSpec_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SmallMap_O:
{
     // stamp value 1195
    core::SmallMap_O* obj_gc_safe = reinterpret_cast<core::SmallMap_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SmallMap_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Instance_O:
{
     // stamp value 1197
    core::Instance_O* obj_gc_safe = reinterpret_cast<core::Instance_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Instance_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_clbind__ClassRep_O:
{
     // stamp value 1201
    clbind::ClassRep_O* obj_gc_safe = reinterpret_cast<clbind::ClassRep_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ClassRep_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__DerivableCxxObject_O:
{
     // stamp value 1204
    core::DerivableCxxObject_O* obj_gc_safe = reinterpret_cast<core::DerivableCxxObject_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DerivableCxxObject_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_mpip__Mpi_O:
{
     // stamp value 1211
    mpip::Mpi_O* obj_gc_safe = reinterpret_cast<mpip::Mpi_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Mpi_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Sigset_O:
{
     // stamp value 1215
    core::Sigset_O* obj_gc_safe = reinterpret_cast<core::Sigset_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Sigset_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Environment_O:
{
     // stamp value 1219
    core::Environment_O* obj_gc_safe = reinterpret_cast<core::Environment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Environment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__GlueEnvironment_O:
{
     // stamp value 1223
    core::GlueEnvironment_O* obj_gc_safe = reinterpret_cast<core::GlueEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~GlueEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__LexicalEnvironment_O:
{
     // stamp value 1227
    core::LexicalEnvironment_O* obj_gc_safe = reinterpret_cast<core::LexicalEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LexicalEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__CompileTimeEnvironment_O:
{
     // stamp value 1231
    core::CompileTimeEnvironment_O* obj_gc_safe = reinterpret_cast<core::CompileTimeEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CompileTimeEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__CatchEnvironment_O:
{
     // stamp value 1235
    core::CatchEnvironment_O* obj_gc_safe = reinterpret_cast<core::CatchEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CatchEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SymbolMacroletEnvironment_O:
{
     // stamp value 1239
    core::SymbolMacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::SymbolMacroletEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SymbolMacroletEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__FunctionContainerEnvironment_O:
{
     // stamp value 1243
    core::FunctionContainerEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionContainerEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FunctionContainerEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__UnwindProtectEnvironment_O:
{
     // stamp value 1247
    core::UnwindProtectEnvironment_O* obj_gc_safe = reinterpret_cast<core::UnwindProtectEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~UnwindProtectEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__MacroletEnvironment_O:
{
     // stamp value 1251
    core::MacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::MacroletEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MacroletEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__RuntimeVisibleEnvironment_O:
{
     // stamp value 1255
    core::RuntimeVisibleEnvironment_O* obj_gc_safe = reinterpret_cast<core::RuntimeVisibleEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RuntimeVisibleEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__TagbodyEnvironment_O:
{
     // stamp value 1259
    core::TagbodyEnvironment_O* obj_gc_safe = reinterpret_cast<core::TagbodyEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TagbodyEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__BlockEnvironment_O:
{
     // stamp value 1263
    core::BlockEnvironment_O* obj_gc_safe = reinterpret_cast<core::BlockEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BlockEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__FunctionValueEnvironment_O:
{
     // stamp value 1267
    core::FunctionValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionValueEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FunctionValueEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ValueEnvironment_O:
{
     // stamp value 1271
    core::ValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::ValueEnvironment_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ValueEnvironment_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ActivationFrame_O:
{
     // stamp value 1275
    core::ActivationFrame_O* obj_gc_safe = reinterpret_cast<core::ActivationFrame_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ActivationFrame_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ValueFrame_O:
{
     // stamp value 1279
    core::ValueFrame_O* obj_gc_safe = reinterpret_cast<core::ValueFrame_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ValueFrame_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__FunctionFrame_O:
{
     // stamp value 1283
    core::FunctionFrame_O* obj_gc_safe = reinterpret_cast<core::FunctionFrame_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FunctionFrame_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__RandomState_O:
{
     // stamp value 1287
    core::RandomState_O* obj_gc_safe = reinterpret_cast<core::RandomState_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~RandomState_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__EntryPointBase_O:
{
     // stamp value 1291
    core::EntryPointBase_O* obj_gc_safe = reinterpret_cast<core::EntryPointBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EntryPointBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__GlobalEntryPointGenerator_O:
{
     // stamp value 1295
    core::GlobalEntryPointGenerator_O* obj_gc_safe = reinterpret_cast<core::GlobalEntryPointGenerator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~GlobalEntryPointGenerator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__LocalEntryPointGenerator_O:
{
     // stamp value 1299
    core::LocalEntryPointGenerator_O* obj_gc_safe = reinterpret_cast<core::LocalEntryPointGenerator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LocalEntryPointGenerator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__CodeEntryPoint_O:
{
     // stamp value 1303
    core::CodeEntryPoint_O* obj_gc_safe = reinterpret_cast<core::CodeEntryPoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CodeEntryPoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__LocalEntryPoint_O:
{
     // stamp value 1307
    core::LocalEntryPoint_O* obj_gc_safe = reinterpret_cast<core::LocalEntryPoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LocalEntryPoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__GlobalEntryPoint_O:
{
     // stamp value 1311
    core::GlobalEntryPoint_O* obj_gc_safe = reinterpret_cast<core::GlobalEntryPoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~GlobalEntryPoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__HashTableBase_O:
{
     // stamp value 1315
    core::HashTableBase_O* obj_gc_safe = reinterpret_cast<core::HashTableBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~HashTableBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__HashTable_O:
{
     // stamp value 1319
    core::HashTable_O* obj_gc_safe = reinterpret_cast<core::HashTable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~HashTable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__HashTableEqualp_O:
{
     // stamp value 1323
    core::HashTableEqualp_O* obj_gc_safe = reinterpret_cast<core::HashTableEqualp_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~HashTableEqualp_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__HashTableEq_O:
{
     // stamp value 1327
    core::HashTableEq_O* obj_gc_safe = reinterpret_cast<core::HashTableEq_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~HashTableEq_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__HashTableEqual_O:
{
     // stamp value 1331
    core::HashTableEqual_O* obj_gc_safe = reinterpret_cast<core::HashTableEqual_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~HashTableEqual_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__HashTableCustom_O:
{
     // stamp value 1335
    core::HashTableCustom_O* obj_gc_safe = reinterpret_cast<core::HashTableCustom_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~HashTableCustom_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__HashTableEql_O:
{
     // stamp value 1339
    core::HashTableEql_O* obj_gc_safe = reinterpret_cast<core::HashTableEql_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~HashTableEql_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__WeakKeyHashTable_O:
{
     // stamp value 1343
    core::WeakKeyHashTable_O* obj_gc_safe = reinterpret_cast<core::WeakKeyHashTable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~WeakKeyHashTable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__FunctionDescription_O:
{
     // stamp value 1347
    core::FunctionDescription_O* obj_gc_safe = reinterpret_cast<core::FunctionDescription_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FunctionDescription_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__InsertPoint_O:
{
     // stamp value 1351
    llvmo::InsertPoint_O* obj_gc_safe = reinterpret_cast<llvmo::InsertPoint_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~InsertPoint_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Number_O:
{
     // stamp value 1355
    core::Number_O* obj_gc_safe = reinterpret_cast<core::Number_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Number_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Real_O:
{
     // stamp value 1359
    core::Real_O* obj_gc_safe = reinterpret_cast<core::Real_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Real_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Rational_O:
{
     // stamp value 1363
    core::Rational_O* obj_gc_safe = reinterpret_cast<core::Rational_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Rational_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Ratio_O:
{
     // stamp value 1367
    core::Ratio_O* obj_gc_safe = reinterpret_cast<core::Ratio_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Ratio_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Integer_O:
{
     // stamp value 1371
    core::Integer_O* obj_gc_safe = reinterpret_cast<core::Integer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Integer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Bignum_O:
{
     // stamp value 1375
    core::Bignum_O* obj_gc_safe = reinterpret_cast<core::Bignum_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Bignum_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Fixnum_dummy_O:
{
     // stamp value 1379
    core::Fixnum_dummy_O* obj_gc_safe = reinterpret_cast<core::Fixnum_dummy_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Fixnum_dummy_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Float_O:
{
     // stamp value 1383
    core::Float_O* obj_gc_safe = reinterpret_cast<core::Float_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Float_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__DoubleFloat_O:
{
     // stamp value 1387
    core::DoubleFloat_O* obj_gc_safe = reinterpret_cast<core::DoubleFloat_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DoubleFloat_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SingleFloat_dummy_O:
{
     // stamp value 1391
    core::SingleFloat_dummy_O* obj_gc_safe = reinterpret_cast<core::SingleFloat_dummy_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SingleFloat_dummy_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__LongFloat_O:
{
     // stamp value 1395
    core::LongFloat_O* obj_gc_safe = reinterpret_cast<core::LongFloat_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LongFloat_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ShortFloat_O:
{
     // stamp value 1399
    core::ShortFloat_O* obj_gc_safe = reinterpret_cast<core::ShortFloat_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ShortFloat_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Complex_O:
{
     // stamp value 1403
    core::Complex_O* obj_gc_safe = reinterpret_cast<core::Complex_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Complex_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SourcePosInfo_O:
{
     // stamp value 1407
    core::SourcePosInfo_O* obj_gc_safe = reinterpret_cast<core::SourcePosInfo_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SourcePosInfo_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Record_O:
{
     // stamp value 1411
    core::Record_O* obj_gc_safe = reinterpret_cast<core::Record_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Record_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Frame_O:
{
     // stamp value 1415
    core::Frame_O* obj_gc_safe = reinterpret_cast<core::Frame_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Frame_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_clbind__ClassRegistry_O:
{
     // stamp value 1419
    clbind::ClassRegistry_O* obj_gc_safe = reinterpret_cast<clbind::ClassRegistry_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ClassRegistry_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ClassHolder_O:
{
     // stamp value 1423
    core::ClassHolder_O* obj_gc_safe = reinterpret_cast<core::ClassHolder_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ClassHolder_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__WrappedPointer_O:
{
     // stamp value 1426
    core::WrappedPointer_O* obj_gc_safe = reinterpret_cast<core::WrappedPointer_O*>(client);
    obj_gc_safe->~WrappedPointer_O();
}
obj_finalize_STAMPWTAG_core__SymbolToEnumConverter_O:
{
     // stamp value 1431
    core::SymbolToEnumConverter_O* obj_gc_safe = reinterpret_cast<core::SymbolToEnumConverter_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SymbolToEnumConverter_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Attribute_O:
{
     // stamp value 1435
    llvmo::Attribute_O* obj_gc_safe = reinterpret_cast<llvmo::Attribute_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Attribute_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ImmobileObject_O:
{
     // stamp value 1439
    core::ImmobileObject_O* obj_gc_safe = reinterpret_cast<core::ImmobileObject_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ImmobileObject_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Function_O:
{
     // stamp value 1443
    core::Function_O* obj_gc_safe = reinterpret_cast<core::Function_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Function_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__FuncallableInstance_O:
{
     // stamp value 1445
    core::FuncallableInstance_O* obj_gc_safe = reinterpret_cast<core::FuncallableInstance_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FuncallableInstance_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Creator_O:
{
     // stamp value 1451
    core::Creator_O* obj_gc_safe = reinterpret_cast<core::Creator_O*>(client);
    obj_gc_safe->~Creator_O();
}
obj_finalize_STAMPWTAG_core__FuncallableInstanceCreator_O:
{
     // stamp value 1455
    core::FuncallableInstanceCreator_O* obj_gc_safe = reinterpret_cast<core::FuncallableInstanceCreator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FuncallableInstanceCreator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_clbind__ConstructorCreator_O:
{
     // stamp value 1459
    clbind::ConstructorCreator_O* obj_gc_safe = reinterpret_cast<clbind::ConstructorCreator_O*>(client);
    obj_gc_safe->~ConstructorCreator_O();
}
obj_finalize_STAMPWTAG_clbind__DummyCreator_O:
{
     // stamp value 1463
    clbind::DummyCreator_O* obj_gc_safe = reinterpret_cast<clbind::DummyCreator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DummyCreator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__InstanceCreator_O:
{
     // stamp value 1467
    core::InstanceCreator_O* obj_gc_safe = reinterpret_cast<core::InstanceCreator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~InstanceCreator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ClassRepCreator_O:
{
     // stamp value 1471
    core::ClassRepCreator_O* obj_gc_safe = reinterpret_cast<core::ClassRepCreator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ClassRepCreator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__DerivableCxxClassCreator_O:
{
     // stamp value 1475
    core::DerivableCxxClassCreator_O* obj_gc_safe = reinterpret_cast<core::DerivableCxxClassCreator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DerivableCxxClassCreator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__StandardClassCreator_O:
{
     // stamp value 1479
    core::StandardClassCreator_O* obj_gc_safe = reinterpret_cast<core::StandardClassCreator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StandardClassCreator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SpecialForm_O:
{
     // stamp value 1483
    core::SpecialForm_O* obj_gc_safe = reinterpret_cast<core::SpecialForm_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SpecialForm_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Closure_O:
{
     // stamp value 1487
    core::Closure_O* obj_gc_safe = reinterpret_cast<core::Closure_O*>(client);
    obj_gc_safe->~Closure_O();
}
obj_finalize_STAMPWTAG_core__BuiltinClosure_O:
{
     // stamp value 1491
    core::BuiltinClosure_O* obj_gc_safe = reinterpret_cast<core::BuiltinClosure_O*>(client);
    obj_gc_safe->~BuiltinClosure_O();
}
obj_finalize_STAMPWTAG_core__TranslationFunctor_O:
{
     // stamp value 1495
    core::TranslationFunctor_O* obj_gc_safe = reinterpret_cast<core::TranslationFunctor_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TranslationFunctor_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ClosureWithSlots_O:
{
     // stamp value 1499
    core::ClosureWithSlots_O* obj_gc_safe = reinterpret_cast<core::ClosureWithSlots_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ClosureWithSlots_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O:
{
     // stamp value 1503
    core::SingleDispatchGenericFunctionClosure_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchGenericFunctionClosure_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SingleDispatchGenericFunctionClosure_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__WeakPointer_O:
{
     // stamp value 1507
    core::WeakPointer_O* obj_gc_safe = reinterpret_cast<core::WeakPointer_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~WeakPointer_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DebugLoc_O:
{
     // stamp value 1511
    llvmo::DebugLoc_O* obj_gc_safe = reinterpret_cast<llvmo::DebugLoc_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DebugLoc_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Array_O:
{
     // stamp value 1515
    core::Array_O* obj_gc_safe = reinterpret_cast<core::Array_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Array_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__MDArray_O:
{
     // stamp value 1519
    core::MDArray_O* obj_gc_safe = reinterpret_cast<core::MDArray_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1523
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int16_t_O,core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_int16_t_O:
{
     // stamp value 1527
    core::MDArray_int16_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int16_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_int16_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1531
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int8_t_O,core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_int8_t_O:
{
     // stamp value 1535
    core::MDArray_int8_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int8_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_int8_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1539
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int32_t_O,core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_int32_t_O:
{
     // stamp value 1543
    core::MDArray_int32_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int32_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_int32_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1547
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte4_t_O,core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_byte4_t_O:
{
     // stamp value 1551
    core::MDArray_byte4_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte4_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_byte4_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_:
{
     // do nothing stamp value 1555
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_float_O,core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_float_O:
{
     // stamp value 1559
    core::MDArray_float_O* obj_gc_safe = reinterpret_cast<core::MDArray_float_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_float_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1563
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_size_t_O,core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_size_t_O:
{
     // stamp value 1567
    core::MDArray_size_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_size_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_size_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1571
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte8_t_O,core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_byte8_t_O:
{
     // stamp value 1575
    core::MDArray_byte8_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte8_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_byte8_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1579
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int2_t_O,core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_int2_t_O:
{
     // stamp value 1583
    core::MDArray_int2_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int2_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_int2_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_:
{
     // do nothing stamp value 1587
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_fixnum_O,core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_fixnum_O:
{
     // stamp value 1591
    core::MDArray_fixnum_O* obj_gc_safe = reinterpret_cast<core::MDArray_fixnum_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_fixnum_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_:
{
     // do nothing stamp value 1595
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArrayBaseChar_O,core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArrayBaseChar_O:
{
     // stamp value 1599
    core::MDArrayBaseChar_O* obj_gc_safe = reinterpret_cast<core::MDArrayBaseChar_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArrayBaseChar_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1603
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte64_t_O,core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_byte64_t_O:
{
     // stamp value 1607
    core::MDArray_byte64_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte64_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_byte64_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_:
{
     // do nothing stamp value 1611
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<geom::MDArrayCoordinate_O,geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_geom__MDArrayCoordinate_O:
{
     // stamp value 1615
    geom::MDArrayCoordinate_O* obj_gc_safe = reinterpret_cast<geom::MDArrayCoordinate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArrayCoordinate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_:
{
     // do nothing stamp value 1619
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArrayT_O,core::SimpleMDArrayT_O,core::SimpleVector_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArrayT_O:
{
     // stamp value 1623
    core::MDArrayT_O* obj_gc_safe = reinterpret_cast<core::MDArrayT_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArrayT_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_O:
{
     // stamp value 1627
    core::SimpleMDArray_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1631
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_int8_t_O:
{
     // stamp value 1635
    core::SimpleMDArray_int8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int8_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_int8_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1639
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_byte32_t_O:
{
     // stamp value 1643
    core::SimpleMDArray_byte32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte32_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_byte32_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1647
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_int2_t_O:
{
     // stamp value 1651
    core::SimpleMDArray_int2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int2_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_int2_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1655
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_byte4_t_O:
{
     // stamp value 1659
    core::SimpleMDArray_byte4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte4_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_byte4_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1663
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_int32_t_O:
{
     // stamp value 1667
    core::SimpleMDArray_int32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int32_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_int32_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1671
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_float_O:
{
     // stamp value 1675
    core::SimpleMDArray_float_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_float_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_float_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1679
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_int16_t_O:
{
     // stamp value 1683
    core::SimpleMDArray_int16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int16_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_int16_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1687
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_size_t_O:
{
     // stamp value 1691
    core::SimpleMDArray_size_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_size_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_size_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1695
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArrayCharacter_O:
{
     // stamp value 1699
    core::SimpleMDArrayCharacter_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayCharacter_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArrayCharacter_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1703
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_byte2_t_O:
{
     // stamp value 1707
    core::SimpleMDArray_byte2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte2_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_byte2_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1711
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_byte16_t_O:
{
     // stamp value 1715
    core::SimpleMDArray_byte16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte16_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_byte16_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1719
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArrayBaseChar_O:
{
     // stamp value 1723
    core::SimpleMDArrayBaseChar_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayBaseChar_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArrayBaseChar_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1727
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_byte64_t_O:
{
     // stamp value 1731
    core::SimpleMDArray_byte64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte64_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_byte64_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1735
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_double_O:
{
     // stamp value 1739
    core::SimpleMDArray_double_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_double_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_double_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1743
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArrayT_O,core::SimpleVector_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArrayT_O:
{
     // stamp value 1747
    core::SimpleMDArrayT_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayT_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArrayT_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1751
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_int4_t_O:
{
     // stamp value 1755
    core::SimpleMDArray_int4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int4_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_int4_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1759
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_geom__SimpleMDArrayCoordinate_O:
{
     // stamp value 1763
    geom::SimpleMDArrayCoordinate_O* obj_gc_safe = reinterpret_cast<geom::SimpleMDArrayCoordinate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArrayCoordinate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1767
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_fixnum_O:
{
     // stamp value 1771
    core::SimpleMDArray_fixnum_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_fixnum_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_fixnum_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1775
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArrayBit_O:
{
     // stamp value 1779
    core::SimpleMDArrayBit_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayBit_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArrayBit_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1783
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_byte8_t_O:
{
     // stamp value 1787
    core::SimpleMDArray_byte8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte8_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_byte8_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1791
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleArray<core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::SimpleMDArray_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleMDArray_int64_t_O:
{
     // stamp value 1795
    core::SimpleMDArray_int64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int64_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleMDArray_int64_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ComplexVector_O:
{
     // stamp value 1799
    core::ComplexVector_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1803
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_double_O,core::SimpleVector_double_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_double_O:
{
     // stamp value 1807
    core::ComplexVector_double_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_double_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_double_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1811
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int8_t_O,core::SimpleVector_int8_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_int8_t_O:
{
     // stamp value 1815
    core::ComplexVector_int8_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int8_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_int8_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1819
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_T_O,core::SimpleVector_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_T_O:
{
     // stamp value 1823
    core::ComplexVector_T_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_T_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_T_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1827
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int32_t_O,core::SimpleVector_int32_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_int32_t_O:
{
     // stamp value 1831
    core::ComplexVector_int32_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int32_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_int32_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1835
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte16_t_O,core::SimpleVector_byte16_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_byte16_t_O:
{
     // stamp value 1839
    core::ComplexVector_byte16_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte16_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_byte16_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1843
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<geom::ComplexVectorCoordinate_O,geom::SimpleVectorCoordinate_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_geom__ComplexVectorCoordinate_O:
{
     // stamp value 1847
    geom::ComplexVectorCoordinate_O* obj_gc_safe = reinterpret_cast<geom::ComplexVectorCoordinate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVectorCoordinate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1851
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte4_t_O,core::SimpleVector_byte4_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_byte4_t_O:
{
     // stamp value 1855
    core::ComplexVector_byte4_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte4_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_byte4_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1859
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte64_t_O,core::SimpleVector_byte64_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_byte64_t_O:
{
     // stamp value 1863
    core::ComplexVector_byte64_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte64_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_byte64_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1867
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int2_t_O,core::SimpleVector_int2_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_int2_t_O:
{
     // stamp value 1871
    core::ComplexVector_int2_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int2_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_int2_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1875
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_float_O,core::SimpleVector_float_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_float_O:
{
     // stamp value 1879
    core::ComplexVector_float_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_float_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_float_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1883
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int16_t_O,core::SimpleVector_int16_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_int16_t_O:
{
     // stamp value 1887
    core::ComplexVector_int16_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int16_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_int16_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1891
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int4_t_O,core::SimpleVector_int4_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_int4_t_O:
{
     // stamp value 1895
    core::ComplexVector_int4_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int4_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_int4_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1899
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_size_t_O,core::SimpleVector_size_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_size_t_O:
{
     // stamp value 1903
    core::ComplexVector_size_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_size_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_size_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1907
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte2_t_O,core::SimpleVector_byte2_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_byte2_t_O:
{
     // stamp value 1911
    core::ComplexVector_byte2_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte2_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_byte2_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1915
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte8_t_O,core::SimpleVector_byte8_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_byte8_t_O:
{
     // stamp value 1919
    core::ComplexVector_byte8_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte8_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_byte8_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1923
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_byte32_t_O,core::SimpleVector_byte32_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_byte32_t_O:
{
     // stamp value 1927
    core::ComplexVector_byte32_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte32_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_byte32_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1931
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::BitVectorNs_O,core::SimpleBitVector_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__BitVectorNs_O:
{
     // stamp value 1935
    core::BitVectorNs_O* obj_gc_safe = reinterpret_cast<core::BitVectorNs_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BitVectorNs_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__StrNs_O:
{
     // stamp value 1939
    core::StrNs_O* obj_gc_safe = reinterpret_cast<core::StrNs_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StrNs_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_:
{
     // do nothing stamp value 1943
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::Str8Ns_O,core::SimpleBaseString_O,core::StrNs_O>"));
}
obj_finalize_STAMPWTAG_core__Str8Ns_O:
{
     // stamp value 1947
    core::Str8Ns_O* obj_gc_safe = reinterpret_cast<core::Str8Ns_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Str8Ns_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_:
{
     // do nothing stamp value 1951
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::StrWNs_O,core::SimpleCharacterString_O,core::StrNs_O>"));
}
obj_finalize_STAMPWTAG_core__StrWNs_O:
{
     // stamp value 1955
    core::StrWNs_O* obj_gc_safe = reinterpret_cast<core::StrWNs_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StrWNs_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1959
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_fixnum_O,core::SimpleVector_fixnum_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_fixnum_O:
{
     // stamp value 1963
    core::ComplexVector_fixnum_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_fixnum_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_fixnum_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1967
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Vector<core::ComplexVector_int64_t_O,core::SimpleVector_int64_t_O,core::ComplexVector_O>"));
}
obj_finalize_STAMPWTAG_core__ComplexVector_int64_t_O:
{
     // stamp value 1971
    core::ComplexVector_int64_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int64_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ComplexVector_int64_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1975
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int64_t_O,core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_int64_t_O:
{
     // stamp value 1979
    core::MDArray_int64_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int64_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_int64_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1983
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte32_t_O,core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_byte32_t_O:
{
     // stamp value 1987
    core::MDArray_byte32_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte32_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_byte32_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1991
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte2_t_O,core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_byte2_t_O:
{
     // stamp value 1995
    core::MDArray_byte2_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte2_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_byte2_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_:
{
     // do nothing stamp value 1999
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArrayCharacter_O,core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArrayCharacter_O:
{
     // stamp value 2003
    core::MDArrayCharacter_O* obj_gc_safe = reinterpret_cast<core::MDArrayCharacter_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArrayCharacter_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_:
{
     // do nothing stamp value 2007
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArrayBit_O,core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArrayBit_O:
{
     // stamp value 2011
    core::MDArrayBit_O* obj_gc_safe = reinterpret_cast<core::MDArrayBit_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArrayBit_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_:
{
     // do nothing stamp value 2015
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_byte16_t_O,core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_byte16_t_O:
{
     // stamp value 2019
    core::MDArray_byte16_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte16_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_byte16_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_:
{
     // do nothing stamp value 2023
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_int4_t_O,core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_int4_t_O:
{
     // stamp value 2027
    core::MDArray_int4_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int4_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_int4_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_:
{
     // do nothing stamp value 2031
    THROW_HARD_ERROR(BF("Should never finalize object core::template_Array<core::MDArray_double_O,core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::MDArray_O>"));
}
obj_finalize_STAMPWTAG_core__MDArray_double_O:
{
     // stamp value 2035
    core::MDArray_double_O* obj_gc_safe = reinterpret_cast<core::MDArray_double_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDArray_double_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__AbstractSimpleVector_O:
{
     // stamp value 2039
    core::AbstractSimpleVector_O* obj_gc_safe = reinterpret_cast<core::AbstractSimpleVector_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AbstractSimpleVector_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2043
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_byte32_t_O,unsigned int,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_byte32_t_O:
{
     // stamp value 2047
    core::SimpleVector_byte32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte32_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_byte32_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2051
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_size_t_O,unsigned long,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_size_t_O:
{
     // stamp value 2055
    core::SimpleVector_size_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_size_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_size_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2059
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_double_O,double,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_double_O:
{
     // stamp value 2063
    core::SimpleVector_double_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_double_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_double_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_:
{
     // do nothing stamp value 2067
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleVector_int2_t_O,2,1>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_int2_t_O:
{
     // stamp value 2071
    core::SimpleVector_int2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int2_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_int2_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2075
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_int64_t_O,long,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_int64_t_O:
{
     // stamp value 2079
    core::SimpleVector_int64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int64_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_int64_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2083
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_int8_t_O,signed char,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_int8_t_O:
{
     // stamp value 2087
    core::SimpleVector_int8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int8_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_int8_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_:
{
     // do nothing stamp value 2091
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleVector_byte4_t_O,4,0>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_byte4_t_O:
{
     // stamp value 2095
    core::SimpleVector_byte4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte4_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_byte4_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2099
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<geom::SimpleVectorCoordinate_O,Vector3,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_geom__SimpleVectorCoordinate_O:
{
     // stamp value 2103
    geom::SimpleVectorCoordinate_O* obj_gc_safe = reinterpret_cast<geom::SimpleVectorCoordinate_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVectorCoordinate_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SimpleString_O:
{
     // stamp value 2107
    core::SimpleString_O* obj_gc_safe = reinterpret_cast<core::SimpleString_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleString_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_:
{
     // do nothing stamp value 2111
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleBaseString_O,unsigned char,core::SimpleString_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleBaseString_O:
{
     // stamp value 2115
    core::SimpleBaseString_O* obj_gc_safe = reinterpret_cast<core::SimpleBaseString_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleBaseString_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleCharacterString_O_unsigned_int_core__SimpleString_O_:
{
     // do nothing stamp value 2119
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleCharacterString_O,unsigned int,core::SimpleString_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleCharacterString_O:
{
     // stamp value 2123
    core::SimpleCharacterString_O* obj_gc_safe = reinterpret_cast<core::SimpleCharacterString_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleCharacterString_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2127
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_int16_t_O,short,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_int16_t_O:
{
     // stamp value 2131
    core::SimpleVector_int16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int16_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_int16_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2135
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_byte16_t_O,unsigned short,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_byte16_t_O:
{
     // stamp value 2139
    core::SimpleVector_byte16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte16_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_byte16_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_:
{
     // do nothing stamp value 2143
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleBitVector_O,1,0>"));
}
obj_finalize_STAMPWTAG_core__SimpleBitVector_O:
{
     // stamp value 2147
    core::SimpleBitVector_O* obj_gc_safe = reinterpret_cast<core::SimpleBitVector_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleBitVector_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_:
{
     // do nothing stamp value 2151
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleVector_int4_t_O,4,1>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_int4_t_O:
{
     // stamp value 2155
    core::SimpleVector_int4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int4_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_int4_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2159
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_byte64_t_O,unsigned long,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_byte64_t_O:
{
     // stamp value 2163
    core::SimpleVector_byte64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte64_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_byte64_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2167
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_fixnum_O,long,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_fixnum_O:
{
     // stamp value 2171
    core::SimpleVector_fixnum_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_fixnum_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_fixnum_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2175
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_float_O,float,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_float_O:
{
     // stamp value 2179
    core::SimpleVector_float_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_float_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_float_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2183
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_O,gctools::smart_ptr<core::T_O>,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_O:
{
     // stamp value 2187
    core::SimpleVector_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2191
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_byte8_t_O,unsigned char,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_byte8_t_O:
{
     // stamp value 2195
    core::SimpleVector_byte8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte8_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_byte8_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_:
{
     // do nothing stamp value 2199
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleBitUnitVector<core::SimpleVector_byte2_t_O,2,0>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_byte2_t_O:
{
     // stamp value 2203
    core::SimpleVector_byte2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte2_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_byte2_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2207
    THROW_HARD_ERROR(BF("Should never finalize object core::template_SimpleVector<core::SimpleVector_int32_t_O,int,core::AbstractSimpleVector_O>"));
}
obj_finalize_STAMPWTAG_core__SimpleVector_int32_t_O:
{
     // stamp value 2211
    core::SimpleVector_int32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int32_t_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SimpleVector_int32_t_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Character_dummy_O:
{
     // stamp value 2215
    core::Character_dummy_O* obj_gc_safe = reinterpret_cast<core::Character_dummy_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Character_dummy_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DataLayout_O:
{
     // stamp value 2219
    llvmo::DataLayout_O* obj_gc_safe = reinterpret_cast<llvmo::DataLayout_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DataLayout_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__LoadTimeValues_O:
{
     // stamp value 2223
    core::LoadTimeValues_O* obj_gc_safe = reinterpret_cast<core::LoadTimeValues_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LoadTimeValues_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Readtable_O:
{
     // stamp value 2227
    core::Readtable_O* obj_gc_safe = reinterpret_cast<core::Readtable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Readtable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__PosixTime_O:
{
     // stamp value 2231
    core::PosixTime_O* obj_gc_safe = reinterpret_cast<core::PosixTime_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PosixTime_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__StructLayout_O:
{
     // stamp value 2235
    llvmo::StructLayout_O* obj_gc_safe = reinterpret_cast<llvmo::StructLayout_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StructLayout_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ExternalObject_O:
{
     // stamp value 2239
    core::ExternalObject_O* obj_gc_safe = reinterpret_cast<core::ExternalObject_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ExternalObject_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Pass_O:
{
     // stamp value 2243
    llvmo::Pass_O* obj_gc_safe = reinterpret_cast<llvmo::Pass_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Pass_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ModulePass_O:
{
     // stamp value 2247
    llvmo::ModulePass_O* obj_gc_safe = reinterpret_cast<llvmo::ModulePass_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ModulePass_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ImmutablePass_O:
{
     // stamp value 2251
    llvmo::ImmutablePass_O* obj_gc_safe = reinterpret_cast<llvmo::ImmutablePass_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ImmutablePass_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O:
{
     // stamp value 2255
    llvmo::TargetLibraryInfoWrapperPass_O* obj_gc_safe = reinterpret_cast<llvmo::TargetLibraryInfoWrapperPass_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TargetLibraryInfoWrapperPass_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__FunctionPass_O:
{
     // stamp value 2259
    llvmo::FunctionPass_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPass_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FunctionPass_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__MCSubtargetInfo_O:
{
     // stamp value 2263
    llvmo::MCSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::MCSubtargetInfo_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MCSubtargetInfo_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__TargetSubtargetInfo_O:
{
     // stamp value 2267
    llvmo::TargetSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::TargetSubtargetInfo_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TargetSubtargetInfo_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__JITDylib_O:
{
     // stamp value 2271
    llvmo::JITDylib_O* obj_gc_safe = reinterpret_cast<llvmo::JITDylib_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~JITDylib_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIContext_O:
{
     // stamp value 2275
    llvmo::DIContext_O* obj_gc_safe = reinterpret_cast<llvmo::DIContext_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIContext_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__IRBuilderBase_O:
{
     // stamp value 2279
    llvmo::IRBuilderBase_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilderBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IRBuilderBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__IRBuilder_O:
{
     // stamp value 2283
    llvmo::IRBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilder_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IRBuilder_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__APInt_O:
{
     // stamp value 2287
    llvmo::APInt_O* obj_gc_safe = reinterpret_cast<llvmo::APInt_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~APInt_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIBuilder_O:
{
     // stamp value 2291
    llvmo::DIBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::DIBuilder_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIBuilder_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__SectionedAddress_O:
{
     // stamp value 2295
    llvmo::SectionedAddress_O* obj_gc_safe = reinterpret_cast<llvmo::SectionedAddress_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SectionedAddress_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__EngineBuilder_O:
{
     // stamp value 2299
    llvmo::EngineBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::EngineBuilder_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EngineBuilder_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__PassManagerBase_O:
{
     // stamp value 2303
    llvmo::PassManagerBase_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PassManagerBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__PassManager_O:
{
     // stamp value 2307
    llvmo::PassManager_O* obj_gc_safe = reinterpret_cast<llvmo::PassManager_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PassManager_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__FunctionPassManager_O:
{
     // stamp value 2311
    llvmo::FunctionPassManager_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPassManager_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FunctionPassManager_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Value_O:
{
     // stamp value 2315
    llvmo::Value_O* obj_gc_safe = reinterpret_cast<llvmo::Value_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Value_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__User_O:
{
     // stamp value 2319
    llvmo::User_O* obj_gc_safe = reinterpret_cast<llvmo::User_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~User_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Instruction_O:
{
     // stamp value 2323
    llvmo::Instruction_O* obj_gc_safe = reinterpret_cast<llvmo::Instruction_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Instruction_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__StoreInst_O:
{
     // stamp value 2327
    llvmo::StoreInst_O* obj_gc_safe = reinterpret_cast<llvmo::StoreInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StoreInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__UnreachableInst_O:
{
     // stamp value 2331
    llvmo::UnreachableInst_O* obj_gc_safe = reinterpret_cast<llvmo::UnreachableInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~UnreachableInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ResumeInst_O:
{
     // stamp value 2335
    llvmo::ResumeInst_O* obj_gc_safe = reinterpret_cast<llvmo::ResumeInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ResumeInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__AtomicCmpXchgInst_O:
{
     // stamp value 2339
    llvmo::AtomicCmpXchgInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicCmpXchgInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomicCmpXchgInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__FenceInst_O:
{
     // stamp value 2343
    llvmo::FenceInst_O* obj_gc_safe = reinterpret_cast<llvmo::FenceInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FenceInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__CallBase_O:
{
     // stamp value 2347
    llvmo::CallBase_O* obj_gc_safe = reinterpret_cast<llvmo::CallBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CallBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__CallInst_O:
{
     // stamp value 2351
    llvmo::CallInst_O* obj_gc_safe = reinterpret_cast<llvmo::CallInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~CallInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__InvokeInst_O:
{
     // stamp value 2355
    llvmo::InvokeInst_O* obj_gc_safe = reinterpret_cast<llvmo::InvokeInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~InvokeInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__BranchInst_O:
{
     // stamp value 2359
    llvmo::BranchInst_O* obj_gc_safe = reinterpret_cast<llvmo::BranchInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BranchInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__UnaryInstruction_O:
{
     // stamp value 2363
    llvmo::UnaryInstruction_O* obj_gc_safe = reinterpret_cast<llvmo::UnaryInstruction_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~UnaryInstruction_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__VAArgInst_O:
{
     // stamp value 2367
    llvmo::VAArgInst_O* obj_gc_safe = reinterpret_cast<llvmo::VAArgInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~VAArgInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__AllocaInst_O:
{
     // stamp value 2371
    llvmo::AllocaInst_O* obj_gc_safe = reinterpret_cast<llvmo::AllocaInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AllocaInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__LoadInst_O:
{
     // stamp value 2375
    llvmo::LoadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LoadInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LoadInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__SwitchInst_O:
{
     // stamp value 2379
    llvmo::SwitchInst_O* obj_gc_safe = reinterpret_cast<llvmo::SwitchInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SwitchInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__AtomicRMWInst_O:
{
     // stamp value 2383
    llvmo::AtomicRMWInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicRMWInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AtomicRMWInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__LandingPadInst_O:
{
     // stamp value 2387
    llvmo::LandingPadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LandingPadInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LandingPadInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ReturnInst_O:
{
     // stamp value 2391
    llvmo::ReturnInst_O* obj_gc_safe = reinterpret_cast<llvmo::ReturnInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ReturnInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__PHINode_O:
{
     // stamp value 2395
    llvmo::PHINode_O* obj_gc_safe = reinterpret_cast<llvmo::PHINode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PHINode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__IndirectBrInst_O:
{
     // stamp value 2399
    llvmo::IndirectBrInst_O* obj_gc_safe = reinterpret_cast<llvmo::IndirectBrInst_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IndirectBrInst_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Constant_O:
{
     // stamp value 2403
    llvmo::Constant_O* obj_gc_safe = reinterpret_cast<llvmo::Constant_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Constant_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__GlobalValue_O:
{
     // stamp value 2407
    llvmo::GlobalValue_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalValue_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~GlobalValue_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Function_O:
{
     // stamp value 2411
    llvmo::Function_O* obj_gc_safe = reinterpret_cast<llvmo::Function_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Function_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__GlobalVariable_O:
{
     // stamp value 2415
    llvmo::GlobalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalVariable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~GlobalVariable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__BlockAddress_O:
{
     // stamp value 2419
    llvmo::BlockAddress_O* obj_gc_safe = reinterpret_cast<llvmo::BlockAddress_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BlockAddress_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ConstantStruct_O:
{
     // stamp value 2423
    llvmo::ConstantStruct_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantStruct_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstantStruct_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ConstantInt_O:
{
     // stamp value 2427
    llvmo::ConstantInt_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantInt_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstantInt_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ConstantFP_O:
{
     // stamp value 2431
    llvmo::ConstantFP_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantFP_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstantFP_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ConstantPointerNull_O:
{
     // stamp value 2435
    llvmo::ConstantPointerNull_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantPointerNull_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstantPointerNull_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ConstantDataSequential_O:
{
     // stamp value 2439
    llvmo::ConstantDataSequential_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataSequential_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstantDataSequential_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ConstantDataArray_O:
{
     // stamp value 2443
    llvmo::ConstantDataArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataArray_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstantDataArray_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ConstantExpr_O:
{
     // stamp value 2447
    llvmo::ConstantExpr_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantExpr_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstantExpr_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__UndefValue_O:
{
     // stamp value 2451
    llvmo::UndefValue_O* obj_gc_safe = reinterpret_cast<llvmo::UndefValue_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~UndefValue_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ConstantArray_O:
{
     // stamp value 2455
    llvmo::ConstantArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantArray_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConstantArray_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Argument_O:
{
     // stamp value 2459
    llvmo::Argument_O* obj_gc_safe = reinterpret_cast<llvmo::Argument_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Argument_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__BasicBlock_O:
{
     // stamp value 2463
    llvmo::BasicBlock_O* obj_gc_safe = reinterpret_cast<llvmo::BasicBlock_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BasicBlock_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__MetadataAsValue_O:
{
     // stamp value 2467
    llvmo::MetadataAsValue_O* obj_gc_safe = reinterpret_cast<llvmo::MetadataAsValue_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MetadataAsValue_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ThreadSafeContext_O:
{
     // stamp value 2471
    llvmo::ThreadSafeContext_O* obj_gc_safe = reinterpret_cast<llvmo::ThreadSafeContext_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ThreadSafeContext_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__TargetMachine_O:
{
     // stamp value 2475
    llvmo::TargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::TargetMachine_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TargetMachine_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__LLVMTargetMachine_O:
{
     // stamp value 2479
    llvmo::LLVMTargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMTargetMachine_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LLVMTargetMachine_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Triple_O:
{
     // stamp value 2483
    llvmo::Triple_O* obj_gc_safe = reinterpret_cast<llvmo::Triple_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Triple_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__LLVMContext_O:
{
     // stamp value 2487
    llvmo::LLVMContext_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMContext_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LLVMContext_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__PassManagerBuilder_O:
{
     // stamp value 2491
    llvmo::PassManagerBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBuilder_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PassManagerBuilder_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ExecutionEngine_O:
{
     // stamp value 2495
    llvmo::ExecutionEngine_O* obj_gc_safe = reinterpret_cast<llvmo::ExecutionEngine_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ExecutionEngine_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Type_O:
{
     // stamp value 2499
    llvmo::Type_O* obj_gc_safe = reinterpret_cast<llvmo::Type_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Type_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__PointerType_O:
{
     // stamp value 2503
    llvmo::PointerType_O* obj_gc_safe = reinterpret_cast<llvmo::PointerType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~PointerType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ArrayType_O:
{
     // stamp value 2507
    llvmo::ArrayType_O* obj_gc_safe = reinterpret_cast<llvmo::ArrayType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ArrayType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__FunctionType_O:
{
     // stamp value 2511
    llvmo::FunctionType_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FunctionType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__IntegerType_O:
{
     // stamp value 2515
    llvmo::IntegerType_O* obj_gc_safe = reinterpret_cast<llvmo::IntegerType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IntegerType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__VectorType_O:
{
     // stamp value 2519
    llvmo::VectorType_O* obj_gc_safe = reinterpret_cast<llvmo::VectorType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~VectorType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__StructType_O:
{
     // stamp value 2523
    llvmo::StructType_O* obj_gc_safe = reinterpret_cast<llvmo::StructType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StructType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__TargetPassConfig_O:
{
     // stamp value 2527
    llvmo::TargetPassConfig_O* obj_gc_safe = reinterpret_cast<llvmo::TargetPassConfig_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TargetPassConfig_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__APFloat_O:
{
     // stamp value 2531
    llvmo::APFloat_O* obj_gc_safe = reinterpret_cast<llvmo::APFloat_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~APFloat_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Metadata_O:
{
     // stamp value 2535
    llvmo::Metadata_O* obj_gc_safe = reinterpret_cast<llvmo::Metadata_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Metadata_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__MDNode_O:
{
     // stamp value 2539
    llvmo::MDNode_O* obj_gc_safe = reinterpret_cast<llvmo::MDNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DILocation_O:
{
     // stamp value 2543
    llvmo::DILocation_O* obj_gc_safe = reinterpret_cast<llvmo::DILocation_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DILocation_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DINode_O:
{
     // stamp value 2547
    llvmo::DINode_O* obj_gc_safe = reinterpret_cast<llvmo::DINode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DINode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIVariable_O:
{
     // stamp value 2551
    llvmo::DIVariable_O* obj_gc_safe = reinterpret_cast<llvmo::DIVariable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIVariable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DILocalVariable_O:
{
     // stamp value 2555
    llvmo::DILocalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::DILocalVariable_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DILocalVariable_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIScope_O:
{
     // stamp value 2559
    llvmo::DIScope_O* obj_gc_safe = reinterpret_cast<llvmo::DIScope_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIScope_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIFile_O:
{
     // stamp value 2563
    llvmo::DIFile_O* obj_gc_safe = reinterpret_cast<llvmo::DIFile_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIFile_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DILocalScope_O:
{
     // stamp value 2567
    llvmo::DILocalScope_O* obj_gc_safe = reinterpret_cast<llvmo::DILocalScope_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DILocalScope_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DISubprogram_O:
{
     // stamp value 2571
    llvmo::DISubprogram_O* obj_gc_safe = reinterpret_cast<llvmo::DISubprogram_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DISubprogram_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DILexicalBlockBase_O:
{
     // stamp value 2575
    llvmo::DILexicalBlockBase_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlockBase_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DILexicalBlockBase_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DILexicalBlock_O:
{
     // stamp value 2579
    llvmo::DILexicalBlock_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlock_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DILexicalBlock_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DICompileUnit_O:
{
     // stamp value 2583
    llvmo::DICompileUnit_O* obj_gc_safe = reinterpret_cast<llvmo::DICompileUnit_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DICompileUnit_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIType_O:
{
     // stamp value 2587
    llvmo::DIType_O* obj_gc_safe = reinterpret_cast<llvmo::DIType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DICompositeType_O:
{
     // stamp value 2591
    llvmo::DICompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::DICompositeType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DICompositeType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIDerivedType_O:
{
     // stamp value 2595
    llvmo::DIDerivedType_O* obj_gc_safe = reinterpret_cast<llvmo::DIDerivedType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIDerivedType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DISubroutineType_O:
{
     // stamp value 2599
    llvmo::DISubroutineType_O* obj_gc_safe = reinterpret_cast<llvmo::DISubroutineType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DISubroutineType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIBasicType_O:
{
     // stamp value 2603
    llvmo::DIBasicType_O* obj_gc_safe = reinterpret_cast<llvmo::DIBasicType_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIBasicType_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DIExpression_O:
{
     // stamp value 2607
    llvmo::DIExpression_O* obj_gc_safe = reinterpret_cast<llvmo::DIExpression_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DIExpression_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__ValueAsMetadata_O:
{
     // stamp value 2611
    llvmo::ValueAsMetadata_O* obj_gc_safe = reinterpret_cast<llvmo::ValueAsMetadata_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ValueAsMetadata_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__MDString_O:
{
     // stamp value 2615
    llvmo::MDString_O* obj_gc_safe = reinterpret_cast<llvmo::MDString_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~MDString_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Test_O:
{
     // stamp value 2619
    core::Test_O* obj_gc_safe = reinterpret_cast<core::Test_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Test_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__NamedMDNode_O:
{
     // stamp value 2623
    llvmo::NamedMDNode_O* obj_gc_safe = reinterpret_cast<llvmo::NamedMDNode_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~NamedMDNode_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__DWARFContext_O:
{
     // stamp value 2627
    llvmo::DWARFContext_O* obj_gc_safe = reinterpret_cast<llvmo::DWARFContext_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DWARFContext_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__TargetOptions_O:
{
     // stamp value 2631
    llvmo::TargetOptions_O* obj_gc_safe = reinterpret_cast<llvmo::TargetOptions_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TargetOptions_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Module_O:
{
     // stamp value 2635
    llvmo::Module_O* obj_gc_safe = reinterpret_cast<llvmo::Module_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Module_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Target_O:
{
     // stamp value 2639
    llvmo::Target_O* obj_gc_safe = reinterpret_cast<llvmo::Target_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Target_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_llvmo__Linker_O:
{
     // stamp value 2643
    llvmo::Linker_O* obj_gc_safe = reinterpret_cast<llvmo::Linker_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Linker_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Rack_O:
{
     // stamp value 2647
    core::Rack_O* obj_gc_safe = reinterpret_cast<core::Rack_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Rack_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SmallMultimap_O:
{
     // stamp value 2651
    core::SmallMultimap_O* obj_gc_safe = reinterpret_cast<core::SmallMultimap_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SmallMultimap_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Scope_O:
{
     // stamp value 2655
    core::Scope_O* obj_gc_safe = reinterpret_cast<core::Scope_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Scope_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__FileScope_O:
{
     // stamp value 2659
    core::FileScope_O* obj_gc_safe = reinterpret_cast<core::FileScope_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FileScope_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Path_O:
{
     // stamp value 2663
    core::Path_O* obj_gc_safe = reinterpret_cast<core::Path_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Path_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Pathname_O:
{
     // stamp value 2667
    core::Pathname_O* obj_gc_safe = reinterpret_cast<core::Pathname_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Pathname_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__LogicalPathname_O:
{
     // stamp value 2671
    core::LogicalPathname_O* obj_gc_safe = reinterpret_cast<core::LogicalPathname_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LogicalPathname_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Stream_O:
{
     // stamp value 2675
    core::Stream_O* obj_gc_safe = reinterpret_cast<core::Stream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Stream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__AnsiStream_O:
{
     // stamp value 2679
    core::AnsiStream_O* obj_gc_safe = reinterpret_cast<core::AnsiStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AnsiStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__TwoWayStream_O:
{
     // stamp value 2683
    core::TwoWayStream_O* obj_gc_safe = reinterpret_cast<core::TwoWayStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~TwoWayStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__SynonymStream_O:
{
     // stamp value 2687
    core::SynonymStream_O* obj_gc_safe = reinterpret_cast<core::SynonymStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~SynonymStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__StringStream_O:
{
     // stamp value 2691
    core::StringStream_O* obj_gc_safe = reinterpret_cast<core::StringStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StringStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__StringOutputStream_O:
{
     // stamp value 2695
    core::StringOutputStream_O* obj_gc_safe = reinterpret_cast<core::StringOutputStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StringOutputStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__StringInputStream_O:
{
     // stamp value 2699
    core::StringInputStream_O* obj_gc_safe = reinterpret_cast<core::StringInputStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~StringInputStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__EchoStream_O:
{
     // stamp value 2703
    core::EchoStream_O* obj_gc_safe = reinterpret_cast<core::EchoStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~EchoStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__ConcatenatedStream_O:
{
     // stamp value 2707
    core::ConcatenatedStream_O* obj_gc_safe = reinterpret_cast<core::ConcatenatedStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~ConcatenatedStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__FileStream_O:
{
     // stamp value 2711
    core::FileStream_O* obj_gc_safe = reinterpret_cast<core::FileStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FileStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__IOFileStream_O:
{
     // stamp value 2715
    core::IOFileStream_O* obj_gc_safe = reinterpret_cast<core::IOFileStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IOFileStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__IOStreamStream_O:
{
     // stamp value 2719
    core::IOStreamStream_O* obj_gc_safe = reinterpret_cast<core::IOStreamStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~IOStreamStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__BroadcastStream_O:
{
     // stamp value 2723
    core::BroadcastStream_O* obj_gc_safe = reinterpret_cast<core::BroadcastStream_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~BroadcastStream_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Package_O:
{
     // stamp value 2727
    core::Package_O* obj_gc_safe = reinterpret_cast<core::Package_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Package_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__FileStatus_O:
{
     // stamp value 2731
    core::FileStatus_O* obj_gc_safe = reinterpret_cast<core::FileStatus_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~FileStatus_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__InvocationHistoryFrameIterator_O:
{
     // stamp value 2735
    core::InvocationHistoryFrameIterator_O* obj_gc_safe = reinterpret_cast<core::InvocationHistoryFrameIterator_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~InvocationHistoryFrameIterator_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__DirectoryEntry_O:
{
     // stamp value 2739
    core::DirectoryEntry_O* obj_gc_safe = reinterpret_cast<core::DirectoryEntry_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~DirectoryEntry_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__LightUserData_O:
{
     // stamp value 2743
    core::LightUserData_O* obj_gc_safe = reinterpret_cast<core::LightUserData_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~LightUserData_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__UserData_O:
{
     // stamp value 2747
    core::UserData_O* obj_gc_safe = reinterpret_cast<core::UserData_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~UserData_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Cons_O:
{
     // stamp value 2751
    core::Cons_O* obj_gc_safe = reinterpret_cast<core::Cons_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Cons_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__VaList_dummy_O:
{
     // stamp value 2755
    core::VaList_dummy_O* obj_gc_safe = reinterpret_cast<core::VaList_dummy_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~VaList_dummy_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_core__Lisp_O:
{
     // stamp value 2759
    core::Lisp_O* obj_gc_safe = reinterpret_cast<core::Lisp_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~Lisp_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_:
{
     // do nothing stamp value 2763
    THROW_HARD_ERROR(BF("Should never finalize object clang::RecursiveASTVisitor<asttooling::AstVisitor_O>"));
}
obj_finalize_STAMPWTAG_asttooling__AstVisitor_O:
{
     // stamp value 2767
    asttooling::AstVisitor_O* obj_gc_safe = reinterpret_cast<asttooling::AstVisitor_O*>(client);
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wignored-qualifiers"
    obj_gc_safe->~AstVisitor_O();
#pragma clang diagnostic pop
    goto finalize_done;
}
obj_finalize_STAMPWTAG_gctools__GCContainer:
{
     // do nothing stamp value 2771
    THROW_HARD_ERROR(BF("Should never finalize object gctools::GCContainer"));
}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__:
{
     // stamp value 2775
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_:
{
     // stamp value 2779
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::AtomicInfo>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__:
{
     // stamp value 2783
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_:
{
     // stamp value 2787
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyChiralRestraint>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__:
{
     // stamp value 2791
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__:
{
     // stamp value 2795
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_short_:
{
     // stamp value 2799
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<short>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__:
{
     // stamp value 2803
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_unsigned_long_:
{
     // stamp value 2807
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<unsigned long>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___:
{
     // stamp value 2811
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__:
{
     // stamp value 2815
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_:
{
     // stamp value 2819
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<4,0>"));
}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_:
{
     // stamp value 2823
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::SymbolClassHolderPair>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___:
{
     // stamp value 2827
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_:
{
     // stamp value 2831
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::FFNonbondCrossTerm>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__:
{
     // stamp value 2835
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_:
{
     // stamp value 2839
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyDihedralRestraint>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___:
{
     // stamp value 2843
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__:
{
     // stamp value 2847
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_unsigned_char_:
{
     // stamp value 2851
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<unsigned char>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___:
{
     // stamp value 2855
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__:
{
     // stamp value 2859
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::Vec0<int>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___:
{
     // stamp value 2863
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_:
{
     // stamp value 2867
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__:
{
     // stamp value 2871
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_:
{
     // stamp value 2875
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAngle>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__:
{
     // stamp value 2879
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__:
{
     // stamp value 2883
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__:
{
     // stamp value 2887
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___:
{
     // stamp value 2891
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__:
{
     // stamp value 2895
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_:
{
     // stamp value 2899
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::OptionalArgument>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_:
{
     // stamp value 2903
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::KeywordArgument>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_:
{
     // stamp value 2907
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::KeyEntry>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___:
{
     // stamp value 2911
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__:
{
     // stamp value 2915
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_Vector3_:
{
     // stamp value 2919
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<Vector3>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_:
{
     // stamp value 2923
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAnchorRestraint>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__:
{
     // stamp value 2927
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___:
{
     // stamp value 2931
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_:
{
     // stamp value 2935
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::HybridizationInfo>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__:
{
     // stamp value 2939
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___:
{
     // stamp value 2943
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__:
{
     // stamp value 2947
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__:
{
     // stamp value 2951
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__:
{
     // stamp value 2955
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__:
{
     // stamp value 2959
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__:
{
     // stamp value 2963
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___:
{
     // stamp value 2967
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___:
{
     // stamp value 2971
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__:
{
     // stamp value 2975
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___:
{
     // stamp value 2979
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__:
{
     // stamp value 2983
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__:
{
     // stamp value 2987
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_:
{
     // stamp value 2991
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<2,0>"));
}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__:
{
     // stamp value 2995
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__:
{
     // stamp value 2999
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_:
{
     // stamp value 3003
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<1,0>"));
}
obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_:
{
     // stamp value 3007
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<2,1>"));
}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__:
{
     // stamp value 3011
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_int_:
{
     // stamp value 3015
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<int>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___:
{
     // stamp value 3019
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__:
{
     // stamp value 3023
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__:
{
     // stamp value 3027
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_float_:
{
     // stamp value 3031
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<float>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__:
{
     // stamp value 3035
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__:
{
     // stamp value 3039
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__T_O___:
{
     // stamp value 3043
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::T_O *>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_:
{
     // stamp value 3047
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyDihedral>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___:
{
     // stamp value 3051
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_unsigned_int_:
{
     // stamp value 3055
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<unsigned int>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__:
{
     // stamp value 3059
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__:
{
     // stamp value 3063
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_:
{
     // stamp value 3067
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::RotamerAtom>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__:
{
     // stamp value 3071
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_double_:
{
     // stamp value 3075
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<double>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__:
{
     // stamp value 3079
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__:
{
     // stamp value 3083
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___:
{
     // stamp value 3087
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__:
{
     // stamp value 3091
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_:
{
     // stamp value 3095
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::AtomPdbRec>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_:
{
     // stamp value 3099
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergySketchStretch>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_signed_char_:
{
     // stamp value 3103
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<signed char>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_:
{
     // stamp value 3107
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyOutOfZPlane>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__:
{
     // stamp value 3111
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___:
{
     // stamp value 3115
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__:
{
     // stamp value 3119
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__:
{
     // stamp value 3123
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_:
{
     // stamp value 3127
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergySketchNonbond>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_:
{
     // stamp value 3131
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::KeyValuePair>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__:
{
     // stamp value 3135
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__:
{
     // stamp value 3139
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_:
{
     // stamp value 3143
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::FixedNonbondRestraint>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__:
{
     // stamp value 3147
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__:
{
     // stamp value 3151
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___:
{
     // stamp value 3155
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__:
{
     // stamp value 3159
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_double_:
{
     // stamp value 3163
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<double>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___:
{
     // stamp value 3167
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___:
{
     // stamp value 3171
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__:
{
     // stamp value 3175
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__:
{
     // stamp value 3179
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_:
{
     // stamp value 3183
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::RequiredArgument>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__:
{
     // stamp value 3187
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__:
{
     // stamp value 3191
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_:
{
     // stamp value 3195
    THROW_HARD_ERROR(BF("Should never finalize gctools::GCBitUnitArray_moveable<4,1>"));
}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_:
{
     // stamp value 3199
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::SymbolStorage>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_:
{
     // stamp value 3203
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___:
{
     // stamp value 3207
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___:
{
     // stamp value 3211
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__:
{
     // stamp value 3215
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__:
{
     // stamp value 3219
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___:
{
     // stamp value 3223
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_:
{
     // stamp value 3227
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__:
{
     // stamp value 3231
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_unsigned_long_:
{
     // stamp value 3235
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<unsigned long>"));}
obj_finalize_STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_:
{
     // stamp value 3239
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArraySignedLength_moveable<unsigned long>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_:
{
     // stamp value 3243
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyNonbond>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___:
{
     // stamp value 3247
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_:
{
     // stamp value 3251
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::AtomInfo>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__:
{
     // stamp value 3255
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__:
{
     // stamp value 3259
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_:
{
     // stamp value 3263
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyAtom>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___:
{
     // stamp value 3267
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_int_:
{
     // stamp value 3271
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<int>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__:
{
     // stamp value 3275
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_:
{
     // stamp value 3279
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<core::AuxArgument>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_:
{
     // stamp value 3283
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::ResidueOut>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_long_:
{
     // stamp value 3287
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<long>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__:
{
     // stamp value 3291
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_:
{
     // stamp value 3295
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::RigidBodyAtomInfo>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___:
{
     // stamp value 3299
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__:
{
     // stamp value 3303
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__:
{
     // stamp value 3307
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_unsigned_int_:
{
     // stamp value 3311
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<unsigned int>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_:
{
     // stamp value 3315
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<chem::EnergyStretch>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__:
{
     // stamp value 3319
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__:
{
     // stamp value 3323
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>"));}
obj_finalize_STAMPWTAG_gctools__GCArray_moveable_unsigned_short_:
{
     // stamp value 3327
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCArray_moveable<unsigned short>"));}
obj_finalize_STAMPWTAG_gctools__GCVector_moveable_float_:
{
     // stamp value 3331
    THROW_HARD_ERROR(BF("Should never finalize containers gctools::GCVector_moveable<float>"));}
obj_finalize_STAMPWTAG_clang__FrontendAction:
{
     // do nothing stamp value 3335
    THROW_HARD_ERROR(BF("Should never finalize object clang::FrontendAction"));
}
obj_finalize_STAMPWTAG_clang__ASTFrontendAction:
{
     // do nothing stamp value 3339
    THROW_HARD_ERROR(BF("Should never finalize object clang::ASTFrontendAction"));
}
obj_finalize_STAMPWTAG_clang__SyntaxOnlyAction:
{
     // do nothing stamp value 3343
    THROW_HARD_ERROR(BF("Should never finalize object clang::SyntaxOnlyAction"));
}
obj_finalize_STAMPWTAG_clang__tooling__ToolAction:
{
     // do nothing stamp value 3347
    THROW_HARD_ERROR(BF("Should never finalize object clang::tooling::ToolAction"));
}
obj_finalize_STAMPWTAG_clang__tooling__FrontendActionFactory:
{
     // do nothing stamp value 3351
    THROW_HARD_ERROR(BF("Should never finalize object clang::tooling::FrontendActionFactory"));
}
obj_finalize_STAMPWTAG_clang__ast_matchers__MatchFinder__MatchCallback:
{
     // do nothing stamp value 3355
    THROW_HARD_ERROR(BF("Should never finalize object clang::ast_matchers::MatchFinder::MatchCallback"));
}
#endif // defined(GC_OBJ_FINALIZE)
#if defined(GC_OBJ_FINALIZE_HELPERS)

#endif // defined(GC_OBJ_FINALIZE_HELPERS)
#if defined(GC_OBJ_FINALIZE_TABLE)
static void* OBJ_FINALIZE_table[] = { 
  /* 0 */ NULL,
  /* 7 */ &&obj_finalize_STAMPWTAG_core__T_O,
  /* 11 */ &&obj_finalize_STAMPWTAG_core__Unused_dummy_O,
  /* 15 */ &&obj_finalize_STAMPWTAG_core__General_O,
  /* 19 */ &&obj_finalize_STAMPWTAG_core__LambdaListHandler_O,
  /* 23 */ &&obj_finalize_STAMPWTAG_llvmo__AttributeSet_O,
  /* 27 */ &&obj_finalize_STAMPWTAG_core__Pointer_O,
  /* 31 */ &&obj_finalize_STAMPWTAG_clasp_ffi__ForeignData_O,
  /* 35 */ &&obj_finalize_STAMPWTAG_core__CxxObject_O,
  /* 39 */ &&obj_finalize_STAMPWTAG_asttooling__SourceLocation_O,
  /* 43 */ &&obj_finalize_STAMPWTAG_kinematics__ChiList_O,
  /* 47 */ &&obj_finalize_STAMPWTAG_chem__NumericalFunction_O,
  /* 51 */ &&obj_finalize_STAMPWTAG_kinematics__FoldTree_O,
  /* 55 */ &&obj_finalize_STAMPWTAG_kinematics__RotamerSetBase_O,
  /* 59 */ &&obj_finalize_STAMPWTAG_kinematics__BackboneDependentRotamerSet_O,
  /* 63 */ &&obj_finalize_STAMPWTAG_kinematics__RotamerSet_O,
  /* 67 */ &&obj_finalize_STAMPWTAG_chem__EnergyComponent_O,
  /* 71 */ &&obj_finalize_STAMPWTAG_chem__EnergyStretch_O,
  /* 75 */ &&obj_finalize_STAMPWTAG_chem__EnergyRigidBodyComponent_O,
  /* 79 */ &&obj_finalize_STAMPWTAG_chem__EnergyRigidBodyStaple_O,
  /* 83 */ &&obj_finalize_STAMPWTAG_chem__EnergyRigidBodyNonbond_O,
  /* 87 */ &&obj_finalize_STAMPWTAG_chem__EnergyOutOfZPlane_O,
  /* 91 */ &&obj_finalize_STAMPWTAG_chem__EnergySketchNonbond_O,
  /* 95 */ &&obj_finalize_STAMPWTAG_chem__EnergyDihedralRestraint_O,
  /* 99 */ &&obj_finalize_STAMPWTAG_chem__EnergyChiralRestraint_O,
  /* 103 */ &&obj_finalize_STAMPWTAG_chem__EnergyPointToLineRestraint_O,
  /* 107 */ &&obj_finalize_STAMPWTAG_chem__EnergyDihedral_O,
  /* 111 */ &&obj_finalize_STAMPWTAG_chem__EnergyNonbond_O,
  /* 115 */ &&obj_finalize_STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O,
  /* 119 */ &&obj_finalize_STAMPWTAG_chem__EnergyAnchorRestraint_O,
  /* 123 */ &&obj_finalize_STAMPWTAG_chem__EnergyFixedNonbondRestraint_O,
  /* 127 */ &&obj_finalize_STAMPWTAG_chem__EnergySketchStretch_O,
  /* 131 */ &&obj_finalize_STAMPWTAG_chem__EnergyAngle_O,
  /* 135 */ &&obj_finalize_STAMPWTAG_chem__Matter_O,
  /* 139 */ &&obj_finalize_STAMPWTAG_chem__Aggregate_O,
  /* 143 */ &&obj_finalize_STAMPWTAG_chem__Atom_O,
  /* 147 */ &&obj_finalize_STAMPWTAG_chem__VirtualAtom_O,
  /* 151 */ &&obj_finalize_STAMPWTAG_chem__Residue_O,
  /* 155 */ &&obj_finalize_STAMPWTAG_chem__Molecule_O,
  /* 159 */ &&obj_finalize_STAMPWTAG_chem__PdbWriter_O,
  /* 163 */ &&obj_finalize_STAMPWTAG_chem__TrajectoryFrame_O,
  /* 167 */ &&obj_finalize_STAMPWTAG_llvmo__MDBuilder_O,
  /* 171 */ &&obj_finalize_STAMPWTAG_chem__Topology_O,
  /* 175 */ &&obj_finalize_STAMPWTAG_chem__AtomTable_O,
  /* 179 */ &&obj_finalize_STAMPWTAG_chem__CipPrioritizer_O,
  /* 183 */ &&obj_finalize_STAMPWTAG_adapt__IndexedObjectBag_O,
  /* 187 */ &&obj_finalize_STAMPWTAG_chem__VirtualSphere_O,
  /* 191 */ &&obj_finalize_STAMPWTAG_chem__TwisterDriver_O,
  /* 195 */ &&obj_finalize_STAMPWTAG_chem__RingFinder_O,
  /* 199 */ &&obj_finalize_STAMPWTAG_llvmo__FunctionCallee_O,
  /* 203 */ &&obj_finalize_STAMPWTAG_kinematics__Joint_O,
  /* 207 */ &&obj_finalize_STAMPWTAG_kinematics__JumpJoint_O,
  /* 211 */ &&obj_finalize_STAMPWTAG_kinematics__OriginJumpJoint_O,
  /* 215 */ &&obj_finalize_STAMPWTAG_kinematics__BondedJoint_O,
  /* 219 */ &&obj_finalize_STAMPWTAG_kinematics__RootBondedJoint_O,
  /* 223 */ &&obj_finalize_STAMPWTAG_kinematics__DelayedBondedJoint_O,
  /* 227 */ &&obj_finalize_STAMPWTAG_chem__SearchStatistics_O,
  /* 231 */ &&obj_finalize_STAMPWTAG_chem__PdbMonomerDatabase_O,
  /* 235 */ &&obj_finalize_STAMPWTAG_chem__Twister_O,
  /* 239 */ &&obj_finalize_STAMPWTAG_chem__MonomerCoordinates_O,
  /* 243 */ &&obj_finalize_STAMPWTAG_chem__FFParameter_O,
  /* 247 */ &&obj_finalize_STAMPWTAG_chem__FFVdw_O,
  /* 251 */ &&obj_finalize_STAMPWTAG_chem__FFStretch_O,
  /* 255 */ &&obj_finalize_STAMPWTAG_chem__FFPtor_O,
  /* 259 */ &&obj_finalize_STAMPWTAG_chem__FFItor_O,
  /* 263 */ &&obj_finalize_STAMPWTAG_chem__FFNonbond_O,
  /* 267 */ &&obj_finalize_STAMPWTAG_chem__FFAngle_O,
  /* 271 */ &&obj_finalize_STAMPWTAG_chem__Restraint_O,
  /* 275 */ &&obj_finalize_STAMPWTAG_chem__RestraintChiral_O,
  /* 279 */ &&obj_finalize_STAMPWTAG_chem__RestraintDistance_O,
  /* 283 */ &&obj_finalize_STAMPWTAG_chem__RestraintAngle_O,
  /* 287 */ &&obj_finalize_STAMPWTAG_chem__RestraintAnchor_O,
  /* 291 */ &&obj_finalize_STAMPWTAG_chem__RestraintFixedNonbond_O,
  /* 295 */ &&obj_finalize_STAMPWTAG_chem__RestraintDihedral_O,
  /* 299 */ &&obj_finalize_STAMPWTAG_chem__AtomIndexer_O,
  /* 303 */ &&obj_finalize_STAMPWTAG_geom__BoundingCuboid_O,
  /* 307 */ &&obj_finalize_STAMPWTAG_chem__StereoInformation_O,
  /* 311 */ &&obj_finalize_STAMPWTAG_chem__AddIonOctree_O,
  /* 315 */ &&obj_finalize_STAMPWTAG_chem__CDNode_O,
  /* 319 */ &&obj_finalize_STAMPWTAG_chem__OligomerPart_Base_O,
  /* 323 */ &&obj_finalize_STAMPWTAG_chem__OligomerPart_Link_O,
  /* 327 */ &&obj_finalize_STAMPWTAG_chem__OligomerPart_Monomer_O,
  /* 331 */ &&obj_finalize_STAMPWTAG_kinematics__BondId_O,
  /* 335 */ &&obj_finalize_STAMPWTAG_chem__CoordinateSystem_O,
  /* 339 */ &&obj_finalize_STAMPWTAG_chem__Bond_O,
  /* 343 */ &&obj_finalize_STAMPWTAG_chem__CandoDatabase_O,
  /* 347 */ &&obj_finalize_STAMPWTAG_chem__AbstractLargeSquareMatrix_O,
  /* 351 */ &&obj_finalize_STAMPWTAG_chem__SparseLargeSquareMatrix_O,
  /* 355 */ &&obj_finalize_STAMPWTAG_chem__FullLargeSquareMatrix_O,
  /* 359 */ &&obj_finalize_STAMPWTAG_chem__FFBaseDb_O,
  /* 363 */ &&obj_finalize_STAMPWTAG_chem__FFParameterBaseDb_O,
  /* 367 */ &&obj_finalize_STAMPWTAG_chem__FFItorDb_O,
  /* 371 */ &&obj_finalize_STAMPWTAG_chem__FFStretchDb_O,
  /* 375 */ &&obj_finalize_STAMPWTAG_chem__FFAngleDb_O,
  /* 379 */ &&obj_finalize_STAMPWTAG_chem__FFNonbondDb_O,
  /* 383 */ &&obj_finalize_STAMPWTAG_chem__FFPtorDb_O,
  /* 387 */ &&obj_finalize_STAMPWTAG_chem__FFVdwDb_O,
  /* 391 */ &&obj_finalize_STAMPWTAG_chem__FFTypesDb_O,
  /* 395 */ &&obj_finalize_STAMPWTAG_llvmo__LibraryBase_O,
  /* 399 */ &&obj_finalize_STAMPWTAG_llvmo__ObjectFile_O,
  /* 403 */ &&obj_finalize_STAMPWTAG_llvmo__LibraryFile_O,
  /* 407 */ &&obj_finalize_STAMPWTAG_chem__AGVertex_O,
  /* 411 */ &&obj_finalize_STAMPWTAG_chem__ForceField_O,
  /* 415 */ &&obj_finalize_STAMPWTAG_chem__AtomReferenceBase_O,
  /* 419 */ &&obj_finalize_STAMPWTAG_chem__AtomReference_O,
  /* 423 */ &&obj_finalize_STAMPWTAG_chem__ScoringFunction_O,
  /* 427 */ &&obj_finalize_STAMPWTAG_chem__EnergyFunction_O,
  /* 431 */ &&obj_finalize_STAMPWTAG_chem__SketchFunction_O,
  /* 435 */ &&obj_finalize_STAMPWTAG_chem__RigidBodyEnergyFunction_O,
  /* 439 */ &&obj_finalize_STAMPWTAG_chem__WildElementDict_O,
  /* 443 */ &&obj_finalize_STAMPWTAG_asttooling__QualType_O,
  /* 447 */ &&obj_finalize_STAMPWTAG_llvmo__DITypeRefArray_O,
  /* 451 */ &&obj_finalize_STAMPWTAG_geom__OVector3_O,
  /* 455 */ &&obj_finalize_STAMPWTAG_geom__OVector2_O,
  /* 459 */ &&obj_finalize_STAMPWTAG_chem__Structure_Old_ListEntry_O,
  /* 463 */ &&obj_finalize_STAMPWTAG_chem__FFTypeRule_O,
  /* 467 */ &&obj_finalize_STAMPWTAG_adapt__QDomNode_O,
  /* 471 */ &&obj_finalize_STAMPWTAG_mp__SharedMutex_O,
  /* 475 */ &&obj_finalize_STAMPWTAG_chem__ConstitutionAtom_O,
  /* 479 */ &&obj_finalize_STAMPWTAG_chem__ConstitutionVirtualAtom_O,
  /* 483 */ &&obj_finalize_STAMPWTAG_chem__Smirks_O,
  /* 487 */ &&obj_finalize_STAMPWTAG_chem__ReadAmberParameters_O,
  /* 491 */ &&obj_finalize_STAMPWTAG_chem__AGEdge_O,
  /* 495 */ &&obj_finalize_STAMPWTAG_chem__Entity_O,
  /* 499 */ &&obj_finalize_STAMPWTAG_chem__Stereoisomer_O,
  /* 503 */ &&obj_finalize_STAMPWTAG_chem__EntityNameSetBase_O,
  /* 507 */ &&obj_finalize_STAMPWTAG_chem__EntityNameSetWithCap_O,
  /* 511 */ &&obj_finalize_STAMPWTAG_chem__Mate_O,
  /* 515 */ &&obj_finalize_STAMPWTAG_chem__RingClosingMate_O,
  /* 519 */ &&obj_finalize_STAMPWTAG_chem__EntityNameSet_O,
  /* 523 */ &&obj_finalize_STAMPWTAG_chem__RepresentedEntityNameSet_O,
  /* 527 */ &&obj_finalize_STAMPWTAG_chem__MonomerPack_O,
  /* 531 */ &&obj_finalize_STAMPWTAG_chem__Constitution_O,
  /* 535 */ &&obj_finalize_STAMPWTAG_chem__Monomer_O,
  /* 539 */ &&obj_finalize_STAMPWTAG_chem__OctNode_O,
  /* 543 */ &&obj_finalize_STAMPWTAG_chem__Structure_Old_List_O,
  /* 547 */ &&obj_finalize_STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O,
  /* 551 */ &&obj_finalize_STAMPWTAG_chem__ReportBase_O,
  /* 555 */ &&obj_finalize_STAMPWTAG_chem__StepReport_O,
  /* 559 */ &&obj_finalize_STAMPWTAG_chem__MessageReport_O,
  /* 563 */ &&obj_finalize_STAMPWTAG_chem__ForceMatchReport_O,
  /* 567 */ &&obj_finalize_STAMPWTAG_chem__ChemDraw_O,
  /* 571 */ &&obj_finalize_STAMPWTAG_chem__ZMatrixInternal_O,
  /* 575 */ &&obj_finalize_STAMPWTAG_chem__ZMatrixBondInternal_O,
  /* 579 */ &&obj_finalize_STAMPWTAG_chem__ZMatrixDihedralInternal_O,
  /* 583 */ &&obj_finalize_STAMPWTAG_chem__ZMatrixAngleInternal_O,
  /* 587 */ &&obj_finalize_STAMPWTAG_chem__StereoisomerAtom_O,
  /* 591 */ &&obj_finalize_STAMPWTAG_chem__StereoisomerVirtualAtom_O,
  /* 595 */ &&obj_finalize_STAMPWTAG_chem__ZMatrix_O,
  /* 599 */ &&obj_finalize_STAMPWTAG_chem__Isoname_O,
  /* 603 */ &&obj_finalize_STAMPWTAG_chem__PathMessage_O,
  /* 607 */ &&obj_finalize_STAMPWTAG_kinematics__MonomerId_O,
  /* 611 */ &&obj_finalize_STAMPWTAG_kinematics__JointTemplate_O,
  /* 615 */ &&obj_finalize_STAMPWTAG_kinematics__BondedJointTemplate_O,
  /* 619 */ &&obj_finalize_STAMPWTAG_kinematics__DelayedBondedJointTemplate_O,
  /* 623 */ &&obj_finalize_STAMPWTAG_kinematics__RootBondedJointTemplate_O,
  /* 627 */ &&obj_finalize_STAMPWTAG_geom__Color_O,
  /* 631 */ &&obj_finalize_STAMPWTAG_chem__ConformationCollection_O,
  /* 635 */ &&obj_finalize_STAMPWTAG_chem__SuperposableConformationCollection_O,
  /* 639 */ &&obj_finalize_STAMPWTAG_asttooling__PresumedLoc_O,
  /* 643 */ &&obj_finalize_STAMPWTAG_chem__Coupling_O,
  /* 647 */ &&obj_finalize_STAMPWTAG_chem__RingCoupling_O,
  /* 651 */ &&obj_finalize_STAMPWTAG_chem__DirectionalCoupling_O,
  /* 655 */ &&obj_finalize_STAMPWTAG_adapt__ObjectSet_O,
  /* 659 */ &&obj_finalize_STAMPWTAG_chem__Oligomer_O,
  /* 663 */ &&obj_finalize_STAMPWTAG_chem__PdbMonomerConnectivity_O,
  /* 667 */ &&obj_finalize_STAMPWTAG_units__Dimension_O,
  /* 671 */ &&obj_finalize_STAMPWTAG_chem__ConformationExplorerEntry_O,
  /* 675 */ &&obj_finalize_STAMPWTAG_mp__ConditionVariable_O,
  /* 679 */ &&obj_finalize_STAMPWTAG_chem__PdbReader_O,
  /* 683 */ &&obj_finalize_STAMPWTAG_chem__SpanningLoop_O,
  /* 687 */ &&obj_finalize_STAMPWTAG_chem__ProperTorsion_O,
  /* 691 */ &&obj_finalize_STAMPWTAG_chem__ResidueList_O,
  /* 695 */ &&obj_finalize_STAMPWTAG_chem__SuperposeEngine_O,
  /* 699 */ &&obj_finalize_STAMPWTAG_chem__SuperposeSelectedAtoms_O,
  /* 703 */ &&obj_finalize_STAMPWTAG_chem__Command_O,
  /* 707 */ &&obj_finalize_STAMPWTAG_chem__StereoConfiguration_O,
  /* 711 */ &&obj_finalize_STAMPWTAG_kinematics__MonomerBaseNode_O,
  /* 715 */ &&obj_finalize_STAMPWTAG_kinematics__AggregateNode_O,
  /* 719 */ &&obj_finalize_STAMPWTAG_kinematics__ChainNode_O,
  /* 723 */ &&obj_finalize_STAMPWTAG_kinematics__MonomerNode_O,
  /* 727 */ &&obj_finalize_STAMPWTAG_kinematics__RingClosingMonomerNode_O,
  /* 731 */ &&obj_finalize_STAMPWTAG_chem__FFNonbondCrossTermTable_O,
  /* 735 */ &&obj_finalize_STAMPWTAG_chem__Plug_O,
  /* 739 */ &&obj_finalize_STAMPWTAG_chem__JumpPlug_O,
  /* 743 */ &&obj_finalize_STAMPWTAG_chem__PlugWithMates_O,
  /* 747 */ &&obj_finalize_STAMPWTAG_chem__InPlug_O,
  /* 751 */ &&obj_finalize_STAMPWTAG_chem__OutPlug_O,
  /* 755 */ &&obj_finalize_STAMPWTAG_chem__OriginPlug_O,
  /* 759 */ &&obj_finalize_STAMPWTAG_kinematics__Rotamer_O,
  /* 763 */ &&obj_finalize_STAMPWTAG_chem__MonomerContext_O,
  /* 767 */ &&obj_finalize_STAMPWTAG_chem__CDFragment_O,
  /* 771 */ &&obj_finalize_STAMPWTAG_units__Unit_O,
  /* 775 */ &&obj_finalize_STAMPWTAG_units__NamedUnit_O,
  /* 779 */ &&obj_finalize_STAMPWTAG_core__NativeVector_int_O,
  /* 783 */ &&obj_finalize_STAMPWTAG_llvmo__CodeBase_O,
  /* 787 */ &&obj_finalize_STAMPWTAG_llvmo__Code_O,
  /* 791 */ &&obj_finalize_STAMPWTAG_llvmo__Library_O,
  /* 795 */ &&obj_finalize_STAMPWTAG_chem__InfoDb_O,
  /* 799 */ &&obj_finalize_STAMPWTAG_chem__MinimizerLog_O,
  /* 803 */ &&obj_finalize_STAMPWTAG_chem__GenericOctree_O,
  /* 807 */ &&obj_finalize_STAMPWTAG_kinematics__AtomTree_O,
  /* 811 */ &&obj_finalize_STAMPWTAG_units__Quantity_O,
  /* 815 */ &&obj_finalize_STAMPWTAG_chem__ChemInfoMatch_O,
  /* 819 */ &&obj_finalize_STAMPWTAG_chem__ZMatrixEntry_O,
  /* 823 */ &&obj_finalize_STAMPWTAG_chem__SpecificContextSet_O,
  /* 827 */ &&obj_finalize_STAMPWTAG_chem__Angle_O,
  /* 831 */ &&obj_finalize_STAMPWTAG_chem__MacroModelFile_O,
  /* 835 */ &&obj_finalize_STAMPWTAG_chem__BondList_O,
  /* 839 */ &&obj_finalize_STAMPWTAG_chem__ConformationExplorer_O,
  /* 843 */ &&obj_finalize_STAMPWTAG_chem__ChemInfoGraph_O,
  /* 847 */ &&obj_finalize_STAMPWTAG_chem__CDText_O,
  /* 851 */ &&obj_finalize_STAMPWTAG_llvmo__DINodeArray_O,
  /* 855 */ &&obj_finalize_STAMPWTAG_chem__SpanningInfo_O,
  /* 859 */ &&obj_finalize_STAMPWTAG_kinematics__Checkpoint_O,
  /* 863 */ &&obj_finalize_STAMPWTAG_kinematics__CheckpointJoint_O,
  /* 867 */ &&obj_finalize_STAMPWTAG_kinematics__CheckpointOutPlugJoint_O,
  /* 871 */ &&obj_finalize_STAMPWTAG_chem__ConformationExplorerMatch_O,
  /* 875 */ &&obj_finalize_STAMPWTAG_chem__StereoisomerAtoms_O,
  /* 879 */ &&obj_finalize_STAMPWTAG_chem__Rotamer_O,
  /* 883 */ &&obj_finalize_STAMPWTAG_chem__ImproperTorsion_O,
  /* 887 */ &&obj_finalize_STAMPWTAG_adapt__SymbolList_O,
  /* 891 */ &&obj_finalize_STAMPWTAG_chem__FrameRecognizer_O,
  /* 895 */ &&obj_finalize_STAMPWTAG_chem__ConformationExplorerEntryStage_O,
  /* 899 */ &&obj_finalize_STAMPWTAG_chem__Trajectory_O,
  /* 903 */ &&obj_finalize_STAMPWTAG_chem__CalculatePosition_O,
  /* 907 */ &&obj_finalize_STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O,
  /* 911 */ &&obj_finalize_STAMPWTAG_chem__CalculatePositionUsingInternals_O,
  /* 915 */ &&obj_finalize_STAMPWTAG_chem__CalculatePositionAlongBond_O,
  /* 919 */ &&obj_finalize_STAMPWTAG_geom__OMatrix_O,
  /* 923 */ &&obj_finalize_STAMPWTAG_chem__ConformationCollectionEntry_O,
  /* 927 */ &&obj_finalize_STAMPWTAG_chem__ComplexRestraint_O,
  /* 931 */ &&obj_finalize_STAMPWTAG_chem__RestrainedExoCyclicAtom_O,
  /* 935 */ &&obj_finalize_STAMPWTAG_chem__RestrainedPiBond_O,
  /* 939 */ &&obj_finalize_STAMPWTAG_mp__Mutex_O,
  /* 943 */ &&obj_finalize_STAMPWTAG_mp__RecursiveMutex_O,
  /* 947 */ &&obj_finalize_STAMPWTAG_chem__CombinedForceField_O,
  /* 951 */ &&obj_finalize_STAMPWTAG_chem__CDBond_O,
  /* 955 */ &&obj_finalize_STAMPWTAG_chem__ConstitutionBond_O,
  /* 959 */ &&obj_finalize_STAMPWTAG_kinematics__ChiDihedral_O,
  /* 963 */ &&obj_finalize_STAMPWTAG_chem__ConstitutionAtoms_O,
  /* 967 */ &&obj_finalize_STAMPWTAG_kinematics__Conformation_O,
  /* 971 */ &&obj_finalize_STAMPWTAG_chem__MoleculeGraph_O,
  /* 975 */ &&obj_finalize_STAMPWTAG_chem__StructureComparer_O,
  /* 979 */ &&obj_finalize_STAMPWTAG_chem__BoundingBox_O,
  /* 983 */ &&obj_finalize_STAMPWTAG_chem__ChemInfoNode_O,
  /* 987 */ &&obj_finalize_STAMPWTAG_chem__BondMatcher_O,
  /* 991 */ &&obj_finalize_STAMPWTAG_chem__BondTest_O,
  /* 995 */ &&obj_finalize_STAMPWTAG_chem__BondLogical_O,
  /* 999 */ &&obj_finalize_STAMPWTAG_chem__BondMatchNode_O,
  /* 1003 */ &&obj_finalize_STAMPWTAG_chem__AtomOrBondMatchNode_O,
  /* 1007 */ &&obj_finalize_STAMPWTAG_chem__Root_O,
  /* 1011 */ &&obj_finalize_STAMPWTAG_chem__SmartsRoot_O,
  /* 1015 */ &&obj_finalize_STAMPWTAG_chem__AntechamberRoot_O,
  /* 1019 */ &&obj_finalize_STAMPWTAG_chem__ResidueTest_O,
  /* 1023 */ &&obj_finalize_STAMPWTAG_chem__AntechamberFocusAtomMatch_O,
  /* 1027 */ &&obj_finalize_STAMPWTAG_chem__Logical_O,
  /* 1031 */ &&obj_finalize_STAMPWTAG_chem__AtomTest_O,
  /* 1035 */ &&obj_finalize_STAMPWTAG_chem__BondToAtomTest_O,
  /* 1039 */ &&obj_finalize_STAMPWTAG_chem__AntechamberBondToAtomTest_O,
  /* 1043 */ &&obj_finalize_STAMPWTAG_chem__BondListMatchNode_O,
  /* 1047 */ &&obj_finalize_STAMPWTAG_chem__Chain_O,
  /* 1051 */ &&obj_finalize_STAMPWTAG_chem__Branch_O,
  /* 1055 */ &&obj_finalize_STAMPWTAG_chem__RootMatchNode_O,
  /* 1059 */ &&obj_finalize_STAMPWTAG_chem__AfterMatchBondToAtomTest_O,
  /* 1063 */ &&obj_finalize_STAMPWTAG_chem__ElementsInfo_O,
  /* 1067 */ &&obj_finalize_STAMPWTAG_chem__Dimacs_O,
  /* 1071 */ &&obj_finalize_STAMPWTAG_chem__SpecificContext_O,
  /* 1075 */ &&obj_finalize_STAMPWTAG_chem__Minimizer_O,
  /* 1079 */ &&obj_finalize_STAMPWTAG_adapt__SymbolSet_O,
  /* 1083 */ &&obj_finalize_STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O,
  /* 1087 */ &&obj_finalize_STAMPWTAG_chem__Alias_O,
  /* 1091 */ &&obj_finalize_STAMPWTAG_chem__AtomIdToAtomMap_O,
  /* 1095 */ &&obj_finalize_STAMPWTAG_mp__Process_O,
  /* 1099 */ &&obj_finalize_STAMPWTAG_core__SingleDispatchMethod_O,
  /* 1103 */ &&obj_finalize_STAMPWTAG_core__Iterator_O,
  /* 1107 */ &&obj_finalize_STAMPWTAG_core__DirectoryIterator_O,
  /* 1111 */ &&obj_finalize_STAMPWTAG_chem__IterateRestraints_O,
  /* 1115 */ &&obj_finalize_STAMPWTAG_adapt__IterateCons_O,
  /* 1119 */ &&obj_finalize_STAMPWTAG_core__RecursiveDirectoryIterator_O,
  /* 1123 */ &&obj_finalize_STAMPWTAG_chem__IterateMatter_O,
  /* 1127 */ &&obj_finalize_STAMPWTAG_chem__IterateResidues_O,
  /* 1131 */ &&obj_finalize_STAMPWTAG_chem__IterateBonds_O,
  /* 1135 */ &&obj_finalize_STAMPWTAG_chem__IterateAtoms_O,
  /* 1139 */ &&obj_finalize_STAMPWTAG_core__Symbol_O,
  /* 1143 */ &&obj_finalize_STAMPWTAG_core__Null_O,
  /* 1147 */ &&obj_finalize_STAMPWTAG_core__SharpEqualWrapper_O,
  /* 1151 */ &&obj_finalize_STAMPWTAG_llvmo__ClaspJIT_O,
  /* 1155 */ &&obj_finalize_STAMPWTAG_core__Exposer_O,
  /* 1159 */ &&obj_finalize_STAMPWTAG_units__UnitsExposer_O,
  /* 1163 */ &&obj_finalize_STAMPWTAG_core__CoreExposer_O,
  /* 1167 */ &&obj_finalize_STAMPWTAG_geom__GeomExposer_O,
  /* 1171 */ &&obj_finalize_STAMPWTAG_adapt__AdaptExposer_O,
  /* 1175 */ &&obj_finalize_STAMPWTAG_kinematics__KinematicsExposer_O,
  /* 1179 */ &&obj_finalize_STAMPWTAG_chem__ChemExposer_O,
  /* 1183 */ &&obj_finalize_STAMPWTAG_asttooling__AsttoolingExposer_O,
  /* 1187 */ &&obj_finalize_STAMPWTAG_core__PosixTimeDuration_O,
  /* 1191 */ &&obj_finalize_STAMPWTAG_clasp_ffi__ForeignTypeSpec_O,
  /* 1195 */ &&obj_finalize_STAMPWTAG_core__SmallMap_O,
  /* 1197 */ &&obj_finalize_STAMPWTAG_core__Instance_O,
  /* 1201 */ &&obj_finalize_STAMPWTAG_clbind__ClassRep_O,
  /* 1204 */ &&obj_finalize_STAMPWTAG_core__DerivableCxxObject_O,
  /* 1211 */ &&obj_finalize_STAMPWTAG_mpip__Mpi_O,
  /* 1215 */ &&obj_finalize_STAMPWTAG_core__Sigset_O,
  /* 1219 */ &&obj_finalize_STAMPWTAG_core__Environment_O,
  /* 1223 */ &&obj_finalize_STAMPWTAG_core__GlueEnvironment_O,
  /* 1227 */ &&obj_finalize_STAMPWTAG_core__LexicalEnvironment_O,
  /* 1231 */ &&obj_finalize_STAMPWTAG_core__CompileTimeEnvironment_O,
  /* 1235 */ &&obj_finalize_STAMPWTAG_core__CatchEnvironment_O,
  /* 1239 */ &&obj_finalize_STAMPWTAG_core__SymbolMacroletEnvironment_O,
  /* 1243 */ &&obj_finalize_STAMPWTAG_core__FunctionContainerEnvironment_O,
  /* 1247 */ &&obj_finalize_STAMPWTAG_core__UnwindProtectEnvironment_O,
  /* 1251 */ &&obj_finalize_STAMPWTAG_core__MacroletEnvironment_O,
  /* 1255 */ &&obj_finalize_STAMPWTAG_core__RuntimeVisibleEnvironment_O,
  /* 1259 */ &&obj_finalize_STAMPWTAG_core__TagbodyEnvironment_O,
  /* 1263 */ &&obj_finalize_STAMPWTAG_core__BlockEnvironment_O,
  /* 1267 */ &&obj_finalize_STAMPWTAG_core__FunctionValueEnvironment_O,
  /* 1271 */ &&obj_finalize_STAMPWTAG_core__ValueEnvironment_O,
  /* 1275 */ &&obj_finalize_STAMPWTAG_core__ActivationFrame_O,
  /* 1279 */ &&obj_finalize_STAMPWTAG_core__ValueFrame_O,
  /* 1283 */ &&obj_finalize_STAMPWTAG_core__FunctionFrame_O,
  /* 1287 */ &&obj_finalize_STAMPWTAG_core__RandomState_O,
  /* 1291 */ &&obj_finalize_STAMPWTAG_core__EntryPointBase_O,
  /* 1295 */ &&obj_finalize_STAMPWTAG_core__GlobalEntryPointGenerator_O,
  /* 1299 */ &&obj_finalize_STAMPWTAG_core__LocalEntryPointGenerator_O,
  /* 1303 */ &&obj_finalize_STAMPWTAG_core__CodeEntryPoint_O,
  /* 1307 */ &&obj_finalize_STAMPWTAG_core__LocalEntryPoint_O,
  /* 1311 */ &&obj_finalize_STAMPWTAG_core__GlobalEntryPoint_O,
  /* 1315 */ &&obj_finalize_STAMPWTAG_core__HashTableBase_O,
  /* 1319 */ &&obj_finalize_STAMPWTAG_core__HashTable_O,
  /* 1323 */ &&obj_finalize_STAMPWTAG_core__HashTableEqualp_O,
  /* 1327 */ &&obj_finalize_STAMPWTAG_core__HashTableEq_O,
  /* 1331 */ &&obj_finalize_STAMPWTAG_core__HashTableEqual_O,
  /* 1335 */ &&obj_finalize_STAMPWTAG_core__HashTableCustom_O,
  /* 1339 */ &&obj_finalize_STAMPWTAG_core__HashTableEql_O,
  /* 1343 */ &&obj_finalize_STAMPWTAG_core__WeakKeyHashTable_O,
  /* 1347 */ &&obj_finalize_STAMPWTAG_core__FunctionDescription_O,
  /* 1351 */ &&obj_finalize_STAMPWTAG_llvmo__InsertPoint_O,
  /* 1355 */ &&obj_finalize_STAMPWTAG_core__Number_O,
  /* 1359 */ &&obj_finalize_STAMPWTAG_core__Real_O,
  /* 1363 */ &&obj_finalize_STAMPWTAG_core__Rational_O,
  /* 1367 */ &&obj_finalize_STAMPWTAG_core__Ratio_O,
  /* 1371 */ &&obj_finalize_STAMPWTAG_core__Integer_O,
  /* 1375 */ &&obj_finalize_STAMPWTAG_core__Bignum_O,
  /* 1379 */ &&obj_finalize_STAMPWTAG_core__Fixnum_dummy_O,
  /* 1383 */ &&obj_finalize_STAMPWTAG_core__Float_O,
  /* 1387 */ &&obj_finalize_STAMPWTAG_core__DoubleFloat_O,
  /* 1391 */ &&obj_finalize_STAMPWTAG_core__SingleFloat_dummy_O,
  /* 1395 */ &&obj_finalize_STAMPWTAG_core__LongFloat_O,
  /* 1399 */ &&obj_finalize_STAMPWTAG_core__ShortFloat_O,
  /* 1403 */ &&obj_finalize_STAMPWTAG_core__Complex_O,
  /* 1407 */ &&obj_finalize_STAMPWTAG_core__SourcePosInfo_O,
  /* 1411 */ &&obj_finalize_STAMPWTAG_core__Record_O,
  /* 1415 */ &&obj_finalize_STAMPWTAG_core__Frame_O,
  /* 1419 */ &&obj_finalize_STAMPWTAG_clbind__ClassRegistry_O,
  /* 1423 */ &&obj_finalize_STAMPWTAG_core__ClassHolder_O,
  /* 1426 */ &&obj_finalize_STAMPWTAG_core__WrappedPointer_O,
  /* 1431 */ &&obj_finalize_STAMPWTAG_core__SymbolToEnumConverter_O,
  /* 1435 */ &&obj_finalize_STAMPWTAG_llvmo__Attribute_O,
  /* 1439 */ &&obj_finalize_STAMPWTAG_core__ImmobileObject_O,
  /* 1443 */ &&obj_finalize_STAMPWTAG_core__Function_O,
  /* 1445 */ &&obj_finalize_STAMPWTAG_core__FuncallableInstance_O,
  /* 1451 */ &&obj_finalize_STAMPWTAG_core__Creator_O,
  /* 1455 */ &&obj_finalize_STAMPWTAG_core__FuncallableInstanceCreator_O,
  /* 1459 */ &&obj_finalize_STAMPWTAG_clbind__ConstructorCreator_O,
  /* 1463 */ &&obj_finalize_STAMPWTAG_clbind__DummyCreator_O,
  /* 1467 */ &&obj_finalize_STAMPWTAG_core__InstanceCreator_O,
  /* 1471 */ &&obj_finalize_STAMPWTAG_core__ClassRepCreator_O,
  /* 1475 */ &&obj_finalize_STAMPWTAG_core__DerivableCxxClassCreator_O,
  /* 1479 */ &&obj_finalize_STAMPWTAG_core__StandardClassCreator_O,
  /* 1483 */ &&obj_finalize_STAMPWTAG_core__SpecialForm_O,
  /* 1487 */ &&obj_finalize_STAMPWTAG_core__Closure_O,
  /* 1491 */ &&obj_finalize_STAMPWTAG_core__BuiltinClosure_O,
  /* 1495 */ &&obj_finalize_STAMPWTAG_core__TranslationFunctor_O,
  /* 1499 */ &&obj_finalize_STAMPWTAG_core__ClosureWithSlots_O,
  /* 1503 */ &&obj_finalize_STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O,
  /* 1507 */ &&obj_finalize_STAMPWTAG_core__WeakPointer_O,
  /* 1511 */ &&obj_finalize_STAMPWTAG_llvmo__DebugLoc_O,
  /* 1515 */ &&obj_finalize_STAMPWTAG_core__Array_O,
  /* 1519 */ &&obj_finalize_STAMPWTAG_core__MDArray_O,
  /* 1523 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_,
  /* 1527 */ &&obj_finalize_STAMPWTAG_core__MDArray_int16_t_O,
  /* 1531 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_,
  /* 1535 */ &&obj_finalize_STAMPWTAG_core__MDArray_int8_t_O,
  /* 1539 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_,
  /* 1543 */ &&obj_finalize_STAMPWTAG_core__MDArray_int32_t_O,
  /* 1547 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_,
  /* 1551 */ &&obj_finalize_STAMPWTAG_core__MDArray_byte4_t_O,
  /* 1555 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_,
  /* 1559 */ &&obj_finalize_STAMPWTAG_core__MDArray_float_O,
  /* 1563 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_,
  /* 1567 */ &&obj_finalize_STAMPWTAG_core__MDArray_size_t_O,
  /* 1571 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_,
  /* 1575 */ &&obj_finalize_STAMPWTAG_core__MDArray_byte8_t_O,
  /* 1579 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_,
  /* 1583 */ &&obj_finalize_STAMPWTAG_core__MDArray_int2_t_O,
  /* 1587 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_,
  /* 1591 */ &&obj_finalize_STAMPWTAG_core__MDArray_fixnum_O,
  /* 1595 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_,
  /* 1599 */ &&obj_finalize_STAMPWTAG_core__MDArrayBaseChar_O,
  /* 1603 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_,
  /* 1607 */ &&obj_finalize_STAMPWTAG_core__MDArray_byte64_t_O,
  /* 1611 */ &&obj_finalize_STAMPWTAG_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_,
  /* 1615 */ &&obj_finalize_STAMPWTAG_geom__MDArrayCoordinate_O,
  /* 1619 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_,
  /* 1623 */ &&obj_finalize_STAMPWTAG_core__MDArrayT_O,
  /* 1627 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_O,
  /* 1631 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_,
  /* 1635 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_int8_t_O,
  /* 1639 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_,
  /* 1643 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_byte32_t_O,
  /* 1647 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_,
  /* 1651 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_int2_t_O,
  /* 1655 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_,
  /* 1659 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_byte4_t_O,
  /* 1663 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_,
  /* 1667 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_int32_t_O,
  /* 1671 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_,
  /* 1675 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_float_O,
  /* 1679 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_,
  /* 1683 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_int16_t_O,
  /* 1687 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_,
  /* 1691 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_size_t_O,
  /* 1695 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_,
  /* 1699 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArrayCharacter_O,
  /* 1703 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_,
  /* 1707 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_byte2_t_O,
  /* 1711 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_,
  /* 1715 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_byte16_t_O,
  /* 1719 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_,
  /* 1723 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArrayBaseChar_O,
  /* 1727 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_,
  /* 1731 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_byte64_t_O,
  /* 1735 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_,
  /* 1739 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_double_O,
  /* 1743 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_,
  /* 1747 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArrayT_O,
  /* 1751 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_,
  /* 1755 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_int4_t_O,
  /* 1759 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_,
  /* 1763 */ &&obj_finalize_STAMPWTAG_geom__SimpleMDArrayCoordinate_O,
  /* 1767 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_,
  /* 1771 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_fixnum_O,
  /* 1775 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_,
  /* 1779 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArrayBit_O,
  /* 1783 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_,
  /* 1787 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_byte8_t_O,
  /* 1791 */ &&obj_finalize_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_,
  /* 1795 */ &&obj_finalize_STAMPWTAG_core__SimpleMDArray_int64_t_O,
  /* 1799 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_O,
  /* 1803 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_,
  /* 1807 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_double_O,
  /* 1811 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_,
  /* 1815 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_int8_t_O,
  /* 1819 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_,
  /* 1823 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_T_O,
  /* 1827 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_,
  /* 1831 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_int32_t_O,
  /* 1835 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_,
  /* 1839 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_byte16_t_O,
  /* 1843 */ &&obj_finalize_STAMPWTAG_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_,
  /* 1847 */ &&obj_finalize_STAMPWTAG_geom__ComplexVectorCoordinate_O,
  /* 1851 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_,
  /* 1855 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_byte4_t_O,
  /* 1859 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_,
  /* 1863 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_byte64_t_O,
  /* 1867 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_,
  /* 1871 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_int2_t_O,
  /* 1875 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_,
  /* 1879 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_float_O,
  /* 1883 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_,
  /* 1887 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_int16_t_O,
  /* 1891 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_,
  /* 1895 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_int4_t_O,
  /* 1899 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_,
  /* 1903 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_size_t_O,
  /* 1907 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_,
  /* 1911 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_byte2_t_O,
  /* 1915 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_,
  /* 1919 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_byte8_t_O,
  /* 1923 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_,
  /* 1927 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_byte32_t_O,
  /* 1931 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_,
  /* 1935 */ &&obj_finalize_STAMPWTAG_core__BitVectorNs_O,
  /* 1939 */ &&obj_finalize_STAMPWTAG_core__StrNs_O,
  /* 1943 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_,
  /* 1947 */ &&obj_finalize_STAMPWTAG_core__Str8Ns_O,
  /* 1951 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_,
  /* 1955 */ &&obj_finalize_STAMPWTAG_core__StrWNs_O,
  /* 1959 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_,
  /* 1963 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_fixnum_O,
  /* 1967 */ &&obj_finalize_STAMPWTAG_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_,
  /* 1971 */ &&obj_finalize_STAMPWTAG_core__ComplexVector_int64_t_O,
  /* 1975 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_,
  /* 1979 */ &&obj_finalize_STAMPWTAG_core__MDArray_int64_t_O,
  /* 1983 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_,
  /* 1987 */ &&obj_finalize_STAMPWTAG_core__MDArray_byte32_t_O,
  /* 1991 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_,
  /* 1995 */ &&obj_finalize_STAMPWTAG_core__MDArray_byte2_t_O,
  /* 1999 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_,
  /* 2003 */ &&obj_finalize_STAMPWTAG_core__MDArrayCharacter_O,
  /* 2007 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_,
  /* 2011 */ &&obj_finalize_STAMPWTAG_core__MDArrayBit_O,
  /* 2015 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_,
  /* 2019 */ &&obj_finalize_STAMPWTAG_core__MDArray_byte16_t_O,
  /* 2023 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_,
  /* 2027 */ &&obj_finalize_STAMPWTAG_core__MDArray_int4_t_O,
  /* 2031 */ &&obj_finalize_STAMPWTAG_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_,
  /* 2035 */ &&obj_finalize_STAMPWTAG_core__MDArray_double_O,
  /* 2039 */ &&obj_finalize_STAMPWTAG_core__AbstractSimpleVector_O,
  /* 2043 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_,
  /* 2047 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_byte32_t_O,
  /* 2051 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_,
  /* 2055 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_size_t_O,
  /* 2059 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_,
  /* 2063 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_double_O,
  /* 2067 */ &&obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_,
  /* 2071 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_int2_t_O,
  /* 2075 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_,
  /* 2079 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_int64_t_O,
  /* 2083 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_,
  /* 2087 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_int8_t_O,
  /* 2091 */ &&obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_,
  /* 2095 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_byte4_t_O,
  /* 2099 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_,
  /* 2103 */ &&obj_finalize_STAMPWTAG_geom__SimpleVectorCoordinate_O,
  /* 2107 */ &&obj_finalize_STAMPWTAG_core__SimpleString_O,
  /* 2111 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_,
  /* 2115 */ &&obj_finalize_STAMPWTAG_core__SimpleBaseString_O,
  /* 2119 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleCharacterString_O_unsigned_int_core__SimpleString_O_,
  /* 2123 */ &&obj_finalize_STAMPWTAG_core__SimpleCharacterString_O,
  /* 2127 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_,
  /* 2131 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_int16_t_O,
  /* 2135 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_,
  /* 2139 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_byte16_t_O,
  /* 2143 */ &&obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_,
  /* 2147 */ &&obj_finalize_STAMPWTAG_core__SimpleBitVector_O,
  /* 2151 */ &&obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_,
  /* 2155 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_int4_t_O,
  /* 2159 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_,
  /* 2163 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_byte64_t_O,
  /* 2167 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_,
  /* 2171 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_fixnum_O,
  /* 2175 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_,
  /* 2179 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_float_O,
  /* 2183 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_,
  /* 2187 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_O,
  /* 2191 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_,
  /* 2195 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_byte8_t_O,
  /* 2199 */ &&obj_finalize_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_,
  /* 2203 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_byte2_t_O,
  /* 2207 */ &&obj_finalize_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_,
  /* 2211 */ &&obj_finalize_STAMPWTAG_core__SimpleVector_int32_t_O,
  /* 2215 */ &&obj_finalize_STAMPWTAG_core__Character_dummy_O,
  /* 2219 */ &&obj_finalize_STAMPWTAG_llvmo__DataLayout_O,
  /* 2223 */ &&obj_finalize_STAMPWTAG_core__LoadTimeValues_O,
  /* 2227 */ &&obj_finalize_STAMPWTAG_core__Readtable_O,
  /* 2231 */ &&obj_finalize_STAMPWTAG_core__PosixTime_O,
  /* 2235 */ &&obj_finalize_STAMPWTAG_llvmo__StructLayout_O,
  /* 2239 */ &&obj_finalize_STAMPWTAG_core__ExternalObject_O,
  /* 2243 */ &&obj_finalize_STAMPWTAG_llvmo__Pass_O,
  /* 2247 */ &&obj_finalize_STAMPWTAG_llvmo__ModulePass_O,
  /* 2251 */ &&obj_finalize_STAMPWTAG_llvmo__ImmutablePass_O,
  /* 2255 */ &&obj_finalize_STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O,
  /* 2259 */ &&obj_finalize_STAMPWTAG_llvmo__FunctionPass_O,
  /* 2263 */ &&obj_finalize_STAMPWTAG_llvmo__MCSubtargetInfo_O,
  /* 2267 */ &&obj_finalize_STAMPWTAG_llvmo__TargetSubtargetInfo_O,
  /* 2271 */ &&obj_finalize_STAMPWTAG_llvmo__JITDylib_O,
  /* 2275 */ &&obj_finalize_STAMPWTAG_llvmo__DIContext_O,
  /* 2279 */ &&obj_finalize_STAMPWTAG_llvmo__IRBuilderBase_O,
  /* 2283 */ &&obj_finalize_STAMPWTAG_llvmo__IRBuilder_O,
  /* 2287 */ &&obj_finalize_STAMPWTAG_llvmo__APInt_O,
  /* 2291 */ &&obj_finalize_STAMPWTAG_llvmo__DIBuilder_O,
  /* 2295 */ &&obj_finalize_STAMPWTAG_llvmo__SectionedAddress_O,
  /* 2299 */ &&obj_finalize_STAMPWTAG_llvmo__EngineBuilder_O,
  /* 2303 */ &&obj_finalize_STAMPWTAG_llvmo__PassManagerBase_O,
  /* 2307 */ &&obj_finalize_STAMPWTAG_llvmo__PassManager_O,
  /* 2311 */ &&obj_finalize_STAMPWTAG_llvmo__FunctionPassManager_O,
  /* 2315 */ &&obj_finalize_STAMPWTAG_llvmo__Value_O,
  /* 2319 */ &&obj_finalize_STAMPWTAG_llvmo__User_O,
  /* 2323 */ &&obj_finalize_STAMPWTAG_llvmo__Instruction_O,
  /* 2327 */ &&obj_finalize_STAMPWTAG_llvmo__StoreInst_O,
  /* 2331 */ &&obj_finalize_STAMPWTAG_llvmo__UnreachableInst_O,
  /* 2335 */ &&obj_finalize_STAMPWTAG_llvmo__ResumeInst_O,
  /* 2339 */ &&obj_finalize_STAMPWTAG_llvmo__AtomicCmpXchgInst_O,
  /* 2343 */ &&obj_finalize_STAMPWTAG_llvmo__FenceInst_O,
  /* 2347 */ &&obj_finalize_STAMPWTAG_llvmo__CallBase_O,
  /* 2351 */ &&obj_finalize_STAMPWTAG_llvmo__CallInst_O,
  /* 2355 */ &&obj_finalize_STAMPWTAG_llvmo__InvokeInst_O,
  /* 2359 */ &&obj_finalize_STAMPWTAG_llvmo__BranchInst_O,
  /* 2363 */ &&obj_finalize_STAMPWTAG_llvmo__UnaryInstruction_O,
  /* 2367 */ &&obj_finalize_STAMPWTAG_llvmo__VAArgInst_O,
  /* 2371 */ &&obj_finalize_STAMPWTAG_llvmo__AllocaInst_O,
  /* 2375 */ &&obj_finalize_STAMPWTAG_llvmo__LoadInst_O,
  /* 2379 */ &&obj_finalize_STAMPWTAG_llvmo__SwitchInst_O,
  /* 2383 */ &&obj_finalize_STAMPWTAG_llvmo__AtomicRMWInst_O,
  /* 2387 */ &&obj_finalize_STAMPWTAG_llvmo__LandingPadInst_O,
  /* 2391 */ &&obj_finalize_STAMPWTAG_llvmo__ReturnInst_O,
  /* 2395 */ &&obj_finalize_STAMPWTAG_llvmo__PHINode_O,
  /* 2399 */ &&obj_finalize_STAMPWTAG_llvmo__IndirectBrInst_O,
  /* 2403 */ &&obj_finalize_STAMPWTAG_llvmo__Constant_O,
  /* 2407 */ &&obj_finalize_STAMPWTAG_llvmo__GlobalValue_O,
  /* 2411 */ &&obj_finalize_STAMPWTAG_llvmo__Function_O,
  /* 2415 */ &&obj_finalize_STAMPWTAG_llvmo__GlobalVariable_O,
  /* 2419 */ &&obj_finalize_STAMPWTAG_llvmo__BlockAddress_O,
  /* 2423 */ &&obj_finalize_STAMPWTAG_llvmo__ConstantStruct_O,
  /* 2427 */ &&obj_finalize_STAMPWTAG_llvmo__ConstantInt_O,
  /* 2431 */ &&obj_finalize_STAMPWTAG_llvmo__ConstantFP_O,
  /* 2435 */ &&obj_finalize_STAMPWTAG_llvmo__ConstantPointerNull_O,
  /* 2439 */ &&obj_finalize_STAMPWTAG_llvmo__ConstantDataSequential_O,
  /* 2443 */ &&obj_finalize_STAMPWTAG_llvmo__ConstantDataArray_O,
  /* 2447 */ &&obj_finalize_STAMPWTAG_llvmo__ConstantExpr_O,
  /* 2451 */ &&obj_finalize_STAMPWTAG_llvmo__UndefValue_O,
  /* 2455 */ &&obj_finalize_STAMPWTAG_llvmo__ConstantArray_O,
  /* 2459 */ &&obj_finalize_STAMPWTAG_llvmo__Argument_O,
  /* 2463 */ &&obj_finalize_STAMPWTAG_llvmo__BasicBlock_O,
  /* 2467 */ &&obj_finalize_STAMPWTAG_llvmo__MetadataAsValue_O,
  /* 2471 */ &&obj_finalize_STAMPWTAG_llvmo__ThreadSafeContext_O,
  /* 2475 */ &&obj_finalize_STAMPWTAG_llvmo__TargetMachine_O,
  /* 2479 */ &&obj_finalize_STAMPWTAG_llvmo__LLVMTargetMachine_O,
  /* 2483 */ &&obj_finalize_STAMPWTAG_llvmo__Triple_O,
  /* 2487 */ &&obj_finalize_STAMPWTAG_llvmo__LLVMContext_O,
  /* 2491 */ &&obj_finalize_STAMPWTAG_llvmo__PassManagerBuilder_O,
  /* 2495 */ &&obj_finalize_STAMPWTAG_llvmo__ExecutionEngine_O,
  /* 2499 */ &&obj_finalize_STAMPWTAG_llvmo__Type_O,
  /* 2503 */ &&obj_finalize_STAMPWTAG_llvmo__PointerType_O,
  /* 2507 */ &&obj_finalize_STAMPWTAG_llvmo__ArrayType_O,
  /* 2511 */ &&obj_finalize_STAMPWTAG_llvmo__FunctionType_O,
  /* 2515 */ &&obj_finalize_STAMPWTAG_llvmo__IntegerType_O,
  /* 2519 */ &&obj_finalize_STAMPWTAG_llvmo__VectorType_O,
  /* 2523 */ &&obj_finalize_STAMPWTAG_llvmo__StructType_O,
  /* 2527 */ &&obj_finalize_STAMPWTAG_llvmo__TargetPassConfig_O,
  /* 2531 */ &&obj_finalize_STAMPWTAG_llvmo__APFloat_O,
  /* 2535 */ &&obj_finalize_STAMPWTAG_llvmo__Metadata_O,
  /* 2539 */ &&obj_finalize_STAMPWTAG_llvmo__MDNode_O,
  /* 2543 */ &&obj_finalize_STAMPWTAG_llvmo__DILocation_O,
  /* 2547 */ &&obj_finalize_STAMPWTAG_llvmo__DINode_O,
  /* 2551 */ &&obj_finalize_STAMPWTAG_llvmo__DIVariable_O,
  /* 2555 */ &&obj_finalize_STAMPWTAG_llvmo__DILocalVariable_O,
  /* 2559 */ &&obj_finalize_STAMPWTAG_llvmo__DIScope_O,
  /* 2563 */ &&obj_finalize_STAMPWTAG_llvmo__DIFile_O,
  /* 2567 */ &&obj_finalize_STAMPWTAG_llvmo__DILocalScope_O,
  /* 2571 */ &&obj_finalize_STAMPWTAG_llvmo__DISubprogram_O,
  /* 2575 */ &&obj_finalize_STAMPWTAG_llvmo__DILexicalBlockBase_O,
  /* 2579 */ &&obj_finalize_STAMPWTAG_llvmo__DILexicalBlock_O,
  /* 2583 */ &&obj_finalize_STAMPWTAG_llvmo__DICompileUnit_O,
  /* 2587 */ &&obj_finalize_STAMPWTAG_llvmo__DIType_O,
  /* 2591 */ &&obj_finalize_STAMPWTAG_llvmo__DICompositeType_O,
  /* 2595 */ &&obj_finalize_STAMPWTAG_llvmo__DIDerivedType_O,
  /* 2599 */ &&obj_finalize_STAMPWTAG_llvmo__DISubroutineType_O,
  /* 2603 */ &&obj_finalize_STAMPWTAG_llvmo__DIBasicType_O,
  /* 2607 */ &&obj_finalize_STAMPWTAG_llvmo__DIExpression_O,
  /* 2611 */ &&obj_finalize_STAMPWTAG_llvmo__ValueAsMetadata_O,
  /* 2615 */ &&obj_finalize_STAMPWTAG_llvmo__MDString_O,
  /* 2619 */ &&obj_finalize_STAMPWTAG_core__Test_O,
  /* 2623 */ &&obj_finalize_STAMPWTAG_llvmo__NamedMDNode_O,
  /* 2627 */ &&obj_finalize_STAMPWTAG_llvmo__DWARFContext_O,
  /* 2631 */ &&obj_finalize_STAMPWTAG_llvmo__TargetOptions_O,
  /* 2635 */ &&obj_finalize_STAMPWTAG_llvmo__Module_O,
  /* 2639 */ &&obj_finalize_STAMPWTAG_llvmo__Target_O,
  /* 2643 */ &&obj_finalize_STAMPWTAG_llvmo__Linker_O,
  /* 2647 */ &&obj_finalize_STAMPWTAG_core__Rack_O,
  /* 2651 */ &&obj_finalize_STAMPWTAG_core__SmallMultimap_O,
  /* 2655 */ &&obj_finalize_STAMPWTAG_core__Scope_O,
  /* 2659 */ &&obj_finalize_STAMPWTAG_core__FileScope_O,
  /* 2663 */ &&obj_finalize_STAMPWTAG_core__Path_O,
  /* 2667 */ &&obj_finalize_STAMPWTAG_core__Pathname_O,
  /* 2671 */ &&obj_finalize_STAMPWTAG_core__LogicalPathname_O,
  /* 2675 */ &&obj_finalize_STAMPWTAG_core__Stream_O,
  /* 2679 */ &&obj_finalize_STAMPWTAG_core__AnsiStream_O,
  /* 2683 */ &&obj_finalize_STAMPWTAG_core__TwoWayStream_O,
  /* 2687 */ &&obj_finalize_STAMPWTAG_core__SynonymStream_O,
  /* 2691 */ &&obj_finalize_STAMPWTAG_core__StringStream_O,
  /* 2695 */ &&obj_finalize_STAMPWTAG_core__StringOutputStream_O,
  /* 2699 */ &&obj_finalize_STAMPWTAG_core__StringInputStream_O,
  /* 2703 */ &&obj_finalize_STAMPWTAG_core__EchoStream_O,
  /* 2707 */ &&obj_finalize_STAMPWTAG_core__ConcatenatedStream_O,
  /* 2711 */ &&obj_finalize_STAMPWTAG_core__FileStream_O,
  /* 2715 */ &&obj_finalize_STAMPWTAG_core__IOFileStream_O,
  /* 2719 */ &&obj_finalize_STAMPWTAG_core__IOStreamStream_O,
  /* 2723 */ &&obj_finalize_STAMPWTAG_core__BroadcastStream_O,
  /* 2727 */ &&obj_finalize_STAMPWTAG_core__Package_O,
  /* 2731 */ &&obj_finalize_STAMPWTAG_core__FileStatus_O,
  /* 2735 */ &&obj_finalize_STAMPWTAG_core__InvocationHistoryFrameIterator_O,
  /* 2739 */ &&obj_finalize_STAMPWTAG_core__DirectoryEntry_O,
  /* 2743 */ &&obj_finalize_STAMPWTAG_core__LightUserData_O,
  /* 2747 */ &&obj_finalize_STAMPWTAG_core__UserData_O,
  /* 2751 */ &&obj_finalize_STAMPWTAG_core__Cons_O,
  /* 2755 */ &&obj_finalize_STAMPWTAG_core__VaList_dummy_O,
  /* 2759 */ &&obj_finalize_STAMPWTAG_core__Lisp_O,
  /* 2763 */ &&obj_finalize_STAMPWTAG_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_,
  /* 2767 */ &&obj_finalize_STAMPWTAG_asttooling__AstVisitor_O,
  /* 2771 */ &&obj_finalize_STAMPWTAG_gctools__GCContainer,
  /* 2775 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__,
  /* 2779 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_,
  /* 2783 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__,
  /* 2787 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_,
  /* 2791 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__,
  /* 2795 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__,
  /* 2799 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_short_,
  /* 2803 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__,
  /* 2807 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_unsigned_long_,
  /* 2811 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___,
  /* 2815 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__,
  /* 2819 */ &&obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_,
  /* 2823 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_,
  /* 2827 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___,
  /* 2831 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_,
  /* 2835 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__,
  /* 2839 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_,
  /* 2843 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___,
  /* 2847 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__,
  /* 2851 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_unsigned_char_,
  /* 2855 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___,
  /* 2859 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__,
  /* 2863 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___,
  /* 2867 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_,
  /* 2871 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__,
  /* 2875 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_,
  /* 2879 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__,
  /* 2883 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__,
  /* 2887 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__,
  /* 2891 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___,
  /* 2895 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__,
  /* 2899 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_,
  /* 2903 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_,
  /* 2907 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_,
  /* 2911 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___,
  /* 2915 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__,
  /* 2919 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_Vector3_,
  /* 2923 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_,
  /* 2927 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__,
  /* 2931 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___,
  /* 2935 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_,
  /* 2939 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__,
  /* 2943 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___,
  /* 2947 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__,
  /* 2951 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__,
  /* 2955 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__,
  /* 2959 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__,
  /* 2963 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__,
  /* 2967 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___,
  /* 2971 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___,
  /* 2975 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__,
  /* 2979 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___,
  /* 2983 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__,
  /* 2987 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__,
  /* 2991 */ &&obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_,
  /* 2995 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__,
  /* 2999 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__,
  /* 3003 */ &&obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_,
  /* 3007 */ &&obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_,
  /* 3011 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__,
  /* 3015 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_int_,
  /* 3019 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___,
  /* 3023 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__,
  /* 3027 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__,
  /* 3031 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_float_,
  /* 3035 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__,
  /* 3039 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__,
  /* 3043 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__T_O___,
  /* 3047 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_,
  /* 3051 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___,
  /* 3055 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_unsigned_int_,
  /* 3059 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__,
  /* 3063 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__,
  /* 3067 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_,
  /* 3071 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__,
  /* 3075 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_double_,
  /* 3079 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__,
  /* 3083 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__,
  /* 3087 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___,
  /* 3091 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__,
  /* 3095 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_,
  /* 3099 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_,
  /* 3103 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_signed_char_,
  /* 3107 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_,
  /* 3111 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__,
  /* 3115 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___,
  /* 3119 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__,
  /* 3123 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__,
  /* 3127 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_,
  /* 3131 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_,
  /* 3135 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__,
  /* 3139 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__,
  /* 3143 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_,
  /* 3147 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__,
  /* 3151 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__,
  /* 3155 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___,
  /* 3159 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__,
  /* 3163 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_double_,
  /* 3167 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___,
  /* 3171 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___,
  /* 3175 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__,
  /* 3179 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__,
  /* 3183 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_,
  /* 3187 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__,
  /* 3191 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__,
  /* 3195 */ &&obj_finalize_STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_,
  /* 3199 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_,
  /* 3203 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_,
  /* 3207 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___,
  /* 3211 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___,
  /* 3215 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__,
  /* 3219 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__,
  /* 3223 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___,
  /* 3227 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_,
  /* 3231 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__,
  /* 3235 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_unsigned_long_,
  /* 3239 */ &&obj_finalize_STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_,
  /* 3243 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_,
  /* 3247 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___,
  /* 3251 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_,
  /* 3255 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__,
  /* 3259 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__,
  /* 3263 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_,
  /* 3267 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___,
  /* 3271 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_int_,
  /* 3275 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__,
  /* 3279 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_,
  /* 3283 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_,
  /* 3287 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_long_,
  /* 3291 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__,
  /* 3295 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_,
  /* 3299 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___,
  /* 3303 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__,
  /* 3307 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__,
  /* 3311 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_unsigned_int_,
  /* 3315 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_,
  /* 3319 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__,
  /* 3323 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__,
  /* 3327 */ &&obj_finalize_STAMPWTAG_gctools__GCArray_moveable_unsigned_short_,
  /* 3331 */ &&obj_finalize_STAMPWTAG_gctools__GCVector_moveable_float_,
  /* 3335 */ &&obj_finalize_STAMPWTAG_clang__FrontendAction,
  /* 3339 */ &&obj_finalize_STAMPWTAG_clang__ASTFrontendAction,
  /* 3343 */ &&obj_finalize_STAMPWTAG_clang__SyntaxOnlyAction,
  /* 3347 */ &&obj_finalize_STAMPWTAG_clang__tooling__ToolAction,
  /* 3351 */ &&obj_finalize_STAMPWTAG_clang__tooling__FrontendActionFactory,
  /* 3355 */ &&obj_finalize_STAMPWTAG_clang__ast_matchers__MatchFinder__MatchCallback,
   NULL
};
#endif // defined(GC_OBJ_FINALIZE_TABLE)
#if defined(GC_OBJ_DEALLOCATOR)
obj_deallocate_unmanaged_instance_STAMPWTAG_core__T_O:
{
     // stamp value 7
    core::T_O* obj_gc_safe = reinterpret_cast<core::T_O*>(client);
    GC<core::T_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Unused_dummy_O:
{
     // stamp value 11
    core::Unused_dummy_O* obj_gc_safe = reinterpret_cast<core::Unused_dummy_O*>(client);
    GC<core::Unused_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__General_O:
{
     // stamp value 15
    core::General_O* obj_gc_safe = reinterpret_cast<core::General_O*>(client);
    GC<core::General_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__LambdaListHandler_O:
{
     // stamp value 19
    core::LambdaListHandler_O* obj_gc_safe = reinterpret_cast<core::LambdaListHandler_O*>(client);
    GC<core::LambdaListHandler_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__AttributeSet_O:
{
     // stamp value 23
    llvmo::AttributeSet_O* obj_gc_safe = reinterpret_cast<llvmo::AttributeSet_O*>(client);
    GC<llvmo::AttributeSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Pointer_O:
{
     // stamp value 27
    core::Pointer_O* obj_gc_safe = reinterpret_cast<core::Pointer_O*>(client);
    GC<core::Pointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clasp_ffi__ForeignData_O:
{
     // stamp value 31
    clasp_ffi::ForeignData_O* obj_gc_safe = reinterpret_cast<clasp_ffi::ForeignData_O*>(client);
    GC<clasp_ffi::ForeignData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__CxxObject_O:
{
     // stamp value 35
    core::CxxObject_O* obj_gc_safe = reinterpret_cast<core::CxxObject_O*>(client);
    GC<core::CxxObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__SourceLocation_O:
{
     // stamp value 39
    asttooling::SourceLocation_O* obj_gc_safe = reinterpret_cast<asttooling::SourceLocation_O*>(client);
    GC<asttooling::SourceLocation_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__ChiList_O:
{
     // stamp value 43
    kinematics::ChiList_O* obj_gc_safe = reinterpret_cast<kinematics::ChiList_O*>(client);
    GC<kinematics::ChiList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__NumericalFunction_O:
{
     // stamp value 47
    chem::NumericalFunction_O* obj_gc_safe = reinterpret_cast<chem::NumericalFunction_O*>(client);
    GC<chem::NumericalFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__FoldTree_O:
{
     // stamp value 51
    kinematics::FoldTree_O* obj_gc_safe = reinterpret_cast<kinematics::FoldTree_O*>(client);
    GC<kinematics::FoldTree_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RotamerSetBase_O:
{
     // stamp value 55
    kinematics::RotamerSetBase_O* obj_gc_safe = reinterpret_cast<kinematics::RotamerSetBase_O*>(client);
    GC<kinematics::RotamerSetBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BackboneDependentRotamerSet_O:
{
     // stamp value 59
    kinematics::BackboneDependentRotamerSet_O* obj_gc_safe = reinterpret_cast<kinematics::BackboneDependentRotamerSet_O*>(client);
    GC<kinematics::BackboneDependentRotamerSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RotamerSet_O:
{
     // stamp value 63
    kinematics::RotamerSet_O* obj_gc_safe = reinterpret_cast<kinematics::RotamerSet_O*>(client);
    GC<kinematics::RotamerSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyComponent_O:
{
     // stamp value 67
    chem::EnergyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyComponent_O*>(client);
    GC<chem::EnergyComponent_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyStretch_O:
{
     // stamp value 71
    chem::EnergyStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergyStretch_O*>(client);
    GC<chem::EnergyStretch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyRigidBodyComponent_O:
{
     // stamp value 75
    chem::EnergyRigidBodyComponent_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyComponent_O*>(client);
    GC<chem::EnergyRigidBodyComponent_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyRigidBodyStaple_O:
{
     // stamp value 79
    chem::EnergyRigidBodyStaple_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyStaple_O*>(client);
    GC<chem::EnergyRigidBodyStaple_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyRigidBodyNonbond_O:
{
     // stamp value 83
    chem::EnergyRigidBodyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyRigidBodyNonbond_O*>(client);
    GC<chem::EnergyRigidBodyNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyOutOfZPlane_O:
{
     // stamp value 87
    chem::EnergyOutOfZPlane_O* obj_gc_safe = reinterpret_cast<chem::EnergyOutOfZPlane_O*>(client);
    GC<chem::EnergyOutOfZPlane_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergySketchNonbond_O:
{
     // stamp value 91
    chem::EnergySketchNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergySketchNonbond_O*>(client);
    GC<chem::EnergySketchNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyDihedralRestraint_O:
{
     // stamp value 95
    chem::EnergyDihedralRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyDihedralRestraint_O*>(client);
    GC<chem::EnergyDihedralRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyChiralRestraint_O:
{
     // stamp value 99
    chem::EnergyChiralRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyChiralRestraint_O*>(client);
    GC<chem::EnergyChiralRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyPointToLineRestraint_O:
{
     // stamp value 103
    chem::EnergyPointToLineRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyPointToLineRestraint_O*>(client);
    GC<chem::EnergyPointToLineRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyDihedral_O:
{
     // stamp value 107
    chem::EnergyDihedral_O* obj_gc_safe = reinterpret_cast<chem::EnergyDihedral_O*>(client);
    GC<chem::EnergyDihedral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyNonbond_O:
{
     // stamp value 111
    chem::EnergyNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyNonbond_O*>(client);
    GC<chem::EnergyNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O:
{
     // stamp value 115
    chem::EnergyPeriodicBoundaryConditionsNonbond_O* obj_gc_safe = reinterpret_cast<chem::EnergyPeriodicBoundaryConditionsNonbond_O*>(client);
    GC<chem::EnergyPeriodicBoundaryConditionsNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyAnchorRestraint_O:
{
     // stamp value 119
    chem::EnergyAnchorRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyAnchorRestraint_O*>(client);
    GC<chem::EnergyAnchorRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyFixedNonbondRestraint_O:
{
     // stamp value 123
    chem::EnergyFixedNonbondRestraint_O* obj_gc_safe = reinterpret_cast<chem::EnergyFixedNonbondRestraint_O*>(client);
    GC<chem::EnergyFixedNonbondRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergySketchStretch_O:
{
     // stamp value 127
    chem::EnergySketchStretch_O* obj_gc_safe = reinterpret_cast<chem::EnergySketchStretch_O*>(client);
    GC<chem::EnergySketchStretch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyAngle_O:
{
     // stamp value 131
    chem::EnergyAngle_O* obj_gc_safe = reinterpret_cast<chem::EnergyAngle_O*>(client);
    GC<chem::EnergyAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Matter_O:
{
     // stamp value 135
    chem::Matter_O* obj_gc_safe = reinterpret_cast<chem::Matter_O*>(client);
    GC<chem::Matter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Aggregate_O:
{
     // stamp value 139
    chem::Aggregate_O* obj_gc_safe = reinterpret_cast<chem::Aggregate_O*>(client);
    GC<chem::Aggregate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Atom_O:
{
     // stamp value 143
    chem::Atom_O* obj_gc_safe = reinterpret_cast<chem::Atom_O*>(client);
    GC<chem::Atom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__VirtualAtom_O:
{
     // stamp value 147
    chem::VirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::VirtualAtom_O*>(client);
    GC<chem::VirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Residue_O:
{
     // stamp value 151
    chem::Residue_O* obj_gc_safe = reinterpret_cast<chem::Residue_O*>(client);
    GC<chem::Residue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Molecule_O:
{
     // stamp value 155
    chem::Molecule_O* obj_gc_safe = reinterpret_cast<chem::Molecule_O*>(client);
    GC<chem::Molecule_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PdbWriter_O:
{
     // stamp value 159
    chem::PdbWriter_O* obj_gc_safe = reinterpret_cast<chem::PdbWriter_O*>(client);
    GC<chem::PdbWriter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__TrajectoryFrame_O:
{
     // stamp value 163
    chem::TrajectoryFrame_O* obj_gc_safe = reinterpret_cast<chem::TrajectoryFrame_O*>(client);
    GC<chem::TrajectoryFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MDBuilder_O:
{
     // stamp value 167
    llvmo::MDBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::MDBuilder_O*>(client);
    GC<llvmo::MDBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Topology_O:
{
     // stamp value 171
    chem::Topology_O* obj_gc_safe = reinterpret_cast<chem::Topology_O*>(client);
    GC<chem::Topology_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomTable_O:
{
     // stamp value 175
    chem::AtomTable_O* obj_gc_safe = reinterpret_cast<chem::AtomTable_O*>(client);
    GC<chem::AtomTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CipPrioritizer_O:
{
     // stamp value 179
    chem::CipPrioritizer_O* obj_gc_safe = reinterpret_cast<chem::CipPrioritizer_O*>(client);
    GC<chem::CipPrioritizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__IndexedObjectBag_O:
{
     // stamp value 183
    adapt::IndexedObjectBag_O* obj_gc_safe = reinterpret_cast<adapt::IndexedObjectBag_O*>(client);
    GC<adapt::IndexedObjectBag_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__VirtualSphere_O:
{
     // stamp value 187
    chem::VirtualSphere_O* obj_gc_safe = reinterpret_cast<chem::VirtualSphere_O*>(client);
    GC<chem::VirtualSphere_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__TwisterDriver_O:
{
     // stamp value 191
    chem::TwisterDriver_O* obj_gc_safe = reinterpret_cast<chem::TwisterDriver_O*>(client);
    GC<chem::TwisterDriver_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RingFinder_O:
{
     // stamp value 195
    chem::RingFinder_O* obj_gc_safe = reinterpret_cast<chem::RingFinder_O*>(client);
    GC<chem::RingFinder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FunctionCallee_O:
{
     // stamp value 199
    llvmo::FunctionCallee_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionCallee_O*>(client);
    GC<llvmo::FunctionCallee_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__Joint_O:
{
     // stamp value 203
    kinematics::Joint_O* obj_gc_safe = reinterpret_cast<kinematics::Joint_O*>(client);
    GC<kinematics::Joint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__JumpJoint_O:
{
     // stamp value 207
    kinematics::JumpJoint_O* obj_gc_safe = reinterpret_cast<kinematics::JumpJoint_O*>(client);
    GC<kinematics::JumpJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__OriginJumpJoint_O:
{
     // stamp value 211
    kinematics::OriginJumpJoint_O* obj_gc_safe = reinterpret_cast<kinematics::OriginJumpJoint_O*>(client);
    GC<kinematics::OriginJumpJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BondedJoint_O:
{
     // stamp value 215
    kinematics::BondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::BondedJoint_O*>(client);
    GC<kinematics::BondedJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RootBondedJoint_O:
{
     // stamp value 219
    kinematics::RootBondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::RootBondedJoint_O*>(client);
    GC<kinematics::RootBondedJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__DelayedBondedJoint_O:
{
     // stamp value 223
    kinematics::DelayedBondedJoint_O* obj_gc_safe = reinterpret_cast<kinematics::DelayedBondedJoint_O*>(client);
    GC<kinematics::DelayedBondedJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SearchStatistics_O:
{
     // stamp value 227
    chem::SearchStatistics_O* obj_gc_safe = reinterpret_cast<chem::SearchStatistics_O*>(client);
    GC<chem::SearchStatistics_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PdbMonomerDatabase_O:
{
     // stamp value 231
    chem::PdbMonomerDatabase_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerDatabase_O*>(client);
    GC<chem::PdbMonomerDatabase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Twister_O:
{
     // stamp value 235
    chem::Twister_O* obj_gc_safe = reinterpret_cast<chem::Twister_O*>(client);
    GC<chem::Twister_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MonomerCoordinates_O:
{
     // stamp value 239
    chem::MonomerCoordinates_O* obj_gc_safe = reinterpret_cast<chem::MonomerCoordinates_O*>(client);
    GC<chem::MonomerCoordinates_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFParameter_O:
{
     // stamp value 243
    chem::FFParameter_O* obj_gc_safe = reinterpret_cast<chem::FFParameter_O*>(client);
    GC<chem::FFParameter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFVdw_O:
{
     // stamp value 247
    chem::FFVdw_O* obj_gc_safe = reinterpret_cast<chem::FFVdw_O*>(client);
    GC<chem::FFVdw_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFStretch_O:
{
     // stamp value 251
    chem::FFStretch_O* obj_gc_safe = reinterpret_cast<chem::FFStretch_O*>(client);
    GC<chem::FFStretch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFPtor_O:
{
     // stamp value 255
    chem::FFPtor_O* obj_gc_safe = reinterpret_cast<chem::FFPtor_O*>(client);
    GC<chem::FFPtor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFItor_O:
{
     // stamp value 259
    chem::FFItor_O* obj_gc_safe = reinterpret_cast<chem::FFItor_O*>(client);
    GC<chem::FFItor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFNonbond_O:
{
     // stamp value 263
    chem::FFNonbond_O* obj_gc_safe = reinterpret_cast<chem::FFNonbond_O*>(client);
    GC<chem::FFNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFAngle_O:
{
     // stamp value 267
    chem::FFAngle_O* obj_gc_safe = reinterpret_cast<chem::FFAngle_O*>(client);
    GC<chem::FFAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Restraint_O:
{
     // stamp value 271
    chem::Restraint_O* obj_gc_safe = reinterpret_cast<chem::Restraint_O*>(client);
    GC<chem::Restraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintChiral_O:
{
     // stamp value 275
    chem::RestraintChiral_O* obj_gc_safe = reinterpret_cast<chem::RestraintChiral_O*>(client);
    GC<chem::RestraintChiral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintDistance_O:
{
     // stamp value 279
    chem::RestraintDistance_O* obj_gc_safe = reinterpret_cast<chem::RestraintDistance_O*>(client);
    GC<chem::RestraintDistance_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintAngle_O:
{
     // stamp value 283
    chem::RestraintAngle_O* obj_gc_safe = reinterpret_cast<chem::RestraintAngle_O*>(client);
    GC<chem::RestraintAngle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintAnchor_O:
{
     // stamp value 287
    chem::RestraintAnchor_O* obj_gc_safe = reinterpret_cast<chem::RestraintAnchor_O*>(client);
    GC<chem::RestraintAnchor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintFixedNonbond_O:
{
     // stamp value 291
    chem::RestraintFixedNonbond_O* obj_gc_safe = reinterpret_cast<chem::RestraintFixedNonbond_O*>(client);
    GC<chem::RestraintFixedNonbond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintDihedral_O:
{
     // stamp value 295
    chem::RestraintDihedral_O* obj_gc_safe = reinterpret_cast<chem::RestraintDihedral_O*>(client);
    GC<chem::RestraintDihedral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomIndexer_O:
{
     // stamp value 299
    chem::AtomIndexer_O* obj_gc_safe = reinterpret_cast<chem::AtomIndexer_O*>(client);
    GC<chem::AtomIndexer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__BoundingCuboid_O:
{
     // stamp value 303
    geom::BoundingCuboid_O* obj_gc_safe = reinterpret_cast<geom::BoundingCuboid_O*>(client);
    GC<geom::BoundingCuboid_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoInformation_O:
{
     // stamp value 307
    chem::StereoInformation_O* obj_gc_safe = reinterpret_cast<chem::StereoInformation_O*>(client);
    GC<chem::StereoInformation_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AddIonOctree_O:
{
     // stamp value 311
    chem::AddIonOctree_O* obj_gc_safe = reinterpret_cast<chem::AddIonOctree_O*>(client);
    GC<chem::AddIonOctree_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CDNode_O:
{
     // stamp value 315
    chem::CDNode_O* obj_gc_safe = reinterpret_cast<chem::CDNode_O*>(client);
    GC<chem::CDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OligomerPart_Base_O:
{
     // stamp value 319
    chem::OligomerPart_Base_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Base_O*>(client);
    GC<chem::OligomerPart_Base_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OligomerPart_Link_O:
{
     // stamp value 323
    chem::OligomerPart_Link_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Link_O*>(client);
    GC<chem::OligomerPart_Link_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OligomerPart_Monomer_O:
{
     // stamp value 327
    chem::OligomerPart_Monomer_O* obj_gc_safe = reinterpret_cast<chem::OligomerPart_Monomer_O*>(client);
    GC<chem::OligomerPart_Monomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BondId_O:
{
     // stamp value 331
    kinematics::BondId_O* obj_gc_safe = reinterpret_cast<kinematics::BondId_O*>(client);
    GC<kinematics::BondId_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CoordinateSystem_O:
{
     // stamp value 335
    chem::CoordinateSystem_O* obj_gc_safe = reinterpret_cast<chem::CoordinateSystem_O*>(client);
    GC<chem::CoordinateSystem_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Bond_O:
{
     // stamp value 339
    chem::Bond_O* obj_gc_safe = reinterpret_cast<chem::Bond_O*>(client);
    GC<chem::Bond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CandoDatabase_O:
{
     // stamp value 343
    chem::CandoDatabase_O* obj_gc_safe = reinterpret_cast<chem::CandoDatabase_O*>(client);
    GC<chem::CandoDatabase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AbstractLargeSquareMatrix_O:
{
     // stamp value 347
    chem::AbstractLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::AbstractLargeSquareMatrix_O*>(client);
    GC<chem::AbstractLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SparseLargeSquareMatrix_O:
{
     // stamp value 351
    chem::SparseLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::SparseLargeSquareMatrix_O*>(client);
    GC<chem::SparseLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FullLargeSquareMatrix_O:
{
     // stamp value 355
    chem::FullLargeSquareMatrix_O* obj_gc_safe = reinterpret_cast<chem::FullLargeSquareMatrix_O*>(client);
    GC<chem::FullLargeSquareMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFBaseDb_O:
{
     // stamp value 359
    chem::FFBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFBaseDb_O*>(client);
    GC<chem::FFBaseDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFParameterBaseDb_O:
{
     // stamp value 363
    chem::FFParameterBaseDb_O* obj_gc_safe = reinterpret_cast<chem::FFParameterBaseDb_O*>(client);
    GC<chem::FFParameterBaseDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFItorDb_O:
{
     // stamp value 367
    chem::FFItorDb_O* obj_gc_safe = reinterpret_cast<chem::FFItorDb_O*>(client);
    GC<chem::FFItorDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFStretchDb_O:
{
     // stamp value 371
    chem::FFStretchDb_O* obj_gc_safe = reinterpret_cast<chem::FFStretchDb_O*>(client);
    GC<chem::FFStretchDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFAngleDb_O:
{
     // stamp value 375
    chem::FFAngleDb_O* obj_gc_safe = reinterpret_cast<chem::FFAngleDb_O*>(client);
    GC<chem::FFAngleDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFNonbondDb_O:
{
     // stamp value 379
    chem::FFNonbondDb_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondDb_O*>(client);
    GC<chem::FFNonbondDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFPtorDb_O:
{
     // stamp value 383
    chem::FFPtorDb_O* obj_gc_safe = reinterpret_cast<chem::FFPtorDb_O*>(client);
    GC<chem::FFPtorDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFVdwDb_O:
{
     // stamp value 387
    chem::FFVdwDb_O* obj_gc_safe = reinterpret_cast<chem::FFVdwDb_O*>(client);
    GC<chem::FFVdwDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFTypesDb_O:
{
     // stamp value 391
    chem::FFTypesDb_O* obj_gc_safe = reinterpret_cast<chem::FFTypesDb_O*>(client);
    GC<chem::FFTypesDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LibraryBase_O:
{
     // stamp value 395
    llvmo::LibraryBase_O* obj_gc_safe = reinterpret_cast<llvmo::LibraryBase_O*>(client);
    GC<llvmo::LibraryBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ObjectFile_O:
{
     // stamp value 399
    llvmo::ObjectFile_O* obj_gc_safe = reinterpret_cast<llvmo::ObjectFile_O*>(client);
    GC<llvmo::ObjectFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LibraryFile_O:
{
     // stamp value 403
    llvmo::LibraryFile_O* obj_gc_safe = reinterpret_cast<llvmo::LibraryFile_O*>(client);
    GC<llvmo::LibraryFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AGVertex_O:
{
     // stamp value 407
    chem::AGVertex_O* obj_gc_safe = reinterpret_cast<chem::AGVertex_O*>(client);
    GC<chem::AGVertex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ForceField_O:
{
     // stamp value 411
    chem::ForceField_O* obj_gc_safe = reinterpret_cast<chem::ForceField_O*>(client);
    GC<chem::ForceField_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomReferenceBase_O:
{
     // stamp value 415
    chem::AtomReferenceBase_O* obj_gc_safe = reinterpret_cast<chem::AtomReferenceBase_O*>(client);
    GC<chem::AtomReferenceBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomReference_O:
{
     // stamp value 419
    chem::AtomReference_O* obj_gc_safe = reinterpret_cast<chem::AtomReference_O*>(client);
    GC<chem::AtomReference_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ScoringFunction_O:
{
     // stamp value 423
    chem::ScoringFunction_O* obj_gc_safe = reinterpret_cast<chem::ScoringFunction_O*>(client);
    GC<chem::ScoringFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyFunction_O:
{
     // stamp value 427
    chem::EnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::EnergyFunction_O*>(client);
    GC<chem::EnergyFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SketchFunction_O:
{
     // stamp value 431
    chem::SketchFunction_O* obj_gc_safe = reinterpret_cast<chem::SketchFunction_O*>(client);
    GC<chem::SketchFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RigidBodyEnergyFunction_O:
{
     // stamp value 435
    chem::RigidBodyEnergyFunction_O* obj_gc_safe = reinterpret_cast<chem::RigidBodyEnergyFunction_O*>(client);
    GC<chem::RigidBodyEnergyFunction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__WildElementDict_O:
{
     // stamp value 439
    chem::WildElementDict_O* obj_gc_safe = reinterpret_cast<chem::WildElementDict_O*>(client);
    GC<chem::WildElementDict_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__QualType_O:
{
     // stamp value 443
    asttooling::QualType_O* obj_gc_safe = reinterpret_cast<asttooling::QualType_O*>(client);
    GC<asttooling::QualType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DITypeRefArray_O:
{
     // stamp value 447
    llvmo::DITypeRefArray_O* obj_gc_safe = reinterpret_cast<llvmo::DITypeRefArray_O*>(client);
    GC<llvmo::DITypeRefArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__OVector3_O:
{
     // stamp value 451
    geom::OVector3_O* obj_gc_safe = reinterpret_cast<geom::OVector3_O*>(client);
    GC<geom::OVector3_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__OVector2_O:
{
     // stamp value 455
    geom::OVector2_O* obj_gc_safe = reinterpret_cast<geom::OVector2_O*>(client);
    GC<geom::OVector2_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Structure_Old_ListEntry_O:
{
     // stamp value 459
    chem::Structure_Old_ListEntry_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_ListEntry_O*>(client);
    GC<chem::Structure_Old_ListEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFTypeRule_O:
{
     // stamp value 463
    chem::FFTypeRule_O* obj_gc_safe = reinterpret_cast<chem::FFTypeRule_O*>(client);
    GC<chem::FFTypeRule_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__QDomNode_O:
{
     // stamp value 467
    adapt::QDomNode_O* obj_gc_safe = reinterpret_cast<adapt::QDomNode_O*>(client);
    GC<adapt::QDomNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_mp__SharedMutex_O:
{
     // stamp value 471
    mp::SharedMutex_O* obj_gc_safe = reinterpret_cast<mp::SharedMutex_O*>(client);
    GC<mp::SharedMutex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConstitutionAtom_O:
{
     // stamp value 475
    chem::ConstitutionAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtom_O*>(client);
    GC<chem::ConstitutionAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConstitutionVirtualAtom_O:
{
     // stamp value 479
    chem::ConstitutionVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionVirtualAtom_O*>(client);
    GC<chem::ConstitutionVirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Smirks_O:
{
     // stamp value 483
    chem::Smirks_O* obj_gc_safe = reinterpret_cast<chem::Smirks_O*>(client);
    GC<chem::Smirks_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ReadAmberParameters_O:
{
     // stamp value 487
    chem::ReadAmberParameters_O* obj_gc_safe = reinterpret_cast<chem::ReadAmberParameters_O*>(client);
    GC<chem::ReadAmberParameters_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AGEdge_O:
{
     // stamp value 491
    chem::AGEdge_O* obj_gc_safe = reinterpret_cast<chem::AGEdge_O*>(client);
    GC<chem::AGEdge_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Entity_O:
{
     // stamp value 495
    chem::Entity_O* obj_gc_safe = reinterpret_cast<chem::Entity_O*>(client);
    GC<chem::Entity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Stereoisomer_O:
{
     // stamp value 499
    chem::Stereoisomer_O* obj_gc_safe = reinterpret_cast<chem::Stereoisomer_O*>(client);
    GC<chem::Stereoisomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EntityNameSetBase_O:
{
     // stamp value 503
    chem::EntityNameSetBase_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetBase_O*>(client);
    GC<chem::EntityNameSetBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EntityNameSetWithCap_O:
{
     // stamp value 507
    chem::EntityNameSetWithCap_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSetWithCap_O*>(client);
    GC<chem::EntityNameSetWithCap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Mate_O:
{
     // stamp value 511
    chem::Mate_O* obj_gc_safe = reinterpret_cast<chem::Mate_O*>(client);
    GC<chem::Mate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RingClosingMate_O:
{
     // stamp value 515
    chem::RingClosingMate_O* obj_gc_safe = reinterpret_cast<chem::RingClosingMate_O*>(client);
    GC<chem::RingClosingMate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EntityNameSet_O:
{
     // stamp value 519
    chem::EntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::EntityNameSet_O*>(client);
    GC<chem::EntityNameSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RepresentedEntityNameSet_O:
{
     // stamp value 523
    chem::RepresentedEntityNameSet_O* obj_gc_safe = reinterpret_cast<chem::RepresentedEntityNameSet_O*>(client);
    GC<chem::RepresentedEntityNameSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MonomerPack_O:
{
     // stamp value 527
    chem::MonomerPack_O* obj_gc_safe = reinterpret_cast<chem::MonomerPack_O*>(client);
    GC<chem::MonomerPack_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Constitution_O:
{
     // stamp value 531
    chem::Constitution_O* obj_gc_safe = reinterpret_cast<chem::Constitution_O*>(client);
    GC<chem::Constitution_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Monomer_O:
{
     // stamp value 535
    chem::Monomer_O* obj_gc_safe = reinterpret_cast<chem::Monomer_O*>(client);
    GC<chem::Monomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OctNode_O:
{
     // stamp value 539
    chem::OctNode_O* obj_gc_safe = reinterpret_cast<chem::OctNode_O*>(client);
    GC<chem::OctNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Structure_Old_List_O:
{
     // stamp value 543
    chem::Structure_Old_List_O* obj_gc_safe = reinterpret_cast<chem::Structure_Old_List_O*>(client);
    GC<chem::Structure_Old_List_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O:
{
     // stamp value 547
    kinematics::BackboneDependentRotamerLibrary_O* obj_gc_safe = reinterpret_cast<kinematics::BackboneDependentRotamerLibrary_O*>(client);
    GC<kinematics::BackboneDependentRotamerLibrary_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ReportBase_O:
{
     // stamp value 551
    chem::ReportBase_O* obj_gc_safe = reinterpret_cast<chem::ReportBase_O*>(client);
    GC<chem::ReportBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StepReport_O:
{
     // stamp value 555
    chem::StepReport_O* obj_gc_safe = reinterpret_cast<chem::StepReport_O*>(client);
    GC<chem::StepReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MessageReport_O:
{
     // stamp value 559
    chem::MessageReport_O* obj_gc_safe = reinterpret_cast<chem::MessageReport_O*>(client);
    GC<chem::MessageReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ForceMatchReport_O:
{
     // stamp value 563
    chem::ForceMatchReport_O* obj_gc_safe = reinterpret_cast<chem::ForceMatchReport_O*>(client);
    GC<chem::ForceMatchReport_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemDraw_O:
{
     // stamp value 567
    chem::ChemDraw_O* obj_gc_safe = reinterpret_cast<chem::ChemDraw_O*>(client);
    GC<chem::ChemDraw_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixInternal_O:
{
     // stamp value 571
    chem::ZMatrixInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixInternal_O*>(client);
    GC<chem::ZMatrixInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixBondInternal_O:
{
     // stamp value 575
    chem::ZMatrixBondInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixBondInternal_O*>(client);
    GC<chem::ZMatrixBondInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixDihedralInternal_O:
{
     // stamp value 579
    chem::ZMatrixDihedralInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixDihedralInternal_O*>(client);
    GC<chem::ZMatrixDihedralInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixAngleInternal_O:
{
     // stamp value 583
    chem::ZMatrixAngleInternal_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixAngleInternal_O*>(client);
    GC<chem::ZMatrixAngleInternal_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoisomerAtom_O:
{
     // stamp value 587
    chem::StereoisomerAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtom_O*>(client);
    GC<chem::StereoisomerAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoisomerVirtualAtom_O:
{
     // stamp value 591
    chem::StereoisomerVirtualAtom_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerVirtualAtom_O*>(client);
    GC<chem::StereoisomerVirtualAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrix_O:
{
     // stamp value 595
    chem::ZMatrix_O* obj_gc_safe = reinterpret_cast<chem::ZMatrix_O*>(client);
    GC<chem::ZMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Isoname_O:
{
     // stamp value 599
    chem::Isoname_O* obj_gc_safe = reinterpret_cast<chem::Isoname_O*>(client);
    GC<chem::Isoname_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PathMessage_O:
{
     // stamp value 603
    chem::PathMessage_O* obj_gc_safe = reinterpret_cast<chem::PathMessage_O*>(client);
    GC<chem::PathMessage_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__MonomerId_O:
{
     // stamp value 607
    kinematics::MonomerId_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerId_O*>(client);
    GC<kinematics::MonomerId_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__JointTemplate_O:
{
     // stamp value 611
    kinematics::JointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::JointTemplate_O*>(client);
    GC<kinematics::JointTemplate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BondedJointTemplate_O:
{
     // stamp value 615
    kinematics::BondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::BondedJointTemplate_O*>(client);
    GC<kinematics::BondedJointTemplate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__DelayedBondedJointTemplate_O:
{
     // stamp value 619
    kinematics::DelayedBondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::DelayedBondedJointTemplate_O*>(client);
    GC<kinematics::DelayedBondedJointTemplate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RootBondedJointTemplate_O:
{
     // stamp value 623
    kinematics::RootBondedJointTemplate_O* obj_gc_safe = reinterpret_cast<kinematics::RootBondedJointTemplate_O*>(client);
    GC<kinematics::RootBondedJointTemplate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__Color_O:
{
     // stamp value 627
    geom::Color_O* obj_gc_safe = reinterpret_cast<geom::Color_O*>(client);
    GC<geom::Color_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationCollection_O:
{
     // stamp value 631
    chem::ConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollection_O*>(client);
    GC<chem::ConformationCollection_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SuperposableConformationCollection_O:
{
     // stamp value 635
    chem::SuperposableConformationCollection_O* obj_gc_safe = reinterpret_cast<chem::SuperposableConformationCollection_O*>(client);
    GC<chem::SuperposableConformationCollection_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__PresumedLoc_O:
{
     // stamp value 639
    asttooling::PresumedLoc_O* obj_gc_safe = reinterpret_cast<asttooling::PresumedLoc_O*>(client);
    GC<asttooling::PresumedLoc_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Coupling_O:
{
     // stamp value 643
    chem::Coupling_O* obj_gc_safe = reinterpret_cast<chem::Coupling_O*>(client);
    GC<chem::Coupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RingCoupling_O:
{
     // stamp value 647
    chem::RingCoupling_O* obj_gc_safe = reinterpret_cast<chem::RingCoupling_O*>(client);
    GC<chem::RingCoupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__DirectionalCoupling_O:
{
     // stamp value 651
    chem::DirectionalCoupling_O* obj_gc_safe = reinterpret_cast<chem::DirectionalCoupling_O*>(client);
    GC<chem::DirectionalCoupling_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__ObjectSet_O:
{
     // stamp value 655
    adapt::ObjectSet_O* obj_gc_safe = reinterpret_cast<adapt::ObjectSet_O*>(client);
    GC<adapt::ObjectSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Oligomer_O:
{
     // stamp value 659
    chem::Oligomer_O* obj_gc_safe = reinterpret_cast<chem::Oligomer_O*>(client);
    GC<chem::Oligomer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PdbMonomerConnectivity_O:
{
     // stamp value 663
    chem::PdbMonomerConnectivity_O* obj_gc_safe = reinterpret_cast<chem::PdbMonomerConnectivity_O*>(client);
    GC<chem::PdbMonomerConnectivity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_units__Dimension_O:
{
     // stamp value 667
    units::Dimension_O* obj_gc_safe = reinterpret_cast<units::Dimension_O*>(client);
    GC<units::Dimension_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationExplorerEntry_O:
{
     // stamp value 671
    chem::ConformationExplorerEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntry_O*>(client);
    GC<chem::ConformationExplorerEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_mp__ConditionVariable_O:
{
     // stamp value 675
    mp::ConditionVariable_O* obj_gc_safe = reinterpret_cast<mp::ConditionVariable_O*>(client);
    GC<mp::ConditionVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PdbReader_O:
{
     // stamp value 679
    chem::PdbReader_O* obj_gc_safe = reinterpret_cast<chem::PdbReader_O*>(client);
    GC<chem::PdbReader_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SpanningLoop_O:
{
     // stamp value 683
    chem::SpanningLoop_O* obj_gc_safe = reinterpret_cast<chem::SpanningLoop_O*>(client);
    GC<chem::SpanningLoop_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ProperTorsion_O:
{
     // stamp value 687
    chem::ProperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ProperTorsion_O*>(client);
    GC<chem::ProperTorsion_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ResidueList_O:
{
     // stamp value 691
    chem::ResidueList_O* obj_gc_safe = reinterpret_cast<chem::ResidueList_O*>(client);
    GC<chem::ResidueList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SuperposeEngine_O:
{
     // stamp value 695
    chem::SuperposeEngine_O* obj_gc_safe = reinterpret_cast<chem::SuperposeEngine_O*>(client);
    GC<chem::SuperposeEngine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SuperposeSelectedAtoms_O:
{
     // stamp value 699
    chem::SuperposeSelectedAtoms_O* obj_gc_safe = reinterpret_cast<chem::SuperposeSelectedAtoms_O*>(client);
    GC<chem::SuperposeSelectedAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Command_O:
{
     // stamp value 703
    chem::Command_O* obj_gc_safe = reinterpret_cast<chem::Command_O*>(client);
    GC<chem::Command_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoConfiguration_O:
{
     // stamp value 707
    chem::StereoConfiguration_O* obj_gc_safe = reinterpret_cast<chem::StereoConfiguration_O*>(client);
    GC<chem::StereoConfiguration_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__MonomerBaseNode_O:
{
     // stamp value 711
    kinematics::MonomerBaseNode_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerBaseNode_O*>(client);
    GC<kinematics::MonomerBaseNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__AggregateNode_O:
{
     // stamp value 715
    kinematics::AggregateNode_O* obj_gc_safe = reinterpret_cast<kinematics::AggregateNode_O*>(client);
    GC<kinematics::AggregateNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__ChainNode_O:
{
     // stamp value 719
    kinematics::ChainNode_O* obj_gc_safe = reinterpret_cast<kinematics::ChainNode_O*>(client);
    GC<kinematics::ChainNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__MonomerNode_O:
{
     // stamp value 723
    kinematics::MonomerNode_O* obj_gc_safe = reinterpret_cast<kinematics::MonomerNode_O*>(client);
    GC<kinematics::MonomerNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RingClosingMonomerNode_O:
{
     // stamp value 727
    kinematics::RingClosingMonomerNode_O* obj_gc_safe = reinterpret_cast<kinematics::RingClosingMonomerNode_O*>(client);
    GC<kinematics::RingClosingMonomerNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFNonbondCrossTermTable_O:
{
     // stamp value 731
    chem::FFNonbondCrossTermTable_O* obj_gc_safe = reinterpret_cast<chem::FFNonbondCrossTermTable_O*>(client);
    GC<chem::FFNonbondCrossTermTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Plug_O:
{
     // stamp value 735
    chem::Plug_O* obj_gc_safe = reinterpret_cast<chem::Plug_O*>(client);
    GC<chem::Plug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__JumpPlug_O:
{
     // stamp value 739
    chem::JumpPlug_O* obj_gc_safe = reinterpret_cast<chem::JumpPlug_O*>(client);
    GC<chem::JumpPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PlugWithMates_O:
{
     // stamp value 743
    chem::PlugWithMates_O* obj_gc_safe = reinterpret_cast<chem::PlugWithMates_O*>(client);
    GC<chem::PlugWithMates_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__InPlug_O:
{
     // stamp value 747
    chem::InPlug_O* obj_gc_safe = reinterpret_cast<chem::InPlug_O*>(client);
    GC<chem::InPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OutPlug_O:
{
     // stamp value 751
    chem::OutPlug_O* obj_gc_safe = reinterpret_cast<chem::OutPlug_O*>(client);
    GC<chem::OutPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OriginPlug_O:
{
     // stamp value 755
    chem::OriginPlug_O* obj_gc_safe = reinterpret_cast<chem::OriginPlug_O*>(client);
    GC<chem::OriginPlug_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__Rotamer_O:
{
     // stamp value 759
    kinematics::Rotamer_O* obj_gc_safe = reinterpret_cast<kinematics::Rotamer_O*>(client);
    GC<kinematics::Rotamer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MonomerContext_O:
{
     // stamp value 763
    chem::MonomerContext_O* obj_gc_safe = reinterpret_cast<chem::MonomerContext_O*>(client);
    GC<chem::MonomerContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CDFragment_O:
{
     // stamp value 767
    chem::CDFragment_O* obj_gc_safe = reinterpret_cast<chem::CDFragment_O*>(client);
    GC<chem::CDFragment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_units__Unit_O:
{
     // stamp value 771
    units::Unit_O* obj_gc_safe = reinterpret_cast<units::Unit_O*>(client);
    GC<units::Unit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_units__NamedUnit_O:
{
     // stamp value 775
    units::NamedUnit_O* obj_gc_safe = reinterpret_cast<units::NamedUnit_O*>(client);
    GC<units::NamedUnit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__NativeVector_int_O:
{
     // stamp value 779
    core::NativeVector_int_O* obj_gc_safe = reinterpret_cast<core::NativeVector_int_O*>(client);
    GC<core::NativeVector_int_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__CodeBase_O:
{
     // stamp value 783
    llvmo::CodeBase_O* obj_gc_safe = reinterpret_cast<llvmo::CodeBase_O*>(client);
    GC<llvmo::CodeBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Code_O:
{
     // stamp value 787
    llvmo::Code_O* obj_gc_safe = reinterpret_cast<llvmo::Code_O*>(client);
    GC<llvmo::Code_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Library_O:
{
     // stamp value 791
    llvmo::Library_O* obj_gc_safe = reinterpret_cast<llvmo::Library_O*>(client);
    GC<llvmo::Library_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__InfoDb_O:
{
     // stamp value 795
    chem::InfoDb_O* obj_gc_safe = reinterpret_cast<chem::InfoDb_O*>(client);
    GC<chem::InfoDb_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MinimizerLog_O:
{
     // stamp value 799
    chem::MinimizerLog_O* obj_gc_safe = reinterpret_cast<chem::MinimizerLog_O*>(client);
    GC<chem::MinimizerLog_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__GenericOctree_O:
{
     // stamp value 803
    chem::GenericOctree_O* obj_gc_safe = reinterpret_cast<chem::GenericOctree_O*>(client);
    GC<chem::GenericOctree_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__AtomTree_O:
{
     // stamp value 807
    kinematics::AtomTree_O* obj_gc_safe = reinterpret_cast<kinematics::AtomTree_O*>(client);
    GC<kinematics::AtomTree_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_units__Quantity_O:
{
     // stamp value 811
    units::Quantity_O* obj_gc_safe = reinterpret_cast<units::Quantity_O*>(client);
    GC<units::Quantity_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemInfoMatch_O:
{
     // stamp value 815
    chem::ChemInfoMatch_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoMatch_O*>(client);
    GC<chem::ChemInfoMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixEntry_O:
{
     // stamp value 819
    chem::ZMatrixEntry_O* obj_gc_safe = reinterpret_cast<chem::ZMatrixEntry_O*>(client);
    GC<chem::ZMatrixEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SpecificContextSet_O:
{
     // stamp value 823
    chem::SpecificContextSet_O* obj_gc_safe = reinterpret_cast<chem::SpecificContextSet_O*>(client);
    GC<chem::SpecificContextSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Angle_O:
{
     // stamp value 827
    chem::Angle_O* obj_gc_safe = reinterpret_cast<chem::Angle_O*>(client);
    GC<chem::Angle_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MacroModelFile_O:
{
     // stamp value 831
    chem::MacroModelFile_O* obj_gc_safe = reinterpret_cast<chem::MacroModelFile_O*>(client);
    GC<chem::MacroModelFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondList_O:
{
     // stamp value 835
    chem::BondList_O* obj_gc_safe = reinterpret_cast<chem::BondList_O*>(client);
    GC<chem::BondList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationExplorer_O:
{
     // stamp value 839
    chem::ConformationExplorer_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorer_O*>(client);
    GC<chem::ConformationExplorer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemInfoGraph_O:
{
     // stamp value 843
    chem::ChemInfoGraph_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoGraph_O*>(client);
    GC<chem::ChemInfoGraph_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CDText_O:
{
     // stamp value 847
    chem::CDText_O* obj_gc_safe = reinterpret_cast<chem::CDText_O*>(client);
    GC<chem::CDText_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DINodeArray_O:
{
     // stamp value 851
    llvmo::DINodeArray_O* obj_gc_safe = reinterpret_cast<llvmo::DINodeArray_O*>(client);
    GC<llvmo::DINodeArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SpanningInfo_O:
{
     // stamp value 855
    chem::SpanningInfo_O* obj_gc_safe = reinterpret_cast<chem::SpanningInfo_O*>(client);
    GC<chem::SpanningInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__Checkpoint_O:
{
     // stamp value 859
    kinematics::Checkpoint_O* obj_gc_safe = reinterpret_cast<kinematics::Checkpoint_O*>(client);
    GC<kinematics::Checkpoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__CheckpointJoint_O:
{
     // stamp value 863
    kinematics::CheckpointJoint_O* obj_gc_safe = reinterpret_cast<kinematics::CheckpointJoint_O*>(client);
    GC<kinematics::CheckpointJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__CheckpointOutPlugJoint_O:
{
     // stamp value 867
    kinematics::CheckpointOutPlugJoint_O* obj_gc_safe = reinterpret_cast<kinematics::CheckpointOutPlugJoint_O*>(client);
    GC<kinematics::CheckpointOutPlugJoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationExplorerMatch_O:
{
     // stamp value 871
    chem::ConformationExplorerMatch_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerMatch_O*>(client);
    GC<chem::ConformationExplorerMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoisomerAtoms_O:
{
     // stamp value 875
    chem::StereoisomerAtoms_O* obj_gc_safe = reinterpret_cast<chem::StereoisomerAtoms_O*>(client);
    GC<chem::StereoisomerAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Rotamer_O:
{
     // stamp value 879
    chem::Rotamer_O* obj_gc_safe = reinterpret_cast<chem::Rotamer_O*>(client);
    GC<chem::Rotamer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ImproperTorsion_O:
{
     // stamp value 883
    chem::ImproperTorsion_O* obj_gc_safe = reinterpret_cast<chem::ImproperTorsion_O*>(client);
    GC<chem::ImproperTorsion_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__SymbolList_O:
{
     // stamp value 887
    adapt::SymbolList_O* obj_gc_safe = reinterpret_cast<adapt::SymbolList_O*>(client);
    GC<adapt::SymbolList_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FrameRecognizer_O:
{
     // stamp value 891
    chem::FrameRecognizer_O* obj_gc_safe = reinterpret_cast<chem::FrameRecognizer_O*>(client);
    GC<chem::FrameRecognizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationExplorerEntryStage_O:
{
     // stamp value 895
    chem::ConformationExplorerEntryStage_O* obj_gc_safe = reinterpret_cast<chem::ConformationExplorerEntryStage_O*>(client);
    GC<chem::ConformationExplorerEntryStage_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Trajectory_O:
{
     // stamp value 899
    chem::Trajectory_O* obj_gc_safe = reinterpret_cast<chem::Trajectory_O*>(client);
    GC<chem::Trajectory_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CalculatePosition_O:
{
     // stamp value 903
    chem::CalculatePosition_O* obj_gc_safe = reinterpret_cast<chem::CalculatePosition_O*>(client);
    GC<chem::CalculatePosition_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O:
{
     // stamp value 907
    chem::CalculatePositionRelativeToOrigin_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionRelativeToOrigin_O*>(client);
    GC<chem::CalculatePositionRelativeToOrigin_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CalculatePositionUsingInternals_O:
{
     // stamp value 911
    chem::CalculatePositionUsingInternals_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionUsingInternals_O*>(client);
    GC<chem::CalculatePositionUsingInternals_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CalculatePositionAlongBond_O:
{
     // stamp value 915
    chem::CalculatePositionAlongBond_O* obj_gc_safe = reinterpret_cast<chem::CalculatePositionAlongBond_O*>(client);
    GC<chem::CalculatePositionAlongBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__OMatrix_O:
{
     // stamp value 919
    geom::OMatrix_O* obj_gc_safe = reinterpret_cast<geom::OMatrix_O*>(client);
    GC<geom::OMatrix_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationCollectionEntry_O:
{
     // stamp value 923
    chem::ConformationCollectionEntry_O* obj_gc_safe = reinterpret_cast<chem::ConformationCollectionEntry_O*>(client);
    GC<chem::ConformationCollectionEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ComplexRestraint_O:
{
     // stamp value 927
    chem::ComplexRestraint_O* obj_gc_safe = reinterpret_cast<chem::ComplexRestraint_O*>(client);
    GC<chem::ComplexRestraint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestrainedExoCyclicAtom_O:
{
     // stamp value 931
    chem::RestrainedExoCyclicAtom_O* obj_gc_safe = reinterpret_cast<chem::RestrainedExoCyclicAtom_O*>(client);
    GC<chem::RestrainedExoCyclicAtom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestrainedPiBond_O:
{
     // stamp value 935
    chem::RestrainedPiBond_O* obj_gc_safe = reinterpret_cast<chem::RestrainedPiBond_O*>(client);
    GC<chem::RestrainedPiBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_mp__Mutex_O:
{
     // stamp value 939
    mp::Mutex_O* obj_gc_safe = reinterpret_cast<mp::Mutex_O*>(client);
    GC<mp::Mutex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_mp__RecursiveMutex_O:
{
     // stamp value 943
    mp::RecursiveMutex_O* obj_gc_safe = reinterpret_cast<mp::RecursiveMutex_O*>(client);
    GC<mp::RecursiveMutex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CombinedForceField_O:
{
     // stamp value 947
    chem::CombinedForceField_O* obj_gc_safe = reinterpret_cast<chem::CombinedForceField_O*>(client);
    GC<chem::CombinedForceField_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CDBond_O:
{
     // stamp value 951
    chem::CDBond_O* obj_gc_safe = reinterpret_cast<chem::CDBond_O*>(client);
    GC<chem::CDBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConstitutionBond_O:
{
     // stamp value 955
    chem::ConstitutionBond_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionBond_O*>(client);
    GC<chem::ConstitutionBond_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__ChiDihedral_O:
{
     // stamp value 959
    kinematics::ChiDihedral_O* obj_gc_safe = reinterpret_cast<kinematics::ChiDihedral_O*>(client);
    GC<kinematics::ChiDihedral_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConstitutionAtoms_O:
{
     // stamp value 963
    chem::ConstitutionAtoms_O* obj_gc_safe = reinterpret_cast<chem::ConstitutionAtoms_O*>(client);
    GC<chem::ConstitutionAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__Conformation_O:
{
     // stamp value 967
    kinematics::Conformation_O* obj_gc_safe = reinterpret_cast<kinematics::Conformation_O*>(client);
    GC<kinematics::Conformation_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MoleculeGraph_O:
{
     // stamp value 971
    chem::MoleculeGraph_O* obj_gc_safe = reinterpret_cast<chem::MoleculeGraph_O*>(client);
    GC<chem::MoleculeGraph_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StructureComparer_O:
{
     // stamp value 975
    chem::StructureComparer_O* obj_gc_safe = reinterpret_cast<chem::StructureComparer_O*>(client);
    GC<chem::StructureComparer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BoundingBox_O:
{
     // stamp value 979
    chem::BoundingBox_O* obj_gc_safe = reinterpret_cast<chem::BoundingBox_O*>(client);
    GC<chem::BoundingBox_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemInfoNode_O:
{
     // stamp value 983
    chem::ChemInfoNode_O* obj_gc_safe = reinterpret_cast<chem::ChemInfoNode_O*>(client);
    GC<chem::ChemInfoNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondMatcher_O:
{
     // stamp value 987
    chem::BondMatcher_O* obj_gc_safe = reinterpret_cast<chem::BondMatcher_O*>(client);
    GC<chem::BondMatcher_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondTest_O:
{
     // stamp value 991
    chem::BondTest_O* obj_gc_safe = reinterpret_cast<chem::BondTest_O*>(client);
    GC<chem::BondTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondLogical_O:
{
     // stamp value 995
    chem::BondLogical_O* obj_gc_safe = reinterpret_cast<chem::BondLogical_O*>(client);
    GC<chem::BondLogical_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondMatchNode_O:
{
     // stamp value 999
    chem::BondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondMatchNode_O*>(client);
    GC<chem::BondMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomOrBondMatchNode_O:
{
     // stamp value 1003
    chem::AtomOrBondMatchNode_O* obj_gc_safe = reinterpret_cast<chem::AtomOrBondMatchNode_O*>(client);
    GC<chem::AtomOrBondMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Root_O:
{
     // stamp value 1007
    chem::Root_O* obj_gc_safe = reinterpret_cast<chem::Root_O*>(client);
    GC<chem::Root_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SmartsRoot_O:
{
     // stamp value 1011
    chem::SmartsRoot_O* obj_gc_safe = reinterpret_cast<chem::SmartsRoot_O*>(client);
    GC<chem::SmartsRoot_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AntechamberRoot_O:
{
     // stamp value 1015
    chem::AntechamberRoot_O* obj_gc_safe = reinterpret_cast<chem::AntechamberRoot_O*>(client);
    GC<chem::AntechamberRoot_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ResidueTest_O:
{
     // stamp value 1019
    chem::ResidueTest_O* obj_gc_safe = reinterpret_cast<chem::ResidueTest_O*>(client);
    GC<chem::ResidueTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AntechamberFocusAtomMatch_O:
{
     // stamp value 1023
    chem::AntechamberFocusAtomMatch_O* obj_gc_safe = reinterpret_cast<chem::AntechamberFocusAtomMatch_O*>(client);
    GC<chem::AntechamberFocusAtomMatch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Logical_O:
{
     // stamp value 1027
    chem::Logical_O* obj_gc_safe = reinterpret_cast<chem::Logical_O*>(client);
    GC<chem::Logical_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomTest_O:
{
     // stamp value 1031
    chem::AtomTest_O* obj_gc_safe = reinterpret_cast<chem::AtomTest_O*>(client);
    GC<chem::AtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondToAtomTest_O:
{
     // stamp value 1035
    chem::BondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::BondToAtomTest_O*>(client);
    GC<chem::BondToAtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AntechamberBondToAtomTest_O:
{
     // stamp value 1039
    chem::AntechamberBondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::AntechamberBondToAtomTest_O*>(client);
    GC<chem::AntechamberBondToAtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondListMatchNode_O:
{
     // stamp value 1043
    chem::BondListMatchNode_O* obj_gc_safe = reinterpret_cast<chem::BondListMatchNode_O*>(client);
    GC<chem::BondListMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Chain_O:
{
     // stamp value 1047
    chem::Chain_O* obj_gc_safe = reinterpret_cast<chem::Chain_O*>(client);
    GC<chem::Chain_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Branch_O:
{
     // stamp value 1051
    chem::Branch_O* obj_gc_safe = reinterpret_cast<chem::Branch_O*>(client);
    GC<chem::Branch_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RootMatchNode_O:
{
     // stamp value 1055
    chem::RootMatchNode_O* obj_gc_safe = reinterpret_cast<chem::RootMatchNode_O*>(client);
    GC<chem::RootMatchNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AfterMatchBondToAtomTest_O:
{
     // stamp value 1059
    chem::AfterMatchBondToAtomTest_O* obj_gc_safe = reinterpret_cast<chem::AfterMatchBondToAtomTest_O*>(client);
    GC<chem::AfterMatchBondToAtomTest_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ElementsInfo_O:
{
     // stamp value 1063
    chem::ElementsInfo_O* obj_gc_safe = reinterpret_cast<chem::ElementsInfo_O*>(client);
    GC<chem::ElementsInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Dimacs_O:
{
     // stamp value 1067
    chem::Dimacs_O* obj_gc_safe = reinterpret_cast<chem::Dimacs_O*>(client);
    GC<chem::Dimacs_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SpecificContext_O:
{
     // stamp value 1071
    chem::SpecificContext_O* obj_gc_safe = reinterpret_cast<chem::SpecificContext_O*>(client);
    GC<chem::SpecificContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Minimizer_O:
{
     // stamp value 1075
    chem::Minimizer_O* obj_gc_safe = reinterpret_cast<chem::Minimizer_O*>(client);
    GC<chem::Minimizer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__SymbolSet_O:
{
     // stamp value 1079
    adapt::SymbolSet_O* obj_gc_safe = reinterpret_cast<adapt::SymbolSet_O*>(client);
    GC<adapt::SymbolSet_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O:
{
     // stamp value 1083
    chem::MapOfMonomerNamesToAtomIndexers_O* obj_gc_safe = reinterpret_cast<chem::MapOfMonomerNamesToAtomIndexers_O*>(client);
    GC<chem::MapOfMonomerNamesToAtomIndexers_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Alias_O:
{
     // stamp value 1087
    chem::Alias_O* obj_gc_safe = reinterpret_cast<chem::Alias_O*>(client);
    GC<chem::Alias_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomIdToAtomMap_O:
{
     // stamp value 1091
    chem::AtomIdToAtomMap_O* obj_gc_safe = reinterpret_cast<chem::AtomIdToAtomMap_O*>(client);
    GC<chem::AtomIdToAtomMap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_mp__Process_O:
{
     // stamp value 1095
    mp::Process_O* obj_gc_safe = reinterpret_cast<mp::Process_O*>(client);
    GC<mp::Process_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SingleDispatchMethod_O:
{
     // stamp value 1099
    core::SingleDispatchMethod_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchMethod_O*>(client);
    GC<core::SingleDispatchMethod_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Iterator_O:
{
     // stamp value 1103
    core::Iterator_O* obj_gc_safe = reinterpret_cast<core::Iterator_O*>(client);
    GC<core::Iterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__DirectoryIterator_O:
{
     // stamp value 1107
    core::DirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::DirectoryIterator_O*>(client);
    GC<core::DirectoryIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateRestraints_O:
{
     // stamp value 1111
    chem::IterateRestraints_O* obj_gc_safe = reinterpret_cast<chem::IterateRestraints_O*>(client);
    GC<chem::IterateRestraints_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__IterateCons_O:
{
     // stamp value 1115
    adapt::IterateCons_O* obj_gc_safe = reinterpret_cast<adapt::IterateCons_O*>(client);
    GC<adapt::IterateCons_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__RecursiveDirectoryIterator_O:
{
     // stamp value 1119
    core::RecursiveDirectoryIterator_O* obj_gc_safe = reinterpret_cast<core::RecursiveDirectoryIterator_O*>(client);
    GC<core::RecursiveDirectoryIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateMatter_O:
{
     // stamp value 1123
    chem::IterateMatter_O* obj_gc_safe = reinterpret_cast<chem::IterateMatter_O*>(client);
    GC<chem::IterateMatter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateResidues_O:
{
     // stamp value 1127
    chem::IterateResidues_O* obj_gc_safe = reinterpret_cast<chem::IterateResidues_O*>(client);
    GC<chem::IterateResidues_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateBonds_O:
{
     // stamp value 1131
    chem::IterateBonds_O* obj_gc_safe = reinterpret_cast<chem::IterateBonds_O*>(client);
    GC<chem::IterateBonds_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateAtoms_O:
{
     // stamp value 1135
    chem::IterateAtoms_O* obj_gc_safe = reinterpret_cast<chem::IterateAtoms_O*>(client);
    GC<chem::IterateAtoms_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Symbol_O:
{
     // stamp value 1139
    core::Symbol_O* obj_gc_safe = reinterpret_cast<core::Symbol_O*>(client);
    GC<core::Symbol_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Null_O:
{
     // stamp value 1143
    core::Null_O* obj_gc_safe = reinterpret_cast<core::Null_O*>(client);
    GC<core::Null_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SharpEqualWrapper_O:
{
     // stamp value 1147
    core::SharpEqualWrapper_O* obj_gc_safe = reinterpret_cast<core::SharpEqualWrapper_O*>(client);
    GC<core::SharpEqualWrapper_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ClaspJIT_O:
{
     // stamp value 1151
    llvmo::ClaspJIT_O* obj_gc_safe = reinterpret_cast<llvmo::ClaspJIT_O*>(client);
    GC<llvmo::ClaspJIT_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Exposer_O:
{
     // stamp value 1155
    core::Exposer_O* obj_gc_safe = reinterpret_cast<core::Exposer_O*>(client);
    GC<core::Exposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_units__UnitsExposer_O:
{
     // stamp value 1159
    units::UnitsExposer_O* obj_gc_safe = reinterpret_cast<units::UnitsExposer_O*>(client);
    GC<units::UnitsExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__CoreExposer_O:
{
     // stamp value 1163
    core::CoreExposer_O* obj_gc_safe = reinterpret_cast<core::CoreExposer_O*>(client);
    GC<core::CoreExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__GeomExposer_O:
{
     // stamp value 1167
    geom::GeomExposer_O* obj_gc_safe = reinterpret_cast<geom::GeomExposer_O*>(client);
    GC<geom::GeomExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__AdaptExposer_O:
{
     // stamp value 1171
    adapt::AdaptExposer_O* obj_gc_safe = reinterpret_cast<adapt::AdaptExposer_O*>(client);
    GC<adapt::AdaptExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__KinematicsExposer_O:
{
     // stamp value 1175
    kinematics::KinematicsExposer_O* obj_gc_safe = reinterpret_cast<kinematics::KinematicsExposer_O*>(client);
    GC<kinematics::KinematicsExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemExposer_O:
{
     // stamp value 1179
    chem::ChemExposer_O* obj_gc_safe = reinterpret_cast<chem::ChemExposer_O*>(client);
    GC<chem::ChemExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__AsttoolingExposer_O:
{
     // stamp value 1183
    asttooling::AsttoolingExposer_O* obj_gc_safe = reinterpret_cast<asttooling::AsttoolingExposer_O*>(client);
    GC<asttooling::AsttoolingExposer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__PosixTimeDuration_O:
{
     // stamp value 1187
    core::PosixTimeDuration_O* obj_gc_safe = reinterpret_cast<core::PosixTimeDuration_O*>(client);
    GC<core::PosixTimeDuration_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clasp_ffi__ForeignTypeSpec_O:
{
     // stamp value 1191
    clasp_ffi::ForeignTypeSpec_O* obj_gc_safe = reinterpret_cast<clasp_ffi::ForeignTypeSpec_O*>(client);
    GC<clasp_ffi::ForeignTypeSpec_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SmallMap_O:
{
     // stamp value 1195
    core::SmallMap_O* obj_gc_safe = reinterpret_cast<core::SmallMap_O*>(client);
    GC<core::SmallMap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Instance_O:
{
     // stamp value 1197
    core::Instance_O* obj_gc_safe = reinterpret_cast<core::Instance_O*>(client);
    GC<core::Instance_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clbind__ClassRep_O:
{
     // stamp value 1201
    clbind::ClassRep_O* obj_gc_safe = reinterpret_cast<clbind::ClassRep_O*>(client);
    GC<clbind::ClassRep_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__DerivableCxxObject_O:
{
     // stamp value 1204
    core::DerivableCxxObject_O* obj_gc_safe = reinterpret_cast<core::DerivableCxxObject_O*>(client);
    GC<core::DerivableCxxObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_mpip__Mpi_O:
{
     // stamp value 1211
    mpip::Mpi_O* obj_gc_safe = reinterpret_cast<mpip::Mpi_O*>(client);
    GC<mpip::Mpi_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Sigset_O:
{
     // stamp value 1215
    core::Sigset_O* obj_gc_safe = reinterpret_cast<core::Sigset_O*>(client);
    GC<core::Sigset_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Environment_O:
{
     // stamp value 1219
    core::Environment_O* obj_gc_safe = reinterpret_cast<core::Environment_O*>(client);
    GC<core::Environment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__GlueEnvironment_O:
{
     // stamp value 1223
    core::GlueEnvironment_O* obj_gc_safe = reinterpret_cast<core::GlueEnvironment_O*>(client);
    GC<core::GlueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__LexicalEnvironment_O:
{
     // stamp value 1227
    core::LexicalEnvironment_O* obj_gc_safe = reinterpret_cast<core::LexicalEnvironment_O*>(client);
    GC<core::LexicalEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__CompileTimeEnvironment_O:
{
     // stamp value 1231
    core::CompileTimeEnvironment_O* obj_gc_safe = reinterpret_cast<core::CompileTimeEnvironment_O*>(client);
    GC<core::CompileTimeEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__CatchEnvironment_O:
{
     // stamp value 1235
    core::CatchEnvironment_O* obj_gc_safe = reinterpret_cast<core::CatchEnvironment_O*>(client);
    GC<core::CatchEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SymbolMacroletEnvironment_O:
{
     // stamp value 1239
    core::SymbolMacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::SymbolMacroletEnvironment_O*>(client);
    GC<core::SymbolMacroletEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FunctionContainerEnvironment_O:
{
     // stamp value 1243
    core::FunctionContainerEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionContainerEnvironment_O*>(client);
    GC<core::FunctionContainerEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__UnwindProtectEnvironment_O:
{
     // stamp value 1247
    core::UnwindProtectEnvironment_O* obj_gc_safe = reinterpret_cast<core::UnwindProtectEnvironment_O*>(client);
    GC<core::UnwindProtectEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MacroletEnvironment_O:
{
     // stamp value 1251
    core::MacroletEnvironment_O* obj_gc_safe = reinterpret_cast<core::MacroletEnvironment_O*>(client);
    GC<core::MacroletEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__RuntimeVisibleEnvironment_O:
{
     // stamp value 1255
    core::RuntimeVisibleEnvironment_O* obj_gc_safe = reinterpret_cast<core::RuntimeVisibleEnvironment_O*>(client);
    GC<core::RuntimeVisibleEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__TagbodyEnvironment_O:
{
     // stamp value 1259
    core::TagbodyEnvironment_O* obj_gc_safe = reinterpret_cast<core::TagbodyEnvironment_O*>(client);
    GC<core::TagbodyEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__BlockEnvironment_O:
{
     // stamp value 1263
    core::BlockEnvironment_O* obj_gc_safe = reinterpret_cast<core::BlockEnvironment_O*>(client);
    GC<core::BlockEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FunctionValueEnvironment_O:
{
     // stamp value 1267
    core::FunctionValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::FunctionValueEnvironment_O*>(client);
    GC<core::FunctionValueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ValueEnvironment_O:
{
     // stamp value 1271
    core::ValueEnvironment_O* obj_gc_safe = reinterpret_cast<core::ValueEnvironment_O*>(client);
    GC<core::ValueEnvironment_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ActivationFrame_O:
{
     // stamp value 1275
    core::ActivationFrame_O* obj_gc_safe = reinterpret_cast<core::ActivationFrame_O*>(client);
    GC<core::ActivationFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ValueFrame_O:
{
     // stamp value 1279
    core::ValueFrame_O* obj_gc_safe = reinterpret_cast<core::ValueFrame_O*>(client);
    GC<core::ValueFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FunctionFrame_O:
{
     // stamp value 1283
    core::FunctionFrame_O* obj_gc_safe = reinterpret_cast<core::FunctionFrame_O*>(client);
    GC<core::FunctionFrame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__RandomState_O:
{
     // stamp value 1287
    core::RandomState_O* obj_gc_safe = reinterpret_cast<core::RandomState_O*>(client);
    GC<core::RandomState_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__EntryPointBase_O:
{
     // stamp value 1291
    core::EntryPointBase_O* obj_gc_safe = reinterpret_cast<core::EntryPointBase_O*>(client);
    GC<core::EntryPointBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__GlobalEntryPointGenerator_O:
{
     // stamp value 1295
    core::GlobalEntryPointGenerator_O* obj_gc_safe = reinterpret_cast<core::GlobalEntryPointGenerator_O*>(client);
    GC<core::GlobalEntryPointGenerator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__LocalEntryPointGenerator_O:
{
     // stamp value 1299
    core::LocalEntryPointGenerator_O* obj_gc_safe = reinterpret_cast<core::LocalEntryPointGenerator_O*>(client);
    GC<core::LocalEntryPointGenerator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__CodeEntryPoint_O:
{
     // stamp value 1303
    core::CodeEntryPoint_O* obj_gc_safe = reinterpret_cast<core::CodeEntryPoint_O*>(client);
    GC<core::CodeEntryPoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__LocalEntryPoint_O:
{
     // stamp value 1307
    core::LocalEntryPoint_O* obj_gc_safe = reinterpret_cast<core::LocalEntryPoint_O*>(client);
    GC<core::LocalEntryPoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__GlobalEntryPoint_O:
{
     // stamp value 1311
    core::GlobalEntryPoint_O* obj_gc_safe = reinterpret_cast<core::GlobalEntryPoint_O*>(client);
    GC<core::GlobalEntryPoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableBase_O:
{
     // stamp value 1315
    core::HashTableBase_O* obj_gc_safe = reinterpret_cast<core::HashTableBase_O*>(client);
    GC<core::HashTableBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTable_O:
{
     // stamp value 1319
    core::HashTable_O* obj_gc_safe = reinterpret_cast<core::HashTable_O*>(client);
    GC<core::HashTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableEqualp_O:
{
     // stamp value 1323
    core::HashTableEqualp_O* obj_gc_safe = reinterpret_cast<core::HashTableEqualp_O*>(client);
    GC<core::HashTableEqualp_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableEq_O:
{
     // stamp value 1327
    core::HashTableEq_O* obj_gc_safe = reinterpret_cast<core::HashTableEq_O*>(client);
    GC<core::HashTableEq_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableEqual_O:
{
     // stamp value 1331
    core::HashTableEqual_O* obj_gc_safe = reinterpret_cast<core::HashTableEqual_O*>(client);
    GC<core::HashTableEqual_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableCustom_O:
{
     // stamp value 1335
    core::HashTableCustom_O* obj_gc_safe = reinterpret_cast<core::HashTableCustom_O*>(client);
    GC<core::HashTableCustom_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableEql_O:
{
     // stamp value 1339
    core::HashTableEql_O* obj_gc_safe = reinterpret_cast<core::HashTableEql_O*>(client);
    GC<core::HashTableEql_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__WeakKeyHashTable_O:
{
     // stamp value 1343
    core::WeakKeyHashTable_O* obj_gc_safe = reinterpret_cast<core::WeakKeyHashTable_O*>(client);
    GC<core::WeakKeyHashTable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FunctionDescription_O:
{
     // stamp value 1347
    core::FunctionDescription_O* obj_gc_safe = reinterpret_cast<core::FunctionDescription_O*>(client);
    GC<core::FunctionDescription_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__InsertPoint_O:
{
     // stamp value 1351
    llvmo::InsertPoint_O* obj_gc_safe = reinterpret_cast<llvmo::InsertPoint_O*>(client);
    GC<llvmo::InsertPoint_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Number_O:
{
     // stamp value 1355
    core::Number_O* obj_gc_safe = reinterpret_cast<core::Number_O*>(client);
    GC<core::Number_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Real_O:
{
     // stamp value 1359
    core::Real_O* obj_gc_safe = reinterpret_cast<core::Real_O*>(client);
    GC<core::Real_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Rational_O:
{
     // stamp value 1363
    core::Rational_O* obj_gc_safe = reinterpret_cast<core::Rational_O*>(client);
    GC<core::Rational_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Ratio_O:
{
     // stamp value 1367
    core::Ratio_O* obj_gc_safe = reinterpret_cast<core::Ratio_O*>(client);
    GC<core::Ratio_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Integer_O:
{
     // stamp value 1371
    core::Integer_O* obj_gc_safe = reinterpret_cast<core::Integer_O*>(client);
    GC<core::Integer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Bignum_O:
{
     // stamp value 1375
    core::Bignum_O* obj_gc_safe = reinterpret_cast<core::Bignum_O*>(client);
    GC<core::Bignum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Fixnum_dummy_O:
{
     // stamp value 1379
    core::Fixnum_dummy_O* obj_gc_safe = reinterpret_cast<core::Fixnum_dummy_O*>(client);
    GC<core::Fixnum_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Float_O:
{
     // stamp value 1383
    core::Float_O* obj_gc_safe = reinterpret_cast<core::Float_O*>(client);
    GC<core::Float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__DoubleFloat_O:
{
     // stamp value 1387
    core::DoubleFloat_O* obj_gc_safe = reinterpret_cast<core::DoubleFloat_O*>(client);
    GC<core::DoubleFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SingleFloat_dummy_O:
{
     // stamp value 1391
    core::SingleFloat_dummy_O* obj_gc_safe = reinterpret_cast<core::SingleFloat_dummy_O*>(client);
    GC<core::SingleFloat_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__LongFloat_O:
{
     // stamp value 1395
    core::LongFloat_O* obj_gc_safe = reinterpret_cast<core::LongFloat_O*>(client);
    GC<core::LongFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ShortFloat_O:
{
     // stamp value 1399
    core::ShortFloat_O* obj_gc_safe = reinterpret_cast<core::ShortFloat_O*>(client);
    GC<core::ShortFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Complex_O:
{
     // stamp value 1403
    core::Complex_O* obj_gc_safe = reinterpret_cast<core::Complex_O*>(client);
    GC<core::Complex_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SourcePosInfo_O:
{
     // stamp value 1407
    core::SourcePosInfo_O* obj_gc_safe = reinterpret_cast<core::SourcePosInfo_O*>(client);
    GC<core::SourcePosInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Record_O:
{
     // stamp value 1411
    core::Record_O* obj_gc_safe = reinterpret_cast<core::Record_O*>(client);
    GC<core::Record_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Frame_O:
{
     // stamp value 1415
    core::Frame_O* obj_gc_safe = reinterpret_cast<core::Frame_O*>(client);
    GC<core::Frame_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clbind__ClassRegistry_O:
{
     // stamp value 1419
    clbind::ClassRegistry_O* obj_gc_safe = reinterpret_cast<clbind::ClassRegistry_O*>(client);
    GC<clbind::ClassRegistry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ClassHolder_O:
{
     // stamp value 1423
    core::ClassHolder_O* obj_gc_safe = reinterpret_cast<core::ClassHolder_O*>(client);
    GC<core::ClassHolder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__WrappedPointer_O:
{
     // stamp value 1426
    core::WrappedPointer_O* obj_gc_safe = reinterpret_cast<core::WrappedPointer_O*>(client);
    GC<core::WrappedPointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SymbolToEnumConverter_O:
{
     // stamp value 1431
    core::SymbolToEnumConverter_O* obj_gc_safe = reinterpret_cast<core::SymbolToEnumConverter_O*>(client);
    GC<core::SymbolToEnumConverter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Attribute_O:
{
     // stamp value 1435
    llvmo::Attribute_O* obj_gc_safe = reinterpret_cast<llvmo::Attribute_O*>(client);
    GC<llvmo::Attribute_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ImmobileObject_O:
{
     // stamp value 1439
    core::ImmobileObject_O* obj_gc_safe = reinterpret_cast<core::ImmobileObject_O*>(client);
    GC<core::ImmobileObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Function_O:
{
     // stamp value 1443
    core::Function_O* obj_gc_safe = reinterpret_cast<core::Function_O*>(client);
    GC<core::Function_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FuncallableInstance_O:
{
     // stamp value 1445
    core::FuncallableInstance_O* obj_gc_safe = reinterpret_cast<core::FuncallableInstance_O*>(client);
    GC<core::FuncallableInstance_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Creator_O:
{
     // stamp value 1451
    core::Creator_O* obj_gc_safe = reinterpret_cast<core::Creator_O*>(client);
    GC<core::Creator_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FuncallableInstanceCreator_O:
{
     // stamp value 1455
    core::FuncallableInstanceCreator_O* obj_gc_safe = reinterpret_cast<core::FuncallableInstanceCreator_O*>(client);
    GC<core::FuncallableInstanceCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clbind__ConstructorCreator_O:
{
     // stamp value 1459
    clbind::ConstructorCreator_O* obj_gc_safe = reinterpret_cast<clbind::ConstructorCreator_O*>(client);
    GC<clbind::ConstructorCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clbind__DummyCreator_O:
{
     // stamp value 1463
    clbind::DummyCreator_O* obj_gc_safe = reinterpret_cast<clbind::DummyCreator_O*>(client);
    GC<clbind::DummyCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__InstanceCreator_O:
{
     // stamp value 1467
    core::InstanceCreator_O* obj_gc_safe = reinterpret_cast<core::InstanceCreator_O*>(client);
    GC<core::InstanceCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ClassRepCreator_O:
{
     // stamp value 1471
    core::ClassRepCreator_O* obj_gc_safe = reinterpret_cast<core::ClassRepCreator_O*>(client);
    GC<core::ClassRepCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__DerivableCxxClassCreator_O:
{
     // stamp value 1475
    core::DerivableCxxClassCreator_O* obj_gc_safe = reinterpret_cast<core::DerivableCxxClassCreator_O*>(client);
    GC<core::DerivableCxxClassCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__StandardClassCreator_O:
{
     // stamp value 1479
    core::StandardClassCreator_O* obj_gc_safe = reinterpret_cast<core::StandardClassCreator_O*>(client);
    GC<core::StandardClassCreator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SpecialForm_O:
{
     // stamp value 1483
    core::SpecialForm_O* obj_gc_safe = reinterpret_cast<core::SpecialForm_O*>(client);
    GC<core::SpecialForm_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Closure_O:
{
     // stamp value 1487
    core::Closure_O* obj_gc_safe = reinterpret_cast<core::Closure_O*>(client);
    GC<core::Closure_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__BuiltinClosure_O:
{
     // stamp value 1491
    core::BuiltinClosure_O* obj_gc_safe = reinterpret_cast<core::BuiltinClosure_O*>(client);
    GC<core::BuiltinClosure_O>::deallocate_unmanaged_instance(obj_gc_safe);
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__TranslationFunctor_O:
{
     // stamp value 1495
    core::TranslationFunctor_O* obj_gc_safe = reinterpret_cast<core::TranslationFunctor_O*>(client);
    GC<core::TranslationFunctor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ClosureWithSlots_O:
{
     // stamp value 1499
    core::ClosureWithSlots_O* obj_gc_safe = reinterpret_cast<core::ClosureWithSlots_O*>(client);
    GC<core::ClosureWithSlots_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O:
{
     // stamp value 1503
    core::SingleDispatchGenericFunctionClosure_O* obj_gc_safe = reinterpret_cast<core::SingleDispatchGenericFunctionClosure_O*>(client);
    GC<core::SingleDispatchGenericFunctionClosure_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__WeakPointer_O:
{
     // stamp value 1507
    core::WeakPointer_O* obj_gc_safe = reinterpret_cast<core::WeakPointer_O*>(client);
    GC<core::WeakPointer_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DebugLoc_O:
{
     // stamp value 1511
    llvmo::DebugLoc_O* obj_gc_safe = reinterpret_cast<llvmo::DebugLoc_O*>(client);
    GC<llvmo::DebugLoc_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Array_O:
{
     // stamp value 1515
    core::Array_O* obj_gc_safe = reinterpret_cast<core::Array_O*>(client);
    GC<core::Array_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_O:
{
     // stamp value 1519
    core::MDArray_O* obj_gc_safe = reinterpret_cast<core::MDArray_O*>(client);
    GC<core::MDArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1523
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int16_t_O,core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int16_t_O:
{
     // stamp value 1527
    core::MDArray_int16_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int16_t_O*>(client);
    GC<core::MDArray_int16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1531
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int8_t_O,core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int8_t_O:
{
     // stamp value 1535
    core::MDArray_int8_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int8_t_O*>(client);
    GC<core::MDArray_int8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1539
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int32_t_O,core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int32_t_O:
{
     // stamp value 1543
    core::MDArray_int32_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int32_t_O*>(client);
    GC<core::MDArray_int32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1547
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte4_t_O,core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte4_t_O:
{
     // stamp value 1551
    core::MDArray_byte4_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte4_t_O*>(client);
    GC<core::MDArray_byte4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_:
{
     // do nothing stamp value 1555
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_float_O,core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_float_O:
{
     // stamp value 1559
    core::MDArray_float_O* obj_gc_safe = reinterpret_cast<core::MDArray_float_O*>(client);
    GC<core::MDArray_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1563
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_size_t_O,core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_size_t_O:
{
     // stamp value 1567
    core::MDArray_size_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_size_t_O*>(client);
    GC<core::MDArray_size_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1571
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte8_t_O,core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte8_t_O:
{
     // stamp value 1575
    core::MDArray_byte8_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte8_t_O*>(client);
    GC<core::MDArray_byte8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1579
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int2_t_O,core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int2_t_O:
{
     // stamp value 1583
    core::MDArray_int2_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int2_t_O*>(client);
    GC<core::MDArray_int2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_:
{
     // do nothing stamp value 1587
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_fixnum_O,core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_fixnum_O:
{
     // stamp value 1591
    core::MDArray_fixnum_O* obj_gc_safe = reinterpret_cast<core::MDArray_fixnum_O*>(client);
    GC<core::MDArray_fixnum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_:
{
     // do nothing stamp value 1595
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArrayBaseChar_O,core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArrayBaseChar_O:
{
     // stamp value 1599
    core::MDArrayBaseChar_O* obj_gc_safe = reinterpret_cast<core::MDArrayBaseChar_O*>(client);
    GC<core::MDArrayBaseChar_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1603
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte64_t_O,core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte64_t_O:
{
     // stamp value 1607
    core::MDArray_byte64_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte64_t_O*>(client);
    GC<core::MDArray_byte64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_:
{
     // do nothing stamp value 1611
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<geom::MDArrayCoordinate_O,geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__MDArrayCoordinate_O:
{
     // stamp value 1615
    geom::MDArrayCoordinate_O* obj_gc_safe = reinterpret_cast<geom::MDArrayCoordinate_O*>(client);
    GC<geom::MDArrayCoordinate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_:
{
     // do nothing stamp value 1619
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArrayT_O,core::SimpleMDArrayT_O,core::SimpleVector_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArrayT_O:
{
     // stamp value 1623
    core::MDArrayT_O* obj_gc_safe = reinterpret_cast<core::MDArrayT_O*>(client);
    GC<core::MDArrayT_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_O:
{
     // stamp value 1627
    core::SimpleMDArray_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_O*>(client);
    GC<core::SimpleMDArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1631
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int8_t_O,core::SimpleVector_int8_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int8_t_O:
{
     // stamp value 1635
    core::SimpleMDArray_int8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int8_t_O*>(client);
    GC<core::SimpleMDArray_int8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1639
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte32_t_O:
{
     // stamp value 1643
    core::SimpleMDArray_byte32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte32_t_O*>(client);
    GC<core::SimpleMDArray_byte32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1647
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int2_t_O,core::SimpleVector_int2_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int2_t_O:
{
     // stamp value 1651
    core::SimpleMDArray_int2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int2_t_O*>(client);
    GC<core::SimpleMDArray_int2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1655
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte4_t_O,core::SimpleVector_byte4_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte4_t_O:
{
     // stamp value 1659
    core::SimpleMDArray_byte4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte4_t_O*>(client);
    GC<core::SimpleMDArray_byte4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1663
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int32_t_O,core::SimpleVector_int32_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int32_t_O:
{
     // stamp value 1667
    core::SimpleMDArray_int32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int32_t_O*>(client);
    GC<core::SimpleMDArray_int32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1671
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_float_O,core::SimpleVector_float_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_float_O:
{
     // stamp value 1675
    core::SimpleMDArray_float_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_float_O*>(client);
    GC<core::SimpleMDArray_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1679
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int16_t_O,core::SimpleVector_int16_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int16_t_O:
{
     // stamp value 1683
    core::SimpleMDArray_int16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int16_t_O*>(client);
    GC<core::SimpleMDArray_int16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1687
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_size_t_O,core::SimpleVector_size_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_size_t_O:
{
     // stamp value 1691
    core::SimpleMDArray_size_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_size_t_O*>(client);
    GC<core::SimpleMDArray_size_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1695
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArrayCharacter_O:
{
     // stamp value 1699
    core::SimpleMDArrayCharacter_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayCharacter_O*>(client);
    GC<core::SimpleMDArrayCharacter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1703
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte2_t_O:
{
     // stamp value 1707
    core::SimpleMDArray_byte2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte2_t_O*>(client);
    GC<core::SimpleMDArray_byte2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1711
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte16_t_O:
{
     // stamp value 1715
    core::SimpleMDArray_byte16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte16_t_O*>(client);
    GC<core::SimpleMDArray_byte16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1719
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArrayBaseChar_O,core::SimpleBaseString_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArrayBaseChar_O:
{
     // stamp value 1723
    core::SimpleMDArrayBaseChar_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayBaseChar_O*>(client);
    GC<core::SimpleMDArrayBaseChar_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1727
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte64_t_O,core::SimpleVector_byte64_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte64_t_O:
{
     // stamp value 1731
    core::SimpleMDArray_byte64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte64_t_O*>(client);
    GC<core::SimpleMDArray_byte64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1735
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_double_O:
{
     // stamp value 1739
    core::SimpleMDArray_double_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_double_O*>(client);
    GC<core::SimpleMDArray_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1743
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArrayT_O,core::SimpleVector_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArrayT_O:
{
     // stamp value 1747
    core::SimpleMDArrayT_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayT_O*>(client);
    GC<core::SimpleMDArrayT_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1751
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int4_t_O:
{
     // stamp value 1755
    core::SimpleMDArray_int4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int4_t_O*>(client);
    GC<core::SimpleMDArray_int4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1759
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<geom::SimpleMDArrayCoordinate_O,geom::SimpleVectorCoordinate_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__SimpleMDArrayCoordinate_O:
{
     // stamp value 1763
    geom::SimpleMDArrayCoordinate_O* obj_gc_safe = reinterpret_cast<geom::SimpleMDArrayCoordinate_O*>(client);
    GC<geom::SimpleMDArrayCoordinate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1767
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_fixnum_O,core::SimpleVector_fixnum_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_fixnum_O:
{
     // stamp value 1771
    core::SimpleMDArray_fixnum_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_fixnum_O*>(client);
    GC<core::SimpleMDArray_fixnum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1775
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArrayBit_O:
{
     // stamp value 1779
    core::SimpleMDArrayBit_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArrayBit_O*>(client);
    GC<core::SimpleMDArrayBit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1783
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_byte8_t_O,core::SimpleVector_byte8_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte8_t_O:
{
     // stamp value 1787
    core::SimpleMDArray_byte8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_byte8_t_O*>(client);
    GC<core::SimpleMDArray_byte8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_:
{
     // do nothing stamp value 1791
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleArray<core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::SimpleMDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int64_t_O:
{
     // stamp value 1795
    core::SimpleMDArray_int64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleMDArray_int64_t_O*>(client);
    GC<core::SimpleMDArray_int64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_O:
{
     // stamp value 1799
    core::ComplexVector_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_O*>(client);
    GC<core::ComplexVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1803
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_double_O,core::SimpleVector_double_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_double_O:
{
     // stamp value 1807
    core::ComplexVector_double_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_double_O*>(client);
    GC<core::ComplexVector_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1811
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int8_t_O,core::SimpleVector_int8_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int8_t_O:
{
     // stamp value 1815
    core::ComplexVector_int8_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int8_t_O*>(client);
    GC<core::ComplexVector_int8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1819
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_T_O,core::SimpleVector_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_T_O:
{
     // stamp value 1823
    core::ComplexVector_T_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_T_O*>(client);
    GC<core::ComplexVector_T_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1827
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int32_t_O,core::SimpleVector_int32_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int32_t_O:
{
     // stamp value 1831
    core::ComplexVector_int32_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int32_t_O*>(client);
    GC<core::ComplexVector_int32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1835
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte16_t_O,core::SimpleVector_byte16_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte16_t_O:
{
     // stamp value 1839
    core::ComplexVector_byte16_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte16_t_O*>(client);
    GC<core::ComplexVector_byte16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1843
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<geom::ComplexVectorCoordinate_O,geom::SimpleVectorCoordinate_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__ComplexVectorCoordinate_O:
{
     // stamp value 1847
    geom::ComplexVectorCoordinate_O* obj_gc_safe = reinterpret_cast<geom::ComplexVectorCoordinate_O*>(client);
    GC<geom::ComplexVectorCoordinate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1851
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte4_t_O,core::SimpleVector_byte4_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte4_t_O:
{
     // stamp value 1855
    core::ComplexVector_byte4_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte4_t_O*>(client);
    GC<core::ComplexVector_byte4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1859
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte64_t_O,core::SimpleVector_byte64_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte64_t_O:
{
     // stamp value 1863
    core::ComplexVector_byte64_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte64_t_O*>(client);
    GC<core::ComplexVector_byte64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1867
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int2_t_O,core::SimpleVector_int2_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int2_t_O:
{
     // stamp value 1871
    core::ComplexVector_int2_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int2_t_O*>(client);
    GC<core::ComplexVector_int2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1875
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_float_O,core::SimpleVector_float_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_float_O:
{
     // stamp value 1879
    core::ComplexVector_float_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_float_O*>(client);
    GC<core::ComplexVector_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1883
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int16_t_O,core::SimpleVector_int16_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int16_t_O:
{
     // stamp value 1887
    core::ComplexVector_int16_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int16_t_O*>(client);
    GC<core::ComplexVector_int16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1891
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int4_t_O,core::SimpleVector_int4_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int4_t_O:
{
     // stamp value 1895
    core::ComplexVector_int4_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int4_t_O*>(client);
    GC<core::ComplexVector_int4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1899
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_size_t_O,core::SimpleVector_size_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_size_t_O:
{
     // stamp value 1903
    core::ComplexVector_size_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_size_t_O*>(client);
    GC<core::ComplexVector_size_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1907
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte2_t_O,core::SimpleVector_byte2_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte2_t_O:
{
     // stamp value 1911
    core::ComplexVector_byte2_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte2_t_O*>(client);
    GC<core::ComplexVector_byte2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1915
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte8_t_O,core::SimpleVector_byte8_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte8_t_O:
{
     // stamp value 1919
    core::ComplexVector_byte8_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte8_t_O*>(client);
    GC<core::ComplexVector_byte8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1923
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_byte32_t_O,core::SimpleVector_byte32_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte32_t_O:
{
     // stamp value 1927
    core::ComplexVector_byte32_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_byte32_t_O*>(client);
    GC<core::ComplexVector_byte32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1931
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::BitVectorNs_O,core::SimpleBitVector_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__BitVectorNs_O:
{
     // stamp value 1935
    core::BitVectorNs_O* obj_gc_safe = reinterpret_cast<core::BitVectorNs_O*>(client);
    GC<core::BitVectorNs_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__StrNs_O:
{
     // stamp value 1939
    core::StrNs_O* obj_gc_safe = reinterpret_cast<core::StrNs_O*>(client);
    GC<core::StrNs_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_:
{
     // do nothing stamp value 1943
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::Str8Ns_O,core::SimpleBaseString_O,core::StrNs_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Str8Ns_O:
{
     // stamp value 1947
    core::Str8Ns_O* obj_gc_safe = reinterpret_cast<core::Str8Ns_O*>(client);
    GC<core::Str8Ns_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_:
{
     // do nothing stamp value 1951
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::StrWNs_O,core::SimpleCharacterString_O,core::StrNs_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__StrWNs_O:
{
     // stamp value 1955
    core::StrWNs_O* obj_gc_safe = reinterpret_cast<core::StrWNs_O*>(client);
    GC<core::StrWNs_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1959
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_fixnum_O,core::SimpleVector_fixnum_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_fixnum_O:
{
     // stamp value 1963
    core::ComplexVector_fixnum_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_fixnum_O*>(client);
    GC<core::ComplexVector_fixnum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_:
{
     // do nothing stamp value 1967
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Vector<core::ComplexVector_int64_t_O,core::SimpleVector_int64_t_O,core::ComplexVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int64_t_O:
{
     // stamp value 1971
    core::ComplexVector_int64_t_O* obj_gc_safe = reinterpret_cast<core::ComplexVector_int64_t_O*>(client);
    GC<core::ComplexVector_int64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1975
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int64_t_O,core::SimpleMDArray_int64_t_O,core::SimpleVector_int64_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int64_t_O:
{
     // stamp value 1979
    core::MDArray_int64_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int64_t_O*>(client);
    GC<core::MDArray_int64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1983
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte32_t_O,core::SimpleMDArray_byte32_t_O,core::SimpleVector_byte32_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte32_t_O:
{
     // stamp value 1987
    core::MDArray_byte32_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte32_t_O*>(client);
    GC<core::MDArray_byte32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_:
{
     // do nothing stamp value 1991
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte2_t_O,core::SimpleMDArray_byte2_t_O,core::SimpleVector_byte2_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte2_t_O:
{
     // stamp value 1995
    core::MDArray_byte2_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte2_t_O*>(client);
    GC<core::MDArray_byte2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_:
{
     // do nothing stamp value 1999
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArrayCharacter_O,core::SimpleMDArrayCharacter_O,core::SimpleCharacterString_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArrayCharacter_O:
{
     // stamp value 2003
    core::MDArrayCharacter_O* obj_gc_safe = reinterpret_cast<core::MDArrayCharacter_O*>(client);
    GC<core::MDArrayCharacter_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_:
{
     // do nothing stamp value 2007
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArrayBit_O,core::SimpleMDArrayBit_O,core::SimpleBitVector_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArrayBit_O:
{
     // stamp value 2011
    core::MDArrayBit_O* obj_gc_safe = reinterpret_cast<core::MDArrayBit_O*>(client);
    GC<core::MDArrayBit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_:
{
     // do nothing stamp value 2015
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_byte16_t_O,core::SimpleMDArray_byte16_t_O,core::SimpleVector_byte16_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte16_t_O:
{
     // stamp value 2019
    core::MDArray_byte16_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_byte16_t_O*>(client);
    GC<core::MDArray_byte16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_:
{
     // do nothing stamp value 2023
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_int4_t_O,core::SimpleMDArray_int4_t_O,core::SimpleVector_int4_t_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int4_t_O:
{
     // stamp value 2027
    core::MDArray_int4_t_O* obj_gc_safe = reinterpret_cast<core::MDArray_int4_t_O*>(client);
    GC<core::MDArray_int4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_:
{
     // do nothing stamp value 2031
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_Array<core::MDArray_double_O,core::SimpleMDArray_double_O,core::SimpleVector_double_O,core::MDArray_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_double_O:
{
     // stamp value 2035
    core::MDArray_double_O* obj_gc_safe = reinterpret_cast<core::MDArray_double_O*>(client);
    GC<core::MDArray_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__AbstractSimpleVector_O:
{
     // stamp value 2039
    core::AbstractSimpleVector_O* obj_gc_safe = reinterpret_cast<core::AbstractSimpleVector_O*>(client);
    GC<core::AbstractSimpleVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2043
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_byte32_t_O,unsigned int,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte32_t_O:
{
     // stamp value 2047
    core::SimpleVector_byte32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte32_t_O*>(client);
    GC<core::SimpleVector_byte32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2051
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_size_t_O,unsigned long,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_size_t_O:
{
     // stamp value 2055
    core::SimpleVector_size_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_size_t_O*>(client);
    GC<core::SimpleVector_size_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2059
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_double_O,double,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_double_O:
{
     // stamp value 2063
    core::SimpleVector_double_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_double_O*>(client);
    GC<core::SimpleVector_double_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_:
{
     // do nothing stamp value 2067
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleVector_int2_t_O,2,1>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int2_t_O:
{
     // stamp value 2071
    core::SimpleVector_int2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int2_t_O*>(client);
    GC<core::SimpleVector_int2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2075
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_int64_t_O,long,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int64_t_O:
{
     // stamp value 2079
    core::SimpleVector_int64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int64_t_O*>(client);
    GC<core::SimpleVector_int64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2083
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_int8_t_O,signed char,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int8_t_O:
{
     // stamp value 2087
    core::SimpleVector_int8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int8_t_O*>(client);
    GC<core::SimpleVector_int8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_:
{
     // do nothing stamp value 2091
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleVector_byte4_t_O,4,0>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte4_t_O:
{
     // stamp value 2095
    core::SimpleVector_byte4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte4_t_O*>(client);
    GC<core::SimpleVector_byte4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2099
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<geom::SimpleVectorCoordinate_O,Vector3,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_geom__SimpleVectorCoordinate_O:
{
     // stamp value 2103
    geom::SimpleVectorCoordinate_O* obj_gc_safe = reinterpret_cast<geom::SimpleVectorCoordinate_O*>(client);
    GC<geom::SimpleVectorCoordinate_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleString_O:
{
     // stamp value 2107
    core::SimpleString_O* obj_gc_safe = reinterpret_cast<core::SimpleString_O*>(client);
    GC<core::SimpleString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_:
{
     // do nothing stamp value 2111
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleBaseString_O,unsigned char,core::SimpleString_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleBaseString_O:
{
     // stamp value 2115
    core::SimpleBaseString_O* obj_gc_safe = reinterpret_cast<core::SimpleBaseString_O*>(client);
    GC<core::SimpleBaseString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleCharacterString_O_unsigned_int_core__SimpleString_O_:
{
     // do nothing stamp value 2119
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleCharacterString_O,unsigned int,core::SimpleString_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleCharacterString_O:
{
     // stamp value 2123
    core::SimpleCharacterString_O* obj_gc_safe = reinterpret_cast<core::SimpleCharacterString_O*>(client);
    GC<core::SimpleCharacterString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2127
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_int16_t_O,short,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int16_t_O:
{
     // stamp value 2131
    core::SimpleVector_int16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int16_t_O*>(client);
    GC<core::SimpleVector_int16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2135
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_byte16_t_O,unsigned short,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte16_t_O:
{
     // stamp value 2139
    core::SimpleVector_byte16_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte16_t_O*>(client);
    GC<core::SimpleVector_byte16_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_:
{
     // do nothing stamp value 2143
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleBitVector_O,1,0>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleBitVector_O:
{
     // stamp value 2147
    core::SimpleBitVector_O* obj_gc_safe = reinterpret_cast<core::SimpleBitVector_O*>(client);
    GC<core::SimpleBitVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_:
{
     // do nothing stamp value 2151
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleVector_int4_t_O,4,1>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int4_t_O:
{
     // stamp value 2155
    core::SimpleVector_int4_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int4_t_O*>(client);
    GC<core::SimpleVector_int4_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2159
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_byte64_t_O,unsigned long,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte64_t_O:
{
     // stamp value 2163
    core::SimpleVector_byte64_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte64_t_O*>(client);
    GC<core::SimpleVector_byte64_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2167
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_fixnum_O,long,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_fixnum_O:
{
     // stamp value 2171
    core::SimpleVector_fixnum_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_fixnum_O*>(client);
    GC<core::SimpleVector_fixnum_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2175
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_float_O,float,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_float_O:
{
     // stamp value 2179
    core::SimpleVector_float_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_float_O*>(client);
    GC<core::SimpleVector_float_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2183
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_O,gctools::smart_ptr<core::T_O>,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_O:
{
     // stamp value 2187
    core::SimpleVector_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_O*>(client);
    GC<core::SimpleVector_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2191
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_byte8_t_O,unsigned char,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte8_t_O:
{
     // stamp value 2195
    core::SimpleVector_byte8_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte8_t_O*>(client);
    GC<core::SimpleVector_byte8_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_:
{
     // do nothing stamp value 2199
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleBitUnitVector<core::SimpleVector_byte2_t_O,2,0>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte2_t_O:
{
     // stamp value 2203
    core::SimpleVector_byte2_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_byte2_t_O*>(client);
    GC<core::SimpleVector_byte2_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_:
{
     // do nothing stamp value 2207
    THROW_HARD_ERROR(BF("Should never deallocate object core::template_SimpleVector<core::SimpleVector_int32_t_O,int,core::AbstractSimpleVector_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int32_t_O:
{
     // stamp value 2211
    core::SimpleVector_int32_t_O* obj_gc_safe = reinterpret_cast<core::SimpleVector_int32_t_O*>(client);
    GC<core::SimpleVector_int32_t_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Character_dummy_O:
{
     // stamp value 2215
    core::Character_dummy_O* obj_gc_safe = reinterpret_cast<core::Character_dummy_O*>(client);
    GC<core::Character_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DataLayout_O:
{
     // stamp value 2219
    llvmo::DataLayout_O* obj_gc_safe = reinterpret_cast<llvmo::DataLayout_O*>(client);
    GC<llvmo::DataLayout_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__LoadTimeValues_O:
{
     // stamp value 2223
    core::LoadTimeValues_O* obj_gc_safe = reinterpret_cast<core::LoadTimeValues_O*>(client);
    GC<core::LoadTimeValues_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Readtable_O:
{
     // stamp value 2227
    core::Readtable_O* obj_gc_safe = reinterpret_cast<core::Readtable_O*>(client);
    GC<core::Readtable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__PosixTime_O:
{
     // stamp value 2231
    core::PosixTime_O* obj_gc_safe = reinterpret_cast<core::PosixTime_O*>(client);
    GC<core::PosixTime_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__StructLayout_O:
{
     // stamp value 2235
    llvmo::StructLayout_O* obj_gc_safe = reinterpret_cast<llvmo::StructLayout_O*>(client);
    GC<llvmo::StructLayout_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ExternalObject_O:
{
     // stamp value 2239
    core::ExternalObject_O* obj_gc_safe = reinterpret_cast<core::ExternalObject_O*>(client);
    GC<core::ExternalObject_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Pass_O:
{
     // stamp value 2243
    llvmo::Pass_O* obj_gc_safe = reinterpret_cast<llvmo::Pass_O*>(client);
    GC<llvmo::Pass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ModulePass_O:
{
     // stamp value 2247
    llvmo::ModulePass_O* obj_gc_safe = reinterpret_cast<llvmo::ModulePass_O*>(client);
    GC<llvmo::ModulePass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ImmutablePass_O:
{
     // stamp value 2251
    llvmo::ImmutablePass_O* obj_gc_safe = reinterpret_cast<llvmo::ImmutablePass_O*>(client);
    GC<llvmo::ImmutablePass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O:
{
     // stamp value 2255
    llvmo::TargetLibraryInfoWrapperPass_O* obj_gc_safe = reinterpret_cast<llvmo::TargetLibraryInfoWrapperPass_O*>(client);
    GC<llvmo::TargetLibraryInfoWrapperPass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FunctionPass_O:
{
     // stamp value 2259
    llvmo::FunctionPass_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPass_O*>(client);
    GC<llvmo::FunctionPass_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MCSubtargetInfo_O:
{
     // stamp value 2263
    llvmo::MCSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::MCSubtargetInfo_O*>(client);
    GC<llvmo::MCSubtargetInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetSubtargetInfo_O:
{
     // stamp value 2267
    llvmo::TargetSubtargetInfo_O* obj_gc_safe = reinterpret_cast<llvmo::TargetSubtargetInfo_O*>(client);
    GC<llvmo::TargetSubtargetInfo_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__JITDylib_O:
{
     // stamp value 2271
    llvmo::JITDylib_O* obj_gc_safe = reinterpret_cast<llvmo::JITDylib_O*>(client);
    GC<llvmo::JITDylib_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIContext_O:
{
     // stamp value 2275
    llvmo::DIContext_O* obj_gc_safe = reinterpret_cast<llvmo::DIContext_O*>(client);
    GC<llvmo::DIContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__IRBuilderBase_O:
{
     // stamp value 2279
    llvmo::IRBuilderBase_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilderBase_O*>(client);
    GC<llvmo::IRBuilderBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__IRBuilder_O:
{
     // stamp value 2283
    llvmo::IRBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::IRBuilder_O*>(client);
    GC<llvmo::IRBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__APInt_O:
{
     // stamp value 2287
    llvmo::APInt_O* obj_gc_safe = reinterpret_cast<llvmo::APInt_O*>(client);
    GC<llvmo::APInt_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIBuilder_O:
{
     // stamp value 2291
    llvmo::DIBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::DIBuilder_O*>(client);
    GC<llvmo::DIBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__SectionedAddress_O:
{
     // stamp value 2295
    llvmo::SectionedAddress_O* obj_gc_safe = reinterpret_cast<llvmo::SectionedAddress_O*>(client);
    GC<llvmo::SectionedAddress_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__EngineBuilder_O:
{
     // stamp value 2299
    llvmo::EngineBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::EngineBuilder_O*>(client);
    GC<llvmo::EngineBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PassManagerBase_O:
{
     // stamp value 2303
    llvmo::PassManagerBase_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBase_O*>(client);
    GC<llvmo::PassManagerBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PassManager_O:
{
     // stamp value 2307
    llvmo::PassManager_O* obj_gc_safe = reinterpret_cast<llvmo::PassManager_O*>(client);
    GC<llvmo::PassManager_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FunctionPassManager_O:
{
     // stamp value 2311
    llvmo::FunctionPassManager_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionPassManager_O*>(client);
    GC<llvmo::FunctionPassManager_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Value_O:
{
     // stamp value 2315
    llvmo::Value_O* obj_gc_safe = reinterpret_cast<llvmo::Value_O*>(client);
    GC<llvmo::Value_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__User_O:
{
     // stamp value 2319
    llvmo::User_O* obj_gc_safe = reinterpret_cast<llvmo::User_O*>(client);
    GC<llvmo::User_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Instruction_O:
{
     // stamp value 2323
    llvmo::Instruction_O* obj_gc_safe = reinterpret_cast<llvmo::Instruction_O*>(client);
    GC<llvmo::Instruction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__StoreInst_O:
{
     // stamp value 2327
    llvmo::StoreInst_O* obj_gc_safe = reinterpret_cast<llvmo::StoreInst_O*>(client);
    GC<llvmo::StoreInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__UnreachableInst_O:
{
     // stamp value 2331
    llvmo::UnreachableInst_O* obj_gc_safe = reinterpret_cast<llvmo::UnreachableInst_O*>(client);
    GC<llvmo::UnreachableInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ResumeInst_O:
{
     // stamp value 2335
    llvmo::ResumeInst_O* obj_gc_safe = reinterpret_cast<llvmo::ResumeInst_O*>(client);
    GC<llvmo::ResumeInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__AtomicCmpXchgInst_O:
{
     // stamp value 2339
    llvmo::AtomicCmpXchgInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicCmpXchgInst_O*>(client);
    GC<llvmo::AtomicCmpXchgInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FenceInst_O:
{
     // stamp value 2343
    llvmo::FenceInst_O* obj_gc_safe = reinterpret_cast<llvmo::FenceInst_O*>(client);
    GC<llvmo::FenceInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__CallBase_O:
{
     // stamp value 2347
    llvmo::CallBase_O* obj_gc_safe = reinterpret_cast<llvmo::CallBase_O*>(client);
    GC<llvmo::CallBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__CallInst_O:
{
     // stamp value 2351
    llvmo::CallInst_O* obj_gc_safe = reinterpret_cast<llvmo::CallInst_O*>(client);
    GC<llvmo::CallInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__InvokeInst_O:
{
     // stamp value 2355
    llvmo::InvokeInst_O* obj_gc_safe = reinterpret_cast<llvmo::InvokeInst_O*>(client);
    GC<llvmo::InvokeInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__BranchInst_O:
{
     // stamp value 2359
    llvmo::BranchInst_O* obj_gc_safe = reinterpret_cast<llvmo::BranchInst_O*>(client);
    GC<llvmo::BranchInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__UnaryInstruction_O:
{
     // stamp value 2363
    llvmo::UnaryInstruction_O* obj_gc_safe = reinterpret_cast<llvmo::UnaryInstruction_O*>(client);
    GC<llvmo::UnaryInstruction_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__VAArgInst_O:
{
     // stamp value 2367
    llvmo::VAArgInst_O* obj_gc_safe = reinterpret_cast<llvmo::VAArgInst_O*>(client);
    GC<llvmo::VAArgInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__AllocaInst_O:
{
     // stamp value 2371
    llvmo::AllocaInst_O* obj_gc_safe = reinterpret_cast<llvmo::AllocaInst_O*>(client);
    GC<llvmo::AllocaInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LoadInst_O:
{
     // stamp value 2375
    llvmo::LoadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LoadInst_O*>(client);
    GC<llvmo::LoadInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__SwitchInst_O:
{
     // stamp value 2379
    llvmo::SwitchInst_O* obj_gc_safe = reinterpret_cast<llvmo::SwitchInst_O*>(client);
    GC<llvmo::SwitchInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__AtomicRMWInst_O:
{
     // stamp value 2383
    llvmo::AtomicRMWInst_O* obj_gc_safe = reinterpret_cast<llvmo::AtomicRMWInst_O*>(client);
    GC<llvmo::AtomicRMWInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LandingPadInst_O:
{
     // stamp value 2387
    llvmo::LandingPadInst_O* obj_gc_safe = reinterpret_cast<llvmo::LandingPadInst_O*>(client);
    GC<llvmo::LandingPadInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ReturnInst_O:
{
     // stamp value 2391
    llvmo::ReturnInst_O* obj_gc_safe = reinterpret_cast<llvmo::ReturnInst_O*>(client);
    GC<llvmo::ReturnInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PHINode_O:
{
     // stamp value 2395
    llvmo::PHINode_O* obj_gc_safe = reinterpret_cast<llvmo::PHINode_O*>(client);
    GC<llvmo::PHINode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__IndirectBrInst_O:
{
     // stamp value 2399
    llvmo::IndirectBrInst_O* obj_gc_safe = reinterpret_cast<llvmo::IndirectBrInst_O*>(client);
    GC<llvmo::IndirectBrInst_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Constant_O:
{
     // stamp value 2403
    llvmo::Constant_O* obj_gc_safe = reinterpret_cast<llvmo::Constant_O*>(client);
    GC<llvmo::Constant_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__GlobalValue_O:
{
     // stamp value 2407
    llvmo::GlobalValue_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalValue_O*>(client);
    GC<llvmo::GlobalValue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Function_O:
{
     // stamp value 2411
    llvmo::Function_O* obj_gc_safe = reinterpret_cast<llvmo::Function_O*>(client);
    GC<llvmo::Function_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__GlobalVariable_O:
{
     // stamp value 2415
    llvmo::GlobalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::GlobalVariable_O*>(client);
    GC<llvmo::GlobalVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__BlockAddress_O:
{
     // stamp value 2419
    llvmo::BlockAddress_O* obj_gc_safe = reinterpret_cast<llvmo::BlockAddress_O*>(client);
    GC<llvmo::BlockAddress_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantStruct_O:
{
     // stamp value 2423
    llvmo::ConstantStruct_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantStruct_O*>(client);
    GC<llvmo::ConstantStruct_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantInt_O:
{
     // stamp value 2427
    llvmo::ConstantInt_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantInt_O*>(client);
    GC<llvmo::ConstantInt_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantFP_O:
{
     // stamp value 2431
    llvmo::ConstantFP_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantFP_O*>(client);
    GC<llvmo::ConstantFP_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantPointerNull_O:
{
     // stamp value 2435
    llvmo::ConstantPointerNull_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantPointerNull_O*>(client);
    GC<llvmo::ConstantPointerNull_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantDataSequential_O:
{
     // stamp value 2439
    llvmo::ConstantDataSequential_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataSequential_O*>(client);
    GC<llvmo::ConstantDataSequential_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantDataArray_O:
{
     // stamp value 2443
    llvmo::ConstantDataArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantDataArray_O*>(client);
    GC<llvmo::ConstantDataArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantExpr_O:
{
     // stamp value 2447
    llvmo::ConstantExpr_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantExpr_O*>(client);
    GC<llvmo::ConstantExpr_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__UndefValue_O:
{
     // stamp value 2451
    llvmo::UndefValue_O* obj_gc_safe = reinterpret_cast<llvmo::UndefValue_O*>(client);
    GC<llvmo::UndefValue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantArray_O:
{
     // stamp value 2455
    llvmo::ConstantArray_O* obj_gc_safe = reinterpret_cast<llvmo::ConstantArray_O*>(client);
    GC<llvmo::ConstantArray_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Argument_O:
{
     // stamp value 2459
    llvmo::Argument_O* obj_gc_safe = reinterpret_cast<llvmo::Argument_O*>(client);
    GC<llvmo::Argument_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__BasicBlock_O:
{
     // stamp value 2463
    llvmo::BasicBlock_O* obj_gc_safe = reinterpret_cast<llvmo::BasicBlock_O*>(client);
    GC<llvmo::BasicBlock_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MetadataAsValue_O:
{
     // stamp value 2467
    llvmo::MetadataAsValue_O* obj_gc_safe = reinterpret_cast<llvmo::MetadataAsValue_O*>(client);
    GC<llvmo::MetadataAsValue_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ThreadSafeContext_O:
{
     // stamp value 2471
    llvmo::ThreadSafeContext_O* obj_gc_safe = reinterpret_cast<llvmo::ThreadSafeContext_O*>(client);
    GC<llvmo::ThreadSafeContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetMachine_O:
{
     // stamp value 2475
    llvmo::TargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::TargetMachine_O*>(client);
    GC<llvmo::TargetMachine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LLVMTargetMachine_O:
{
     // stamp value 2479
    llvmo::LLVMTargetMachine_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMTargetMachine_O*>(client);
    GC<llvmo::LLVMTargetMachine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Triple_O:
{
     // stamp value 2483
    llvmo::Triple_O* obj_gc_safe = reinterpret_cast<llvmo::Triple_O*>(client);
    GC<llvmo::Triple_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LLVMContext_O:
{
     // stamp value 2487
    llvmo::LLVMContext_O* obj_gc_safe = reinterpret_cast<llvmo::LLVMContext_O*>(client);
    GC<llvmo::LLVMContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PassManagerBuilder_O:
{
     // stamp value 2491
    llvmo::PassManagerBuilder_O* obj_gc_safe = reinterpret_cast<llvmo::PassManagerBuilder_O*>(client);
    GC<llvmo::PassManagerBuilder_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ExecutionEngine_O:
{
     // stamp value 2495
    llvmo::ExecutionEngine_O* obj_gc_safe = reinterpret_cast<llvmo::ExecutionEngine_O*>(client);
    GC<llvmo::ExecutionEngine_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Type_O:
{
     // stamp value 2499
    llvmo::Type_O* obj_gc_safe = reinterpret_cast<llvmo::Type_O*>(client);
    GC<llvmo::Type_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PointerType_O:
{
     // stamp value 2503
    llvmo::PointerType_O* obj_gc_safe = reinterpret_cast<llvmo::PointerType_O*>(client);
    GC<llvmo::PointerType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ArrayType_O:
{
     // stamp value 2507
    llvmo::ArrayType_O* obj_gc_safe = reinterpret_cast<llvmo::ArrayType_O*>(client);
    GC<llvmo::ArrayType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FunctionType_O:
{
     // stamp value 2511
    llvmo::FunctionType_O* obj_gc_safe = reinterpret_cast<llvmo::FunctionType_O*>(client);
    GC<llvmo::FunctionType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__IntegerType_O:
{
     // stamp value 2515
    llvmo::IntegerType_O* obj_gc_safe = reinterpret_cast<llvmo::IntegerType_O*>(client);
    GC<llvmo::IntegerType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__VectorType_O:
{
     // stamp value 2519
    llvmo::VectorType_O* obj_gc_safe = reinterpret_cast<llvmo::VectorType_O*>(client);
    GC<llvmo::VectorType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__StructType_O:
{
     // stamp value 2523
    llvmo::StructType_O* obj_gc_safe = reinterpret_cast<llvmo::StructType_O*>(client);
    GC<llvmo::StructType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetPassConfig_O:
{
     // stamp value 2527
    llvmo::TargetPassConfig_O* obj_gc_safe = reinterpret_cast<llvmo::TargetPassConfig_O*>(client);
    GC<llvmo::TargetPassConfig_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__APFloat_O:
{
     // stamp value 2531
    llvmo::APFloat_O* obj_gc_safe = reinterpret_cast<llvmo::APFloat_O*>(client);
    GC<llvmo::APFloat_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Metadata_O:
{
     // stamp value 2535
    llvmo::Metadata_O* obj_gc_safe = reinterpret_cast<llvmo::Metadata_O*>(client);
    GC<llvmo::Metadata_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MDNode_O:
{
     // stamp value 2539
    llvmo::MDNode_O* obj_gc_safe = reinterpret_cast<llvmo::MDNode_O*>(client);
    GC<llvmo::MDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILocation_O:
{
     // stamp value 2543
    llvmo::DILocation_O* obj_gc_safe = reinterpret_cast<llvmo::DILocation_O*>(client);
    GC<llvmo::DILocation_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DINode_O:
{
     // stamp value 2547
    llvmo::DINode_O* obj_gc_safe = reinterpret_cast<llvmo::DINode_O*>(client);
    GC<llvmo::DINode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIVariable_O:
{
     // stamp value 2551
    llvmo::DIVariable_O* obj_gc_safe = reinterpret_cast<llvmo::DIVariable_O*>(client);
    GC<llvmo::DIVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILocalVariable_O:
{
     // stamp value 2555
    llvmo::DILocalVariable_O* obj_gc_safe = reinterpret_cast<llvmo::DILocalVariable_O*>(client);
    GC<llvmo::DILocalVariable_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIScope_O:
{
     // stamp value 2559
    llvmo::DIScope_O* obj_gc_safe = reinterpret_cast<llvmo::DIScope_O*>(client);
    GC<llvmo::DIScope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIFile_O:
{
     // stamp value 2563
    llvmo::DIFile_O* obj_gc_safe = reinterpret_cast<llvmo::DIFile_O*>(client);
    GC<llvmo::DIFile_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILocalScope_O:
{
     // stamp value 2567
    llvmo::DILocalScope_O* obj_gc_safe = reinterpret_cast<llvmo::DILocalScope_O*>(client);
    GC<llvmo::DILocalScope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DISubprogram_O:
{
     // stamp value 2571
    llvmo::DISubprogram_O* obj_gc_safe = reinterpret_cast<llvmo::DISubprogram_O*>(client);
    GC<llvmo::DISubprogram_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILexicalBlockBase_O:
{
     // stamp value 2575
    llvmo::DILexicalBlockBase_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlockBase_O*>(client);
    GC<llvmo::DILexicalBlockBase_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILexicalBlock_O:
{
     // stamp value 2579
    llvmo::DILexicalBlock_O* obj_gc_safe = reinterpret_cast<llvmo::DILexicalBlock_O*>(client);
    GC<llvmo::DILexicalBlock_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DICompileUnit_O:
{
     // stamp value 2583
    llvmo::DICompileUnit_O* obj_gc_safe = reinterpret_cast<llvmo::DICompileUnit_O*>(client);
    GC<llvmo::DICompileUnit_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIType_O:
{
     // stamp value 2587
    llvmo::DIType_O* obj_gc_safe = reinterpret_cast<llvmo::DIType_O*>(client);
    GC<llvmo::DIType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DICompositeType_O:
{
     // stamp value 2591
    llvmo::DICompositeType_O* obj_gc_safe = reinterpret_cast<llvmo::DICompositeType_O*>(client);
    GC<llvmo::DICompositeType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIDerivedType_O:
{
     // stamp value 2595
    llvmo::DIDerivedType_O* obj_gc_safe = reinterpret_cast<llvmo::DIDerivedType_O*>(client);
    GC<llvmo::DIDerivedType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DISubroutineType_O:
{
     // stamp value 2599
    llvmo::DISubroutineType_O* obj_gc_safe = reinterpret_cast<llvmo::DISubroutineType_O*>(client);
    GC<llvmo::DISubroutineType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIBasicType_O:
{
     // stamp value 2603
    llvmo::DIBasicType_O* obj_gc_safe = reinterpret_cast<llvmo::DIBasicType_O*>(client);
    GC<llvmo::DIBasicType_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIExpression_O:
{
     // stamp value 2607
    llvmo::DIExpression_O* obj_gc_safe = reinterpret_cast<llvmo::DIExpression_O*>(client);
    GC<llvmo::DIExpression_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ValueAsMetadata_O:
{
     // stamp value 2611
    llvmo::ValueAsMetadata_O* obj_gc_safe = reinterpret_cast<llvmo::ValueAsMetadata_O*>(client);
    GC<llvmo::ValueAsMetadata_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MDString_O:
{
     // stamp value 2615
    llvmo::MDString_O* obj_gc_safe = reinterpret_cast<llvmo::MDString_O*>(client);
    GC<llvmo::MDString_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Test_O:
{
     // stamp value 2619
    core::Test_O* obj_gc_safe = reinterpret_cast<core::Test_O*>(client);
    GC<core::Test_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__NamedMDNode_O:
{
     // stamp value 2623
    llvmo::NamedMDNode_O* obj_gc_safe = reinterpret_cast<llvmo::NamedMDNode_O*>(client);
    GC<llvmo::NamedMDNode_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DWARFContext_O:
{
     // stamp value 2627
    llvmo::DWARFContext_O* obj_gc_safe = reinterpret_cast<llvmo::DWARFContext_O*>(client);
    GC<llvmo::DWARFContext_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetOptions_O:
{
     // stamp value 2631
    llvmo::TargetOptions_O* obj_gc_safe = reinterpret_cast<llvmo::TargetOptions_O*>(client);
    GC<llvmo::TargetOptions_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Module_O:
{
     // stamp value 2635
    llvmo::Module_O* obj_gc_safe = reinterpret_cast<llvmo::Module_O*>(client);
    GC<llvmo::Module_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Target_O:
{
     // stamp value 2639
    llvmo::Target_O* obj_gc_safe = reinterpret_cast<llvmo::Target_O*>(client);
    GC<llvmo::Target_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Linker_O:
{
     // stamp value 2643
    llvmo::Linker_O* obj_gc_safe = reinterpret_cast<llvmo::Linker_O*>(client);
    GC<llvmo::Linker_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Rack_O:
{
     // stamp value 2647
    core::Rack_O* obj_gc_safe = reinterpret_cast<core::Rack_O*>(client);
    GC<core::Rack_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SmallMultimap_O:
{
     // stamp value 2651
    core::SmallMultimap_O* obj_gc_safe = reinterpret_cast<core::SmallMultimap_O*>(client);
    GC<core::SmallMultimap_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Scope_O:
{
     // stamp value 2655
    core::Scope_O* obj_gc_safe = reinterpret_cast<core::Scope_O*>(client);
    GC<core::Scope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FileScope_O:
{
     // stamp value 2659
    core::FileScope_O* obj_gc_safe = reinterpret_cast<core::FileScope_O*>(client);
    GC<core::FileScope_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Path_O:
{
     // stamp value 2663
    core::Path_O* obj_gc_safe = reinterpret_cast<core::Path_O*>(client);
    GC<core::Path_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Pathname_O:
{
     // stamp value 2667
    core::Pathname_O* obj_gc_safe = reinterpret_cast<core::Pathname_O*>(client);
    GC<core::Pathname_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__LogicalPathname_O:
{
     // stamp value 2671
    core::LogicalPathname_O* obj_gc_safe = reinterpret_cast<core::LogicalPathname_O*>(client);
    GC<core::LogicalPathname_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Stream_O:
{
     // stamp value 2675
    core::Stream_O* obj_gc_safe = reinterpret_cast<core::Stream_O*>(client);
    GC<core::Stream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__AnsiStream_O:
{
     // stamp value 2679
    core::AnsiStream_O* obj_gc_safe = reinterpret_cast<core::AnsiStream_O*>(client);
    GC<core::AnsiStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__TwoWayStream_O:
{
     // stamp value 2683
    core::TwoWayStream_O* obj_gc_safe = reinterpret_cast<core::TwoWayStream_O*>(client);
    GC<core::TwoWayStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__SynonymStream_O:
{
     // stamp value 2687
    core::SynonymStream_O* obj_gc_safe = reinterpret_cast<core::SynonymStream_O*>(client);
    GC<core::SynonymStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__StringStream_O:
{
     // stamp value 2691
    core::StringStream_O* obj_gc_safe = reinterpret_cast<core::StringStream_O*>(client);
    GC<core::StringStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__StringOutputStream_O:
{
     // stamp value 2695
    core::StringOutputStream_O* obj_gc_safe = reinterpret_cast<core::StringOutputStream_O*>(client);
    GC<core::StringOutputStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__StringInputStream_O:
{
     // stamp value 2699
    core::StringInputStream_O* obj_gc_safe = reinterpret_cast<core::StringInputStream_O*>(client);
    GC<core::StringInputStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__EchoStream_O:
{
     // stamp value 2703
    core::EchoStream_O* obj_gc_safe = reinterpret_cast<core::EchoStream_O*>(client);
    GC<core::EchoStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__ConcatenatedStream_O:
{
     // stamp value 2707
    core::ConcatenatedStream_O* obj_gc_safe = reinterpret_cast<core::ConcatenatedStream_O*>(client);
    GC<core::ConcatenatedStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FileStream_O:
{
     // stamp value 2711
    core::FileStream_O* obj_gc_safe = reinterpret_cast<core::FileStream_O*>(client);
    GC<core::FileStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__IOFileStream_O:
{
     // stamp value 2715
    core::IOFileStream_O* obj_gc_safe = reinterpret_cast<core::IOFileStream_O*>(client);
    GC<core::IOFileStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__IOStreamStream_O:
{
     // stamp value 2719
    core::IOStreamStream_O* obj_gc_safe = reinterpret_cast<core::IOStreamStream_O*>(client);
    GC<core::IOStreamStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__BroadcastStream_O:
{
     // stamp value 2723
    core::BroadcastStream_O* obj_gc_safe = reinterpret_cast<core::BroadcastStream_O*>(client);
    GC<core::BroadcastStream_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Package_O:
{
     // stamp value 2727
    core::Package_O* obj_gc_safe = reinterpret_cast<core::Package_O*>(client);
    GC<core::Package_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__FileStatus_O:
{
     // stamp value 2731
    core::FileStatus_O* obj_gc_safe = reinterpret_cast<core::FileStatus_O*>(client);
    GC<core::FileStatus_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__InvocationHistoryFrameIterator_O:
{
     // stamp value 2735
    core::InvocationHistoryFrameIterator_O* obj_gc_safe = reinterpret_cast<core::InvocationHistoryFrameIterator_O*>(client);
    GC<core::InvocationHistoryFrameIterator_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__DirectoryEntry_O:
{
     // stamp value 2739
    core::DirectoryEntry_O* obj_gc_safe = reinterpret_cast<core::DirectoryEntry_O*>(client);
    GC<core::DirectoryEntry_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__LightUserData_O:
{
     // stamp value 2743
    core::LightUserData_O* obj_gc_safe = reinterpret_cast<core::LightUserData_O*>(client);
    GC<core::LightUserData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__UserData_O:
{
     // stamp value 2747
    core::UserData_O* obj_gc_safe = reinterpret_cast<core::UserData_O*>(client);
    GC<core::UserData_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Cons_O:
{
     // stamp value 2751
    core::Cons_O* obj_gc_safe = reinterpret_cast<core::Cons_O*>(client);
    GC<core::Cons_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__VaList_dummy_O:
{
     // stamp value 2755
    core::VaList_dummy_O* obj_gc_safe = reinterpret_cast<core::VaList_dummy_O*>(client);
    GC<core::VaList_dummy_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_core__Lisp_O:
{
     // stamp value 2759
    core::Lisp_O* obj_gc_safe = reinterpret_cast<core::Lisp_O*>(client);
    GC<core::Lisp_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_:
{
     // do nothing stamp value 2763
    THROW_HARD_ERROR(BF("Should never deallocate object clang::RecursiveASTVisitor<asttooling::AstVisitor_O>"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__AstVisitor_O:
{
     // stamp value 2767
    asttooling::AstVisitor_O* obj_gc_safe = reinterpret_cast<asttooling::AstVisitor_O*>(client);
    GC<asttooling::AstVisitor_O>::deallocate_unmanaged_instance(obj_gc_safe);
    return;
}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCContainer:
{
     // do nothing stamp value 2771
    THROW_HARD_ERROR(BF("Should never deallocate object gctools::GCContainer"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__:
{
     // stamp value 2775
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::BackboneDependentRotamerSet_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_:
{
     // stamp value 2779
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::AtomicInfo>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__:
{
     // stamp value 2783
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ChemInfoNode_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_:
{
     // stamp value 2787
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyChiralRestraint>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__:
{
     // stamp value 2791
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondToAtomTest_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__:
{
     // stamp value 2795
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoConfiguration_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_short_:
{
     // stamp value 2799
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<short>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__:
{
     // stamp value 2803
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Rotamer_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_unsigned_long_:
{
     // stamp value 2807
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<unsigned long>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___:
{
     // stamp value 2811
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::SmallOrderedSet<gctools::smart_ptr<chem::Atom_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__:
{
     // stamp value 2815
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFTypeRule_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_:
{
     // stamp value 2819
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<4,0>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_:
{
     // stamp value 2823
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::SymbolClassHolderPair>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___:
{
     // stamp value 2827
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Symbol_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_:
{
     // stamp value 2831
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::FFNonbondCrossTerm>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__:
{
     // stamp value 2835
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChainNode_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_:
{
     // stamp value 2839
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyDihedralRestraint>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___:
{
     // stamp value 2843
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__:
{
     // stamp value 2847
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFNonbond_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_unsigned_char_:
{
     // stamp value 2851
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<unsigned char>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___:
{
     // stamp value 2855
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::Array_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__:
{
     // stamp value 2859
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::Vec0<int>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___:
{
     // stamp value 2863
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::EntityNameSetBase_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_:
{
     // stamp value 2867
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyRigidBodyStaple>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__:
{
     // stamp value 2871
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_:
{
     // stamp value 2875
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAngle>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__:
{
     // stamp value 2879
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::SimpleBitVector_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__:
{
     // stamp value 2883
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Monomer_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__:
{
     // stamp value 2887
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDFragment_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___:
{
     // stamp value 2891
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::MonomerCoordinates_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__:
{
     // stamp value 2895
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::TrajectoryFrame_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_:
{
     // stamp value 2899
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::OptionalArgument>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_:
{
     // stamp value 2903
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::KeywordArgument>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_:
{
     // stamp value 2907
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::KeyEntry>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___:
{
     // stamp value 2911
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::T_O>,gctools::smart_ptr<chem::Stereoisomer_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__:
{
     // stamp value 2915
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ReportBase_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_Vector3_:
{
     // stamp value 2919
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<Vector3>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_:
{
     // stamp value 2923
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAnchorRestraint>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__:
{
     // stamp value 2927
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtom_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___:
{
     // stamp value 2931
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::SpecificContext_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_:
{
     // stamp value 2935
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::HybridizationInfo>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__:
{
     // stamp value 2939
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::MonomerNode_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___:
{
     // stamp value 2943
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__:
{
     // stamp value 2947
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_atomic<gctools::smart_ptr<core::T_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__:
{
     // stamp value 2951
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionBond_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__:
{
     // stamp value 2955
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Structure_Old_ListEntry_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__:
{
     // stamp value 2959
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,chem::EstimateStretch>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__:
{
     // stamp value 2963
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationCollectionEntry_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___:
{
     // stamp value 2967
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::BondId_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___:
{
     // stamp value 2971
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Coupling_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__:
{
     // stamp value 2975
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Matter_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___:
{
     // stamp value 2979
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::AtomIndexer_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__:
{
     // stamp value 2983
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::AGEdge_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__:
{
     // stamp value 2987
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ComplexRestraint_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_:
{
     // stamp value 2991
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<2,0>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__:
{
     // stamp value 2995
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::ChiDihedral_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__:
{
     // stamp value 2999
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Coupling_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_:
{
     // stamp value 3003
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<1,0>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_:
{
     // stamp value 3007
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<2,1>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__:
{
     // stamp value 3011
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Topology_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_int_:
{
     // stamp value 3015
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<int>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___:
{
     // stamp value 3019
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::FrameRecognizer_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__:
{
     // stamp value 3023
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Stereoisomer_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__:
{
     // stamp value 3027
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Mate_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_float_:
{
     // stamp value 3031
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<float>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__:
{
     // stamp value 3035
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Atom_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__:
{
     // stamp value 3039
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Bond_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__T_O___:
{
     // stamp value 3043
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::T_O *>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_:
{
     // stamp value 3047
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyDihedral>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___:
{
     // stamp value 3051
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::MonomerNode_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_unsigned_int_:
{
     // stamp value 3055
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<unsigned int>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__:
{
     // stamp value 3059
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::BondList_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__:
{
     // stamp value 3063
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntry_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_:
{
     // stamp value 3067
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::RotamerAtom>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__:
{
     // stamp value 3071
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Cons_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_double_:
{
     // stamp value 3075
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<double>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__:
{
     // stamp value 3079
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Rotamer_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__:
{
     // stamp value 3083
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Residue_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___:
{
     // stamp value 3087
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Molecule_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__:
{
     // stamp value 3091
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<clbind::ClassRep_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_:
{
     // stamp value 3095
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::AtomPdbRec>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_:
{
     // stamp value 3099
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergySketchStretch>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_signed_char_:
{
     // stamp value 3103
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<signed char>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_:
{
     // stamp value 3107
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyOutOfZPlane>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__:
{
     // stamp value 3111
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::List_V>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___:
{
     // stamp value 3115
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Plug_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__:
{
     // stamp value 3119
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConformationExplorerEntryStage_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__:
{
     // stamp value 3123
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::CDBond_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_:
{
     // stamp value 3127
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergySketchNonbond>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_:
{
     // stamp value 3131
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::KeyValuePair>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__:
{
     // stamp value 3135
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Symbol_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__:
{
     // stamp value 3139
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Twister_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_:
{
     // stamp value 3143
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::FixedNonbondRestraint>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__:
{
     // stamp value 3147
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<adapt::QDomNode_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__:
{
     // stamp value 3151
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixInternal_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___:
{
     // stamp value 3155
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::CDFragment_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__:
{
     // stamp value 3159
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::Molecule_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_double_:
{
     // stamp value 3163
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<double>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___:
{
     // stamp value 3167
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::PdbMonomerConnectivity_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___:
{
     // stamp value 3171
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<unsigned int,gctools::smart_ptr<chem::Residue_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__:
{
     // stamp value 3175
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,unsigned int>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__:
{
     // stamp value 3179
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::PathMessage_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_:
{
     // stamp value 3183
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::RequiredArgument>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__:
{
     // stamp value 3187
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::FileScope_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__:
{
     // stamp value 3191
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ZMatrixEntry_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_:
{
     // stamp value 3195
    THROW_HARD_ERROR(BF("Should never deallocate gcbitunits gctools::GCBitUnitArray_moveable<4,1>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_:
{
     // stamp value 3199
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::SymbolStorage>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_:
{
     // stamp value 3203
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::BeyondThresholdFixedNonbondRestraint>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___:
{
     // stamp value 3207
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<int,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___:
{
     // stamp value 3211
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::DoubleFloat_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__:
{
     // stamp value 3215
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Instance_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__:
{
     // stamp value 3219
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,int>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___:
{
     // stamp value 3223
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<kinematics::RingClosingMonomerNode_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_:
{
     // stamp value 3227
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::RigidBodyNonbondCrossTerm>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__:
{
     // stamp value 3231
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::MonomerCoordinates_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_unsigned_long_:
{
     // stamp value 3235
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<unsigned long>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_:
{
     // stamp value 3239
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArraySignedLength_moveable<unsigned long>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_:
{
     // stamp value 3243
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyNonbond>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___:
{
     // stamp value 3247
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<core::T_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_:
{
     // stamp value 3251
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::AtomInfo>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__:
{
     // stamp value 3255
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::FFVdw_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__:
{
     // stamp value 3259
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::ConstitutionAtom_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_:
{
     // stamp value 3263
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyAtom>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___:
{
     // stamp value 3267
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<chem::Atom_O>,gctools::smart_ptr<chem::CDNode_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_int_:
{
     // stamp value 3271
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<int>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__:
{
     // stamp value 3275
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<gctools::smart_ptr<core::T_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_:
{
     // stamp value 3279
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<core::AuxArgument>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_:
{
     // stamp value 3283
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::ResidueOut>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_long_:
{
     // stamp value 3287
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<long>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__:
{
     // stamp value 3291
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::JointTemplate_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_:
{
     // stamp value 3295
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::RigidBodyAtomInfo>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___:
{
     // stamp value 3299
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<std::pair<gctools::smart_ptr<core::Symbol_O>,gctools::smart_ptr<chem::Topology_O>>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__:
{
     // stamp value 3303
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<chem::StereoisomerAtoms_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__:
{
     // stamp value 3307
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Package_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_unsigned_int_:
{
     // stamp value 3311
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<unsigned int>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_:
{
     // stamp value 3315
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<chem::EnergyStretch>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__:
{
     // stamp value 3319
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<core::Creator_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__:
{
     // stamp value 3323
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<gctools::smart_ptr<kinematics::Joint_O>>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_unsigned_short_:
{
     // stamp value 3327
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCArray_moveable<unsigned short>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_float_:
{
     // stamp value 3331
    THROW_HARD_ERROR(BF("Should never deallocate containers gctools::GCVector_moveable<float>"));}
obj_deallocate_unmanaged_instance_STAMPWTAG_clang__FrontendAction:
{
     // do nothing stamp value 3335
    THROW_HARD_ERROR(BF("Should never deallocate object clang::FrontendAction"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clang__ASTFrontendAction:
{
     // do nothing stamp value 3339
    THROW_HARD_ERROR(BF("Should never deallocate object clang::ASTFrontendAction"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clang__SyntaxOnlyAction:
{
     // do nothing stamp value 3343
    THROW_HARD_ERROR(BF("Should never deallocate object clang::SyntaxOnlyAction"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clang__tooling__ToolAction:
{
     // do nothing stamp value 3347
    THROW_HARD_ERROR(BF("Should never deallocate object clang::tooling::ToolAction"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clang__tooling__FrontendActionFactory:
{
     // do nothing stamp value 3351
    THROW_HARD_ERROR(BF("Should never deallocate object clang::tooling::FrontendActionFactory"));
}
obj_deallocate_unmanaged_instance_STAMPWTAG_clang__ast_matchers__MatchFinder__MatchCallback:
{
     // do nothing stamp value 3355
    THROW_HARD_ERROR(BF("Should never deallocate object clang::ast_matchers::MatchFinder::MatchCallback"));
}
#endif // defined(GC_OBJ_DEALLOCATOR)
#if defined(GC_OBJ_DEALLOCATOR_HELPERS)

#endif // defined(GC_OBJ_DEALLOCATOR_HELPERS)
#if defined(GC_OBJ_DEALLOCATOR_TABLE)
static void* OBJ_DEALLOCATOR_table[] = { 
  /* 0 */ NULL,
  /* 7 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__T_O,
  /* 11 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Unused_dummy_O,
  /* 15 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__General_O,
  /* 19 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__LambdaListHandler_O,
  /* 23 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__AttributeSet_O,
  /* 27 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Pointer_O,
  /* 31 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clasp_ffi__ForeignData_O,
  /* 35 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__CxxObject_O,
  /* 39 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__SourceLocation_O,
  /* 43 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__ChiList_O,
  /* 47 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__NumericalFunction_O,
  /* 51 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__FoldTree_O,
  /* 55 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RotamerSetBase_O,
  /* 59 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BackboneDependentRotamerSet_O,
  /* 63 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RotamerSet_O,
  /* 67 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyComponent_O,
  /* 71 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyStretch_O,
  /* 75 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyRigidBodyComponent_O,
  /* 79 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyRigidBodyStaple_O,
  /* 83 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyRigidBodyNonbond_O,
  /* 87 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyOutOfZPlane_O,
  /* 91 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergySketchNonbond_O,
  /* 95 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyDihedralRestraint_O,
  /* 99 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyChiralRestraint_O,
  /* 103 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyPointToLineRestraint_O,
  /* 107 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyDihedral_O,
  /* 111 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyNonbond_O,
  /* 115 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyPeriodicBoundaryConditionsNonbond_O,
  /* 119 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyAnchorRestraint_O,
  /* 123 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyFixedNonbondRestraint_O,
  /* 127 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergySketchStretch_O,
  /* 131 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyAngle_O,
  /* 135 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Matter_O,
  /* 139 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Aggregate_O,
  /* 143 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Atom_O,
  /* 147 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__VirtualAtom_O,
  /* 151 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Residue_O,
  /* 155 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Molecule_O,
  /* 159 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PdbWriter_O,
  /* 163 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__TrajectoryFrame_O,
  /* 167 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MDBuilder_O,
  /* 171 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Topology_O,
  /* 175 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomTable_O,
  /* 179 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CipPrioritizer_O,
  /* 183 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__IndexedObjectBag_O,
  /* 187 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__VirtualSphere_O,
  /* 191 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__TwisterDriver_O,
  /* 195 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RingFinder_O,
  /* 199 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FunctionCallee_O,
  /* 203 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__Joint_O,
  /* 207 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__JumpJoint_O,
  /* 211 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__OriginJumpJoint_O,
  /* 215 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BondedJoint_O,
  /* 219 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RootBondedJoint_O,
  /* 223 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__DelayedBondedJoint_O,
  /* 227 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SearchStatistics_O,
  /* 231 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PdbMonomerDatabase_O,
  /* 235 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Twister_O,
  /* 239 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MonomerCoordinates_O,
  /* 243 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFParameter_O,
  /* 247 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFVdw_O,
  /* 251 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFStretch_O,
  /* 255 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFPtor_O,
  /* 259 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFItor_O,
  /* 263 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFNonbond_O,
  /* 267 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFAngle_O,
  /* 271 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Restraint_O,
  /* 275 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintChiral_O,
  /* 279 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintDistance_O,
  /* 283 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintAngle_O,
  /* 287 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintAnchor_O,
  /* 291 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintFixedNonbond_O,
  /* 295 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestraintDihedral_O,
  /* 299 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomIndexer_O,
  /* 303 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__BoundingCuboid_O,
  /* 307 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoInformation_O,
  /* 311 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AddIonOctree_O,
  /* 315 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CDNode_O,
  /* 319 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OligomerPart_Base_O,
  /* 323 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OligomerPart_Link_O,
  /* 327 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OligomerPart_Monomer_O,
  /* 331 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BondId_O,
  /* 335 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CoordinateSystem_O,
  /* 339 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Bond_O,
  /* 343 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CandoDatabase_O,
  /* 347 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AbstractLargeSquareMatrix_O,
  /* 351 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SparseLargeSquareMatrix_O,
  /* 355 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FullLargeSquareMatrix_O,
  /* 359 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFBaseDb_O,
  /* 363 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFParameterBaseDb_O,
  /* 367 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFItorDb_O,
  /* 371 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFStretchDb_O,
  /* 375 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFAngleDb_O,
  /* 379 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFNonbondDb_O,
  /* 383 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFPtorDb_O,
  /* 387 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFVdwDb_O,
  /* 391 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFTypesDb_O,
  /* 395 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LibraryBase_O,
  /* 399 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ObjectFile_O,
  /* 403 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LibraryFile_O,
  /* 407 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AGVertex_O,
  /* 411 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ForceField_O,
  /* 415 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomReferenceBase_O,
  /* 419 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomReference_O,
  /* 423 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ScoringFunction_O,
  /* 427 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EnergyFunction_O,
  /* 431 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SketchFunction_O,
  /* 435 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RigidBodyEnergyFunction_O,
  /* 439 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__WildElementDict_O,
  /* 443 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__QualType_O,
  /* 447 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DITypeRefArray_O,
  /* 451 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__OVector3_O,
  /* 455 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__OVector2_O,
  /* 459 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Structure_Old_ListEntry_O,
  /* 463 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFTypeRule_O,
  /* 467 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__QDomNode_O,
  /* 471 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_mp__SharedMutex_O,
  /* 475 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConstitutionAtom_O,
  /* 479 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConstitutionVirtualAtom_O,
  /* 483 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Smirks_O,
  /* 487 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ReadAmberParameters_O,
  /* 491 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AGEdge_O,
  /* 495 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Entity_O,
  /* 499 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Stereoisomer_O,
  /* 503 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EntityNameSetBase_O,
  /* 507 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EntityNameSetWithCap_O,
  /* 511 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Mate_O,
  /* 515 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RingClosingMate_O,
  /* 519 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__EntityNameSet_O,
  /* 523 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RepresentedEntityNameSet_O,
  /* 527 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MonomerPack_O,
  /* 531 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Constitution_O,
  /* 535 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Monomer_O,
  /* 539 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OctNode_O,
  /* 543 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Structure_Old_List_O,
  /* 547 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BackboneDependentRotamerLibrary_O,
  /* 551 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ReportBase_O,
  /* 555 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StepReport_O,
  /* 559 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MessageReport_O,
  /* 563 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ForceMatchReport_O,
  /* 567 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemDraw_O,
  /* 571 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixInternal_O,
  /* 575 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixBondInternal_O,
  /* 579 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixDihedralInternal_O,
  /* 583 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixAngleInternal_O,
  /* 587 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoisomerAtom_O,
  /* 591 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoisomerVirtualAtom_O,
  /* 595 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrix_O,
  /* 599 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Isoname_O,
  /* 603 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PathMessage_O,
  /* 607 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__MonomerId_O,
  /* 611 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__JointTemplate_O,
  /* 615 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__BondedJointTemplate_O,
  /* 619 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__DelayedBondedJointTemplate_O,
  /* 623 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RootBondedJointTemplate_O,
  /* 627 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__Color_O,
  /* 631 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationCollection_O,
  /* 635 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SuperposableConformationCollection_O,
  /* 639 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__PresumedLoc_O,
  /* 643 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Coupling_O,
  /* 647 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RingCoupling_O,
  /* 651 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__DirectionalCoupling_O,
  /* 655 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__ObjectSet_O,
  /* 659 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Oligomer_O,
  /* 663 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PdbMonomerConnectivity_O,
  /* 667 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_units__Dimension_O,
  /* 671 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationExplorerEntry_O,
  /* 675 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_mp__ConditionVariable_O,
  /* 679 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PdbReader_O,
  /* 683 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SpanningLoop_O,
  /* 687 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ProperTorsion_O,
  /* 691 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ResidueList_O,
  /* 695 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SuperposeEngine_O,
  /* 699 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SuperposeSelectedAtoms_O,
  /* 703 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Command_O,
  /* 707 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoConfiguration_O,
  /* 711 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__MonomerBaseNode_O,
  /* 715 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__AggregateNode_O,
  /* 719 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__ChainNode_O,
  /* 723 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__MonomerNode_O,
  /* 727 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__RingClosingMonomerNode_O,
  /* 731 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FFNonbondCrossTermTable_O,
  /* 735 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Plug_O,
  /* 739 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__JumpPlug_O,
  /* 743 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__PlugWithMates_O,
  /* 747 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__InPlug_O,
  /* 751 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OutPlug_O,
  /* 755 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__OriginPlug_O,
  /* 759 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__Rotamer_O,
  /* 763 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MonomerContext_O,
  /* 767 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CDFragment_O,
  /* 771 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_units__Unit_O,
  /* 775 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_units__NamedUnit_O,
  /* 779 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__NativeVector_int_O,
  /* 783 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__CodeBase_O,
  /* 787 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Code_O,
  /* 791 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Library_O,
  /* 795 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__InfoDb_O,
  /* 799 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MinimizerLog_O,
  /* 803 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__GenericOctree_O,
  /* 807 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__AtomTree_O,
  /* 811 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_units__Quantity_O,
  /* 815 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemInfoMatch_O,
  /* 819 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ZMatrixEntry_O,
  /* 823 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SpecificContextSet_O,
  /* 827 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Angle_O,
  /* 831 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MacroModelFile_O,
  /* 835 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondList_O,
  /* 839 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationExplorer_O,
  /* 843 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemInfoGraph_O,
  /* 847 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CDText_O,
  /* 851 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DINodeArray_O,
  /* 855 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SpanningInfo_O,
  /* 859 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__Checkpoint_O,
  /* 863 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__CheckpointJoint_O,
  /* 867 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__CheckpointOutPlugJoint_O,
  /* 871 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationExplorerMatch_O,
  /* 875 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StereoisomerAtoms_O,
  /* 879 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Rotamer_O,
  /* 883 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ImproperTorsion_O,
  /* 887 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__SymbolList_O,
  /* 891 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__FrameRecognizer_O,
  /* 895 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationExplorerEntryStage_O,
  /* 899 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Trajectory_O,
  /* 903 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CalculatePosition_O,
  /* 907 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CalculatePositionRelativeToOrigin_O,
  /* 911 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CalculatePositionUsingInternals_O,
  /* 915 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CalculatePositionAlongBond_O,
  /* 919 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__OMatrix_O,
  /* 923 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConformationCollectionEntry_O,
  /* 927 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ComplexRestraint_O,
  /* 931 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestrainedExoCyclicAtom_O,
  /* 935 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RestrainedPiBond_O,
  /* 939 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_mp__Mutex_O,
  /* 943 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_mp__RecursiveMutex_O,
  /* 947 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CombinedForceField_O,
  /* 951 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__CDBond_O,
  /* 955 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConstitutionBond_O,
  /* 959 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__ChiDihedral_O,
  /* 963 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ConstitutionAtoms_O,
  /* 967 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__Conformation_O,
  /* 971 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MoleculeGraph_O,
  /* 975 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__StructureComparer_O,
  /* 979 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BoundingBox_O,
  /* 983 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemInfoNode_O,
  /* 987 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondMatcher_O,
  /* 991 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondTest_O,
  /* 995 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondLogical_O,
  /* 999 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondMatchNode_O,
  /* 1003 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomOrBondMatchNode_O,
  /* 1007 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Root_O,
  /* 1011 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SmartsRoot_O,
  /* 1015 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AntechamberRoot_O,
  /* 1019 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ResidueTest_O,
  /* 1023 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AntechamberFocusAtomMatch_O,
  /* 1027 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Logical_O,
  /* 1031 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomTest_O,
  /* 1035 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondToAtomTest_O,
  /* 1039 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AntechamberBondToAtomTest_O,
  /* 1043 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__BondListMatchNode_O,
  /* 1047 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Chain_O,
  /* 1051 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Branch_O,
  /* 1055 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__RootMatchNode_O,
  /* 1059 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AfterMatchBondToAtomTest_O,
  /* 1063 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ElementsInfo_O,
  /* 1067 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Dimacs_O,
  /* 1071 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__SpecificContext_O,
  /* 1075 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Minimizer_O,
  /* 1079 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__SymbolSet_O,
  /* 1083 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__MapOfMonomerNamesToAtomIndexers_O,
  /* 1087 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__Alias_O,
  /* 1091 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__AtomIdToAtomMap_O,
  /* 1095 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_mp__Process_O,
  /* 1099 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SingleDispatchMethod_O,
  /* 1103 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Iterator_O,
  /* 1107 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__DirectoryIterator_O,
  /* 1111 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateRestraints_O,
  /* 1115 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__IterateCons_O,
  /* 1119 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__RecursiveDirectoryIterator_O,
  /* 1123 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateMatter_O,
  /* 1127 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateResidues_O,
  /* 1131 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateBonds_O,
  /* 1135 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__IterateAtoms_O,
  /* 1139 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Symbol_O,
  /* 1143 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Null_O,
  /* 1147 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SharpEqualWrapper_O,
  /* 1151 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ClaspJIT_O,
  /* 1155 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Exposer_O,
  /* 1159 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_units__UnitsExposer_O,
  /* 1163 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__CoreExposer_O,
  /* 1167 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__GeomExposer_O,
  /* 1171 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_adapt__AdaptExposer_O,
  /* 1175 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_kinematics__KinematicsExposer_O,
  /* 1179 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_chem__ChemExposer_O,
  /* 1183 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__AsttoolingExposer_O,
  /* 1187 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__PosixTimeDuration_O,
  /* 1191 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clasp_ffi__ForeignTypeSpec_O,
  /* 1195 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SmallMap_O,
  /* 1197 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Instance_O,
  /* 1201 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clbind__ClassRep_O,
  /* 1204 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__DerivableCxxObject_O,
  /* 1211 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_mpip__Mpi_O,
  /* 1215 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Sigset_O,
  /* 1219 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Environment_O,
  /* 1223 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__GlueEnvironment_O,
  /* 1227 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__LexicalEnvironment_O,
  /* 1231 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__CompileTimeEnvironment_O,
  /* 1235 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__CatchEnvironment_O,
  /* 1239 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SymbolMacroletEnvironment_O,
  /* 1243 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FunctionContainerEnvironment_O,
  /* 1247 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__UnwindProtectEnvironment_O,
  /* 1251 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MacroletEnvironment_O,
  /* 1255 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__RuntimeVisibleEnvironment_O,
  /* 1259 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__TagbodyEnvironment_O,
  /* 1263 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__BlockEnvironment_O,
  /* 1267 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FunctionValueEnvironment_O,
  /* 1271 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ValueEnvironment_O,
  /* 1275 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ActivationFrame_O,
  /* 1279 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ValueFrame_O,
  /* 1283 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FunctionFrame_O,
  /* 1287 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__RandomState_O,
  /* 1291 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__EntryPointBase_O,
  /* 1295 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__GlobalEntryPointGenerator_O,
  /* 1299 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__LocalEntryPointGenerator_O,
  /* 1303 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__CodeEntryPoint_O,
  /* 1307 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__LocalEntryPoint_O,
  /* 1311 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__GlobalEntryPoint_O,
  /* 1315 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableBase_O,
  /* 1319 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTable_O,
  /* 1323 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableEqualp_O,
  /* 1327 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableEq_O,
  /* 1331 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableEqual_O,
  /* 1335 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableCustom_O,
  /* 1339 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__HashTableEql_O,
  /* 1343 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__WeakKeyHashTable_O,
  /* 1347 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FunctionDescription_O,
  /* 1351 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__InsertPoint_O,
  /* 1355 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Number_O,
  /* 1359 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Real_O,
  /* 1363 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Rational_O,
  /* 1367 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Ratio_O,
  /* 1371 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Integer_O,
  /* 1375 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Bignum_O,
  /* 1379 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Fixnum_dummy_O,
  /* 1383 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Float_O,
  /* 1387 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__DoubleFloat_O,
  /* 1391 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SingleFloat_dummy_O,
  /* 1395 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__LongFloat_O,
  /* 1399 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ShortFloat_O,
  /* 1403 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Complex_O,
  /* 1407 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SourcePosInfo_O,
  /* 1411 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Record_O,
  /* 1415 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Frame_O,
  /* 1419 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clbind__ClassRegistry_O,
  /* 1423 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ClassHolder_O,
  /* 1426 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__WrappedPointer_O,
  /* 1431 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SymbolToEnumConverter_O,
  /* 1435 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Attribute_O,
  /* 1439 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ImmobileObject_O,
  /* 1443 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Function_O,
  /* 1445 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FuncallableInstance_O,
  /* 1451 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Creator_O,
  /* 1455 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FuncallableInstanceCreator_O,
  /* 1459 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clbind__ConstructorCreator_O,
  /* 1463 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clbind__DummyCreator_O,
  /* 1467 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__InstanceCreator_O,
  /* 1471 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ClassRepCreator_O,
  /* 1475 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__DerivableCxxClassCreator_O,
  /* 1479 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__StandardClassCreator_O,
  /* 1483 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SpecialForm_O,
  /* 1487 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Closure_O,
  /* 1491 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__BuiltinClosure_O,
  /* 1495 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__TranslationFunctor_O,
  /* 1499 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ClosureWithSlots_O,
  /* 1503 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SingleDispatchGenericFunctionClosure_O,
  /* 1507 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__WeakPointer_O,
  /* 1511 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DebugLoc_O,
  /* 1515 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Array_O,
  /* 1519 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_O,
  /* 1523 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int16_t_O_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__MDArray_O_,
  /* 1527 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int16_t_O,
  /* 1531 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int8_t_O_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__MDArray_O_,
  /* 1535 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int8_t_O,
  /* 1539 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int32_t_O_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__MDArray_O_,
  /* 1543 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int32_t_O,
  /* 1547 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte4_t_O_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__MDArray_O_,
  /* 1551 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte4_t_O,
  /* 1555 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_float_O_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__MDArray_O_,
  /* 1559 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_float_O,
  /* 1563 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_size_t_O_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__MDArray_O_,
  /* 1567 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_size_t_O,
  /* 1571 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte8_t_O_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__MDArray_O_,
  /* 1575 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte8_t_O,
  /* 1579 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int2_t_O_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__MDArray_O_,
  /* 1583 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int2_t_O,
  /* 1587 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_fixnum_O_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__MDArray_O_,
  /* 1591 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_fixnum_O,
  /* 1595 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArrayBaseChar_O_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__MDArray_O_,
  /* 1599 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArrayBaseChar_O,
  /* 1603 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte64_t_O_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__MDArray_O_,
  /* 1607 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte64_t_O,
  /* 1611 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_geom__MDArrayCoordinate_O_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__MDArray_O_,
  /* 1615 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__MDArrayCoordinate_O,
  /* 1619 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArrayT_O_core__SimpleMDArrayT_O_core__SimpleVector_O_core__MDArray_O_,
  /* 1623 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArrayT_O,
  /* 1627 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_O,
  /* 1631 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int8_t_O_core__SimpleVector_int8_t_O_core__SimpleMDArray_O_,
  /* 1635 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int8_t_O,
  /* 1639 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__SimpleMDArray_O_,
  /* 1643 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte32_t_O,
  /* 1647 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int2_t_O_core__SimpleVector_int2_t_O_core__SimpleMDArray_O_,
  /* 1651 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int2_t_O,
  /* 1655 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte4_t_O_core__SimpleVector_byte4_t_O_core__SimpleMDArray_O_,
  /* 1659 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte4_t_O,
  /* 1663 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int32_t_O_core__SimpleVector_int32_t_O_core__SimpleMDArray_O_,
  /* 1667 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int32_t_O,
  /* 1671 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_float_O_core__SimpleVector_float_O_core__SimpleMDArray_O_,
  /* 1675 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_float_O,
  /* 1679 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int16_t_O_core__SimpleVector_int16_t_O_core__SimpleMDArray_O_,
  /* 1683 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int16_t_O,
  /* 1687 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_size_t_O_core__SimpleVector_size_t_O_core__SimpleMDArray_O_,
  /* 1691 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_size_t_O,
  /* 1695 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__SimpleMDArray_O_,
  /* 1699 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArrayCharacter_O,
  /* 1703 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__SimpleMDArray_O_,
  /* 1707 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte2_t_O,
  /* 1711 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__SimpleMDArray_O_,
  /* 1715 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte16_t_O,
  /* 1719 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBaseChar_O_core__SimpleBaseString_O_core__SimpleMDArray_O_,
  /* 1723 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArrayBaseChar_O,
  /* 1727 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte64_t_O_core__SimpleVector_byte64_t_O_core__SimpleMDArray_O_,
  /* 1731 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte64_t_O,
  /* 1735 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__SimpleMDArray_O_,
  /* 1739 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_double_O,
  /* 1743 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayT_O_core__SimpleVector_O_core__SimpleMDArray_O_,
  /* 1747 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArrayT_O,
  /* 1751 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__SimpleMDArray_O_,
  /* 1755 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int4_t_O,
  /* 1759 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_geom__SimpleMDArrayCoordinate_O_geom__SimpleVectorCoordinate_O_core__SimpleMDArray_O_,
  /* 1763 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__SimpleMDArrayCoordinate_O,
  /* 1767 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_fixnum_O_core__SimpleVector_fixnum_O_core__SimpleMDArray_O_,
  /* 1771 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_fixnum_O,
  /* 1775 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__SimpleMDArray_O_,
  /* 1779 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArrayBit_O,
  /* 1783 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_byte8_t_O_core__SimpleVector_byte8_t_O_core__SimpleMDArray_O_,
  /* 1787 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_byte8_t_O,
  /* 1791 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleArray_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__SimpleMDArray_O_,
  /* 1795 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleMDArray_int64_t_O,
  /* 1799 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_O,
  /* 1803 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_double_O_core__SimpleVector_double_O_core__ComplexVector_O_,
  /* 1807 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_double_O,
  /* 1811 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int8_t_O_core__SimpleVector_int8_t_O_core__ComplexVector_O_,
  /* 1815 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int8_t_O,
  /* 1819 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_T_O_core__SimpleVector_O_core__ComplexVector_O_,
  /* 1823 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_T_O,
  /* 1827 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int32_t_O_core__SimpleVector_int32_t_O_core__ComplexVector_O_,
  /* 1831 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int32_t_O,
  /* 1835 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte16_t_O_core__SimpleVector_byte16_t_O_core__ComplexVector_O_,
  /* 1839 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte16_t_O,
  /* 1843 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_geom__ComplexVectorCoordinate_O_geom__SimpleVectorCoordinate_O_core__ComplexVector_O_,
  /* 1847 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__ComplexVectorCoordinate_O,
  /* 1851 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte4_t_O_core__SimpleVector_byte4_t_O_core__ComplexVector_O_,
  /* 1855 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte4_t_O,
  /* 1859 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte64_t_O_core__SimpleVector_byte64_t_O_core__ComplexVector_O_,
  /* 1863 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte64_t_O,
  /* 1867 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int2_t_O_core__SimpleVector_int2_t_O_core__ComplexVector_O_,
  /* 1871 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int2_t_O,
  /* 1875 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_float_O_core__SimpleVector_float_O_core__ComplexVector_O_,
  /* 1879 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_float_O,
  /* 1883 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int16_t_O_core__SimpleVector_int16_t_O_core__ComplexVector_O_,
  /* 1887 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int16_t_O,
  /* 1891 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int4_t_O_core__SimpleVector_int4_t_O_core__ComplexVector_O_,
  /* 1895 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int4_t_O,
  /* 1899 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_size_t_O_core__SimpleVector_size_t_O_core__ComplexVector_O_,
  /* 1903 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_size_t_O,
  /* 1907 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte2_t_O_core__SimpleVector_byte2_t_O_core__ComplexVector_O_,
  /* 1911 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte2_t_O,
  /* 1915 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte8_t_O_core__SimpleVector_byte8_t_O_core__ComplexVector_O_,
  /* 1919 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte8_t_O,
  /* 1923 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_byte32_t_O_core__SimpleVector_byte32_t_O_core__ComplexVector_O_,
  /* 1927 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_byte32_t_O,
  /* 1931 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__BitVectorNs_O_core__SimpleBitVector_O_core__ComplexVector_O_,
  /* 1935 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__BitVectorNs_O,
  /* 1939 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__StrNs_O,
  /* 1943 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__Str8Ns_O_core__SimpleBaseString_O_core__StrNs_O_,
  /* 1947 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Str8Ns_O,
  /* 1951 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__StrWNs_O_core__SimpleCharacterString_O_core__StrNs_O_,
  /* 1955 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__StrWNs_O,
  /* 1959 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_fixnum_O_core__SimpleVector_fixnum_O_core__ComplexVector_O_,
  /* 1963 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_fixnum_O,
  /* 1967 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Vector_core__ComplexVector_int64_t_O_core__SimpleVector_int64_t_O_core__ComplexVector_O_,
  /* 1971 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ComplexVector_int64_t_O,
  /* 1975 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int64_t_O_core__SimpleMDArray_int64_t_O_core__SimpleVector_int64_t_O_core__MDArray_O_,
  /* 1979 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int64_t_O,
  /* 1983 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte32_t_O_core__SimpleMDArray_byte32_t_O_core__SimpleVector_byte32_t_O_core__MDArray_O_,
  /* 1987 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte32_t_O,
  /* 1991 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte2_t_O_core__SimpleMDArray_byte2_t_O_core__SimpleVector_byte2_t_O_core__MDArray_O_,
  /* 1995 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte2_t_O,
  /* 1999 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArrayCharacter_O_core__SimpleMDArrayCharacter_O_core__SimpleCharacterString_O_core__MDArray_O_,
  /* 2003 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArrayCharacter_O,
  /* 2007 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArrayBit_O_core__SimpleMDArrayBit_O_core__SimpleBitVector_O_core__MDArray_O_,
  /* 2011 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArrayBit_O,
  /* 2015 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_byte16_t_O_core__SimpleMDArray_byte16_t_O_core__SimpleVector_byte16_t_O_core__MDArray_O_,
  /* 2019 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_byte16_t_O,
  /* 2023 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_int4_t_O_core__SimpleMDArray_int4_t_O_core__SimpleVector_int4_t_O_core__MDArray_O_,
  /* 2027 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_int4_t_O,
  /* 2031 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_Array_core__MDArray_double_O_core__SimpleMDArray_double_O_core__SimpleVector_double_O_core__MDArray_O_,
  /* 2035 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__MDArray_double_O,
  /* 2039 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__AbstractSimpleVector_O,
  /* 2043 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte32_t_O_unsigned_int_core__AbstractSimpleVector_O_,
  /* 2047 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte32_t_O,
  /* 2051 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_size_t_O_unsigned_long_core__AbstractSimpleVector_O_,
  /* 2055 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_size_t_O,
  /* 2059 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_double_O_double_core__AbstractSimpleVector_O_,
  /* 2063 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_double_O,
  /* 2067 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int2_t_O_2_1_,
  /* 2071 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int2_t_O,
  /* 2075 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int64_t_O_long_core__AbstractSimpleVector_O_,
  /* 2079 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int64_t_O,
  /* 2083 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int8_t_O_signed_char_core__AbstractSimpleVector_O_,
  /* 2087 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int8_t_O,
  /* 2091 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte4_t_O_4_0_,
  /* 2095 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte4_t_O,
  /* 2099 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_geom__SimpleVectorCoordinate_O_Vector3_core__AbstractSimpleVector_O_,
  /* 2103 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_geom__SimpleVectorCoordinate_O,
  /* 2107 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleString_O,
  /* 2111 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleBaseString_O_unsigned_char_core__SimpleString_O_,
  /* 2115 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleBaseString_O,
  /* 2119 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleCharacterString_O_unsigned_int_core__SimpleString_O_,
  /* 2123 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleCharacterString_O,
  /* 2127 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int16_t_O_short_core__AbstractSimpleVector_O_,
  /* 2131 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int16_t_O,
  /* 2135 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte16_t_O_unsigned_short_core__AbstractSimpleVector_O_,
  /* 2139 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte16_t_O,
  /* 2143 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleBitVector_O_1_0_,
  /* 2147 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleBitVector_O,
  /* 2151 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_int4_t_O_4_1_,
  /* 2155 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int4_t_O,
  /* 2159 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte64_t_O_unsigned_long_core__AbstractSimpleVector_O_,
  /* 2163 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte64_t_O,
  /* 2167 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_fixnum_O_long_core__AbstractSimpleVector_O_,
  /* 2171 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_fixnum_O,
  /* 2175 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_float_O_float_core__AbstractSimpleVector_O_,
  /* 2179 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_float_O,
  /* 2183 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_O_gctools__smart_ptr_core__T_O__core__AbstractSimpleVector_O_,
  /* 2187 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_O,
  /* 2191 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_byte8_t_O_unsigned_char_core__AbstractSimpleVector_O_,
  /* 2195 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte8_t_O,
  /* 2199 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleBitUnitVector_core__SimpleVector_byte2_t_O_2_0_,
  /* 2203 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_byte2_t_O,
  /* 2207 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__template_SimpleVector_core__SimpleVector_int32_t_O_int_core__AbstractSimpleVector_O_,
  /* 2211 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SimpleVector_int32_t_O,
  /* 2215 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Character_dummy_O,
  /* 2219 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DataLayout_O,
  /* 2223 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__LoadTimeValues_O,
  /* 2227 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Readtable_O,
  /* 2231 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__PosixTime_O,
  /* 2235 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__StructLayout_O,
  /* 2239 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ExternalObject_O,
  /* 2243 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Pass_O,
  /* 2247 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ModulePass_O,
  /* 2251 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ImmutablePass_O,
  /* 2255 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetLibraryInfoWrapperPass_O,
  /* 2259 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FunctionPass_O,
  /* 2263 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MCSubtargetInfo_O,
  /* 2267 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetSubtargetInfo_O,
  /* 2271 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__JITDylib_O,
  /* 2275 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIContext_O,
  /* 2279 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__IRBuilderBase_O,
  /* 2283 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__IRBuilder_O,
  /* 2287 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__APInt_O,
  /* 2291 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIBuilder_O,
  /* 2295 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__SectionedAddress_O,
  /* 2299 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__EngineBuilder_O,
  /* 2303 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PassManagerBase_O,
  /* 2307 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PassManager_O,
  /* 2311 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FunctionPassManager_O,
  /* 2315 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Value_O,
  /* 2319 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__User_O,
  /* 2323 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Instruction_O,
  /* 2327 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__StoreInst_O,
  /* 2331 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__UnreachableInst_O,
  /* 2335 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ResumeInst_O,
  /* 2339 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__AtomicCmpXchgInst_O,
  /* 2343 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FenceInst_O,
  /* 2347 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__CallBase_O,
  /* 2351 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__CallInst_O,
  /* 2355 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__InvokeInst_O,
  /* 2359 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__BranchInst_O,
  /* 2363 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__UnaryInstruction_O,
  /* 2367 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__VAArgInst_O,
  /* 2371 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__AllocaInst_O,
  /* 2375 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LoadInst_O,
  /* 2379 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__SwitchInst_O,
  /* 2383 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__AtomicRMWInst_O,
  /* 2387 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LandingPadInst_O,
  /* 2391 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ReturnInst_O,
  /* 2395 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PHINode_O,
  /* 2399 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__IndirectBrInst_O,
  /* 2403 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Constant_O,
  /* 2407 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__GlobalValue_O,
  /* 2411 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Function_O,
  /* 2415 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__GlobalVariable_O,
  /* 2419 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__BlockAddress_O,
  /* 2423 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantStruct_O,
  /* 2427 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantInt_O,
  /* 2431 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantFP_O,
  /* 2435 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantPointerNull_O,
  /* 2439 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantDataSequential_O,
  /* 2443 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantDataArray_O,
  /* 2447 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantExpr_O,
  /* 2451 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__UndefValue_O,
  /* 2455 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ConstantArray_O,
  /* 2459 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Argument_O,
  /* 2463 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__BasicBlock_O,
  /* 2467 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MetadataAsValue_O,
  /* 2471 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ThreadSafeContext_O,
  /* 2475 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetMachine_O,
  /* 2479 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LLVMTargetMachine_O,
  /* 2483 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Triple_O,
  /* 2487 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__LLVMContext_O,
  /* 2491 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PassManagerBuilder_O,
  /* 2495 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ExecutionEngine_O,
  /* 2499 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Type_O,
  /* 2503 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__PointerType_O,
  /* 2507 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ArrayType_O,
  /* 2511 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__FunctionType_O,
  /* 2515 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__IntegerType_O,
  /* 2519 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__VectorType_O,
  /* 2523 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__StructType_O,
  /* 2527 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetPassConfig_O,
  /* 2531 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__APFloat_O,
  /* 2535 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Metadata_O,
  /* 2539 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MDNode_O,
  /* 2543 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILocation_O,
  /* 2547 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DINode_O,
  /* 2551 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIVariable_O,
  /* 2555 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILocalVariable_O,
  /* 2559 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIScope_O,
  /* 2563 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIFile_O,
  /* 2567 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILocalScope_O,
  /* 2571 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DISubprogram_O,
  /* 2575 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILexicalBlockBase_O,
  /* 2579 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DILexicalBlock_O,
  /* 2583 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DICompileUnit_O,
  /* 2587 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIType_O,
  /* 2591 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DICompositeType_O,
  /* 2595 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIDerivedType_O,
  /* 2599 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DISubroutineType_O,
  /* 2603 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIBasicType_O,
  /* 2607 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DIExpression_O,
  /* 2611 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__ValueAsMetadata_O,
  /* 2615 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__MDString_O,
  /* 2619 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Test_O,
  /* 2623 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__NamedMDNode_O,
  /* 2627 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__DWARFContext_O,
  /* 2631 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__TargetOptions_O,
  /* 2635 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Module_O,
  /* 2639 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Target_O,
  /* 2643 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_llvmo__Linker_O,
  /* 2647 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Rack_O,
  /* 2651 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SmallMultimap_O,
  /* 2655 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Scope_O,
  /* 2659 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FileScope_O,
  /* 2663 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Path_O,
  /* 2667 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Pathname_O,
  /* 2671 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__LogicalPathname_O,
  /* 2675 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Stream_O,
  /* 2679 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__AnsiStream_O,
  /* 2683 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__TwoWayStream_O,
  /* 2687 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__SynonymStream_O,
  /* 2691 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__StringStream_O,
  /* 2695 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__StringOutputStream_O,
  /* 2699 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__StringInputStream_O,
  /* 2703 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__EchoStream_O,
  /* 2707 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__ConcatenatedStream_O,
  /* 2711 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FileStream_O,
  /* 2715 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__IOFileStream_O,
  /* 2719 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__IOStreamStream_O,
  /* 2723 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__BroadcastStream_O,
  /* 2727 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Package_O,
  /* 2731 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__FileStatus_O,
  /* 2735 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__InvocationHistoryFrameIterator_O,
  /* 2739 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__DirectoryEntry_O,
  /* 2743 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__LightUserData_O,
  /* 2747 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__UserData_O,
  /* 2751 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Cons_O,
  /* 2755 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__VaList_dummy_O,
  /* 2759 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_core__Lisp_O,
  /* 2763 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clang__RecursiveASTVisitor_asttooling__AstVisitor_O_,
  /* 2767 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_asttooling__AstVisitor_O,
  /* 2771 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCContainer,
  /* 2775 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__BackboneDependentRotamerSet_O__,
  /* 2779 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__AtomicInfo_,
  /* 2783 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ChemInfoNode_O__,
  /* 2787 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyChiralRestraint_,
  /* 2791 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondToAtomTest_O__,
  /* 2795 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoConfiguration_O__,
  /* 2799 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_short_,
  /* 2803 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Rotamer_O__,
  /* 2807 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_unsigned_long_,
  /* 2811 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__SmallOrderedSet_gctools__smart_ptr_chem__Atom_O___,
  /* 2815 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFTypeRule_O__,
  /* 2819 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_4_0_,
  /* 2823 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__SymbolClassHolderPair_,
  /* 2827 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Symbol_O___,
  /* 2831 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__FFNonbondCrossTerm_,
  /* 2835 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChainNode_O__,
  /* 2839 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedralRestraint_,
  /* 2843 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_core__T_O___,
  /* 2847 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFNonbond_O__,
  /* 2851 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_unsigned_char_,
  /* 2855 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__Array_O___,
  /* 2859 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__Vec0_int__,
  /* 2863 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__EntityNameSetBase_O___,
  /* 2867 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyRigidBodyStaple_,
  /* 2871 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__T_O__,
  /* 2875 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAngle_,
  /* 2879 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__SimpleBitVector_O__,
  /* 2883 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Monomer_O__,
  /* 2887 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDFragment_O__,
  /* 2891 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__MonomerCoordinates_O___,
  /* 2895 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__TrajectoryFrame_O__,
  /* 2899 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__OptionalArgument_,
  /* 2903 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__KeywordArgument_,
  /* 2907 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__KeyEntry_,
  /* 2911 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__T_O__gctools__smart_ptr_chem__Stereoisomer_O___,
  /* 2915 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ReportBase_O__,
  /* 2919 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_Vector3_,
  /* 2923 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAnchorRestraint_,
  /* 2927 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtom_O__,
  /* 2931 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__SpecificContext_O___,
  /* 2935 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__HybridizationInfo_,
  /* 2939 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__MonomerNode_O__,
  /* 2943 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__Residue_O___,
  /* 2947 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_atomic_gctools__smart_ptr_core__T_O__,
  /* 2951 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionBond_O__,
  /* 2955 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Structure_Old_ListEntry_O__,
  /* 2959 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__chem__EstimateStretch__,
  /* 2963 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationCollectionEntry_O__,
  /* 2967 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__BondId_O___,
  /* 2971 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Coupling_O___,
  /* 2975 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Matter_O__,
  /* 2979 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__AtomIndexer_O___,
  /* 2983 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__AGEdge_O__,
  /* 2987 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ComplexRestraint_O__,
  /* 2991 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_2_0_,
  /* 2995 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__ChiDihedral_O__,
  /* 2999 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Coupling_O__,
  /* 3003 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_1_0_,
  /* 3007 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_2_1_,
  /* 3011 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Topology_O__,
  /* 3015 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_int_,
  /* 3019 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__FrameRecognizer_O___,
  /* 3023 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Stereoisomer_O__,
  /* 3027 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Mate_O__,
  /* 3031 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_float_,
  /* 3035 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Atom_O__,
  /* 3039 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Bond_O__,
  /* 3043 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__T_O___,
  /* 3047 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyDihedral_,
  /* 3051 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__MonomerNode_O___,
  /* 3055 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_unsigned_int_,
  /* 3059 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__BondList_O__,
  /* 3063 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntry_O__,
  /* 3067 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__RotamerAtom_,
  /* 3071 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Cons_O__,
  /* 3075 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_double_,
  /* 3079 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Rotamer_O__,
  /* 3083 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Residue_O__,
  /* 3087 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Molecule_O___,
  /* 3091 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_clbind__ClassRep_O__,
  /* 3095 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__AtomPdbRec_,
  /* 3099 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchStretch_,
  /* 3103 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_signed_char_,
  /* 3107 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyOutOfZPlane_,
  /* 3111 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__List_V__,
  /* 3115 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Plug_O___,
  /* 3119 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConformationExplorerEntryStage_O__,
  /* 3123 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__CDBond_O__,
  /* 3127 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergySketchNonbond_,
  /* 3131 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__KeyValuePair_,
  /* 3135 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Symbol_O__,
  /* 3139 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Twister_O__,
  /* 3143 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__FixedNonbondRestraint_,
  /* 3147 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_adapt__QDomNode_O__,
  /* 3151 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixInternal_O__,
  /* 3155 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__CDFragment_O___,
  /* 3159 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__Molecule_O__,
  /* 3163 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_double_,
  /* 3167 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__PdbMonomerConnectivity_O___,
  /* 3171 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_unsigned_int_gctools__smart_ptr_chem__Residue_O___,
  /* 3175 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__unsigned_int__,
  /* 3179 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__PathMessage_O__,
  /* 3183 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__RequiredArgument_,
  /* 3187 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__FileScope_O__,
  /* 3191 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ZMatrixEntry_O__,
  /* 3195 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCBitUnitArray_moveable_4_1_,
  /* 3199 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__SymbolStorage_,
  /* 3203 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__BeyondThresholdFixedNonbondRestraint_,
  /* 3207 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_int_gctools__smart_ptr_chem__CDNode_O___,
  /* 3211 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__DoubleFloat_O___,
  /* 3215 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Instance_O__,
  /* 3219 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__int__,
  /* 3223 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_kinematics__RingClosingMonomerNode_O___,
  /* 3227 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyNonbondCrossTerm_,
  /* 3231 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__MonomerCoordinates_O__,
  /* 3235 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_unsigned_long_,
  /* 3239 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArraySignedLength_moveable_unsigned_long_,
  /* 3243 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyNonbond_,
  /* 3247 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_core__T_O___,
  /* 3251 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__AtomInfo_,
  /* 3255 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__FFVdw_O__,
  /* 3259 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__ConstitutionAtom_O__,
  /* 3263 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyAtom_,
  /* 3267 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_chem__Atom_O__gctools__smart_ptr_chem__CDNode_O___,
  /* 3271 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_int_,
  /* 3275 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_gctools__smart_ptr_core__T_O__,
  /* 3279 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_core__AuxArgument_,
  /* 3283 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__ResidueOut_,
  /* 3287 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_long_,
  /* 3291 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__JointTemplate_O__,
  /* 3295 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__RigidBodyAtomInfo_,
  /* 3299 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_std__pair_gctools__smart_ptr_core__Symbol_O__gctools__smart_ptr_chem__Topology_O___,
  /* 3303 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_chem__StereoisomerAtoms_O__,
  /* 3307 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Package_O__,
  /* 3311 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_unsigned_int_,
  /* 3315 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_chem__EnergyStretch_,
  /* 3319 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_core__Creator_O__,
  /* 3323 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_gctools__smart_ptr_kinematics__Joint_O__,
  /* 3327 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCArray_moveable_unsigned_short_,
  /* 3331 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_gctools__GCVector_moveable_float_,
  /* 3335 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clang__FrontendAction,
  /* 3339 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clang__ASTFrontendAction,
  /* 3343 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clang__SyntaxOnlyAction,
  /* 3347 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clang__tooling__ToolAction,
  /* 3351 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clang__tooling__FrontendActionFactory,
  /* 3355 */ &&obj_deallocate_unmanaged_instance_STAMPWTAG_clang__ast_matchers__MatchFinder__MatchCallback,
   NULL
};
#endif // defined(GC_OBJ_DEALLOCATOR_TABLE)
#if defined(GC_GLOBAL_SYMBOLS)
#endif // defined(GC_GLOBAL_SYMBOLS)
#if defined(GC_GLOBALS)
 TAGGED_POINTER_FIX(_lisp);
#endif // defined(GC_GLOBALS)
